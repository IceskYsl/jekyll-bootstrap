<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3" created="2012-05-12 01:57" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>IceskYsl@1sters</title>
	<link>http://www.iceskysl.com</link>
	<description>Focus on Android,iPhone,Web,Business,Architecture,Agile,Technic and beyond…</description>
	<pubDate>Sat, 12 May 2012 01:57:59 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://www.iceskysl.com</wp:base_site_url>
	<wp:base_blog_url>http://www.iceskysl.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>iceskysl</wp:author_login><wp:author_email>iceskysl@gmail.com</wp:author_email><wp:author_display_name><![CDATA[iceskysl]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[01. 视觉观察 | Observe]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>181</wp:term_id><wp:category_nicename>pm</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[02. 产品设计 | PM]]></wp:cat_name><wp:category_description><![CDATA[产品相关的文章]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[03. 技术归总 | Technic]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[04. 无心呢喃 | Buzz]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>android</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Android &amp; Java]]></wp:cat_name><wp:category_description><![CDATA[Android &amp; Java]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>architecture</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Architecture]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>db-technic</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Database]]></wp:cat_name><wp:category_description><![CDATA[Database | Mysql,mongoDB]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>204</wp:term_id><wp:category_nicename>htmlcssjs</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Html/css/js]]></wp:cat_name><wp:category_description><![CDATA[前端技术]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>unix-mac</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Mac &amp; *UNIX]]></wp:cat_name><wp:category_description><![CDATA[*UNIX &amp; Mac]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>ruby-rails</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Ruby &amp; Rails]]></wp:cat_name><wp:category_description><![CDATA[ruby_and_rails]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>security</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Security]]></wp:cat_name><wp:category_description><![CDATA[安全相关 | Security]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic</wp:category_parent><wp:cat_name><![CDATA[Tips]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>120</wp:tag_slug><wp:tag_name><![CDATA[&#23458;&#25143;&#31471;]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83</wp:tag_slug><wp:tag_name><![CDATA[04. 无心呢喃 | Buzz]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>10-6-3</wp:tag_slug><wp:tag_name><![CDATA[10.6.3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>1sters</wp:tag_slug><wp:tag_name><![CDATA[1sters]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>192</wp:term_id><wp:tag_slug>2011</wp:tag_slug><wp:tag_name><![CDATA[2011]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>193</wp:term_id><wp:tag_slug>2012</wp:tag_slug><wp:tag_name><![CDATA[2012]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>3g</wp:tag_slug><wp:tag_name><![CDATA[3G]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>action_mailer_optional_tls</wp:tag_slug><wp:tag_name><![CDATA[action_mailer_optional_tls]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>acts_as_taggable_on_steroids</wp:tag_slug><wp:tag_name><![CDATA[acts_as_taggable_on_steroids]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>199</wp:term_id><wp:tag_slug>adsl</wp:tag_slug><wp:tag_name><![CDATA[ADSL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>186</wp:term_id><wp:tag_slug>analyzer</wp:tag_slug><wp:tag_name><![CDATA[analyzer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>android-technic-2</wp:tag_slug><wp:tag_name><![CDATA[Android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>apis</wp:tag_slug><wp:tag_name><![CDATA[APIs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>axure</wp:tag_slug><wp:tag_name><![CDATA[Axure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>balsamiq-mockups</wp:tag_slug><wp:tag_name><![CDATA[Balsamiq Mockups]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>border-radius</wp:tag_slug><wp:tag_name><![CDATA[Border-radius]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>brew</wp:tag_slug><wp:tag_name><![CDATA[brew]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>build</wp:tag_slug><wp:tag_name><![CDATA[Build]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>bundle</wp:tag_slug><wp:tag_name><![CDATA[Bundle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>cache_fu</wp:tag_slug><wp:tag_name><![CDATA[cache_fu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>centos</wp:tag_slug><wp:tag_name><![CDATA[centOS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>certificate</wp:tag_slug><wp:tag_name><![CDATA[certificate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>charts</wp:tag_slug><wp:tag_name><![CDATA[Charts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>205</wp:term_id><wp:tag_slug>chrome</wp:tag_slug><wp:tag_name><![CDATA[chrome]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>207</wp:term_id><wp:tag_slug>coffeescript</wp:tag_slug><wp:tag_name><![CDATA[CoffeeScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>224</wp:term_id><wp:tag_slug>completion</wp:tag_slug><wp:tag_name><![CDATA[completion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>concat</wp:tag_slug><wp:tag_name><![CDATA[concat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>209</wp:term_id><wp:tag_slug>connect</wp:tag_slug><wp:tag_name><![CDATA[Connect]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>csdn</wp:tag_slug><wp:tag_name><![CDATA[csdn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>css3</wp:tag_slug><wp:tag_name><![CDATA[css3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>csv</wp:tag_slug><wp:tag_name><![CDATA[csv]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>curl</wp:tag_slug><wp:tag_name><![CDATA[cURL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>cvs</wp:tag_slug><wp:tag_name><![CDATA[cvs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>223</wp:term_id><wp:tag_slug>d90</wp:tag_slug><wp:tag_name><![CDATA[D90]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>db-technic</wp:tag_slug><wp:tag_name><![CDATA[Database]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>217</wp:term_id><wp:tag_slug>db-charmer</wp:tag_slug><wp:tag_name><![CDATA[db-charmer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>debian</wp:tag_slug><wp:tag_name><![CDATA[Debian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>debug</wp:tag_slug><wp:tag_name><![CDATA[Debug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>delayed_job</wp:tag_slug><wp:tag_name><![CDATA[delayed_job]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>delegate</wp:tag_slug><wp:tag_name><![CDATA[delegate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>dj</wp:tag_slug><wp:tag_name><![CDATA[dj]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>229</wp:term_id><wp:tag_slug>drive</wp:tag_slug><wp:tag_name><![CDATA[Drive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>230</wp:term_id><wp:tag_slug>dropbox</wp:tag_slug><wp:tag_name><![CDATA[dropbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>encode</wp:tag_slug><wp:tag_name><![CDATA[encode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>eoe</wp:tag_slug><wp:tag_name><![CDATA[eoe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>eoeandroid</wp:tag_slug><wp:tag_name><![CDATA[eoeAndroid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>eoemarket</wp:tag_slug><wp:tag_name><![CDATA[eoemarket]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>231</wp:term_id><wp:tag_slug>evernote</wp:tag_slug><wp:tag_name><![CDATA[evernote]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>exif</wp:tag_slug><wp:tag_name><![CDATA[EXIF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>228</wp:term_id><wp:tag_slug>experts-exchange</wp:tag_slug><wp:tag_name><![CDATA[Experts-Exchange]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>expire</wp:tag_slug><wp:tag_name><![CDATA[expire]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>211</wp:term_id><wp:tag_slug>express</wp:tag_slug><wp:tag_name><![CDATA[Express]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>fastercsv</wp:tag_slug><wp:tag_name><![CDATA[FasterCSV]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>fcgi</wp:tag_slug><wp:tag_name><![CDATA[fcgi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>feed</wp:tag_slug><wp:tag_name><![CDATA[feed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>file</wp:tag_slug><wp:tag_name><![CDATA[file]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>files</wp:tag_slug><wp:tag_name><![CDATA[files]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>filesort</wp:tag_slug><wp:tag_name><![CDATA[filesort]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>find</wp:tag_slug><wp:tag_name><![CDATA[find]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>find_by</wp:tag_slug><wp:tag_name><![CDATA[find_by]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>g1</wp:tag_slug><wp:tag_name><![CDATA[G1]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>gd</wp:tag_slug><wp:tag_name><![CDATA[GD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>gdd</wp:tag_slug><wp:tag_name><![CDATA[GDD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>getremoteaddr</wp:tag_slug><wp:tag_name><![CDATA[getRemoteAddr]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>184</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>gmail</wp:tag_slug><wp:tag_name><![CDATA[Gmail]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>god</wp:tag_slug><wp:tag_name><![CDATA[God]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>godaddy</wp:tag_slug><wp:tag_name><![CDATA[Godaddy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[Google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>google-api</wp:tag_slug><wp:tag_name><![CDATA[Google API]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>216</wp:term_id><wp:tag_slug>google-task</wp:tag_slug><wp:tag_name><![CDATA[Google Task]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>214</wp:term_id><wp:tag_slug>graphviz</wp:tag_slug><wp:tag_name><![CDATA[Graphviz]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>197</wp:term_id><wp:tag_slug>gravatars</wp:tag_slug><wp:tag_name><![CDATA[Gravatars]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>215</wp:term_id><wp:tag_slug>gtd</wp:tag_slug><wp:tag_name><![CDATA[GTD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>hardcode</wp:tag_slug><wp:tag_name><![CDATA[hardcode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>highcharts</wp:tag_slug><wp:tag_name><![CDATA[Highcharts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>i18n</wp:tag_slug><wp:tag_name><![CDATA[I18n]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>identifying</wp:tag_slug><wp:tag_name><![CDATA[Identifying]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>imagemagick</wp:tag_slug><wp:tag_name><![CDATA[ImageMagick]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>imie</wp:tag_slug><wp:tag_name><![CDATA[IMIE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>inflector</wp:tag_slug><wp:tag_name><![CDATA[Inflector]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>inject</wp:tag_slug><wp:tag_name><![CDATA[inject]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>intent</wp:tag_slug><wp:tag_name><![CDATA[Intent]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>iowait</wp:tag_slug><wp:tag_name><![CDATA[iowait]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>ip</wp:tag_slug><wp:tag_name><![CDATA[ip]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>ip_conntrack</wp:tag_slug><wp:tag_name><![CDATA[ip_conntrack]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>iterm</wp:tag_slug><wp:tag_name><![CDATA[iTerm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>210</wp:term_id><wp:tag_slug>jade</wp:tag_slug><wp:tag_name><![CDATA[jade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>jarsigner</wp:tag_slug><wp:tag_name><![CDATA[jarsigner]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>java-technic</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>206</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[JavaScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>lftp</wp:tag_slug><wp:tag_name><![CDATA[lftp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>202</wp:term_id><wp:tag_slug>libmmseg</wp:tag_slug><wp:tag_name><![CDATA[libmmseg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>limit-rate</wp:tag_slug><wp:tag_name><![CDATA[limit-rate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>linkid</wp:tag_slug><wp:tag_name><![CDATA[Linkid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>196</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>log</wp:tag_slug><wp:tag_name><![CDATA[log]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>lscolors</wp:tag_slug><wp:tag_name><![CDATA[LSCOLORS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>map</wp:tag_slug><wp:tag_name><![CDATA[Map]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>max_length_for_sort_data</wp:tag_slug><wp:tag_name><![CDATA[max_length_for_sort_data]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>merge</wp:tag_slug><wp:tag_name><![CDATA[MERGE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>221</wp:term_id><wp:tag_slug>messages</wp:tag_slug><wp:tag_name><![CDATA[Messages]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>milestone</wp:tag_slug><wp:tag_name><![CDATA[milestone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>mmarket</wp:tag_slug><wp:tag_name><![CDATA[mmarket]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>mo</wp:tag_slug><wp:tag_name><![CDATA[mo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>mount</wp:tag_slug><wp:tag_name><![CDATA[mount]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>mt</wp:tag_slug><wp:tag_name><![CDATA[mt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>multi</wp:tag_slug><wp:tag_name><![CDATA[multi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>munin</wp:tag_slug><wp:tag_name><![CDATA[Munin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>my-cnf</wp:tag_slug><wp:tag_name><![CDATA[my.cnf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>218</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>nameerror</wp:tag_slug><wp:tag_name><![CDATA[NameError]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>netstat</wp:tag_slug><wp:tag_name><![CDATA[netstat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>nginx</wp:tag_slug><wp:tag_name><![CDATA[nginx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>222</wp:term_id><wp:tag_slug>nikon</wp:tag_slug><wp:tag_name><![CDATA[Nikon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>208</wp:term_id><wp:tag_slug>node-js</wp:tag_slug><wp:tag_name><![CDATA[Node.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>212</wp:term_id><wp:tag_slug>npm</wp:tag_slug><wp:tag_name><![CDATA[npm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>183</wp:term_id><wp:tag_slug>oauth</wp:tag_slug><wp:tag_name><![CDATA[oauth]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>219</wp:term_id><wp:tag_slug>octopus</wp:tag_slug><wp:tag_name><![CDATA[Octopus]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>package</wp:tag_slug><wp:tag_name><![CDATA[package]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>packet</wp:tag_slug><wp:tag_name><![CDATA[packet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>passenger</wp:tag_slug><wp:tag_name><![CDATA[Passenger]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>passive</wp:tag_slug><wp:tag_name><![CDATA[passive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>performance</wp:tag_slug><wp:tag_name><![CDATA[Performance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>177</wp:term_id><wp:tag_slug>perl</wp:tag_slug><wp:tag_name><![CDATA[perl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[php]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>query_cache_size</wp:tag_slug><wp:tag_name><![CDATA[query_cache_size]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>227</wp:term_id><wp:tag_slug>quora</wp:tag_slug><wp:tag_name><![CDATA[Quora]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>rails-3-0</wp:tag_slug><wp:tag_name><![CDATA[rails 3.0]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>rails-2-3-4</wp:tag_slug><wp:tag_name><![CDATA[rails-2.3.4]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>213</wp:term_id><wp:tag_slug>rails-erd</wp:tag_slug><wp:tag_name><![CDATA[rails-erd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>rails3</wp:tag_slug><wp:tag_name><![CDATA[rails3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>railties</wp:tag_slug><wp:tag_name><![CDATA[railties]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>random</wp:tag_slug><wp:tag_name><![CDATA[random]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>redmine</wp:tag_slug><wp:tag_name><![CDATA[Redmine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>ree</wp:tag_slug><wp:tag_name><![CDATA[REE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>188</wp:term_id><wp:tag_slug>rspec</wp:tag_slug><wp:tag_name><![CDATA[RSpec]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>200</wp:term_id><wp:tag_slug>rsync</wp:tag_slug><wp:tag_name><![CDATA[rsync]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>ruby-rails</wp:tag_slug><wp:tag_name><![CDATA[Ruby &amp; Rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>rubyrails</wp:tag_slug><wp:tag_name><![CDATA[Ruby&amp;Rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>rubyinline</wp:tag_slug><wp:tag_name><![CDATA[RubyInline]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>sablog</wp:tag_slug><wp:tag_name><![CDATA[sablog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>scale</wp:tag_slug><wp:tag_name><![CDATA[Scale]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>scopes</wp:tag_slug><wp:tag_name><![CDATA[Scopes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>screen</wp:tag_slug><wp:tag_name><![CDATA[screen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>select</wp:tag_slug><wp:tag_name><![CDATA[select]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>220</wp:term_id><wp:tag_slug>sharding</wp:tag_slug><wp:tag_name><![CDATA[Sharding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>182</wp:term_id><wp:tag_slug>shell</wp:tag_slug><wp:tag_name><![CDATA[shell]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>slice_before</wp:tag_slug><wp:tag_name><![CDATA[slice_before]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>185</wp:term_id><wp:tag_slug>sneetchalizer</wp:tag_slug><wp:tag_name><![CDATA[sneetchalizer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>socket</wp:tag_slug><wp:tag_name><![CDATA[socket]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>sort_buffer_size</wp:tag_slug><wp:tag_name><![CDATA[sort_buffer_size]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>201</wp:term_id><wp:tag_slug>sphinx</wp:tag_slug><wp:tag_name><![CDATA[Sphinx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>spreadsheet</wp:tag_slug><wp:tag_name><![CDATA[spreadsheet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>sqlite</wp:tag_slug><wp:tag_name><![CDATA[SQLite]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>226</wp:term_id><wp:tag_slug>stackoverflow</wp:tag_slug><wp:tag_name><![CDATA[StackOverflow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>180</wp:term_id><wp:tag_slug>statistics</wp:tag_slug><wp:tag_name><![CDATA[statistics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>135</wp:term_id><wp:tag_slug>svn</wp:tag_slug><wp:tag_name><![CDATA[svn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>136</wp:term_id><wp:tag_slug>swap</wp:tag_slug><wp:tag_name><![CDATA[Swap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>137</wp:term_id><wp:tag_slug>terminal</wp:tag_slug><wp:tag_name><![CDATA[Terminal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>138</wp:term_id><wp:tag_slug>textmate</wp:tag_slug><wp:tag_name><![CDATA[Textmate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>139</wp:term_id><wp:tag_slug>theme</wp:tag_slug><wp:tag_name><![CDATA[theme]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>187</wp:term_id><wp:tag_slug>thin</wp:tag_slug><wp:tag_name><![CDATA[Thin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>140</wp:term_id><wp:tag_slug>tips</wp:tag_slug><wp:tag_name><![CDATA[tips]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>141</wp:term_id><wp:tag_slug>to_xml</wp:tag_slug><wp:tag_name><![CDATA[to_xml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>142</wp:term_id><wp:tag_slug>truncate</wp:tag_slug><wp:tag_name><![CDATA[truncate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>143</wp:term_id><wp:tag_slug>tup</wp:tag_slug><wp:tag_name><![CDATA[tup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>176</wp:term_id><wp:tag_slug>twig</wp:tag_slug><wp:tag_name><![CDATA[Twig]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>144</wp:term_id><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>145</wp:term_id><wp:tag_slug>ubuntu</wp:tag_slug><wp:tag_name><![CDATA[ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>203</wp:term_id><wp:tag_slug>ultrasphinx</wp:tag_slug><wp:tag_name><![CDATA[Ultrasphinx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>146</wp:term_id><wp:tag_slug>umount</wp:tag_slug><wp:tag_name><![CDATA[umount]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>147</wp:term_id><wp:tag_slug>uninstall</wp:tag_slug><wp:tag_name><![CDATA[uninstall]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>148</wp:term_id><wp:tag_slug>uniquely</wp:tag_slug><wp:tag_name><![CDATA[Uniquely]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>179</wp:term_id><wp:tag_slug>upstream</wp:tag_slug><wp:tag_name><![CDATA[upstream]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>149</wp:term_id><wp:tag_slug>urldecode</wp:tag_slug><wp:tag_name><![CDATA[URLDecode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>150</wp:term_id><wp:tag_slug>variables</wp:tag_slug><wp:tag_name><![CDATA[variables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>151</wp:term_id><wp:tag_slug>visor</wp:tag_slug><wp:tag_name><![CDATA[Visor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>194</wp:term_id><wp:tag_slug>wap</wp:tag_slug><wp:tag_name><![CDATA[WAP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>152</wp:term_id><wp:tag_slug>will_paginate</wp:tag_slug><wp:tag_name><![CDATA[will_paginate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>153</wp:term_id><wp:tag_slug>wp</wp:tag_slug><wp:tag_name><![CDATA[wp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>154</wp:term_id><wp:tag_slug>x-accel-redirect</wp:tag_slug><wp:tag_name><![CDATA[X-Accel-Redirect]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>178</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[xml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>198</wp:term_id><wp:tag_slug>yobo</wp:tag_slug><wp:tag_name><![CDATA[YOBO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>155</wp:term_id><wp:tag_slug>%e4%b8%87%e7%bd%91</wp:tag_slug><wp:tag_name><![CDATA[万网]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>156</wp:term_id><wp:tag_slug>%e4%b9%a6</wp:tag_slug><wp:tag_name><![CDATA[书]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>157</wp:term_id><wp:tag_slug>%e4%b9%a6%e7%b1%8d</wp:tag_slug><wp:tag_name><![CDATA[书籍]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>158</wp:term_id><wp:tag_slug>%e4%bc%98%e4%ba%bf%e5%b8%82%e5%9c%ba</wp:tag_slug><wp:tag_name><![CDATA[优亿市场]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>159</wp:term_id><wp:tag_slug>%e5%85%85%e7%94%b5</wp:tag_slug><wp:tag_name><![CDATA[充电]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>160</wp:term_id><wp:tag_slug>%e5%88%9b%e8%b5%a2%e8%b7%af%e7%ba%bf</wp:tag_slug><wp:tag_name><![CDATA[创赢路线]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>161</wp:term_id><wp:tag_slug>%e5%8a%ab%e6%8c%81</wp:tag_slug><wp:tag_name><![CDATA[劫持]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>195</wp:term_id><wp:tag_slug>%e5%8c%97%e4%ba%ac</wp:tag_slug><wp:tag_name><![CDATA[北京]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>162</wp:term_id><wp:tag_slug>%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1</wp:tag_slug><wp:tag_name><![CDATA[原型设计]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>163</wp:term_id><wp:tag_slug>%e5%8f%8b%e9%93%be</wp:tag_slug><wp:tag_name><![CDATA[友链]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>164</wp:term_id><wp:tag_slug>%e5%8f%97%e4%bc%a4</wp:tag_slug><wp:tag_name><![CDATA[受伤]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>165</wp:term_id><wp:tag_slug>%e5%9f%9f%e5%90%8d</wp:tag_slug><wp:tag_name><![CDATA[域名]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>166</wp:term_id><wp:tag_slug>%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba</wp:tag_slug><wp:tag_name><![CDATA[域名转出]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>167</wp:term_id><wp:tag_slug>%e5%a4%a9%e7%bf%bc%e5%b7%a5%e5%8e%82</wp:tag_slug><wp:tag_name><![CDATA[天翼工厂]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>168</wp:term_id><wp:tag_slug>%e5%ae%89%e5%85%a8</wp:tag_slug><wp:tag_name><![CDATA[安全]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>225</wp:term_id><wp:tag_slug>%e5%bc%80%e5%8f%91%e5%85%a5%e9%97%a8%e4%b8%8e%e5%ae%9e%e6%88%98</wp:tag_slug><wp:tag_name><![CDATA[开发入门与实战]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>169</wp:term_id><wp:tag_slug>%e6%96%ad%e7%82%b9%e7%bb%ad%e4%bc%a0</wp:tag_slug><wp:tag_name><![CDATA[断点续传]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>170</wp:term_id><wp:tag_slug>buzz</wp:tag_slug><wp:tag_name><![CDATA[无心呢喃 | Buzz]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>171</wp:term_id><wp:tag_slug>%e6%97%a0%e7%ba%bf%e4%b8%8a%e7%bd%91%e5%8d%a1</wp:tag_slug><wp:tag_name><![CDATA[无线上网卡]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>172</wp:term_id><wp:tag_slug>%e6%9e%b6%e6%9e%84</wp:tag_slug><wp:tag_name><![CDATA[架构]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>173</wp:term_id><wp:tag_slug>%e6%bc%8f%e6%b4%9e</wp:tag_slug><wp:tag_name><![CDATA[漏洞]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>174</wp:term_id><wp:tag_slug>%e7%94%9f%e6%97%a5</wp:tag_slug><wp:tag_name><![CDATA[生日]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>175</wp:term_id><wp:tag_slug>%e7%94%b5%e4%bf%a1</wp:tag_slug><wp:tag_name><![CDATA[电信]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>191</wp:term_id><wp:tag_slug>%e8%ae%a1%e5%88%92</wp:tag_slug><wp:tag_name><![CDATA[计划]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>189</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>%e5%af%bc%e8%88%aa</wp:term_slug><wp:term_name><![CDATA[导航]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.3</generator>

	<item>
		<title>按月归档</title>
		<link>http://www.iceskysl.com/?attachment_id=1059</link>
		<pubDate>Tue, 03 Jan 2012 16:43:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1059</wp:post_id>
		<wp:post_date>2012-01-03 16:43:17</wp:post_date>
		<wp:post_date_gmt>2012-01-03 16:43:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-04-at-12-26-51-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"136";s:6:"height";s:4:"1001";s:14:"hwstring_small";s:22:"height='96' width='13'";s:4:"file";s:49:"2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-04-at-12.26.51-AM-136x150.png";s:5:"width";s:3:"136";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-04-at-12.26.51-AM-40x300.png";s:5:"width";s:2:"40";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>文字分类</title>
		<link>http://www.iceskysl.com/?attachment_id=1060</link>
		<pubDate>Tue, 03 Jan 2012 16:47:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1060</wp:post_id>
		<wp:post_date>2012-01-03 16:47:25</wp:post_date>
		<wp:post_date_gmt>2012-01-03 16:47:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-04-at-12-39-18-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"247";s:6:"height";s:3:"297";s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:49:"2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-04-at-12.39.18-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tag</title>
		<link>http://www.iceskysl.com/?attachment_id=1061</link>
		<pubDate>Tue, 03 Jan 2012 16:50:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1061</wp:post_id>
		<wp:post_date>2012-01-03 16:50:14</wp:post_date>
		<wp:post_date_gmt>2012-01-03 16:50:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-04-at-12-39-25-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"295";s:6:"height";s:3:"377";s:14:"hwstring_small";s:22:"height='96' width='75'";s:4:"file";s:49:"2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-04-at-12.39.25-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-04-at-12.39.25-AM-234x300.png";s:5:"width";s:3:"234";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>It&#039;s Android Time——Google Android创赢路线与产品开发实战</title>
		<link>http://www.iceskysl.com/?attachment_id=1065</link>
		<pubDate>Tue, 03 Jan 2012 17:48:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp-content/uploads/2009/09/book.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1065</wp:post_id>
		<wp:post_date>2012-01-03 17:48:28</wp:post_date>
		<wp:post_date_gmt>2012-01-03 17:48:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>545</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2009/09/book.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/09/book.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"500";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:16:"2009/09/book.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"book-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"book-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[It's Android Time——Google Android创赢路线与产品开发实战]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>book1</title>
		<link>http://www.iceskysl.com/?attachment_id=1070</link>
		<pubDate>Tue, 03 Jan 2012 17:57:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp-content/uploads/2009/09/book1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2012-01-03 17:57:54</wp:post_date>
		<wp:post_date_gmt>2012-01-03 17:57:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>545</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2009/09/book1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/09/book1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"500";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:17:"2009/09/book1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"book1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"book1-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>yobo</title>
		<link>http://www.iceskysl.com/?attachment_id=1084</link>
		<pubDate>Tue, 03 Jan 2012 18:55:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2009/08/yobo.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1084</wp:post_id>
		<wp:post_date>2012-01-03 18:55:51</wp:post_date>
		<wp:post_date_gmt>2012-01-03 18:55:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yobo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>490</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2009/08/yobo.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/08/yobo.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"85";s:6:"height";s:2:"64";s:14:"hwstring_small";s:22:"height='64' width='85'";s:4:"file";s:16:"2009/08/yobo.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>首页</title>
		<link>http://www.iceskysl.com/?p=1088</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1088</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1088</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%a6%96%e9%a1%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[1088]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.iceskysl.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.iceskysl.com/?p=1089</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1089</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1089</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1089</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[481]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.iceskysl.com/?p=1090</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1090</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1090</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1090</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[545]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>P1040896</title>
		<link>http://www.iceskysl.com/?attachment_id=1102</link>
		<pubDate>Wed, 04 Jan 2012 20:24:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/P1040896.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1102</wp:post_id>
		<wp:post_date>2012-01-04 20:24:23</wp:post_date>
		<wp:post_date_gmt>2012-01-04 20:24:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>p1040896</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>481</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/P1040896.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/P1040896.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"4320";s:6:"height";s:4:"3240";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2012/01/P1040896.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"P1040896-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"P1040896-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:21:"P1040896-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"3.9";s:6:"credit";s:0:"";s:6:"camera";s:9:"DMC-ZS10G";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1324909649";s:9:"copyright";s:0:"";s:12:"focal_length";s:3:"7.4";s:3:"iso";s:3:"250";s:13:"shutter_speed";s:7:"0.00625";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-01-17 at 11.03.19 PM</title>
		<link>http://www.iceskysl.com/?attachment_id=1107</link>
		<pubDate>Tue, 17 Jan 2012 15:15:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1107</wp:post_id>
		<wp:post_date>2012-01-17 15:15:07</wp:post_date>
		<wp:post_date_gmt>2012-01-17 15:15:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-17-at-11-03-19-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1106</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"587";s:6:"height";s:3:"517";s:14:"hwstring_small";s:23:"height='96' width='108'";s:4:"file";s:49:"2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-17-at-11.03.19-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-01-17-at-11.03.19-PM-300x264.png";s:5:"width";s:3:"300";s:6:"height";s:3:"264";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>导航区</title>
		<link>http://www.iceskysl.com/?attachment_id=1197</link>
		<pubDate>Sat, 28 Jan 2012 06:36:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1197</wp:post_id>
		<wp:post_date>2012-01-28 06:36:13</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:36:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-2-32-26-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"648";s:6:"height";s:3:"322";s:14:"hwstring_small";s:23:"height='63' width='128'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.32.26-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.32.26-PM-300x149.png";s:5:"width";s:3:"300";s:6:"height";s:3:"149";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我的旅行</title>
		<link>http://www.iceskysl.com/?attachment_id=1198</link>
		<pubDate>Sat, 28 Jan 2012 06:40:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1198</wp:post_id>
		<wp:post_date>2012-01-28 06:40:50</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:40:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-2-32-08-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"470";s:6:"height";s:3:"405";s:14:"hwstring_small";s:23:"height='96' width='111'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.32.08-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.32.08-PM-300x258.png";s:5:"width";s:3:"300";s:6:"height";s:3:"258";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我的书</title>
		<link>http://www.iceskysl.com/?attachment_id=1199</link>
		<pubDate>Sat, 28 Jan 2012 06:41:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1199</wp:post_id>
		<wp:post_date>2012-01-28 06:41:50</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:41:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-2-30-59-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"521";s:6:"height";s:3:"633";s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.30.59-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.30.59-PM-246x300.png";s:5:"width";s:3:"246";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我的音乐</title>
		<link>http://www.iceskysl.com/?attachment_id=1200</link>
		<pubDate>Sat, 28 Jan 2012 06:42:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1200</wp:post_id>
		<wp:post_date>2012-01-28 06:42:26</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:42:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-2-31-20-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"525";s:6:"height";s:3:"591";s:14:"hwstring_small";s:22:"height='96' width='85'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.31.20-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.31.20-PM-266x300.png";s:5:"width";s:3:"266";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我的电影</title>
		<link>http://www.iceskysl.com/?attachment_id=1201</link>
		<pubDate>Sat, 28 Jan 2012 06:44:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1201</wp:post_id>
		<wp:post_date>2012-01-28 06:44:50</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:44:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-2-31-50-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"519";s:6:"height";s:3:"732";s:14:"hwstring_small";s:22:"height='96' width='68'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.31.50-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-2.31.50-PM-212x300.png";s:5:"width";s:3:"212";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-01-28 at 5.34.42 PM</title>
		<link>http://www.iceskysl.com/?attachment_id=1631</link>
		<pubDate>Sat, 28 Jan 2012 09:43:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1631</wp:post_id>
		<wp:post_date>2012-01-28 09:43:46</wp:post_date>
		<wp:post_date_gmt>2012-01-28 09:43:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-5-34-42-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1630</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"305";s:6:"height";s:3:"324";s:14:"hwstring_small";s:22:"height='96' width='90'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-5.34.42-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-01-28-at-5.34.42-PM-282x300.png";s:5:"width";s:3:"282";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-01-28 at 5.41.40 PM</title>
		<link>http://www.iceskysl.com/?attachment_id=1632</link>
		<pubDate>Sat, 28 Jan 2012 09:44:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1632</wp:post_id>
		<wp:post_date>2012-01-28 09:44:24</wp:post_date>
		<wp:post_date_gmt>2012-01-28 09:44:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-01-28-at-5-41-40-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1630</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"322";s:6:"height";s:2:"71";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:48:"2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-Shot-2012-01-28-at-5.41.40-PM-150x71.png";s:5:"width";s:3:"150";s:6:"height";s:2:"71";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-Shot-2012-01-28-at-5.41.40-PM-300x66.png";s:5:"width";s:3:"300";s:6:"height";s:2:"66";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-03-02 at 9.05.06 PM</title>
		<link>http://www.iceskysl.com/?attachment_id=1675</link>
		<pubDate>Fri, 02 Mar 2012 14:06:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1675</wp:post_id>
		<wp:post_date>2012-03-02 14:06:01</wp:post_date>
		<wp:post_date_gmt>2012-03-02 14:06:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-03-02-at-9-05-06-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1674</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"515";s:6:"height";s:3:"618";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:48:"2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-03-02-at-9.05.06-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-03-02-at-9.05.06-PM-250x300.png";s:5:"width";s:3:"250";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-03-02 at 10.08.21 PM</title>
		<link>http://www.iceskysl.com/?attachment_id=1676</link>
		<pubDate>Fri, 02 Mar 2012 14:09:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1676</wp:post_id>
		<wp:post_date>2012-03-02 14:09:23</wp:post_date>
		<wp:post_date_gmt>2012-03-02 14:09:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-03-02-at-10-08-21-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1674</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"678";s:6:"height";s:3:"450";s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:49:"2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-03-02-at-10.08.21-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-03-02-at-10.08.21-PM-300x199.png";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Making rhtml better</title>
		<link>http://www.iceskysl.com/?p=142</link>
		<pubDate>Sat, 19 May 2007 09:37:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[It’s even easier like this:in app/views/layouts/application.rhtml:&lt;%= xhtml_doctype :strict %&gt;&lt;%= html_tag :lang =&gt; Globalize::Locale.active.language.iso_639_1 %&gt;&lt;%= @content_for_layout %&gt;&lt;%= end_html_tag %&gt;and in app/helpers/application_helper.rb:module ApplicationHelper  # Renders an xhtml doctype declaration for the document's prolog. Defaults to xhtml transitional.  # &lt;tt&gt;xhtml_doctype :strict&lt;/tt&gt;  def xhtml_doctype( doctype=:transitional )    doctype = :transitional unless [:transitional, :strict, :frameset].include? doctype    case doctype    when :transitional      '&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;'    when :strict      '&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;'    when :frameset      '&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Frameset//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&quot;&gt;'    end  end  # Displays an html tag, complete with xhtml namespace and language. Accepts language as an option, but defaults to English.  # &lt;tt&gt;html_tag :lang =&gt; 'de'&lt;/tt&gt;  def html_tag( options={} )    options[:lang] ||= 'en'    lang = options.delete( :lang )    &quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; lang=\&quot;#{lang}\&quot; xml:lang=\&quot;#{lang}\&quot; #{options.map { |k,v| &quot;#{k}=\&quot;#{v}\&quot;&quot; }.join( ' ' )}&gt;&quot;   end  # End html tag.  def end_html_tag; &quot;&lt;/html&gt;&quot; endend]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2007-05-19 09:37:13</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:37:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-rhtml-better</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quick add slashes filter for Rails</title>
		<link>http://www.iceskysl.com/?p=143</link>
		<pubDate>Sat, 19 May 2007 09:34:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[读后：有的时候，需要在提交的URL后面自动加上&quot;/&quot;，这个方法实现这样一个需求，你还可以扩展下去，比如在域名前加&quot;http:\\&quot;这样的字符。def add_slash  unless %r{/$}.match(@request.path)    redirect_to @request.path &lt;&lt; '/'  endendThis ensures you always have the trailing slash at the end of your URLs. Maybe it could be done better, but for now it works. Django has some stock middleware that does just this, as well as ensuring the first part of the hostname is ‘www’. The point is that your resource can be accessed with one and only one URL, rather than with potentially 4 combinations of / and www. I have no hard evidence, but this is supposedly good for teh Google, and some people find it elegant.I am thinking about maybe whipping up a module of such utilities that you could include in your ApplicationController and never think about again.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2007-05-19 09:34:51</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:34:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quick-add-slashes-filter-for-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introducing the AJAX Feed API FeedControl</title>
		<link>http://www.iceskysl.com/?p=144</link>
		<pubDate>Sat, 19 May 2007 09:32:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[Google放出来的AJAX feed API我老早就关注到了，也试用了一些，感觉还真的不错，现在又添加了一些东西，如下：其API都很简单，详细的可以看这个页面上的介绍：http://code.google.com/apis/ajaxfeeds/documentation/reference.html#FeedControl只有一个构造器：FeedControl四个函数：1.addFeed(url, label) //添加需要显示的FEED的URL2.addFeed(element, opt_options?)；//这个其实就是draw方法，指定显示的方式，例如：feedControl.draw(  document.getElementById(&quot;feedControl&quot;),   {    drawMode : google.feeds.FeedControl.DRAW_MODE_TABBED  });feedControl这个是页面的DOM的ID名称，google.feeds.FeedControl.DRAW_MODE_TABBED 就是指定的显示方式，默认值是：google.feeds.FeedControl.DRAW_MODE_LINEAR.3.setNumEntries(num)； //设定显示的条数（貌似只能统一指定，不能为各个FEED单独指定）4.setLinkTarget(linkTarget) //设定链接的打开方式，其值分别如下：    * google.feeds.LINK_TARGET_BLANK - links will open in a new window    * google.feeds.LINK_TARGET_SELF - links will open in the current window    * google.feeds.LINK_TARGET_TOP - links will open in the topmost frame    * google.feeds.LINK_TARGET_PARENT - links will open in either the topmost frame, or replace the current frame.    * anything-else - the value of target in the resulting anchor element is set to linkTarget附录其网站上的说明：---------------This morning we added a new class to the Google AJAX Feed API designed to allow you to more easily add a collection of feeds to your pages. The FeedControl is pretty simple:var feedControl = new google.feeds.FeedControl();feedControl.addFeed(&quot;http://www.digg.com/rss/index.xml&quot;, &quot;Digg&quot;);feedControl.addFeed(&quot;http://feeds.feedburner.com/Techcrunch&quot;, &quot;TechCrunch&quot;);feedControl.draw(document.getElementById(&quot;feedControl&quot;));In addition to the formal documentation, we have put together a few samples to help you quickly come up to speed.    * Basic FeedControl - feedcontrol.html    * Tabbed FeedControl - tabbed.html    * Sidebar Style FeedControl - sidebar.html    * AJAX Feed API Playground Blog]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2007-05-19 09:32:26</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:32:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-the-ajax-feed-api-feedcontrol-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Counting Distinct Records In Rails</title>
		<link>http://www.iceskysl.com/?p=145</link>
		<pubDate>Sat, 19 May 2007 09:30:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[If you ever need to count your Rails records based on a distinct column, here is a simple solution:Gift.count_by_sql(&quot;select count(distinct url) from gifts&quot;)In this example, I am counting the number of distinct gift urls from my gifts table.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2007-05-19 09:30:32</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:30:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>counting-distinct-records-in-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[financing a mortgage]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://financingamortgage.net/tips-on-your-first-mortgage/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-10-04 11:48:11</wp:comment_date>
			<wp:comment_date_gmt>2011-10-04 03:48:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>financing a mortgage...</strong>

[...]Counting Distinct Records In Rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Appending to a string（ROR中的+=和&lt;&lt;操作符的比较）</title>
		<link>http://www.iceskysl.com/?p=146</link>
		<pubDate>Sat, 19 May 2007 09:29:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[If you come from another language, you might be tempted to use the += operator when appending to a string.   1.  my_str = &quot;Marco &quot;   2.  my_str += &quot;Polo&quot;It works… but there is a better way to do it : the &lt;&lt; method.   1. my_str = &quot;Marco &quot;   2. my_str &lt;&lt; &quot;Polo&quot;#UPDATEI have removed my initial claim about operator precedence as it isn’t really accurate. There is a much better reason to use &lt;&lt; instead of += when appending to a string... something I didn't even realize (Thanks to Gregory). += will create a new String instance and will assign it to your left object. On the other hand, &lt;&lt; will append the new string directly into your already existing left object. One could argue that += is only different than &lt;&lt; and not better, but to me &lt;&lt; is what you'll want to use 99% of the time (if not 100%) when appending to a String. I have yet to see a real case where one would want to &quot;lose&quot; it's existing String instance just to get a new one containing the exact same value.You can also use the &lt;&lt; method with arrays :   1. [1,2,3] &lt;&lt; 4 #gives [1,2,3,4]、 Be careful however when using &lt;&lt; with Fixnum/Bignum instances. With these objects, the &lt;&lt; method will shift the bits of your integer to the left. If you want to do a summation (append style that is), you will have to use +=]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2007-05-19 09:29:16</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:29:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>appending-to-a-string%ef%bc%88ror%e4%b8%ad%e7%9a%84%e5%92%8c%e6%93%8d%e4%bd%9c%e7%ac%a6%e7%9a%84%e6%af%94%e8%be%83%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Check for nil and initialize on a single line</title>
		<link>http://www.iceskysl.com/?p=147</link>
		<pubDate>Sat, 19 May 2007 09:23:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[点评：关于ROR中的一中“遇nil赋值”的写法，这个很早的时候在书上看到的是||＝操作符，也一直这么用，今天发现作者的另外这个写法也挺好的。

Sometimes, you want to initialize a variable to some value only if that variable is equal to nil. If you like to write your methods as short, clean and readable as possible, you can do that task in a single line instead of taking the traditionnal 3 lines approach. You have two options :

1) You can use the if modifier   1. x = get_some_object if x.nil?Very easy to read. This is my favorite.

2) Or you can use the ||= operator   1. x ||= get_some_object This one is even shorter. The ||= operator is a little bit less verbose and might confuse a ruby newcomer… but I’m not saying that it should be a reason for not using it. This is more a matter of personal taste than anything else.Both of these methods are better than this :

1.  #eeww… we don’t like this one.

2.  if(x.nil?)

3.     x = get_some_object   4.  end]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2007-05-19 09:23:10</wp:post_date>
		<wp:post_date_gmt>2007-05-19 09:23:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>check-for-nil-and-initialize-on-a-single-line</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>About</title>
		<link>http://www.iceskysl.com/?page_id=481</link>
		<pubDate>Mon, 24 Aug 2009 05:51:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp/?page_id=478</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/P1040896.jpg"><img class="alignnone size-medium wp-image-1102" title="P1040896" src="http://www.iceskysl.com/wp-content/uploads/2012/01/P1040896-300x225.jpg" alt="" width="300" height="225" /></a>

姚尚朗（IceskYsl）

<span style="background-color: #ffffff;">姚尚朗, 网名IceskYsl, 简称Ice, 80后, 典型巨蟹男, 移动互联网创业者; 技术,产品,运营,管理均不得其道,略懂皮毛; Google产品重度依赖者, Mac, Android, iPhone, BlackBerry非典型用户;</span>

<span style="background-color: #ffffff;">求学武汉, 毕业南下深圳, 尔后北漂在京, 至今数年有余; 追寻内心的想法, 不随波逐流, 爱折腾, 爱旅行, 孩子气, 享受工作, 安静的做喜欢的事情...</span>

<span style="background-color: #ffffff;">译《The Rails Way》，著《Google API大全----编程*开发*实例》，《Google Android开发入门与实战》，《It's Android Time: Google Android创赢路线与产品开发实战》</span>
  

联系我：
Mail/Gtalk: iceskysl#gmail.com

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2009-08-24 05:51:49</wp:post_date>
		<wp:post_date_gmt>2009-08-24 05:51:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7652</wp:comment_id>
			<wp:comment_author><![CDATA[Vincent 4J]]></wp:comment_author>
			<wp:comment_author_email>vincent4j@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://vc4j.com</wp:comment_author_url>
			<wp:comment_author_IP>115.172.92.52</wp:comment_author_IP>
			<wp:comment_date>2012-01-28 08:55:23</wp:comment_date>
			<wp:comment_date_gmt>2012-01-28 08:55:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Iphone -&gt; iPhone]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1327743381.741";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327740923.9578";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:3:"481";s:14:"comment_author";s:10:"Vincent 4J";s:20:"comment_author_email";s:19:"vincent4j@gmail.com";s:18:"comment_author_url";s:8:"vc4j.com";s:15:"comment_content";s:16:"Iphone -> iPhone";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"115.172.92.52";s:10:"user_agent";s:182:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; QQDownload 702; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Tablet PC 2.0)";s:8:"referrer";s:36:"http://www.iceskysl.com/?page_id=481";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:36:"http://www.iceskysl.com/?page_id=481";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:10:"Vincent 4J";s:10:"POST_email";s:19:"vincent4j@gmail.com";s:8:"POST_url";s:8:"vc4j.com";s:12:"POST_comment";s:16:"Iphone -> iPhone";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"481";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"125";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"115.172.92.52";s:11:"REMOTE_PORT";s:5:"61975";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:181:"image/jpeg, application/x-ms-application, image/gif, application/xaml+xml, image/pjpeg, application/x-ms-xbap, application/x-shockwave-flash, application/QVOD, application/QVOD, */*";s:12:"HTTP_REFERER";s:36:"http://www.iceskysl.com/?page_id=481";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-CN";s:15:"HTTP_USER_AGENT";s:182:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; QQDownload 702; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Tablet PC 2.0)";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"125";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1327740923";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Team</title>
		<link>http://www.iceskysl.com/?page_id=490</link>
		<pubDate>Mon, 24 Aug 2009 06:42:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp/?page_id=490</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>EOEMOBILE</strong>

<img src="http://eoemobile.com/images/logo.png" alt="" width="100" height="33" />

地址: <a href="http://www.eoemobile.com/" target="_blank">http://www.eoemobile.com</a>

&nbsp;

<strong>YOBO</strong>

<img class="alignnone" src="http://www.iceskysl.com/wp-content/uploads/2009/08/yobo.gif" alt="" />

地址: <a href="http://www.yobo.com/" target="_blank">http://www.yobo.com</a>

&nbsp;

<strong>1STERS</strong>

<img class="alignnone" src="http://www.iceskysl.com/wp-content/uploads/2012/01/logo9-1.png" alt="" width="140" height="51" />

地址: <a href="http://www.1sters.com/" target="_blank">http://www.1sters.com</a>

&nbsp;

<strong>1.S.T</strong>
天马行空技术组，仅存团代号(1.s.t)和散落在各地的兄弟和技术文章.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>490</wp:post_id>
		<wp:post_date>2009-08-24 06:42:36</wp:post_date>
		<wp:post_date_gmt>2009-08-24 06:42:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1sters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Book</title>
		<link>http://www.iceskysl.com/?page_id=545</link>
		<pubDate>Tue, 22 Sep 2009 10:25:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?page_id=545</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #0000ff;">"要么旅行要么读书，身体或者是心灵，总有一个需要在路上."</span>
读书不在量而在质，我读自己喜欢的书，好书需慢慢的读，仔细的读，反复的读.
书很多，但是能算好书却不多，感谢<a title="豆瓣读书" href="http://book.douban.com" target="_blank">豆瓣读书</a>帮我找到不少好书，也纪录了我的阅读～


<strong>我参与策划/编写/翻译的</strong>
<div>
<table cellspacing="0" cellpadding="4">
<tbody>
<tr align="center">
<td><a title="It s Android Time-Google Android创赢路线与产品开发实战" href="http://book.douban.com/subject/4908228/" target="_blank"><img src="http://img3.douban.com/mpic/s6189803.jpg" alt="" border="0" /></a></td>
<td><a title="Google Android开发入门与实战" href="http://book.douban.com/subject/3770255/" target="_blank"><img src="http://img3.douban.com/mpic/s3817805.jpg" alt="" border="0" /></a></td>
<td><a title="Google API大全" href="http://book.douban.com/subject/3764948/" target="_blank"><img src="http://img1.douban.com/mpic/s3810942.jpg" alt="" border="0" /></a></td>
<td><a title="Rails之道" href="http://book.douban.com/subject/4727011/" target="_blank"><img src="http://img1.douban.com/mpic/s4282672.jpg" alt="" border="0" /></a></td>
</tr>
</tbody>
</table>
</div>

<br><br>
<strong>我读过的书</strong>
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=collection&amp;select=favorite&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=book" ></script>

<br><br>
<strong>我在读的书</strong>
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=dolist&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=book"></script>
<br><br>

<strong>我想读的书</strong><script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=wishlist&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=book"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>545</wp:post_id>
		<wp:post_date>2009-09-22 10:25:53</wp:post_date>
		<wp:post_date_gmt>2009-09-22 10:25:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>book</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Toolkit</title>
		<link>http://www.iceskysl.com/?page_id=602</link>
		<pubDate>Wed, 13 Jan 2010 09:38:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?page_id=602</guid>
		<description></description>
		<content:encoded><![CDATA[我08年开始使用Mac电脑，工作生活都离不开，如下是我常用的工具，供参考
<ul>
	<li>常用工具
<ul>
	<li>Chrome（推荐）：自从用了chrome，就没有其他浏览器再能吸引我了，强烈推荐这个（我更喜欢dev版的）</li>
	<li><a href="http://adium.im/">Adium</a> ：兼容多种聊天账户，我用来开MSN，Google Talk 和 Google App Talk；</li>
	<li><a href="http://im.qq.com/qq/mac/">QQ for Mac</a>：随着QQ的不断升级，现在的已经很棒了，算一款合格的mac软件了；</li>
	<li>MPlayerX:　之前用的比较多的是VLC，后来发现了Mplayerx就几本不使VLC了，非常强大的视屏播放器；</li>
	<li>Pixelmator：是个画图工具</li>
	<li>FileZilla： FTP工具，在使windows的时候就使的FTP软件，尤其喜欢其支持sftp方式的连接和传输</li>
	<li>7zX：非常强大的压缩软件，压缩出来的中文兼容windows</li>
	<li><a href="http://www.evernote.com/">Evernote</a> ：文字纪录，非常强大可以同步的记事本软件，比记事本强大好多倍，有了这个其他的文字纪录类的软件就不需要了（配合ios或者android客户端使用更棒）,这个文章就是在Evernote里写的；</li>
	<li>dropbox：资料同步软件，也非常强大，把自己的文件同步一份，走到哪里都是主场，非常好用（国内部分区域被墙，自己想办法）；</li>
	<li>IMKQIM：比较老牌的输入法，很不错，FIT就用的比较少了；</li>
	<li>Quicksilver：非常棒的软件，快速启动，不用苦哈哈手工去找；</li>
</ul>
</li>
	<li>专业工具
<ul>
	<li>TextMate：号称是编程人员的神器，其实无论哪个工具用熟了都很好，TextMate确实很优秀，优秀到尽管其中文字体支持的不好，还是必须的装；</li>
	<li>MacVim：这个也是神器，把Vim用好到走到哪里都不怕；</li>
	<li>iTerm：必备软件，管理SSH链接</li>
	<li>MongoHub：管理MongoDB的工具</li>
	<li>Sequel Pro：mysql管理工具，很强大；</li>
	<li>MySQLWorkbench：mysql管理，用来做表结构设计的；</li>
	<li>GitHub：用github的同学必备，很好用</li>
	<li>GitX：可视化的git工具，你没有理由不用他</li>
	<li>Balsamiq Mockups：原型图工具，非常棒</li>
	<li>OmniGraffle Professional： 专业画图工具，其他的都不需要了；</li>
	<li>Mindjet MindManager：脑图工具</li>
	<li>RESTClient：REST测试工具</li>
	<li>KeyCastr：显示快捷键工具</li>
	<li>keycue：显示软件的快捷键</li>
	<li><a href="http://www.dejal.com/timeout/" target="_blank">Time Out </a> : 设定时间休息的软件</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>602</wp:post_id>
		<wp:post_date>2010-01-13 09:38:50</wp:post_date>
		<wp:post_date_gmt>2010-01-13 09:38:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>toolkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7628</wp:comment_id>
			<wp:comment_author><![CDATA[Jin]]></wp:comment_author>
			<wp:comment_author_email>coolzilj@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://hiimjin.com</wp:comment_author_url>
			<wp:comment_author_IP>14.119.213.95</wp:comment_author_IP>
			<wp:comment_date>2012-01-22 05:37:02</wp:comment_date>
			<wp:comment_date_gmt>2012-01-22 05:37:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[刚接触Mac不久，谢谢博主的经验分享]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327210622.7864";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:3:"602";s:14:"comment_author";s:3:"Jin";s:20:"comment_author_email";s:16:"coolzilj@msn.com";s:18:"comment_author_url";s:11:"hiimjin.com";s:15:"comment_content";s:48:"刚接触Mac不久，谢谢博主的经验分享";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"14.119.213.95";s:10:"user_agent";s:116:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7";s:8:"referrer";s:36:"http://www.iceskysl.com/?page_id=602";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:36:"http://www.iceskysl.com/?page_id=602";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:3:"Jin";s:10:"POST_email";s:16:"coolzilj@msn.com";s:8:"POST_url";s:11:"hiimjin.com";s:12:"POST_comment";s:48:"刚接触Mac不久，谢谢博主的经验分享";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"602";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"240";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"14.119.213.95";s:11:"REMOTE_PORT";s:5:"64026";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"240";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:116:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:36:"http://www.iceskysl.com/?page_id=602";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1327210619";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327458793.7645";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7828</wp:comment_id>
			<wp:comment_author><![CDATA[Yong StillHere]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.176.52</wp:comment_author_IP>
			<wp:comment_date>2012-02-24 12:03:40</wp:comment_date>
			<wp:comment_date_gmt>2012-02-24 12:03:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没有mac的路过、、、]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1330222417.257";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330085020.1508";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:3:"602";s:14:"comment_author";s:14:"Yong StillHere";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:27:"没有mac的路过、、、";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.176.52";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:36:"http://www.iceskysl.com/?page_id=602";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:36:"http://www.iceskysl.com/?page_id=602";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:14:"Yong StillHere";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:27:"没有mac的路过、、、";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"602";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"214";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.176.52";s:11:"REMOTE_PORT";s:4:"5007";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:36:"http://www.iceskysl.com/?page_id=602";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"214";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1330085019";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>在WP中实现代码高亮</title>
		<link>http://www.iceskysl.com/?p=707</link>
		<pubDate>Sat, 17 Apr 2010 12:43:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=707</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date>2010-04-17 12:43:44</wp:post_date>
		<wp:post_date_gmt>2010-04-17 12:43:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Travel</title>
		<link>http://www.iceskysl.com/?page_id=1086</link>
		<pubDate>Tue, 03 Jan 2012 19:14:34 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?page_id=1086</guid>
		<description></description>
		<content:encoded><![CDATA[要么旅行要么读书，身体或者是心灵，总有一个需要在路上，这里记录我的足迹和记忆～

<iframe width="520" height="750" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="http://ditu.google.com/maps/ms?msa=0&amp;msid=201334076953324658114.0004b81b653d460d6d209&amp;brcurrent=3,0x31508e64e5c642c1:0x951daa7c349f366f,0%3B5,0,0&amp;ie=UTF8&amp;t=m&amp;ll=25.958045,110.654297&amp;spn=57.287569,45.703125&amp;z=4&amp;output=embed"></iframe><br /><small>在较大的地图中查看<a href="http://ditu.google.com/maps/ms?msa=0&amp;msid=201334076953324658114.0004b81b653d460d6d209&amp;brcurrent=3,0x31508e64e5c642c1:0x951daa7c349f366f,0%3B5,0,0&amp;ie=UTF8&amp;t=m&amp;ll=25.958045,110.654297&amp;spn=57.287569,45.703125&amp;z=4&amp;source=embed" style="color:#0000FF;text-align:left">我的足迹</a></small>


<strong>已经到过的地方：</strong>

<strong>国内：</strong>

<strong></strong>香港

武汉，长沙，合肥，芜湖，蚌埠，南京，上海，西安，绵阳

深圳，广州，阳朔，桂林，杭州，郴州，韶关

北京，天津，银川，中卫，成都，重庆，济南

&nbsp;

<strong>国外：</strong>

<strong></strong>Singapore(新加坡)，Kota Kinabalu(哥打京那巴鲁,马拉西亚),

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1086</wp:post_id>
		<wp:post_date>2012-01-03 19:14:34</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:14:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>travel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7901</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.183.16</wp:comment_author_IP>
			<wp:comment_date>2012-03-20 07:12:01</wp:comment_date>
			<wp:comment_date_gmt>2012-03-20 07:12:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[羡慕啊、我现在去过的地方也就杭州、郑州了、、、]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1332227521.5383";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1086";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:69:"羡慕啊、我现在去过的地方也就杭州、郑州了、、、";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.183.16";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:37:"http://www.iceskysl.com/?page_id=1086";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://www.iceskysl.com/?page_id=1086";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:69:"羡慕啊、我现在去过的地方也就杭州、郑州了、、、";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1086";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"337";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.183.16";s:11:"REMOTE_PORT";s:4:"9287";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:37:"http://www.iceskysl.com/?page_id=1086";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"337";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1332227521";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title></title>
		<link>http://www.iceskysl.com/?p=1091</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1091</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1091</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1091</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[490]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.iceskysl.com/?p=1092</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1092</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1092</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1092</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[602]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.iceskysl.com/?p=1093</link>
		<pubDate>Tue, 03 Jan 2012 19:16:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1093</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1093</wp:post_id>
		<wp:post_date>2012-01-03 19:16:50</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:16:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1093</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa"><![CDATA[导航]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[1086]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reader</title>
		<link>http://www.iceskysl.com/?page_id=1122</link>
		<pubDate>Sat, 28 Jan 2012 04:33:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?page_id=1122</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #0000ff;">要么旅行要么读书，身体或者是心灵，总有一个需要在路上</span>
读书不在量而在质，我读自己喜欢的书，好书需慢慢的读，仔细的读，反复的读
书很多，但是能算好书却不多，感谢<a title="豆瓣读书" href="http://book.douban.com" target="_blank">豆瓣读书</a>帮我找到不少好书，也纪录了我的阅读～

<strong>我参与编写的</strong>
<div>
<table cellspacing="0" cellpadding="4">
<tbody>
<tr align="center">
<td><a title="It s Android Time-Google Android创赢路线与产品开发实战" href="http://book.douban.com/subject/4908228/" target="_blank"><img src="http://img3.douban.com/mpic/s6189803.jpg" alt="" border="0" /></a></td>
<td><a title="Google Android开发入门与实战" href="http://book.douban.com/subject/3770255/" target="_blank"><img src="http://img3.douban.com/mpic/s3817805.jpg" alt="" border="0" /></a></td>
<td><a title="Google API大全" href="http://book.douban.com/subject/3764948/" target="_blank"><img src="http://img1.douban.com/mpic/s3810942.jpg" alt="" border="0" /></a></td>
<td><a title="Rails之道" href="http://book.douban.com/subject/4727011/" target="_blank"><img src="http://img1.douban.com/mpic/s4282672.jpg" alt="" border="0" /></a></td>
</tr>
</tbody>
</table>
</div>

<br>
<strong>我在看的</strong>
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=dolist&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=book"></script>
<br>
<strong>我想看的</strong><script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=wishlist&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=book"></script>
<br>
<strong>我看过的</strong>
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=collection&amp;n=20&amp;columns=4&amp;picsize=medium&amp;cat=book"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1122</wp:post_id>
		<wp:post_date>2012-01-28 04:33:51</wp:post_date>
		<wp:post_date_gmt>2012-01-28 04:33:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reader</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[archives.php]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Movie</title>
		<link>http://www.iceskysl.com/?page_id=1173</link>
		<pubDate>Sat, 28 Jan 2012 05:47:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?page_id=1173</guid>
		<description></description>
		<content:encoded><![CDATA[戏如人生，人生如戏～
我们每个人都在自导自演一部自己的电影～

我看过的电影
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=collection&amp;select=favorite&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=movie" ></script>

我想看的电影
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=wishlist&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=movie" ></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1173</wp:post_id>
		<wp:post_date>2012-01-28 05:47:09</wp:post_date>
		<wp:post_date_gmt>2012-01-28 05:47:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>movie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Music</title>
		<link>http://www.iceskysl.com/?page_id=1185</link>
		<pubDate>Sat, 28 Jan 2012 06:11:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?page_id=1185</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>我的音乐</strong>
<script type="text/javascript" src="http://www.douban.com/service/badge/IceskYsl/?show=collection&amp;select=favorite&amp;n=20&amp;columns=4&amp;picsize=medium&amp;hidelogo=yes&amp;hideself=yes&amp;cat=music" ></script>


<script src="http://img3.douban.com/js/packed_radiowidget_plain7418268585.js?doubanid=1639201&maxresults=10&color=0"></script>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1185</wp:post_id>
		<wp:post_date>2012-01-28 06:11:14</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:11:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>music</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>.NFClass red links chrome</title>
		<link>http://www.iceskysl.com/?p=1629</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1629</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1629</wp:post_id>
		<wp:post_date>2012-01-28 09:37:59</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>有感史诗般对决的澳网决赛</title>
		<link>http://www.iceskysl.com/?p=1646</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1646</guid>
		<description></description>
		<content:encoded><![CDATA[我不打网球，从来不打，也不会打，但是就像冰壶一样，我喜欢看网球～年后上班第一天的晚上窝在沙发里看书，看到电视里在直播网球，一看是澳网决赛，小德vs纳豆，第四盘～立马来了精神～

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1646</wp:post_id>
		<wp:post_date>2012-01-29 15:09:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeGear公司准备发布Ruby</title>
		<link>http://www.iceskysl.com/?p=122</link>
		<pubDate>Sun, 20 May 2007 07:05:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[CodeGear公司本周宣布他们将在2007年下半年发布针对rails的开发者Ruby集成开发环境(IDE)……　　隶属Borland软件公司的开发工具业务公司CodeGear公布了即将发布的被称为“Ruby IDE”的部分信息，其主要特征包括：    * 　　A full set of development and deployment modules including Ruby, Rails, Gems and Database.    * 　　全面支持Ruby和Rails，具有代码完成、重构、类型浏览和导航等开发特性。    * 　　创新性的管理器集成了命令行的功能和IDE、向导与代码浏览器的易用性，提高了生产率。    * 　　可视化和导航依赖可以无缝的利用各种资源进行工作，不管它们的关系、位置或格式。    * 　　完整的开发和部署模块包括Ruby、Rails、 Gems和数据库。　　Ruby IDE所包含的技术将有利于推动开源技术发展。CodeGear已经表示他们将为Ruby提供补丁及分发代码以支持Eclipse动态语言工具包的支持。　　CodeGear生产战略事务副总裁Michael Swindell 在该公司发布的一次讲话中说到：“Ruby on Rails已经成为一个重要的Web应用程序开发平台，因为它使得利用最少的代码开发丰富、数据驱动Web2.0应用更快更简单。然而，生产力背后的“魔法”对开发人员“现实世界”生产力水平上Web应用的构建，开发和维护带来了新的挑战。”　　Swindell说到：“我们新的Ruby on Rails 技术通过不再是仅仅编辑和调试Ruby脚本解决了这些挑战。它提供了一个综合的以Rails为中心的开发环境，该集成环境即适用于新手也适用于流线开发专家。同时，基于CodeGear IDE 的创新性，这是我们开发的第一个可同时吸引命令行开发者，IDE开发者和可视化开发者的工具。”来源：IT专家网]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2007-05-20 07:05:07</wp:post_date>
		<wp:post_date_gmt>2007-05-20 07:05:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codegear%e5%85%ac%e5%8f%b8%e5%87%86%e5%a4%87%e5%8f%91%e5%b8%83ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rails view部分学习笔记</title>
		<link>http://www.iceskysl.com/?p=123</link>
		<pubDate>Sun, 20 May 2007 06:30:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[rails的view部分，是在controller执行完成后，通过显式或隐式调用render 寻找相关模板文件, 如 : rhtml 和rxml,并根据其生成相关页面推送至用户端。为了减少重复性，rails提供了一些复用机制：1、 layout  任何一个controller都可以有自己的layout（跟controller同名），该layout在其所有的action中共用。如果 controller没有设定自己的layout，rails会寻找application (controller的父类)的layout，当然也可以通过程序指定layout如： layout &quot;standard&quot; 或 render(:layout =&gt; &quot;layouts/simple&quot;)也可以不使用layout用:render(:layout =&gt; false)在layout模板中需要有 ： ，  以表明实际内容的渲染位置。2、 action渲染模板缺省与action同名，也可以自己指定如：render(:action =&gt; &quot;actionname&quot;)  render(:template =&gt; 'controller/name')render(:file =&gt; 'dir/template')3、  partial除上述之外，rails还提供了局部页面模板，它用作当一些共享元件在很多页面都有使用是，可以提出成为一个局部页面模板，以提高复用性。通常把这些共享的局部模板放在目录: app/views/shared, 通过在模板中执行下面语句使用: 除了:object 还可以使用 :collection， :locals, :spacer_template 等参数另外，rails还提供组件的概念。为了提供ajax的支持， rails还提供了另外一种模板 rjs。rjs模板可以生成javascript代码。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2007-05-20 06:30:36</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:30:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-view%e9%83%a8%e5%88%86%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>取各个板块的最近发帖方法</title>
		<link>http://www.iceskysl.com/?p=124</link>
		<pubDate>Sun, 20 May 2007 06:29:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[在论坛或者别的上面程序中,首页都会显示各个论坛板块的最新的帖子,请问这个是怎么实现的,按照我的设想,应该是这个的:@posts=Post.find(:all,:order=&gt;&quot;forum_id,create_at DESC&quot; )然后在显示的时候按照forum_id来显示各自板块的最新帖子,但是这个在RHTML中怎么取出最新的帖子呢??我只能完全遍历,如下:&lt;% @posts.each do |post| %&gt;&lt;%= post.title %&gt;&lt;% end %&gt;这样就会全部显示出来,而我想要得只是每个板块的最新的那一个帖子,希望指教一二,谢了...--------1.个人参考Post.find_by_sql(&quot;select *,max(create_at) from post group forum_id&quot;2.这样也许好一点：ruby 代码   1. forums = Forum.find :all     2. @last_post_of_forum = []     3. for forum in forums     4.    @last_post_of_forum &lt;&lt; Post.find :first,:conditions=&gt;['forum_id=?',forum.id],   5.  :order =&gt; &quot;create_at DESC&quot;,:limit =&gt; 1     1. end  或者你可以在models 中设置（参考自beast）。ruby 代码   1. class Forum&lt; ActiveRecord::Base     2.    has_many :posts,:order =&gt; 'posts.created_at desc' do     3.      def last     4.         @last_post ||= find(:first, :include =&gt; :user, :limit =&gt; 1)     5.      end     6.    end     7. end     8.      9. class Post&lt; ActiveRecord::Base    10.       belongs_to :forum    11.       belongs_to :user    12. end     1. class Forum&lt; ActiveRecord::Base     2.    has_many :posts,:order =&gt; 'posts.created_at desc' do     3.      def last     4.         @last_post ||= find(:first, :include =&gt; :user, :limit =&gt; 1)     5.      end     6.    end     7. end     8.      9. class Post&lt; ActiveRecord::Base    10.       belongs_to :forum    11.       belongs_to :user    12. end  views/form/index.rhtml代码   1. &lt;td class=&quot;inv lp&quot;&gt;     2.       &lt;% if forum.posts.last %&gt;     3.         &lt;%= time_ago_in_words(forum.posts.last.created_at) %&gt;&lt;br /&gt;     4.         by &lt;strong&gt;&lt;%= h(forum.posts.last.user.display_name) %&gt;&lt;/strong&gt;     5.       &lt;% end %&gt;     6.     &lt;/td&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2007-05-20 06:29:27</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:29:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%96%e5%90%84%e4%b8%aa%e6%9d%bf%e5%9d%97%e7%9a%84%e6%9c%80%e8%bf%91%e5%8f%91%e5%b8%96%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ROR与MySQL的中文显示</title>
		<link>http://www.iceskysl.com/?p=125</link>
		<pubDate>Sun, 20 May 2007 06:26:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[一、安装数据库：1、安装5.0版本。2、在安装时选择&quot;utf-8&quot;编码。3、如果安装时未选&quot;utf-8&quot;，可用 MySQL Administrator 的 “Startup Variables”/”Advanced” 更改 Def. Char Set 为 “utf-8” 。或者编辑MySQL目录下的my.ini文件：[mysql]default-character-set=utf8SET NAMES 'utf8'[mysqld]default-character-set=utf84、安裝 MySQL Tools ：MySQL Administrator ，MySQL Query Browser5、在MySQL Query Browser中执行：SHOW VARIABLES LIKE 'character_set_%'; 查询系统的字符串均为utf8。6、建立数据库。选择MyISAM，InnoDB都可以，不过后者支持事务处理，这是它的诱人之处。7、建立表。在用MySQL Query Browser创建表时，可再次指定字符集。并可以对数据库的存储引擎进行修改。二、开发工具：使用“RedRails”。并在其“属性”选项中选择编码为&quot;utf-8&quot;格式。这样，你的所有文件就都是utf8格式了。三、修改文件：A、将public/dispatch.cgi文件的#!/path/to/ruby后面加上-Ku -rjcodeB、修改app/controller/application.rb文件。class ApplicationController &lt; ActionController::Basebefore_filter :set_charsetdef set_charset@headers[&quot;Content-Type&quot;] = &quot;text/html; charset=utf-8&quot;endend四、问题：浏览器，与代码内的中文的显示都可以了。但数据库中的表为什么还是乱码呢？此问题按james的意见，对database.yml文件进行了修改，数据库显示中文正常。你的数据库连接串也需要加上utf-8的设置，如：在database.yml中需要加上development:adapter: mysqldatabase: databaseusername: rootpassword:host: localhostencoding: utf8五、问题二：如果一个表选择MyISAM引擎时，可为一个表建立两个外键约束，但若是InnDB引擎时，建立一个外键约束还可以，但建立两个外键约束时，会提示error:150错误，创建失败。总结一下：一、在MySql这边： 将Charecter设置成为utf8二、application.rbbefore_filter :configure_charsetsdef configure_charsets@response.headers[&quot;Content-Type&quot;] = &quot;text/html; charset=utf-8&quot;# Set connection charset. MySQL 4.0 doesn’t support this so it# will throw an error, MySQL 4.1 needs thissuppress(ActiveRecord::StatementInvalid) doActiveRecord::Base.connection.execute 'SET NAMES UTF8'endend三、environment.rb$KCODE = 'u'require 'jcode']]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2007-05-20 06:26:33</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:26:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ror%e4%b8%8emysql%e7%9a%84%e4%b8%ad%e6%96%87%e6%98%be%e7%a4%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在防火墙后安装Rails</title>
		<link>http://www.iceskysl.com/?p=126</link>
		<pubDate>Sun, 20 May 2007 06:25:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[说到安装Rails,一般提到的方法就是使用rubygem，如果安装的是One-Click Installer – Windows版的ruby,里面自动附带了rubygem，如果不是，并且想用gem安装rails的话，到这里下载gem,http://rubyforge.org/frs/?group_id=126将它解压到任何目录下，到解压后的目录下，运行ruby setup.rb安装gem.如果还没有使用One-Click Installer，建议去装一个。下载地址如下：http://rubyforge.org/frs/?group_id=167然后是安装rails,官方网站上就明确教导大家用gem install rails --include-dependencies来安装rails。使用代理服务器上网的话，还可以通过指定参数 -p http://&lt;代理服务器名&gt;@&lt;端口&gt; 来进行安装。gem install rails -p http://&lt;代理服务器名&gt;@&lt;端口&gt;如果你的机器位于防火墙之后，或者有种种连接限制的环境下，则可以通过下载gem文件，用gem install ***.gem（保存到windows后会发现，gem文件的后缀实际上是.gem. tar）来进行安装。所有的gem文件都可以从以下网页下载：http://rubyforge.vm.bytemark.co.uk/gems/由于各个包之间有相互依赖的关系，所以安装的时候有安装顺序问题。不过即使安装顺序错误也问题不大，会有提示需要***.gem文件的*.*.*版本，去下载并安装就行了。保存gem文件后，转到gem文件所在目录,执行以下安装：笔者的安装顺序是1.）gem install rake-0.7.1.gem.tar2.) gem install activesupport-1.14.4.gem.tar3.) gem install activerecord-1.12.5.gem.tar4.) gem install actionpack-1.12.5.gem.tar5.) gem install actionmailer-1.2.5.gem.tar6.) gem install actionwebservice-1.1.6.gem.tar7.) gem install rails-1.1.6.gem.tar由于rake,active***.action***,rails等gem文件版本众多，笔者也不知道那个版本比较好，就全部挑了最新版进行安装。不过如果假如知道rails的1.1.4版比较稳定，可以将上面的顺序反过来，先试装rails，如果出错，出错信息里会包含所需要的gem（比如 actionwebservice）的版本，这样逆序找到所需的所有gem包之后，再顺序安装rake-&gt;active***-&gt; action**-&gt;rails就可以了。 最后成功安装rails后，可以通过rails –v来确认安装，能看到C:\&gt;rails -vRails 1.1.6恭喜你，安装rails成功了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2007-05-20 06:25:12</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:25:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e9%98%b2%e7%81%ab%e5%a2%99%e5%90%8e%e5%ae%89%e8%a3%85rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>纯CSS实现圆角效果</title>
		<link>http://www.iceskysl.com/?p=127</link>
		<pubDate>Sun, 20 May 2007 06:23:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[以前都是用背景图片来实现的,需要先切割好图片,很不方便,现在参考老外的一个做法,用纯CSS就可以实现这个效果,比起图片来,自然漂亮的多,下面是实现代码:&lt;style type=&quot;text/css&quot;&gt;#xsnazzy h1, #xsnazzy h2, #xsnazzy p {margin:0 10px; letter-spacing:1px;}#xsnazzy h1 {font-size:2.5em; color:#fff;}#xsnazzy h2 {font-size:2em;color:#06a; border:0;}#xsnazzy p {padding-bottom:0.5em;}#xsnazzy h2 {padding-top:0.5em;}#xsnazzy {background: transparent; margin:1em;}.xtop, .xbottom {display:block; background:transparent; font-size:1px;}.xb1, .xb2, .xb3, .xb4 {display:block; overflow:hidden;}.xb1, .xb2, .xb3 {height:1px;}.xb2, .xb3, .xb4 {background:#ccc; border-left:1px solid #08c; border-right:1px solid #08c;}.xb1 {margin:0 5px; background:#08c;}.xb2 {margin:0 3px; border-width:0 2px;}.xb3 {margin:0 2px;}.xb4 {height:2px; margin:0 1px;}.xboxcontent {display:block; background:#ccc; border:0 solid #08c; border-width:0 1px;}&lt;/style&gt;&lt;div id=&quot;xsnazzy&quot;&gt;&lt;b class=&quot;xtop&quot;&gt;&lt;b class=&quot;xb1&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb2&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb3&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb4&quot;&gt;&lt;/b&gt;&lt;/b&gt;&lt;div class=&quot;xboxcontent&quot;&gt;&lt;h1&gt;Snazzy Borders&lt;/h1&gt;&lt;p&gt;Based on Nifty Corners By Alessandro Fulciniti&lt;br /&gt;http://pro.html.it/esempio/nifty/&lt;/p&gt;&lt;/div&gt;&lt;b class=&quot;xbottom&quot;&gt;&lt;b class=&quot;xb4&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb3&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb2&quot;&gt;&lt;/b&gt;&lt;b class=&quot;xb1&quot;&gt;&lt;/b&gt;&lt;/b&gt;&lt;/div&gt;需要看效果的可以复制到本地,保存为HTML格式,打开就可以看到效果了..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2007-05-20 06:23:05</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:23:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ba%afcss%e5%ae%9e%e7%8e%b0%e5%9c%86%e8%a7%92%e6%95%88%e6%9e%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>去掉CSS中的链接图片的外边框</title>
		<link>http://www.iceskysl.com/?p=128</link>
		<pubDate>Sun, 20 May 2007 06:21:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[在ROR的实际开发中,遇到这么一个情况:例如凡是有图片的地方,在图片外面显示了一个边框,很不好看,找了下资料,可以这样修复:1.如果是直接用image_tag来实现的 ,则加上:border =&gt; 0,结果如下:&lt;%= link_to(image_tag(&quot;/images/btn_home.png&quot;, :border =&gt; 0), {:controller =&gt; &quot;code&quot;}) %&gt;2.如果这个图片使用的是CSS中的DIV格式,则需要添加:border: 0就可以了.归结为:when images are used in links they put a border around them.To disable this globally (as most people do) add &quot;img {border: 0}&quot; to your css.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2007-05-20 06:21:02</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:21:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8e%bb%e6%8e%89css%e4%b8%ad%e7%9a%84%e9%93%be%e6%8e%a5%e5%9b%be%e7%89%87%e7%9a%84%e5%a4%96%e8%be%b9%e6%a1%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSS控制整个框架居中显示</title>
		<link>http://www.iceskysl.com/?p=129</link>
		<pubDate>Sun, 20 May 2007 06:19:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[在整个ROR开发过程中,需要把整个框架居中,于是设置如下:body { margin:0 auto; font-family:arial; color:#000; width:900px; font-size:12pt;}按理论上这样就可以达到CSS居中控制DIV，但确不行，经过一上午的研究，终于搞定。添加3W的一段定义，应该是告诉IE按这种格式解析HTML。其实主要是因为我是手动写的代码，如果我用VS2005，这段是会自动添加的。&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2007-05-20 06:19:39</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:19:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css%e6%8e%a7%e5%88%b6%e6%95%b4%e4%b8%aa%e6%a1%86%e6%9e%b6%e5%b1%85%e4%b8%ad%e6%98%be%e7%a4%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby操作时间对象</title>
		<link>http://www.iceskysl.com/?p=130</link>
		<pubDate>Sun, 20 May 2007 06:18:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[在开发过程中,难免需要对时间对象进行一系列操作,比如统计新发的文章,统计在线会员等,如下是对时间对象的操作方法:distance_of_time_in_words(from_time, to_time = 0, include_seconds = false)Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set include_seconds to true if you want more detailed approximations when distance &lt; 1 min, 29 secs Distances are reported base on the following table:0 &lt;-&gt; 29 secs # =&gt; less than a minute 30 secs &lt;-&gt; 1 min, 29 secs # =&gt; 1 minute 1 min, 30 secs &lt;-&gt; 44 mins, 29 secs # =&gt; [2..44] minutes 44 mins, 30 secs &lt;-&gt; 89 mins, 29 secs # =&gt; about 1 hour 89 mins, 29 secs &lt;-&gt; 23 hrs, 59 mins, 29 secs # =&gt; about [2..24] hours 23 hrs, 59 mins, 29 secs &lt;-&gt; 47 hrs, 59 mins, 29 secs # =&gt; 1 day 47 hrs, 59 mins, 29 secs &lt;-&gt; 29 days, 23 hrs, 59 mins, 29 secs # =&gt; [2..29] days 29 days, 23 hrs, 59 mins, 30 secs &lt;-&gt; 59 days, 23 hrs, 59 mins, 29 secs # =&gt; about 1 month 59 days, 23 hrs, 59 mins, 30 secs &lt;-&gt; 1 yr minus 31 secs # =&gt; [2..12] months 1 yr minus 30 secs &lt;-&gt; 2 yrs minus 31 secs # =&gt; about 1 year 2 yrs minus 30 secs &lt;-&gt; max time or date # =&gt; over [2..X] yearsWith include_seconds = true and the difference &lt; 1 minute 29 seconds 0-4 secs # =&gt; less than 5 seconds 5-9 secs # =&gt; less than 10 seconds 10-19 secs # =&gt; less than 20 seconds 20-39 secs # =&gt; half a minute 40-59 secs # =&gt; less than a minute 60-89 secs # =&gt; 1 minuteExamples:  from_time = Time.now  distance_of_time_in_words(from_time, from_time + 50.minutes) # =&gt; about 1 hour  distance_of_time_in_words(from_time, from_time + 15.seconds) # =&gt; less than a minute  distance_of_time_in_words(from_time, from_time + 15.seconds, true) # =&gt; less than 20 secondsNote: Rails calculates one year as 365.25 days.[ show source ]    # File vendor/rails/actionpack/lib/action_view/helpers/date_helper.rb, line 4848:       def distance_of_time_in_words(from_time, to_time = 0, include_seconds = false)49:         from_time = from_time.to_time if from_time.respond_to?(:to_time)50:         to_time = to_time.to_time if to_time.respond_to?(:to_time)51:         distance_in_minutes = (((to_time - from_time).abs)/60).round52:         distance_in_seconds = ((to_time - from_time).abs).round53: 54:         case distance_in_minutes55:           when 0..156:             return (distance_in_minutes == 0) ? 'less than a minute' : '1 minute' unless include_seconds57:             case distance_in_seconds58:               when 0..4   then 'less than 5 seconds'59:               when 5..9   then 'less than 10 seconds'60:               when 10..19 then 'less than 20 seconds'61:               when 20..39 then 'half a minute'62:               when 40..59 then 'less than a minute'63:               else             '1 minute'64:             end65: 66:           when 2..44           then &quot;#{distance_in_minutes} minutes&quot;67:           when 45..89          then 'about 1 hour'68:           when 90..1439        then &quot;about #{(distance_in_minutes.to_f / 60.0).round} hours&quot;69:           when 1440..2879      then '1 day'70:           when 2880..43199     then &quot;#{(distance_in_minutes / 1440).round} days&quot;71:           when 43200..86399    then 'about 1 month'72:           when 86400..525959   then &quot;#{(distance_in_minutes / 43200).round} months&quot;73:           when 525960..1051919 then 'about 1 year'74:           else                      &quot;over #{(distance_in_minutes / 525960).round} years&quot;75:         end76:       enddistance_of_time_in_words_to_now(from_time, include_seconds = false)Alias for time_ago_in_words]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2007-05-20 06:18:11</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:18:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e6%93%8d%e4%bd%9c%e6%97%b6%e9%97%b4%e5%af%b9%e8%b1%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>给当前链接加上class属性</title>
		<link>http://www.iceskysl.com/?p=131</link>
		<pubDate>Sun, 20 May 2007 06:16:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[在WEB系统中，如果能给当前链接加上一些标识，那是一件比较high的事。link_to_unless_current 可以做到把当前的链接中去掉链接，不能指定我们自己的class类别，于是我们可以自己DIR，如下：写一个新的css类，例如叫：current然后把下面这个help方法加到您的help.rb中，然后在rhtml中进行引用，如下：def link_to_with_current_class_if_current(name,                                           options = {},                                           html_options = {},                                           *parameters_for_method_reference)  html_options[:class] = &quot;current&quot; if current_page?(options)  link_to(name, options, html_options, *parameters_for_method_reference)end]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2007-05-20 06:16:18</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:16:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bb%99%e5%bd%93%e5%89%8d%e9%93%be%e6%8e%a5%e5%8a%a0%e4%b8%8aclass%e5%b1%9e%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>隐藏最后四位字符</title>
		<link>http://www.iceskysl.com/?p=132</link>
		<pubDate>Sun, 20 May 2007 06:14:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[在这样一个需求中，可能会用到这个特性，需要把一个人的信用卡的最后几位（手机号码的最后几位）隐藏掉，用*代替，可以用这样来实现。。def mask_number(number)  number.to_s.size &lt; 5 ? number.to_s : (('*' * number.to_s[0..-5].length) + number.to_s[-4..-1])end 直接传递一个字符串或者数字都可以。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2007-05-20 06:14:54</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:14:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%90%e8%97%8f%e6%9c%80%e5%90%8e%e5%9b%9b%e4%bd%8d%e5%ad%97%e7%ac%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>随机产生密码.</title>
		<link>http://www.iceskysl.com/?p=133</link>
		<pubDate>Sun, 20 May 2007 06:13:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[在WEB应用中,可能需要随机产生密码,比如一个用户的密码丢了,填写自己的取回密码的油箱后,可以随机产生一个密码给他,实现代码很简单,如下:def new_random_password  self.password= Digest::SHA1.hexdigest(&quot;--#{Time.now.to_s}--#{login}--&quot;)[0,6]  self.password_confirmation = self.passwordend然后在需要的地方调用就OK了.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2007-05-20 06:13:03</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:13:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%8f%e6%9c%ba%e4%ba%a7%e7%94%9f%e5%af%86%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>保证上传文件名字的唯一性</title>
		<link>http://www.iceskysl.com/?p=134</link>
		<pubDate>Sun, 20 May 2007 06:11:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=134</guid>
		<description></description>
		<content:encoded><![CDATA[上传文件是都需要用到的功能，可以用以下代码实现：src_filename = params[:file][:name] if !src_filename.original_filename.empty?   hashed_name = Digest::SHA1.hexdigest(Time.now.to_s)   filename = &quot;#{RAILS_ROOT}/public/attachments/&quot; + hashed_name + &quot;_&quot; + src_filename.original_filename   if File.open(filename, 'w'){ |f| f.write(src_filename.read) }       attachment = Attachment.new      attachment.name = src_filename.original_filename      attachment.hashed_name = hashed_name      attachment.size = src_filename.size      comment.attachments &lt;&lt; attachment   end  end 当然，还有做一些后缀校验等。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2007-05-20 06:11:32</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:11:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bf%9d%e8%af%81%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6%e5%90%8d%e5%ad%97%e7%9a%84%e5%94%af%e4%b8%80%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>聚焦你的页面上的第一个输入框</title>
		<link>http://www.iceskysl.com/?p=135</link>
		<pubDate>Sun, 20 May 2007 06:06:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[如果可以在用户打开一个注册或者发表文章的页面，能把光标直接聚焦到第一个输入框，或许会改善不少的用户体验，我们在ROR中可以轻松实现，把如下代码粘贴到你的application.js 中，并保证在你的布局RHTML文件中包含这个js文件：&quot;javascript_include_tag :defaults&quot;.Event.observe(window, 'load', function() {  var e = $A(document.getElementsByTagName('*')).find(function(e) {    return (e.tagName.toUpperCase() == 'INPUT' &amp;&amp; (e.type == 'text' || e.type == 'password'))        || e.tagName.toUpperCase() == 'TEXTAREA' || e.tagName.toUpperCase() == 'SELECT';  });  if (e) e.focus();}); 你也可以对你特定的需求进行编辑。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2007-05-20 06:06:30</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:06:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%81%9a%e7%84%a6%e4%bd%a0%e7%9a%84%e9%a1%b5%e9%9d%a2%e4%b8%8a%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e8%be%93%e5%85%a5%e6%a1%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>把Google等Spider挡在门外</title>
		<link>http://www.iceskysl.com/?p=136</link>
		<pubDate>Sun, 20 May 2007 06:04:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候，您可能不想GOOGLE或者其他的网络蜘蛛（Spider）造访您的站点（比如一个私密的同学录或者个人财富系统等），您可以在ApplicationController 里面加入如下这个方法：class ApplicationController &lt; ActionController::Base  before_filter :disable_link_prefetching  private    def disable_link_prefetching      if request.env[&quot;HTTP_X_MOZ&quot;] == &quot;prefetch&quot;         logger.debug &quot;prefetch detected: sending 403 Forbidden&quot;         render_nothing &quot;403 Forbidden&quot;         return false      end    endend其他Spider的防范可以参考这个来实现，就是提取请求来源的参数标志，然后加以阻挡就可以了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2007-05-20 06:04:43</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:04:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%8agoogle%e7%ad%89spider%e6%8c%a1%e5%9c%a8%e9%97%a8%e5%a4%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>按时间归档的Routes写法</title>
		<link>http://www.iceskysl.com/?p=137</link>
		<pubDate>Sun, 20 May 2007 06:00:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[在博客等系统中，通常需要按时间进行归档，这个Routes可以这样写。。如下：# allow neat perma urlsmap.connect 'articles/:year/:month/:day', :controller  =&gt; 'articles',      :action =&gt; 'find_by_date',      :year =&gt; /\d{4}/, :day =&gt; nil, :month =&gt; nilmap.connect 'articles/:year/:month/:day/:title', :controller  =&gt; 'articles',      :action =&gt; 'permalink', :year =&gt; /\d{4}/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2007-05-20 06:00:07</wp:post_date>
		<wp:post_date_gmt>2007-05-20 06:00:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8c%89%e6%97%b6%e9%97%b4%e5%bd%92%e6%a1%a3%e7%9a%84routes%e5%86%99%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>find out the current url / uri in *.rhtml file</title>
		<link>http://www.iceskysl.com/?p=138</link>
		<pubDate>Sun, 20 May 2007 05:58:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[// find out the current url / uri in *.rhtml file// is quite simple with the request object&lt;% page = request.request_uri %&gt;page: &lt;%= page %&gt;// but then different urls mean the same page// (../admin = ../admin/ = ../admin/index = ..admin/index/)// and maybe the id is unwanted too (../admin/show/8)// so below is an alternative with control on which parameter is used&lt;% page = &quot;/&quot; + request.path_parameters['controller'] + &quot;/&quot; + request.path_parameters['action'] %&gt;page: &lt;%= page %&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2007-05-20 05:58:09</wp:post_date>
		<wp:post_date_gmt>2007-05-20 05:58:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>find-out-the-current-url-uri-in-rhtml-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_tag with popup for alt attribute</title>
		<link>http://www.iceskysl.com/?p=139</link>
		<pubDate>Sun, 20 May 2007 05:56:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[Firefox doesn't display a popup for the alt attribute for images. While this is according to spec, it's slightly annoying to put the same text in both the alt and the title. Put the following in your ApplicationHelper to copy the alt to the title for every image. Please don't tell me how wrong this is. I don't care.module ApplicationHelper  def image_tag(location, options)    options[:title] ||= options[:alt]    super(location, options)  endend]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2007-05-20 05:56:35</wp:post_date>
		<wp:post_date_gmt>2007-05-20 05:56:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_tag-with-popup-for-alt-attribute-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>特别留意XSS攻击</title>
		<link>http://www.iceskysl.com/?p=140</link>
		<pubDate>Sun, 20 May 2007 05:54:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[跨站点脚本攻击有一个前提：攻击者能够将他们自己编写的JavaScript脚本放进网页，并且这些页面在显示时与他们想要的cookie相关联。幸运的是，这种攻击很容易提防——不要允许任何外来的东西直接显示在页面上就行了[1]。在将任何一个字符串显示在网页上之前，一定要将其中的HTML元字符（“&lt;”和“&gt;”）转换成对应的HTML实体（“&amp;lt;”和 “&amp;gt;”），这样不管攻击者在表单或者URL参数中输入了什么文本，浏览器都只会将其显示为普通文本，不会对其做任何HTML解释。即便不考虑安全问题，你也同样应该考虑这样做，因为如果允许用户输入HTML标签，页面的布局很容易被搞乱。如果使用Textile或者Markdown这样的标记语言，一定要倍加小心，因为它们允许用户在页面上添加HTML片段。Rails提供了h(string)辅助方法（实际上是html_escape()方法的别名），该方法正是用于在Rails视图中执行上述文本替换的。在这个容易遭受攻击的网站里，负责编写“查看留言”功能的人可以将表单写成这样，以消除安全问题：&lt;div class=&quot;comment&quot;&gt;&lt;%= h(order.comment) %&gt;&lt;/div&gt;Joe问……干吗不直接扔掉&lt;script&gt;标签呢？既然问题出在用户可以把&lt;script&gt;标签插进我们显示的内容中，也许你会想，直接把这些标签找到并删除不就是最简单的解决办法吗？可惜，这不管用。浏览器在很多情况下都会执行JavaScript，情况之多也许会令你吃惊。（譬如说， onclick=属性、&lt;img&gt;标签的scr=属性都可以是JavaScript的来源。）而且这也不仅仅是JavaScript的问题 ——如果允许用户在网页上放进超链接，就可能有人用它来干坏事。你可以试着检查所有这些情况，不过相比之下，HTML转义替换的方式要更安全，而且更不容易出错。所以，请养成习惯，在把任何变量放进视图显示之前，使用h()方法对其进行转义替换——即便你认为它来自一个可以信赖的来源。同时，在阅读别人的代码时，也得留意其中使用h()方法的地方——有些人在使用h()方法时喜欢不加括号，这可能让代码变得更加难懂。有时你确实需要把包含HTML的字符串放进视图模板，此时可以使用sanitize()方法，该方法可以去除其中可能造成危险的部分。不过，你最好仔细检查sanitize()方法是否能够提供你所需要的保护：每周都有新的HTML攻击手段出现，令人防不胜防。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2007-05-20 05:54:46</wp:post_date>
		<wp:post_date_gmt>2007-05-20 05:54:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%89%b9%e5%88%ab%e7%95%99%e6%84%8fxss%e6%94%bb%e5%87%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>神奇好用的find_or_create_by</title>
		<link>http://www.iceskysl.com/?p=141</link>
		<pubDate>Sun, 20 May 2007 05:52:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[简单来说，find_or_create_by 就是先去找说数据库里面有没有这个数据，如果没有他就顺手帮你建立一个。很简单的概念，但是却又非常频繁用到。使用方式如下今天有一个 User Model 有两个 attribute ，其中一个是 name ，另外一个是 email。 如果我们想要找出一个名叫做 'abc' 的使用者，如果没这个人，就创造一个，然后将他指定到 a 这个 Object 。使用方是就是a = User.find_or_create_by_name('abc')仔细去翻 SQL Code，我们可以发现SELECT * FROM users WHERE (userss.`name` = `abc` ) LIMIT 1BEGININSERT INTO users (`name`, `email`) VALUES('abc', '')COMMIT如果想要更进一步，我们想找出名叫做 'abc' ，并且 email 是 abc@example.com 的使用者，并且将他指定到 Object a。使用方是就是a = User.find_or_create_by_name_and_email('abc' , 'abc@example.com')SQL code 就是SELECT * FROM users WHERE (users.`name` = `abc` and users.`name` = `abc@example.com`) LIMIT 1BEGININSERT INTO users (`name`, `email`) VALUES('abc', 'abc@example.com')COMMIT我果然应该多花点时间再重新阅读 Ruby on Rails 的书好了，那么方便的东西居然都不知道。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2007-05-20 05:52:24</wp:post_date>
		<wp:post_date_gmt>2007-05-20 05:52:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%a5%9e%e5%a5%87%e5%a5%bd%e7%94%a8%e7%9a%84find_or_create_by</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby对RSS(XML)的实例解析</title>
		<link>http://www.iceskysl.com/?p=102</link>
		<pubDate>Sat, 02 Jun 2007 07:25:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[有时候你可能想备份下原来的博客，或者对写的文章做些备份之类的，用RUBY很间就可以实现，下面是我的这个应用中所用的，针对用户推荐的文章，给出文章的RSS地址，然后写些自己的感受或者评论，就可以把提交的那个RSS文章取过来的。下面是代码：&lt;code&gt;    @topic.body = '引言:' + @topic.body + '&lt;br/&gt;'    feed = RSS::Parser.parse(open(params[:uri]).read, false)     @topic.body +=  '&lt;br /&gt;*来源:*' + feed.channel.title     @topic.body +=  '&lt;br /&gt;*地址:*' + feed.channel.link      feed.items.each do |item|      @topic.body += '&lt;br /&gt;*标题:*' + item.title      @topic.body += '&lt;br /&gt;*内容摘要:*&lt;br /&gt;' + item.description    end &lt;/code&gt;对了，你还需要在前面加上对库的引用，如下：require 'rss/2.0'require 'open-uri'另外，刚刚看到Javaeye上一个老兄写了一个差不多的，我就不多写了，大家可以参考下，地址如下：http://www.javaeye.com/blog/57538]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2007-06-02 07:25:45</wp:post_date>
		<wp:post_date_gmt>2007-06-02 07:25:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e5%af%b9rssxml%e7%9a%84%e5%ae%9e%e4%be%8b%e8%a7%a3%e6%9e%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Transfer Files using SSH and Ruby</title>
		<link>http://www.iceskysl.com/?p=103</link>
		<pubDate>Thu, 31 May 2007 15:55:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[老外（Matthew Bass）写了一篇文章*Automating File Uploads with SSH and Ruby.*放在InfoQ上，其说明了如何使用Net-SSH 和 Net-SFTP 库实现了使用SSH备份文件到远程主机上的Ruby实现，如果你有类似方面的需求，可以好好看看这篇文章，地址在：http://www.infoq.com/articles/ruby-file-upload-ssh-intro]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2007-05-31 15:55:46</wp:post_date>
		<wp:post_date_gmt>2007-05-31 15:55:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-transfer-files-using-ssh-and-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction to ActiveMessaging for Rails</title>
		<link>http://www.iceskysl.com/?p=104</link>
		<pubDate>Thu, 31 May 2007 05:12:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[ActiveMessaging是个感觉很不错的一个插件，通过它你可以发送、接收MO，总得来说很有诱惑力，还没有看完，下面这篇文章对这个东西做了详细的介绍，感兴趣的可以自己去看看，我就不翻译了，等我自己试用后，可以再些些心得什么的。*introduction*Rails has already planted its flag firmly in the ground of database driven web applications. *ActiveMessaging*is a Rails plugin framework that extends the borders of Rails territory by adding simplified messaging integration. With ActiveMessaging and Rails now you can loosely integrate with systems as disparate as mainframes sending MQ messages or J2EE webapps, offload processing long-running tasks, or create applications with event or message-driven architectures. As others have put it, ActiveMessaging is trying to do for messaging what ActiveRecord does for databases. This article will introduce you to ActiveMessaging and related technologies, and get you started using it in your Rails applications now.http://www.infoq.com/articles/intro-active-messaging-rails]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2007-05-31 05:12:54</wp:post_date>
		<wp:post_date_gmt>2007-05-31 05:12:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-activemessaging-for-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>清除HTML标签中的危险字符</title>
		<link>http://www.iceskysl.com/?p=105</link>
		<pubDate>Wed, 30 May 2007 05:24:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[很多时候，我们需要处理用户输入，为了适合WEB2的特性，做为开发者我们也会设计很对个途径让用户参与进去，但是“盖茨”大叔说得很对：*凡是用户的输入都是有害的！*一点不假，有时候用户可能是无意的或者一些不怀好意的用户会输入一些我们并不想让他们输入的东西，以防止破坏页面结构或者造成其他的危害（比如SQL注射和XSS攻击），所以我们需要对用户的输入认真的检验和过滤。在页面上显示的时候，我们可以选择+h()+或者+sanitize+或者+strip_tags+等等rails提供的方法进行过滤，但是这些危险的字符还适度会存在数据库，或许有一天就会引爆了呢，所以呢，最好的办法是在存入数据库的时候就做一些过滤或转换，一下一点点代码段只是一个小例子，真实世界中需要过滤和清除的危险字符是很多的，大家注意主机收集和完善，也希望大家一起来实现这个功能，做一个通用的 helper方法。&lt;code&gt;    def stripped_html(html)      # this is a copynpaste of the routine in article.rb      # so the one in article.rb can change w/o breaking this.      self.html.gsub(/&lt;[^&gt;]*&gt;/,'').to_url    end&lt;/code&gt;对于HTML标签的过滤和清除，你有什么好的方法么？欢迎分享！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2007-05-30 05:24:57</wp:post_date>
		<wp:post_date_gmt>2007-05-30 05:24:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%85%e9%99%a4html%e6%a0%87%e7%ad%be%e4%b8%ad%e7%9a%84%e5%8d%b1%e9%99%a9%e5%ad%97%e7%ac%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>理解REST软件架构</title>
		<link>http://www.iceskysl.com/?p=106</link>
		<pubDate>Mon, 28 May 2007 16:34:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[*导读：*infoq上的这篇REST构架分析的文章还是不错，从HTTP协议开始介绍了REST的构架理念，值得看看，再花点时间好好理解下REST。一种思维方式影响了软件行业的发展。REST软件架构是当今世界上最成功的互联网的超媒体分布式系统。它让人们真正理解我们的网络协议HTTP本来面貌。它正在成为网络服务的主流技术，同时也正在改变互联网的网络软件开发的全新思维方式。AJAX技术和Rails框架把REST软件架构思想真正地在实际中很好表现出来。今天微软也已经应用REST并且提出把我们现有的网络变成为一个语义网，这种网络将会使得搜索更加智能化。详细内容，请查看：http://www.infoq.com/cn/articles/rest-architecure]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2007-05-28 16:34:03</wp:post_date>
		<wp:post_date_gmt>2007-05-28 16:34:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%90%86%e8%a7%a3rest%e8%bd%af%e4%bb%b6%e6%9e%b6%e6%9e%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>日期上的迭代问题</title>
		<link>http://www.iceskysl.com/?p=107</link>
		<pubDate>Sun, 27 May 2007 13:09:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[给定一个时间点，希望得到其他时间点的解决方案如下，Ruby 的所有时间对象都可像数字一样用在值域中。Date和DateTime对象按天递增，而Time对象按秒递增：*例子*require 'date'(Date.new(1976, 7, 2)..Date.new(1976, 7, 4)).each { |x| puts x }1976-07-021976-07-031976-07-04span = DateTime.new(1776, 7, 2, 1, 30, 15)..DateTime.new(1776, 7, 4, 7, 0,0)span.each { |x| puts x } 1776-07-02T01:30:15Z 1776-07-03T01:30:15Z 1776-07-04T01:30:15Z(Time.at(100)..Time.at(102)).each { |x| puts x } Wed Dec 31 19:01:40 EST 1969 Wed Dec 31 19:01:41 EST 1969 Wed Dec 31 19:01:42 EST 1969Ruby 的Date类定义了*step*和*upto*两种方便的由数字使用的迭代器：the_first = Date.new(2004, 1, 1)the_fifth = Date.new(2004, 1, 5)the_first.upto(the_fifth) { |x| puts x } 2004-01-01 2004-01-02 2004-01-03 2004-01-04 2004-01-05*讨论*Ruby的日期对象在内部被存储为数字，并且一定范围的这种对象可被视为一定范围的数字。对于Date和DateTime对象而言，内部表示是儒略历日期：每次在一定范围的这种对象上累加一天。对于Time对象而言，内部表示是自Unix 纪元以来的秒数：每次在一定范围的Time对象上累加一秒。*Time*没有定义step和upto方法，但添加它们也很简单：class Timebq.  def step(other_time, increment) raise ArgumentError, &quot;step can't be 0&quot; if increment == 0 increasing = self &lt; other_time if (increasing &amp;&amp; increment &lt; 0) || (!increasing &amp;&amp; increment &gt; 0) yield self return end d = self begin yield d d += increment end while (increasing ? d &lt;= other_time : d &gt;= other_time) enddef upto(other_time) step(other_time, 1) { |x| yield x } endendthe_first = Time.local(2004, 1, 1)the_second = Time.local(2004, 1, 2)the_first.step(the_second, 60 * 60 * 6) { |x| puts x } Thu Jan 01 00:00:00 EST 2004 Thu Jan 01 06:00:00 EST 2004 Thu Jan 01 12:00:00 EST 2004 Thu Jan 01 18:00:00 EST 2004 Fri Jan 02 00:00:00 EST 2004the_first.upto(the_first) { |x| puts x } Thu Jan 01 00:00:00 EST 2004]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2007-05-27 13:09:33</wp:post_date>
		<wp:post_date_gmt>2007-05-27 13:09:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%a5%e6%9c%9f%e4%b8%8a%e7%9a%84%e8%bf%ad%e4%bb%a3%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Textile Editor Helper</title>
		<link>http://www.iceskysl.com/?p=108</link>
		<pubDate>Fri, 25 May 2007 05:08:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[*Textile*是一种语言标记格式，目前在ROR领域用的相当多，本着简洁好用的原则，这套规则就像PHP领域内的BBCODE一样流行，但是一直一来，都是靠手工去写这些标识符号，很不方便，也曾萌发了写一套可视化的东西来，可惜一直没有时间和精力，今天看到slate blog的blog上有关于这个的东西，感觉就是自己想实现的那个，看了下视频（http://www.youtube.com/watch?v=wQYedmbsJf4）和DEMO（http://slateinfo.blogs.wvu.edu/plugins/textile_editor_helper/demo），果然是的，试用了下，很方便，效果很好，再各种浏览器下都表现不错，推荐给大家。可以先看下它的功能：安装也挺方便的：+script/plugin install http://svn.webtest.wvu.edu/repos/rails/plugins/textile_editor_helper/+使用：bq.     # 1.  run rake textile_editor_helper:install   2. for the textarea(s) that you want to add the TEH toolbar to replace the text area tag(s) with: &lt;%= textile_editor 'object', 'field' -%&gt; just like writing a text area tag, same options   3. at the end of your form put in the following code: &lt;%= textile_editor_initialize -%&gt; Important!   4. save your view and check it out*注意*：To use Textile, you must install the RedCloth gem first.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2007-05-25 05:08:58</wp:post_date>
		<wp:post_date_gmt>2007-05-25 05:08:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textile-editor-helper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安装mongrel服务器</title>
		<link>http://www.iceskysl.com/?p=109</link>
		<pubDate>Thu, 24 May 2007 06:27:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[需要安装这个的很简单，下面就是我在自己机子上安装的时候的过程演示，比起Apache等的配置，这个东西好多了。D:\&gt;gem install mongrelSelect which gem to install for your platform (i386-mswin32) 1. mongrel 1.0.1 (mswin32) 2. mongrel 1.0.1 (ruby) 3. mongrel 1.0 (mswin32) 4. mongrel 1.0 (ruby) 5. Skip this gem 6. Cancel installation&gt; 1Install required dependency gem_plugin? [Yn]  yInstall required dependency cgi_multipart_eof_fix? [Yn]  ySuccessfully installed mongrel-1.0.1-mswin32Successfully installed gem_plugin-0.2.2Successfully installed cgi_multipart_eof_fix-2.1Installing ri documentation for mongrel-1.0.1-mswin32...Installing ri documentation for gem_plugin-0.2.2...Installing ri documentation for cgi_multipart_eof_fix-2.1...Installing RDoc documentation for mongrel-1.0.1-mswin32...Installing RDoc documentation for gem_plugin-0.2.2...Installing RDoc documentation for cgi_multipart_eof_fix-2.1...D:\&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2007-05-24 06:27:14</wp:post_date>
		<wp:post_date_gmt>2007-05-24 06:27:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e8%a3%85mongrel%e6%9c%8d%e5%8a%a1%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>如何再虚拟主机上安装gem</title>
		<link>http://www.iceskysl.com/?p=110</link>
		<pubDate>Thu, 24 May 2007 03:03:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候，虚拟主机提供商并不能按照每个用户的需求安装全部的gem,这个时候，我们就需要自己动手了，如下是我在一家虚拟主机上的安装builder的过程，主要就是先FTP把gem包放上去，然后本地安装的时候使用一个--install-dir来指定安装到的目录。&lt;code&gt;[1ster@1ster.cn@bee-00 gemdir]$ gem install  builder-2.1.1.gem --install-dir /var/***/***/1ster.cn/gemdirSuccessfully installed builder, version 2.1.1Installing ri documentation for builder-2.1.1...Installing RDoc documentation for builder-2.1.1...&lt;/code&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2007-05-24 03:03:10</wp:post_date>
		<wp:post_date_gmt>2007-05-24 03:03:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e5%86%8d%e8%99%9a%e6%8b%9f%e4%b8%bb%e6%9c%ba%e4%b8%8a%e5%ae%89%e8%a3%85gem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>初始化数据库</title>
		<link>http://www.iceskysl.com/?p=111</link>
		<pubDate>Wed, 23 May 2007 05:32:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[我们使用创建表的时候，是不想想初始化一些数据呢，比如一个默认的分类什么的，可以使用migration按照下面这个来实现： &lt;code&gt;  def self.up    create_table :words do |t|      t.column :eng, :string      t.column :pl, :string    end        Word.new(:eng=&gt;'yes', :pl=&gt;'tak').save    Word.new(:eng=&gt;'no', :pl=&gt;'nie').save    Word.new(:eng=&gt;'everything', :pl=&gt;'wszystko').save  end  def self.down    drop_table :words  end&lt;/code&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2007-05-23 05:32:41</wp:post_date>
		<wp:post_date_gmt>2007-05-23 05:32:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%9d%e5%a7%8b%e5%8c%96%e6%95%b0%e6%8d%ae%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>15步创建一个测试驱动（TDD）的Rails应用～</title>
		<link>http://www.iceskysl.com/?p=112</link>
		<pubDate>Wed, 23 May 2007 05:30:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[题外话：这个文章展示了一种测试驱动（TDD）的开发模式，针对Rails的基本步骤，原文很清楚，我就随便翻译下关键的部分，见下：原文地址：http://andrzejonsoftware.blogspot.com/2007/05/15-tdd-steps-to-create-rails.html15 TDD steps to create a Rails applicationIntroductionSeveral times recently, I have been asked how to develop a Rails application using the Test Driven Development approach. I'm not an expert here, but I've put together some notes on how to start working on a Rails application whilst being test-driven all the time.As an example I will use a word-learning web application. The simplest use case is to display a random word object (with its polish translation) from the database.Every time we refresh we want to see a different word.1. Create a new Rails applicationsrails my_appcd my_appRun tests with 'rake test'. It fails due to missing database configuration.2. Set up the databases - config/database.ymlThe code below assumes sqlite3 databases. development:   adapter: sqlite3   database: db/my_app_development.sqlite test:   adapter: sqlite3   database: db/my_app_test.sqlite'rake test' now runs fine.3. Create a Word class with a corresponding unit testscript/generate model Word4. Write a unit test for the Word class. Edit the test/unit/word_test.rb. def test_word_is_english_and_polish   word = Word.new :eng=&gt;'never', :pl=&gt;'nigdy'   assert_equal 'never', word.eng   assert_equal 'nigdy', word.pl end'rake test' now fails due to missing words table.5. Edit db/migrate/001_create_words.rbWe are using a migration here in order to create a table. It's a recommended way of dealing with database changes.  def self.up    create_table :words do |t|      t.column :eng, :string      t.column :pl, :string    end        Word.new(:eng=&gt;'yes', :pl=&gt;'tak').save    Word.new(:eng=&gt;'no', :pl=&gt;'nie').save    Word.new(:eng=&gt;'everything', :pl=&gt;'wszystko').save  end  def self.down    drop_table :words  endThe sample words that we are adding use Word.new .. lines, will be added to the development database. It's important to distinguish the 'test' and 'development' database. The first one is only used during tests. The latter is used by default when you start the application.Apply the migration with 'rake db:migrate'.'rake test' now succeeds with the following:'1 tests, 2 assertions, 0 failures, 0 errors'6. Fixtures and test for word.random. Edit word_test again.It's not easy to test a method which behaves randomly. Let's assume that it's enough to test that if we have only two words in our database then one of them should be called at least once per 10 calls.fixtures :wordsdef test_random results = [] 10.times {results &lt;&lt; Word.random.eng} assert results.include?(&quot;yes&quot;)endNote the 'fixtures :words' line. Edit the 'words.yml' file.yes: id: 1 pl: 'tak' eng: 'yes'no: id: 2 pl: 'nie' eng: 'no'This will be loaded to the test database before every run of tests.7. Implement the Word.random method  def self.random    all = Word.find :all    all[rand(all.size)]  endWarning: The code above could be slow for many words in a database (we retrieve all words only for selecting a random element). It's good enough for our needs.8. Generate the Words controller with a 'learn' actionscript/generate controller Words learn9. Write a test for the learn methodJust as there is a one-to-one ratio between unit tests and models, so there is between functional tests and controllers. The Controller's responsibility is to retrieve objects from the Model layer and pass them to the View. Let's test the View part first. We use the 'assigns' collection which contains all the objects passed to the View.def test_learn_passes_a_random_word  get 'learn'  assert_kind_of Word, assigns('word')end10. Make the Test Passdef learn  @word = Word.newend11. Write more tests in the words_controller_testHow can we test that controller uses the Word.random method? We don't want to duplicate the tests for the Word.random method.Mocks to the rescue! We will only test that the controller calls the Word.random method. The returned value will be faked with a prepared word.Let's install the mocha framework:gem install mochaNow we can use 'expects' and 'returns' methods.'expects' is used for setting an expectation on an object or a class. In this case we expect that the 'random' method will be called. We also set a return value by using 'returns' method. Setting a return value means faking (stubbing) the real method. The real Word.random won't be called. If an expectation isn't met the test fails.require 'mocha'def test_learn_passes_a_random_word  random_word = Word.new  Word.expects(:random).returns(random_word)  get 'learn'  assert_equal random_word, assigns('word')end'rake test' now fails. The Word.method wasn't called.12. Rewrite the implementationdef learn  @word = Word.randomend'rake test' now passes.13. Test that a word is displayed:Extend the existing test with assert_tag calls.def test_learn_passes_a_random_word  random_word = Word.new(:pl=&gt;'czesc', :eng=&gt;'hello')  Word.expects(:random).returns(random_word)  get 'learn'  assert_equal random_word, assigns('word')  assert_tag :tag=&gt;'div', :child =&gt; /czesc/  assert_tag :tag=&gt;'div', :child =&gt; /hello/end14. Implement the view - learn.rhtml  &lt;div&gt;    &lt;%= word.eng %&gt;    &lt;%= word.pl %&gt;  &lt;/div&gt;15. Manual testingscript/serverGo to 'http://localhost:3000/words/learn'.Refresh several times.If you want to read more about testing in Rails go to the Guide To Testing The Rails.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2007-05-23 05:30:02</wp:post_date>
		<wp:post_date_gmt>2007-05-23 05:30:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>15%e6%ad%a5%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%b5%8b%e8%af%95%e9%a9%b1%e5%8a%a8%ef%bc%88tdd%ef%bc%89%e7%9a%84rails%e5%ba%94%e7%94%a8%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>拟出的一些ROR的题目～</title>
		<link>http://www.iceskysl.com/?p=113</link>
		<pubDate>Tue, 22 May 2007 16:27:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[题外话：	学习ROR这么久了，也没有时间仔细整理下到底学会了什么，今天一个朋友想招几个ROR的程序员，让我帮忙出几个题目，结合自己学的，也邀请了对岸的兄弟CFC帮忙，一起整理了以下这些问题，可能还不够严谨，有好的建议请提哈！有时间的可以对照着问题看看自己的答案是什么，欢迎留言！一、热身题1、ROR是什么的简写？2、你多大了，从你接触ROR到现在大概有多少时间了？3、你学习ROR之前还学习过哪些语言？为什么会来学ROR呢？4、你接触ROR后，被它的哪些特性（或者说哪些和别的语言不一样的地方）打动过呢？5、列举几个你了解的开源ROR项目？他们各自都是做什么的？二、基础题6. 现有一个User Model，我想要查ID为10, 30, 36三笔数据，请问如何做？7. 现有一个User Model，内有username、password两个字段，我想要做User Login的功能，使用哪个方法可以用最方便的方式去做Query动作？8. 网友们传来的数据总是不安全的！我想要个别处理params[:info](params[:info]内有nickname、email、body三个子参数)，请问我可以怎样在存入Database前，过滤各个元素？ 9. 请用Iterator来为User Model新增一笔数据吧(字段有：username, password, nickname, email, url)。10. ROR中有一些奇特的约定，尽自己的能力列举你认为ROR中很方便的约定吧？并简要说明怎么用，越多越好。三、应用题目11、对于一个用户输入的Email地址，我该怎么检查它，以最大限度的保证该Email地址的可用性及其真实性呢？给出你的思路和ROR实现的代码段。12、我想要这么一个效果，请问怎么做，我有一个大分类TYPE1，还有个小分类category，如如何实现级联效果，比如我点选第一个下拉框中的一个值，对应更新后面那个和他级联的下拉框中的值。13、我有一个数据表Topic，包含字段有（id,title,body,created_at,owner, category_id），请问你怎么就这个表生成一全量的RSS订阅（比如我想要的订阅地址为:/feed/index）和一个针对每个category的RSS订阅（比如我想要的订阅地址为:/feed/category/rails订阅rails的RSS，rails是分类表中的一个）。14、目前，经理想知道从A地址（例如10.1.3.1）到B地址（例如211.54.2.45）的网络状况，让你尽快的想个办法，可以指定源地址和目标地址，并且可以指定发送包的大小或者需要发送的文件，让你计算出发送完需要多少时间。你该怎么做呢？15、你晓得Trackback(引用)功能么？不知道的话可以上网上搜索下，请简要说明下Trackback的特点和实现原理；你认为目前这种Trackback有什么不足或者缺陷么？如果有，请问有什么办法改良或者完善么？给出你的Trackback实现代码片段（包括。四、拓展题16、你是怎么认识RESTful 的，你认为它的精髓在哪里，谈谈你是怎么认识这个东西的，它可以带给我们什么好处。17、你实际部署过Rails应用么？你会选择什么做为你的服务器；如果你是买的一个虚拟主机空间，你想跑几个Rails应用，该怎么部署呢？谈谈您的部署经验和好的方法以及您的维护经验～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2007-05-22 16:27:43</wp:post_date>
		<wp:post_date_gmt>2007-05-22 16:27:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8b%9f%e5%87%ba%e7%9a%84%e4%b8%80%e4%ba%9bror%e7%9a%84%e9%a2%98%e7%9b%ae%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SuperRedCloth介绍～</title>
		<link>http://www.iceskysl.com/?p=114</link>
		<pubDate>Tue, 22 May 2007 05:20:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[SuperRedCloth项目就是开发中的RedCloth，也就是RedCloth 4。目标是尽可能地增强RedCloth：   1. 令到RedCloth比原来小2/3   2. 一般情况下将会快10倍以上   3. 消除Textile格式中的二义性安装：$ gem install superredcloth --source http://code.whytheluckystiff.net使用：1.首先在helpers/application_helper.rb 中覆盖textilize方法（这个方法在Rails 1.2中使用的是RedCloth），我们覆盖它，如下：&lt;code&gt;  def textilize(text)    require_library_or_gem &quot;superredcloth&quot; unless Object.const_defined?(:SuperRedCloth)    if text.blank?      &quot;&quot;    else      textilized = SuperRedCloth.new(text)      textilized.to_html    end  end # def textilize&lt;/code&gt;2.然后在VIEW可以直接使用，如：&lt;code&gt;&lt;%= textilize @page.body %&gt;&lt;/code&gt;官方主页：http://code.whytheluckystiff.net/redcloth/wiki/SuperRedCloth]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2007-05-22 05:20:43</wp:post_date>
		<wp:post_date_gmt>2007-05-22 05:20:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>superredcloth%e4%bb%8b%e7%bb%8d%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>calendar_helper.rb</title>
		<link>http://www.iceskysl.com/?p=115</link>
		<pubDate>Tue, 22 May 2007 05:13:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[在博客或者其他WEB开发中，有的时候可能想显示一个日历表格，ROR下有个老兄也写了一个helper，功能比较完善，可以按照自己的喜好进行定制，其默认需要的参数是年、月，其他都是定制参数，比如CSS等，代码如参考（http://www.jvoorhis.com/downloads/calendar_helper.rb）使用的时候放在helper里面就可以了。  # Example usage:  #   calendar(:year =&gt; 2005, :month =&gt; 6) # This generates the simplest possible 作者主页：http://www.jvoorhis.com/pages/calendar-helper]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2007-05-22 05:13:27</wp:post_date>
		<wp:post_date_gmt>2007-05-22 05:13:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calendar_helper-rb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get XML or YAML output of your data quickly</title>
		<link>http://www.iceskysl.com/?p=116</link>
		<pubDate>Mon, 21 May 2007 15:27:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[It's not necessary to create a Builder .rxml template to export data as XML. ActiveRecord has a to_xml method that will output the object or result set in XML format. It works with simple objects, to complete tables with includes. Examples:User.find(:all).to_xmlPost.find(:all, :include =&gt; [:comments]).to_xmlYAML is also supported, by using to_yaml instead.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2007-05-21 15:27:24</wp:post_date>
		<wp:post_date_gmt>2007-05-21 15:27:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-xml-or-yaml-output-of-your-data-quickly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>给你的ROR配置一些通用的常量</title>
		<link>http://www.iceskysl.com/?p=117</link>
		<pubDate>Mon, 21 May 2007 14:41:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[这个需求应该是来自于对一些常量的配置和修改上，比如网站的title等等，如果你想做出一个比较通用的WEB系统，那么这个常量的可修改性就是个不可少的需求！我们的做法是可以放在数据库里面，然后去读取，这个方法显然是可行的，但是我们还可以这么来作，放在一个YAML文件里，把你需要的变量写在这个文件里面，需要注意格式的正确性，然后就可以在程序中引用了，步骤如下：1.在你的/config/environment.rb的上方写上：require 'yaml'2.在你的/config/environment.rb的下发写上：  YOUR_APP_CONFIG = YAML::load(File.open(&quot;#{RAILS_ROOT}/config/appconfig.yml&quot;))3.然后你就可以在程序里面进行变量的引用了，如下：  YOUR_APP_CONFIG&quot;variable&quot;]如果想改变，只要修改这个文件就OK；如果想增加，则只需要在这个文件里面再增加一个变量就好了。。是不是很方便呀～～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2007-05-21 14:41:49</wp:post_date>
		<wp:post_date_gmt>2007-05-21 14:41:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bb%99%e4%bd%a0%e7%9a%84ror%e9%85%8d%e7%bd%ae%e4%b8%80%e4%ba%9b%e9%80%9a%e7%94%a8%e7%9a%84%e5%b8%b8%e9%87%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>说说Blog中的Trackback(引用)功能</title>
		<link>http://www.iceskysl.com/?p=118</link>
		<pubDate>Mon, 21 May 2007 13:54:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[什么是Trackback呢？简单说来，Trackback是网站与网站之间互相通告的一种方法。它能让甲对乙说：“这篇文章可能是你感兴趣的”，要实现这一动作，甲向乙发送一个 Trackback Ping（引用通告）即可。在这种情况下，一个ping就是一条从一个web服务器发送到另一个服务器的短消息（a small message）。Trackback Ping是由Moveable Type发明的规范，他们说Trackback是：&lt;blockquote&gt;&quot;a framework for peer-to-peer communication and notifications between web sites&quot;。&lt;/blockquote&gt;这里是他们的Trackback技术规范文档：http://www.movabletype.org/docs/mttrackback.html举个例子来说明一下。比如B在A的Blog中看了一篇我感兴趣的文章，对这篇文章B自己有一些看法，如果按照传统BBS的做法，B需要在A这篇文章下发表自己的评论，但这样做的话B的文字只能存在于A的网站上，B无法再维护自己的这篇评论。另一个情况是B在自己的Blog中也在写一篇相类似的文章，B希望A也能来看一看B的这篇，传统BBS的习惯还是得到A的文章下发一篇回复，把B的URL贴过去。但有了Trackback Ping，我们的Blog不再需要这样做。Blog 跟BBS有点重要的不同，Blog是一种个人创作，用Blog来发表自己的东西，保存自己的东西，即使是对他人Blog文章的评论也要在自己的Blog中永久保留下来。通过Trackbak，我就可以在自己的Blog中发表文章，同时把自己这篇文章的URL地址Ping到A的那篇文章上去。这样，所有阅读A文章的人也能通过Trackback顺藤摸瓜地来我的Blog看我的文章。所以，当我们的Blog有了Trackback Ping功能，那么谁都可以通过Trackback Ping来发表意见和评论了。这样，多家Blog网站就通过相关话题而联接起来。各种评论在Internet上相互连接而织成一张大网。因此，可以说， Trackback创造出了Blog与BBS、Diary完全不同的文化，Blog的世界通过Trackback而变成真正的无限互连。作为Blogger，让我们习惯于这样讨论问题和做评论吧：把内容写在自己的Blog里面，Trackback Ping到别人的Blog。这个概念是论坛模式里从来没有的，称为Remote Commenting。如何在Blog中实现Trackback？在有Trackback功能的Blog系统中，每篇Blog文章都有两个URL，一个是要访问这篇文章所使用的URL，另一个就是Trackback Ping URL（引用通告地址），它是用来接受来自其他Blog网站Trackback Ping的程序。当我发表文章的时候，想要通知鱼头的话，只需要把鱼头那篇文章的Trackback Ping URL贴到我这边文章中来，我提交文章时，系统就会按照这个URL发送一个Ping给A的那篇文章。而鱼头则将在自己的文章下看到类似这样的一个引用通告：标题: 1ster的文章来自: 1ster的Blog摘要: 1ster的文章内容摘要...地址: http://1ster的文章地址这个Trackback Ping是通过标准的HTTP协议从我的Blog发送到鱼头的Blog的，我的Blog发送一个POST格式的HTTP请求到A那篇文章的 Trackback Ping URL。这个请求的content type是application/x-www-form-URLencoded，它大概是这个样子的：POST http://A文章的TrackbackPingURLContent-Type: application/x-www-form-URLencodedtitle=1ster的文章&amp;url=http://1ster的文章地址&amp;excerpt=1ster的文章摘要&amp;blog_name=1ster的Blog早期版本的Trackback规范中，Ping是GET方式的HTTP请求，现在不再支持GET方式，只能用POST方式。参数包括：    * title - 文章的标题    * excerpt - 文章的摘要。在Movable Type系统中，如果摘录信息超过255个字符将会被截断为252个字符，并在后面增加...三个字符    * url - 文章的永久连接。象其它永久连接一样，这个连接应可能准确地在页面中定位文章的入口，因有疑问时这个链接会用到    * blog_name - 发表文章的blog的名称在上述的参数中只有url是必须的。如果title没有提供，url的值将被用作标题。当我的Blog发出这个Trackback Ping后，将接收一个简单的XML格式应答，如果Ping成功，那么应答的格式如下：&lt;blockquote&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;&lt;response&gt;&lt;error&gt;0&lt;/error&gt;&lt;/response&gt;&lt;/blockquote&gt;而失败应答的格式为：&lt;blockquote&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;&lt;response&gt;&lt;error&gt;1&lt;/error&gt;&lt;message&gt;The error message&lt;/message&gt;&lt;/response&gt;&lt;/blockquote&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2007-05-21 13:54:26</wp:post_date>
		<wp:post_date_gmt>2007-05-21 13:54:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%af%b4%e8%af%b4blog%e4%b8%ad%e7%9a%84trackback%e5%bc%95%e7%94%a8%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>witter发布Gem包提供witter主要功能</title>
		<link>http://www.iceskysl.com/?p=119</link>
		<pubDate>Mon, 21 May 2007 05:17:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[witter越来越火了，这个提供IM服务的应用，越来越受到大家的关注，越来越多的人加入其中，昨天台湾的一个朋友还说对witter的这个IM功能很感兴趣，想了解是怎么实现的，呵呵～witter通过网络或者SMS（短消息）使得你和自己的朋友取得及时沟通。你有没有考虑过给自己的WebApp加上这样的功能呢，现在借助witter发布的Gem包，可以很方便的实现这个功能了，更多说明请到http://www.rubyinside.com/twitter-gem-twitterize-your-ruby-application-498.html查看，我这里稍微说下用法，如下：# to post an update to twitter$ twitter post &quot;posting from the twitter gem&quot;# to see you and your friends timeline$ twitter timeline命令行接口很简单，支持YAML配置，也支持Ruby的API：twit.update('me got dizzy this time')# Show your friends' statustwit.timeline(:friends).each do |s|  puts s.text, s.user.nameendUse RubyGems as usual to install it:gem install twitter --include-dependenciesps：One note, the gem uses hpricot to parse the xml and there is an annoying bug that reared it's head in the 0.5+ versions (it doesn't like xml elements named text). That said, be sure to sudo gem install hpricot --source http://code.whytheluckystiff.net -v 0.4.86 and uninstall any hpricot versions 0.5+.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2007-05-21 05:17:49</wp:post_date>
		<wp:post_date_gmt>2007-05-21 05:17:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>witter%e5%8f%91%e5%b8%83gem%e5%8c%85%e6%8f%90%e4%be%9bwitter%e4%b8%bb%e8%a6%81%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简单的require写法</title>
		<link>http://www.iceskysl.com/?p=120</link>
		<pubDate>Mon, 21 May 2007 04:58:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[当你需要加载多个require的时候，是不是写了很多的require ×××什么的呢，就像JAVA一样，前面一对的import一样，其实我们可以这样写，是不是更方便快捷呢～%w(uri net/http yaml rubygems hpricot active_support).each { |f| require f }如上，少了不少字符吧～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2007-05-21 04:58:52</wp:post_date>
		<wp:post_date_gmt>2007-05-21 04:58:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ae%80%e5%8d%95%e7%9a%84require%e5%86%99%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在ROR中实现防垃圾的Trackback思路</title>
		<link>http://www.iceskysl.com/?p=121</link>
		<pubDate>Mon, 21 May 2007 02:37:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Trackback可谓是WEB2.0的一个特征吧，Trackback的特征和好处我就不多说了，Trackback大部分人刚接触到肯定会觉得很迷惑，不知道怎么用。其实它也没有那么神秘，以下介绍一下我对Trackback的理解。 简单说trackback是一个点对点通信和网站间互相通告的框架。这句话也讲不明白. 那就拿实例来说: &lt;blockquote&gt;A在他的博客A.com上写了一篇文章 支持Trackback 引用地址为:http://a.com/trackback.php?id=1 B想写一篇文章回复A,惯用方法是我在A文章的下面写评论,但是Trackback带来了新的革命:B可以把文章写在自己的blog上,而同时又能在A的文章下面显示B这篇文章的部分内容。这就是利用了Trackback,那么A想要看别人评论的全文就要到B的网站上去，这样就带来了网站之间的互通,这才是Blog的精髓。虽然在国内大部分还习惯用comment的方式。 Trackback与comment不同的地方在于,你可以更好的控制自己的文章,按规定当你在你网站修改文章的时候,A网站上的你的内容同步改动.甚至删除 &lt;/blockquote&gt;实现Trackback的原理也很简单，但是正是因为这种简单的机理，使得很多垃圾，造成“垃圾泛滥”，我想按照下面说得方法应该可以防范：1.加验证码2.编码－解码或者把这两个结合起来，在RUBY中可以使用base64编码，如下：decode64(str)    对经过Base64编码的str字符串进行解码。encode64(str)    对str字符串进行Base64编码。这样在生成Trackback地址的时候，可以把指定如下几个参数：1.私有的Key,在APP的配置文件（可以使用YML或者数据库）中指定一个私人的Key,然后生成Trackback地址时用这个key＋文章创建时间，按照一定的规则截取，然后加上文章的ID以及编码规则（UTF-8、GBK等）组合一个字符串，再BASE64编码下，赋给一个指定的变量(比如code），/trackback/code=MjcyCXV0Zi04CTExNzkzNTkzNjQJMA%3D%3D，接收的时候先encode64解码，再验证Key等是不是正确的，如果正确的，就入库，否则抛弃。PS:还可以进一步，对这个地址先不显示，如果读者需要这个，就按照页面上的点一个“点击显示引用URL”，然后用个AJAX实现，就不怕网络爬虫了～以上是我的思路，页是参考别人的一些思路综合起来的，希望对大家有用，如果你有更好的想法，反应和我交流～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2007-05-21 02:37:36</wp:post_date>
		<wp:post_date_gmt>2007-05-21 02:37:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ror%e4%b8%ad%e5%ae%9e%e7%8e%b0%e9%98%b2%e5%9e%83%e5%9c%be%e7%9a%84trackback%e6%80%9d%e8%b7%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog插件开发指南</title>
		<link>http://www.iceskysl.com/?p=82</link>
		<pubDate>Sun, 17 Jun 2007 16:14:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[一、什么是1stlog 1stlog是由1sters.com开发的一款基于RubyOnRails的博客系统，主要针对中国用户，符合中国用户的使用习惯，功能强大，结构合理，易于扩展和定制，是一款很有前景的博客系统。二、为什么要开发插件插件是对原有功能的扩充，以集成实现更多的更有特色的功能，主版本保证可扩展性，提供扩展的方法，制定开发规范和流程，方便不同需求的人可以快速的开发自己需要的插件；也可以把自己的插件分享给别人使用，甚至被1stlog开发官方收录，进入正式版本，为开源的RoR做出自己的贡献。三、怎样开发插件 1stlog是基于RubyOnRals开发，严格遵循MVC构架思想，本着数据层和表现出分离的原则，使用RoR的组件原理，可以很方便的开发插件，且整合使用简单，下面将就一个具体的例子说明如何进行插件开发。四、插件开发实例解析 目标：下面将实例说明如何进行插件的开发，我们的目标是使用Youtube提供的API，结合一组Youtube的Ruby代码lib，在1stlog上扩充一个展示您在Youtube上视频的小插件，该插件可以根据提供的USERNAME取其在Youtube上收藏的影片。详细指南请参考附件，或者到如下两个URL查看：http://code.google.com/p/1stlog/wiki/CreatePluginFor1stlogGuidehttp://docs.google.com/View?docid=dhf86kr9_28g7jthk]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2007-06-17 16:14:03</wp:post_date>
		<wp:post_date_gmt>2007-06-17 16:14:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog%e6%8f%92%e4%bb%b6%e5%bc%80%e5%8f%91%e6%8c%87%e5%8d%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog演示环境搭建好了</title>
		<link>http://www.iceskysl.com/?p=83</link>
		<pubDate>Sat, 16 Jun 2007 00:46:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[在bluehost上搭建了一套演示环境，欢迎大家使用，体验，谢谢～演示地址：&quot;1stlog&quot;:http://1stlog.1sters.com/管理登录：&quot;1stlogAdmin&quot;:http://1stlog.1sters.com/index/login登录帐号：1stlog登录密码：1stlog请大家不要修改密码，数据库定时清空，谢谢～如果发现哪里用着不爽或者bug，欢迎提出，我尽快修改，谢谢～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2007-06-16 00:46:54</wp:post_date>
		<wp:post_date_gmt>2007-06-16 00:46:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog%e6%bc%94%e7%a4%ba%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba%e5%a5%bd%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在bluehost上部署ROR应用1stlog.</title>
		<link>http://www.iceskysl.com/?p=84</link>
		<pubDate>Sat, 16 Jun 2007 00:40:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[前段时间搞了个bluehost，看他支持ror，一直不敢用，今天部署了套1stlog，还真不简单，总结下下遇到的困难和应对的措施。*1.绑定域名*我把1stlog.1sters.com这个二级域名绑定到bluehost上，很快就生效了。*2.添加域名绑定*把前面我指向的1stlog.1sters.com绑定进去。*3.建立数据库和用户*在bluehost的控制面板上创建MYSQL数据库和用户，注意要给该用户赋权。OK，准备好了，我们开始安装吧。*4.dispatcher配置*首先遇到的就是dispatcher路径（/public/dispatch.rb）Set dispatcher path in &quot;typo/public/dispatch.rb&quot; 把#require &quot;dispatcher&quot; 修改为：#require  &quot;/usr/local/lib/ruby/gems/1.8/gems/rails-1.1.4/lib/dispatcher&quot;*5.遇到的是数据库编码*由于必须使用UTF-8，而在它的控制面板里面创建的数据库默认是latin1_swedish_ci的，找了一会，发现可以在phpMyadmin里面进行修改（幸好还有phpmyadmin）。点上面的“操作”标签，然后选择最下面的“整理”，选择utf8_unicode_ci就可以了。*6.配置FastCGI*紧接着来的是FastCGI的配置（在public/.htaccess），需要修改如下几个地方：AddHandler fastcgi-script .fcgi RewriteRule ^(.*)$ dispatch.fcgi  [QSA,L]添加一行：SetEnv RAILS_ENV production *7.dispatch.fcgi修改*确认#!/usr/bin/env ruby*8.然后给dispatch.fcgi执行权限*。这个很容易遗忘。。*9.初始化数据库*rake db:migrate VERSION=0*10.安装RedCloth*这个竟然默认是没有安装的，只能自己来装了，先下载（wget或者你用FTP传上去）gzip -d RedCloth-3.0.4.tar.gz  --解压tar xvf RedCloth-3.0.4.tar  --解tarmv RedCloth-3.0.4 redcloth --改个名字（可以不做）然后需要自己加载：在environment.rb里面加入：  config.load_paths += %W(    vendor/redcloth/lib  ).map {|dir| &quot;#{RAILS_ROOT}/#{dir}&quot;}.select { |dir| File.directory?(dir) }require 'redcloth'*11.把log和tmp目录及其子目录属性修改为777*恩，差不多了吧，应该没有忘记什么吧:)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2007-06-16 00:40:29</wp:post_date>
		<wp:post_date_gmt>2007-06-16 00:40:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8bluehost%e4%b8%8a%e9%83%a8%e7%bd%b2ror%e5%ba%94%e7%94%a81stlog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.1sters.com</wp:comment_author_url>
			<wp:comment_author_IP>116.30.130.208</wp:comment_author_IP>
			<wp:comment_date>2007-11-18 22:37:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[前段时间搞了个bluehost，看他支持ror，一直不敢用，今天部署了套1stlog，还真不简单，总结下下遇到的困难和应对的措施。
*1.绑定域名 *
我把1stlog.1sters.com这个二级域名绑定到bluehost上，很快就生效了。

*2.添加域名绑定*
把前面我指向的 1stlog.1sters.com绑定进去。

*3.建立数据库和用户*
在bluehost的控制面板上创建MYSQL数据库和用户，注意要给该用户赋权。

OK，准备好了，我们开始安装吧。

*4.dispatcher配置*
首先遇到的就是dispatcher路径（/public/dispatch.rb）
Set dispatcher path in "typo/public/dispatch.rb"
把#require "dispatcher" 修改为：#require "/usr/local/lib/ruby/gems/1.8/gems/rails-1.1.4/lib/dispatcher"

*5.遇到的是数据库编码*
由于必须使用UTF-8，而在它的控制面板里面创建的数据库默认是latin1_swedish_ci的，找了一会，发现可以在 phpMyadmin里面进行修改（幸好还有phpmyadmin）。
点上面的“操作”标签，然后选择最下面的“整理”，选择 utf8_unicode_ci就可以了。

*6.配置FastCGI*
紧接着来的是FastCGI的配置（在public/.htaccess），需要修改如下几个地方：
AddHandler fastcgi-script .fcgi
RewriteRule ^(.*)$ dispatch.fcgi [QSA,L]
添加一行：SetEnv RAILS_ENV production

*7.dispatch.fcgi修改*
确认#!/usr/bin/env ruby*

8.然后给dispatch.fcgi执行权限*。这个很容易遗忘。。

*9.初始化数据库*rake db:migrate VERSION=0

*10.安装RedCloth*
这个竟然默认是没有安装的，只能自己来装了，先下载（wget或者你用FTP传上去）gzip -d RedCloth-3.0.4.tar.gz
--解压tar xvf RedCloth-3.0.4.tar
--解tarmv RedCloth-3.0.4 redcloth
--改个名字（可以不做）

然后需要自己加载：在environment.rb里面加入：
config.load_paths += %W( vendor/redcloth/lib ).map {|dir|
"#{RAILS_ROOT}/#{dir}"}.select { |dir|
File.directory?(dir) }
require 'redcloth'

*11.把log和tmp目录及其子目录属性修改为777*恩，差不多了吧，应该没有忘记什么吧:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby版的YouTube库接口</title>
		<link>http://www.iceskysl.com/?p=85</link>
		<pubDate>Fri, 15 Jun 2007 08:52:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[YouTube的快速窜红，得到很多人的喜爱，加上被google收购以后，直觉告诉我们，肯定会推出类似google其他产品的API，果不其然，马上就推出了YouTube REST API，然后在rubyforge看到支持这个API的Ruby库，试了下，很简单好用，如下：1.先要安装% gem install youtubeBulk updating Gem source index for: http://gems.rubyforge.orgInstall required dependency xml-simple? [Yn]  ySuccessfully installed youtube-0.8.6Successfully installed xml-simple-1.0.11Installing ri documentation for youtube-0.8.6...Installing RDoc documentation for youtube-0.8.6...2.申请developer id到http://youtube.com/my_profile_dev申请一个developer id。3.使用如下展示的是他的一个例子，很简单哈～&lt;code&gt;  require 'rubygems'  require 'youtube'  youtube = YouTube::Client.new 'DEVELOPER_ID'  profile = youtube.profile('br0wnpunk')  puts &quot;age: &quot; + profile.age.to_s  favorites = youtube.favorite_videos('br0wnpunk')  puts &quot;number of favorite videos: &quot; + favorites.size.to_s  friends = youtube.friends('paolodona')  puts &quot;number of friends: &quot; + friends.size.to_s  puts &quot;friend name: &quot; + friends[0].user  videos = youtube.videos_by_tag('iron maiden')  puts &quot;number of videos by tag iron maiden: &quot; + videos.size.to_s  videos = youtube.videos_by_user('whytheluckystiff')  puts &quot;number of videos by why: &quot; + videos.size.to_s  puts &quot;title: &quot; + videos[0].title  videos = youtube.featured_videos  puts &quot;number of featured videos: &quot; + videos.size.to_s  puts &quot;title: &quot; + videos[0].title  puts &quot;url: &quot; + videos[0].url  puts &quot;embed url: &quot; + videos[0].embed_url  puts &quot;embed html: \n&quot; + videos[0].embed_html  details = youtube.video_details(videos[0])  puts &quot;detailed description: &quot; + details.description  puts &quot;thumbnail url: &quot; + details.thumbnail_url&lt;/code&gt;附件是这个lib包。更多信息请参考：RDOC ： http://youtube.shanesbrain.net/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2007-06-15 08:52:05</wp:post_date>
		<wp:post_date_gmt>2007-06-15 08:52:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e7%89%88%e7%9a%84youtube%e5%ba%93%e6%8e%a5%e5%8f%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog Version1.0.0发布啦！</title>
		<link>http://www.iceskysl.com/?p=86</link>
		<pubDate>Wed, 13 Jun 2007 15:59:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[很高兴的和大家说，做为*1sters.com*的第二个开源产品*1stlog*终于发布了，谢谢这么多朋友的关心和鼓励，谢谢你们大家的帮助，谢谢所有帮助、鼓励、支持我的朋友们!做为第一个对外发布版，从规划到实现，测试，到一步步的修正bug，一个来月的*“业余时间”*或许真的不算多（我白天是需要上班的，都是下班晚上写的代码），并且经常有其他的事情打扰，说真的，时间真的比较紧张。其实开源是需要勇气的，特别是对于我这样还没有多少经验和资本的时候，开源真的需要勇气，有的时候真的怕一个用户接二连三的抱怨或者漫骂，虽然做为开源的东西，做为作者的我并没有多少责任去满足每个用户的需求，但是从一个产品的开发者角度，我还是害怕大家用那种鄙视的目光，或者那种类似“就他也配开源”等等的话语，但是无所谓了，从开始规划1stlog我就打算开源了，我不能失约于关心我的朋友们。于是，狠狠心，咬咬牙，开源吧...或许还有很多的不足，还有很多的地方需要优化，很多地方需要调整和优化，等不及了，做为第一个版本，我想现在的功能已经足够丰富了。持续的改进，修复，优化将在后续版本继续吧。如果您使用或者借鉴了1stlog，如果有时间，可以发个mail什么的鼓励、感谢下我，也算对我心灵的犒劳；如果你有什么建议、意见，或者对1stlog有什么看法，也欢迎发Email给我。也可以到我的公司的网页上提建议:www.1sters.com..我的邮箱是：+iceskysl@gmail.com+马上就到6.14了，一个很特殊的日子，1stlog开源了...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2007-06-13 15:59:51</wp:post_date>
		<wp:post_date_gmt>2007-06-13 15:59:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog-version1-0-0%e5%8f%91%e5%b8%83%e5%95%a6%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog Version1.0.0安装部署文档</title>
		<link>http://www.iceskysl.com/?p=87</link>
		<pubDate>Wed, 13 Jun 2007 08:00:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[1stlog的安装部署文档，是基于51boo提供的空间做的演示，如果你是使用51boo的用户应该比较容易理解，如果你还没有ROR空间，建议你去51boo.com看看有没有合适你的产品，如果你有自己的服务器，那就不用我教了，部署方法和其他Rails部署基本上是一致的。需要提醒大家的是，搭建1stlog需要如下基本条件：  mysql4.0及其以上版本数据库  rails1.2.3及其版本  ruby1.8.4及其以上版本  RedCloth  RMagick详细的安装部署步骤在附件，请先自行下载查看，源文件将在晚上24点提供下载，请关注！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2007-06-13 08:00:58</wp:post_date>
		<wp:post_date_gmt>2007-06-13 08:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog-version1-0-0%e5%ae%89%e8%a3%85%e9%83%a8%e7%bd%b2%e6%96%87%e6%a1%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog Version: 1.0.0即将发布！</title>
		<link>http://www.iceskysl.com/?p=88</link>
		<pubDate>Tue, 12 Jun 2007 05:43:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[很高兴的告诉大家，1stlog的第一个版本马上就可以发布了，从规划到实现、测试大概有一个月的时间，谢谢朋友们的支持和帮助，谢谢！*1stlog诞生的背景*大家知道，PHP的领域中，被广泛使用的博客系统应该是WP了；Rails版本的blog系统现在用的比较多的应该是typo和simplog了，这两个也有不少人使用了。但是我用了后觉得不是很符合国人的习惯，很多地方用着感觉很别扭，于是打算自己动手写一个用着习惯的blog系统。*1stlog规划*做为一个blog系统，需要很好的通用性和易用性，我们平衡两者的关系，通过研究现有blog的特点，规划了1stlog的大部分功能，简单灵活、可扩展。*1stlog的命名*我们是1sters.com团队开发设计开发的，又是一个blog系统，所以定其名字为1stlog，很合理，不是么，:)*1stlog的功能点*功能点还是很多的，包含但不限于以下列举的这么多。 * 安装方便，不需要重新编译 * Type / Categories / Tags 的管理 * 日志的发表 编辑 删除 * 评论及其评论管理 * 支持Textile可视化和tiny_mce可视化编辑器（简单、高级两种) * Trackback 及其防spider以及灌水机 * 基于Ajax的search和Trackback地址生成 * 文章 / 评论的feeds * 按照分类或者性质的feeds * 单篇文章的feeds输出 * 个性化展示配置 * 自定义显示模板 * 验证码 * 上传下载文件 * 选择自己需要的显示模块 * 可配置每页显示的篇数等显示数目 * 可以选择自己喜欢的显示模板 * 用户管理  * 友情链接 * 定时备份数据库等等等。。。*搭建1stlog需要* * mysql4.0及其以上版本数据库 * rails1.2.3及其版本 * ruby1.8.4及其以上版本 * RedCloth * RMagick*演示*www.1ster.cn就是以这个系统搭建的。*安装演示*稍后给出～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2007-06-12 05:43:15</wp:post_date>
		<wp:post_date_gmt>2007-06-12 05:43:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog-version-1-0-0%e5%8d%b3%e5%b0%86%e5%8f%91%e5%b8%83%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>选取随机的记录的几个方法汇总</title>
		<link>http://www.iceskysl.com/?p=89</link>
		<pubDate>Mon, 11 Jun 2007 05:09:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候，我们可能想吧满足某个条件的记录随机的选几条出来，比如用户查看一篇文章的时候，我们想再旁边随机的列出与这个文章相关的几篇文章，我们就有如下几个方法：

<strong>1.在Ruby中一次实现</strong>

<em>things = Thing.find(:all)
random_things = []
3.times do
random_things &lt;&lt; things[rand(things.size)]
end</em>

上面这个方法是可以的，但是有个缺点，它把整个表都查询出来,再随机的取三个，缺点很明显，如果数据库表太大，效率很差（内存等消耗很大）；且可能取出两条相同的记录（尽管概率不大），第二个问题比较好修复，如下代码即可解决：

<em>things = Thing.find(:all)
random_things = []
while random_things.size &lt; 3
random_things |= things[rand(things.size)]
end</em>

<strong>2.Ruby查询两次</strong>

<em>thing_ids = Thing.find(:all, :select =&gt; 'id').map(&amp;:id)
random_ids = []
while random_ids.size &lt; 3  random_things |= things[rand(things.size)] end random_things = Thing.find(:all, :conditions =&gt; ['id IN (?)', random_ids])</em>

这个方法只是先随机取出ids较，然后再取ids对应的记录，比前面说的那个有个好处就是不会消耗太多的系统资源，比起第一种方法会快很多。

<strong>3.在数据库层面上做</strong>

&lt;code&gt;random_things = Thing.find(:all, :limit =&gt; 3, :order =&gt; 'random()')&lt;/code&gt;

是不是神奇呢，我们直接把:random(如果是MySQL则需要使用 rand()) 传给Find方法就可以了，这个方法看似比较好，其实不然，其构造出来的SQL比较变形，且对于不同的数据库不能通用。且类似与order by rand() limit 1这样的语句是很畸形的。并且这个sql效率奇低！！

*4.使用offset进一步改进*

&lt;code&gt;Thing.find :first, :offset =&gt; rand(Thing.count)&lt;/code&gt;

上面这个方法好多了，但是只能取一条，你可以按照第一种办法构造一个取多条的，页很简单，不是么？以上四个方法，请按照自己的实际情况使用，对于不同的需求，效率是不一样的，如果你有更好的方法，欢迎留言讨论。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2007-06-11 05:09:11</wp:post_date>
		<wp:post_date_gmt>2007-06-11 05:09:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%80%89%e5%8f%96%e9%9a%8f%e6%9c%ba%e7%9a%84%e8%ae%b0%e5%bd%95%e7%9a%84%e5%87%a0%e4%b8%aa%e6%96%b9%e6%b3%95%e6%b1%87%e6%80%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rails实现下载文件的小技巧</title>
		<link>http://www.iceskysl.com/?p=90</link>
		<pubDate>Sun, 10 Jun 2007 17:19:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=90</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有的时候，如果你把需要下载的文件放在public目录或者其子目录下，是可以通过URL直接下载的，但是有的时候，你可能想把文件存放在别的目录以保证不会被爬虫或者其他恶意的人下载到（比如你写的电子书或者好的资料等等.），这个时候Rails的send_file函数就显得很好用，它每次发送4096byte，所以发送文件会很快，<br />
下面是个例子：</p>
<blockquote>send_file '/path/to.jpeg', :type =&gt; 'image/jpeg', :disposition =&gt; 'inline'<br />
</blockquote>
<p><br />
这里只是一个例子，真实的使用中，你可以把一个文件的信息存放在数据库里面，然后下载的时候就可以根据每个文件来指定上述的值了，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;attachment&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="variable">@attachment</span><span>&nbsp;=&nbsp;Attachment.find(params[</span><span class="symbol">:id</span><span>])&nbsp;</span><span class="variable">@attachment</span><span>.update_attribute(</span><span class="symbol">:downloads</span><span>,</span><span class="variable">@attachment</span><span>.downloads+1)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>send_file&nbsp;<span class="variable">@attachment</span><span>.filepath,&nbsp;</span><span class="symbol">:type</span><span>&nbsp;=&gt;&nbsp;</span><span class="variable">@attachment</span><span>.filetype,&nbsp;</span><span class="symbol">:disposition</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'inline'</span><span> <br />
    </span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>很棒，不是么～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候，如果你把需要下载的文件放在public目录或者其子目录下，是可以通过URL直接下载的，但是有的时候，你可能想把文件存放在别的目录以保证 不会被爬虫或者其他恶意的人下载到（比如你写的电子书或者好的资料等等.），这个时候Rails的send_file函数就显得很好用，它每次发送 4096byte，所以发送文件会很快，<br />
下面是个例子：</p>
<blockquote>send_file '/path/to.jpeg', :type =&gt; 'image/jpeg', :disposition =&gt; 'inline'<br />
</blockquote>
<p><br />
这里只是一个例子，真实的使用中，你可以把一个文件的信息存放在数据库里面，然后下载的时候就可以根据每个文件来指定上述的值了，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;attachment&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="variable">@attachment</span><span>&nbsp;=&nbsp;Attachment.find(params[</span><span class="symbol">:id</span><span>])&nbsp;</span><span class="variable">@attachment</span><span>.update_attribute(</span><span class="symbol">:downloads</span><span>,</span><span class="variable">@attachment</span><span>.downloads+1)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>send_file&nbsp;<span class="variable">@attachment</span><span>.filepath,&nbsp;</span><span class="symbol">:type</span><span>&nbsp;=&gt;&nbsp;</span><span class="variable">@attachment</span><span>.filetype,&nbsp;</span><span class="symbol">:disposition</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'inline'</span><span> <br />
    </span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>很棒，不是么～</p>]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2007-06-10 17:19:04</wp:post_date>
		<wp:post_date_gmt>2007-06-10 17:19:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e5%ae%9e%e7%8e%b0%e4%b8%8b%e8%bd%bd%e6%96%87%e4%bb%b6%e7%9a%84%e5%b0%8f%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails4Days中文翻译版</title>
		<link>http://www.iceskysl.com/?p=91</link>
		<pubDate>Sun, 10 Jun 2007 17:01:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[这个是我很早前开始接触ROR的时候翻译的，也有不少人看了，很是欣慰，今天1stlog加上了附件上传下载功能，顺便吧这个PDF发上来，需要的朋友可以在这里下载了。写在前面的话：自己正在学习ROR，鉴于关于ROR的中文资料比较少，虽然自己E语不怎么样，但是每次看到E文资料都尽力翻译过来。一来方便自己日后回头看这些资料比较方便；二是这样可以使自己看的比较认真，仔细揣摩原文的意思；还有一点就是尽量为后来的学习者提供一些关于ROR的中文资料。一边看一边翻译记录，没有仔细校核，如有不妥，还望海涵，如能指出，不甚感激！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2007-06-10 17:01:50</wp:post_date>
		<wp:post_date_gmt>2007-06-10 17:01:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails4days%e4%b8%ad%e6%96%87%e7%bf%bb%e8%af%91%e7%89%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在ROR中实现验证码需要注意的地方</title>
		<link>http://www.iceskysl.com/?p=92</link>
		<pubDate>Sat, 09 Jun 2007 17:55:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[开始以为没有什么难得，参考了http://www.blogjava.net/killme2008/archive/2007/04/09/109456.html和JAVAEYE上的一些文章，其实大家说的都差不多的，都是说win下注意的事情，我在lunix上怎么就是跑不起来，一直报告Missing model noisy_image.rb这个错误，后来看到http://wiki.rubyonrails.com/rails/pages/HowtoSecureFormsWithNoisyImages这个文章，恍然大悟。&lt;code&gt;class NoisyImagerequire 'RMagick'include Magick&lt;/code&gt;注意这个*require 'RMagick'*是放在class里面的，如果放在外面，就会报我上面说的那个错误。PS：刚刚给1stlog加上了验证码，也是最后一个功能点了。明天找时间整理下文档就可以开源了。真开心～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2007-06-09 17:55:40</wp:post_date>
		<wp:post_date_gmt>2007-06-09 17:55:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ror%e4%b8%ad%e5%ae%9e%e7%8e%b0%e9%aa%8c%e8%af%81%e7%a0%81%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e5%9c%b0%e6%96%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>完善你的URL显示信息</title>
		<link>http://www.iceskysl.com/?p=93</link>
		<pubDate>Fri, 08 Jun 2007 03:43:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[当你允许用户评论的时候，可能需要他们输入主页等URL，你以为用户会很认真的写上*http://*，现实是用户很多时候懒得写，只写www.1ster.cn这样的，你可以在接收数据的时候或者JS处理一下，如果没有http://就加上，但有的时候，面对一些历史数据或者你不想在接收的时候处理，可以按照下面这个来处理。&lt;code&gt; def url=(addr)    super (addr.blank? || addr.starts_with?('http')) ? addr : &quot;http://#{addr}&quot;  end&lt;/code&gt;当然，你也可以按照这个思路在你接收数据的时候处理。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2007-06-08 03:43:51</wp:post_date>
		<wp:post_date_gmt>2007-06-08 03:43:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%8c%e5%96%84%e4%bd%a0%e7%9a%84url%e6%98%be%e7%a4%ba%e4%bf%a1%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Layout in Rails（三种方法）</title>
		<link>http://www.iceskysl.com/?p=94</link>
		<pubDate>Fri, 08 Jun 2007 01:35:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[Rails里面的layout的主要思想是template的merge机制 — 即在布局中留下若干占位符。当HTTP请求过来，响应页面将具体内容插入到对应的占位符合并而成完成的内容,站在具体响应页面的角度看，当然“推”的处理方法项目可维护性更好。下面我们主要说说在Rails的controller中对layout的控制范围。*1. method级别的控制*。在某些特定的请求(对应rails controller里面一个method)需要特定的layout, 这时候可以&lt;code&gt;    class ExampleController &lt; AppplicationController       def index            render :layout =&gt; ‘my_layout’       end       def list       end    end&lt;/code&gt;*2. controller级别的控制*。很多情况下，需要对同一个controller中的所有或者大多数method应用一个layout。那么我们可以在controller级别上来定义layout&lt;code&gt;    class ExampleController &lt; AppplicationController       layout 'my_layout', :except =&gt; rss       # layout :my_def_layout       # layout proc{|c| …}        def index       end       def list       end    end&lt;/code&gt;我们可以使用layout函数的三种方式来处理对应的情况。*3. application级别的控制*。因为所有的controller都是继承于ApplicationController, 所以要在application的级别控制layout, 我们只要把2中的layout定义上升到ApplicationController class。比如对于应用程序而言，XMLHttpRequest不需要layout, 那么&lt;code&gt;    class ApplicationController &lt; ActionController::Base      layout proc{ |c| c.request.xhr? ? false : &quot;application&quot; }    end&lt;/code&gt;在以后我们将说说在layout中怎么插入多部分内容。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2007-06-08 01:35:57</wp:post_date>
		<wp:post_date_gmt>2007-06-08 01:35:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>layout-in-rails%ef%bc%88%e4%b8%89%e7%a7%8d%e6%96%b9%e6%b3%95%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用check_box_tag时需要注意的</title>
		<link>http://www.iceskysl.com/?p=95</link>
		<pubDate>Thu, 07 Jun 2007 17:41:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=95</guid>
		<description></description>
		<content:encoded><![CDATA[*check_box_tag*这个辅助方法，不晓得是rails自己的Bug还是其他的原因，按照道理来说，应该是和*check_box*这个辅助方法差不多的才对呀，但是在使用过程中发现有些问题，提醒各位下：check_box是可以自动生成*hidden_field*区域的代码的，这样选中或者不选中的时候，都可以正常工作；但是check_box_tag这个东西却没有那么好，它不会自动生成+hidden_field+的代码，所以使得你在不选该复选框的时候，其值是不会送到服务端的。必须手工添加以下代码：&lt;%=hidden_field_tag item.name, 0 %&gt;切忌切忌哈～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2007-06-07 17:41:03</wp:post_date>
		<wp:post_date_gmt>2007-06-07 17:41:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8check_box_tag%e6%97%b6%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dir.glob基本操作</title>
		<link>http://www.iceskysl.com/?p=96</link>
		<pubDate>Wed, 06 Jun 2007 07:17:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[使用*Dir.glob*可以方便的进行目录遍历，如下的例子是查找D:/gem的子目录中所有包含readme.txt文件的子目录。&lt;code&gt; themes_root = &quot;D:/gem&quot; glob = &quot;#{themes_root}/[a-zA-Z0-9]*&quot; @theme_cache = Dir.glob(glob).select do |file|    File.readable?(&quot;#{file}/readme.txt&quot;) end.compact p @theme_cache&lt;/code&gt;还有一系列的延伸，请参考ruby手册。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2007-06-06 07:17:36</wp:post_date>
		<wp:post_date_gmt>2007-06-06 07:17:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dir-glob%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自动备份数据库的脚本</title>
		<link>http://www.iceskysl.com/?p=97</link>
		<pubDate>Wed, 06 Jun 2007 04:50:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[一个WEB应用，基本上是不能保证其100%安全的，网络安全、系统的稳定性都可能在某个时间突然发生，您辛辛苦苦写的文章，收集的资料，很可能在瞬间消失，再也找不回来；数据真的是越来越重要了；另外，你可能想把一个WEB迁移到另外一台主机上等等，这个时候，数据库的备份就显得各位的重要。ROR应用中，使用的最多的是MYSQL数据库了，一直都没有找到比较好的、方便的方来来备份数据，上次自己写了一个备份到YMAL文件的，使用起来比较慢，导出来的格式也不是很好，所以也就没有发布出来，如果有人对这个比较感兴趣，可以mail我。今天说的是另外的一个备份的工具（*AutoMySQLBackup*），在COR上看到的链接，脚本是个老外写的，主要使用的是mysqldump来定时备份数据，下来简单的配置试了下，果然好用，你使用的时候，需要修改你需要备份的数据库名、连接用户、密码和主机地址，另外如果你是在虚拟主机上的，则需要修改备份目标文件夹，如+BACKUPDIR=&quot;./backups&quot;+（需要加上*./*,否则你可能会得到目录拒绝写操作的提示）；另外，还可以配置邮件，使得备份以后会把其压缩后的文件发送到你的邮箱（这个大小受到邮件附件大小的限制），可以定时（天、周、月）来备份。值得一提的是采用的是增量备份，非常方便。详细的介绍页面你可以参考：http://www.debianhelp.co.uk/mysqlscript.htm或者直接下载脚本程序（里面有说明的）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2007-06-06 04:50:05</wp:post_date>
		<wp:post_date_gmt>2007-06-06 04:50:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%87%aa%e5%8a%a8%e5%a4%87%e4%bb%bd%e6%95%b0%e6%8d%ae%e5%ba%93%e7%9a%84%e8%84%9a%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在windows上安装RMagick</title>
		<link>http://www.iceskysl.com/?p=98</link>
		<pubDate>Tue, 05 Jun 2007 06:06:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[看到网上很多人说再WIN下安装RMagick的方法都是这样的，gem install ImageMagick-6.3.0-7-Q8-windows-dll.exe，这样我感觉谁有问题的，至少我这样安装的时候是有错误的，如：D:\gem\RMagick-1.14.1_IM-6.3.0-7-Q8&gt;gem install ImageMagick-6.3.0-7-Q8-windows-dll.exeERROR:  Error installing gem ImageMagick-6.3.0-7-Q8-windows-dll.exe[.gem]: string contains null byte所以正确的应该是用gem包来安装，如下:D:\gem\RMagick-1.14.1_IM-6.3.0-7-Q8&gt;gem install rmagick-1.14.1-win32.gemSuccessfully installed rmagick, version 1.14.1看看是不是安装上了：D:\gem\RMagick-1.14.1_IM-6.3.0-7-Q8&gt;gem listrmagick (1.14.1)    RMagick is an interface between the Ruby programming language and    the ImageMagick and GraphicsMagick image processing libraries.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2007-06-05 06:06:54</wp:post_date>
		<wp:post_date_gmt>2007-06-05 06:06:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8windows%e4%b8%8a%e5%ae%89%e8%a3%85rmagick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mini_magick 1.2.2 Released</title>
		<link>http://www.iceskysl.com/?p=99</link>
		<pubDate>Sun, 03 Jun 2007 08:01:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[*mini_magick* version 1.2.2 has been released!RMagick是大家用的最多的图片处理类库，但是它台复杂了，消耗太多的内存，比如下面这段最简单的代码都会吃掉100M的内存：&lt;code&gt;Magick::read(&quot;image.jpg&quot;) do |f|f.write(&quot;manipulated.jpg&quot;)end&lt;/code&gt;*mini_magick*是把ImageMagick进行的一次封装，使得可以很方便的使用MiniMagick的commandline，可以在http://www.imagemagick.org/script/mogrify.php 查看可耕多的ImageMagick has 信息。*mini_magick*1.2.2包含如下更新：# 1.) all image commands return the image object (The output of the last command is saved in @output)# 2.) identify doesn't trip over strangley named files# 3.) TempFile uses file extention now (Thanks http://marsorange.com/archives/of-mogrify-ruby-tempfile-dynamic-class-definitions)# 4.) identify commands escape output path correctly]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2007-06-03 08:01:12</wp:post_date>
		<wp:post_date_gmt>2007-06-03 08:01:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mini_magick-1-2-2-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>days_in_month函数介绍</title>
		<link>http://www.iceskysl.com/?p=100</link>
		<pubDate>Sat, 02 Jun 2007 08:29:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[days_in_month这个函数返回给定的年月的月的天数，对于写阴历什么的很有帮助，下面是英文的介绍。Descriptiondays_in_month(month, year=nil)Return the number of days in the given month. If a year is given, February will return the correct number of days for leap years. Otherwise, this method will always report February as having 28 days.&lt;code&gt;   1. &gt;&gt; Time.days_in_month(4) =&gt; 30   2. &gt;&gt; Time.days_in_month(4,2006) =&gt; 30   3. &gt;&gt; Time.days_in_month(2,2006) =&gt; 28   4. &gt;&gt; Time.days_in_month(2) =&gt; 28   5. &gt;&gt; Time.days_in_month(2,2008) =&gt; 29&lt;/code&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2007-06-02 08:29:03</wp:post_date>
		<wp:post_date_gmt>2007-06-02 08:29:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>days_in_month%e5%87%bd%e6%95%b0%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安装SSH库的时候出现问题的修复</title>
		<link>http://www.iceskysl.com/?p=101</link>
		<pubDate>Sat, 02 Jun 2007 07:57:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[在使用SSH的时候，需要另外安装SSH的库，但是我按照官方上的方法无论是远程安装还是本地安装都出现错误，如下：D:\&gt;gem install net-ssh --include-dependenciesERROR:  While executing gem ... (Zlib::BufError)    buffer error查了下资料，貌似问题是出在Windows版本上的RUBY有点问题，可以按照下面的进行修复：1.修改ruby的安装目录下（c:\ruby\lib\ruby\site_ruby\1.8\rubygems\package.rb）的package.rb文件，在 618 行，把1.2.1修改为 1.2.3。2) removed the linessh 22/tcp #SSHfrom file %systemroot%\system32\drivers\etc\services]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2007-06-02 07:57:42</wp:post_date>
		<wp:post_date_gmt>2007-06-02 07:57:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e8%a3%85ssh%e5%ba%93%e7%9a%84%e6%97%b6%e5%80%99%e5%87%ba%e7%8e%b0%e9%97%ae%e9%a2%98%e7%9a%84%e4%bf%ae%e5%a4%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用Jsonifier在rails中生成json</title>
		<link>http://www.iceskysl.com/?p=62</link>
		<pubDate>Thu, 12 Jul 2007 09:14:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于一个系统需要对外提供数据，自然使用widget来实现，JS中自然是对json支持最好，也是就可以吧数据组装成json格式的，再用JS解析显示，于是就有了这个需求：在rails中生成JSON，尽管rails1.1版本就增加了对json的支持，但要想更加灵活，自然使用插件来实现了，而Jsonifier 正是我们需要的。<br />
看看Jsonifier的自我介绍：<br />
Jsonifier is a Rails plugin that adds options to the ActiveRecord#to_json method similar to ActiveRecord#to_xml. It's time to treat the JSON encoding of AR objects with more respect ;)The :only, :except, :methods, and :include options are supported. Check out the examples below. <br />
<br />
<strong>*安装：*</strong><br />
很简单，script/plugin install svn://svn.codefront.net/jsonifier/trunk<br />
<br />
<strong>*使用：*</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>david&nbsp;=&nbsp;User.find(1)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json&nbsp;<span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true,&nbsp;created_at:&nbsp;&quot;07/01/2007&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>david.to_json(<span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:name</span><span>)&nbsp;</span><span class="comment">#&nbsp;{name:&nbsp;&quot;David&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json(<span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;[</span><span class="symbol">:id</span><span>,&nbsp;</span><span class="symbol">:name</span><span>])&nbsp;</span><span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>david.to_json(<span class="symbol">:except</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:created_at</span><span>)&nbsp;</span><span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json(<span class="symbol">:except</span><span>&nbsp;=&gt;&nbsp;[</span><span class="symbol">:id</span><span>,&nbsp;</span><span class="symbol">:created_at</span><span>])&nbsp;</span><span class="comment">#&nbsp;{name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true}</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>很简单吧～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于一个系统需要对外提供数据，自然使用widget来实现，JS中自然是对json支持最好，也是就可以吧数据组装成json格式的，再用JS解析显 示，于是就有了这个需求：在rails中生成JSON，尽管rails1.1版本就增加了对json的支持，但要想更加灵活，自然使用插件来实现了，而 Jsonifier 正是我们需要的。<br />
看看Jsonifier的自我介绍：<br />
Jsonifier is a Rails plugin that adds options to the ActiveRecord#to_json method similar to ActiveRecord#to_xml. It's time to treat the JSON encoding of AR objects with more respect ;)The :only, :except, :methods, and :include options are supported. Check out the examples below. <br />
<br />
<strong>*安装：*</strong><br />
很简单，script/plugin install svn://svn.codefront.net/jsonifier/trunk<br />
<br />
<strong>*使用：*</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>david&nbsp;=&nbsp;User.find(1)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json&nbsp;<span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true,&nbsp;created_at:&nbsp;&quot;07/01/2007&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>david.to_json(<span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:name</span><span>)&nbsp;</span><span class="comment">#&nbsp;{name:&nbsp;&quot;David&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json(<span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;[</span><span class="symbol">:id</span><span>,&nbsp;</span><span class="symbol">:name</span><span>])&nbsp;</span><span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>david.to_json(<span class="symbol">:except</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:created_at</span><span>)&nbsp;</span><span class="comment">#&nbsp;{id:&nbsp;1,&nbsp;name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>david.to_json(<span class="symbol">:except</span><span>&nbsp;=&gt;&nbsp;[</span><span class="symbol">:id</span><span>,&nbsp;</span><span class="symbol">:created_at</span><span>])&nbsp;</span><span class="comment">#&nbsp;{name:&nbsp;&quot;David&quot;,&nbsp;awesome:&nbsp;true}</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>很简单吧～</p>]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2007-07-12 09:14:11</wp:post_date>
		<wp:post_date_gmt>2007-07-12 09:14:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8jsonifier%e5%9c%a8rails%e4%b8%ad%e7%94%9f%e6%88%90json</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>敏捷软件开发宣言</title>
		<link>http://www.iceskysl.com/?p=63</link>
		<pubDate>Thu, 12 Jul 2007 01:44:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[觉得敏捷开发模式就是我们目前追寻的理想开发模式，配合RoR的灵活，足以使得更加敏捷～于是给这个blog重新添加了一个“敏捷开发”的分类，记录该类的读书感受等等，以下便是大名鼎鼎的敏捷宣言！*敏捷软件开发宣言*个体和交互            胜过 过程和工具可以工作的软件        胜过 面面俱到的文档客户合作              胜过 合同谈判响应变化              胜过 遵循计划虽然右项也有价值，但是我们认为左项具有更大的价值。PS：发现个37的那本Getting Real里面宣称的几乎完全一致！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2007-07-12 01:44:44</wp:post_date>
		<wp:post_date_gmt>2007-07-12 01:44:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%95%8f%e6%8d%b7%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91%e5%ae%a3%e8%a8%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>如何快速统计RoR网站的访问量</title>
		<link>http://www.iceskysl.com/?p=64</link>
		<pubDate>Wed, 11 Jul 2007 00:58:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[本文来源JavaEye，由于没有提供单篇RSS，我就全部转过来了，版权所有规robbin所有。链接地址：http://robbin.javaeye.com/blog/97287统计网站的访问量有很多专业的第三方工具，例如Google Analytics，提供强大，而且详细的统计功能。当然，也许不是每个人都需要这么复杂而且操作麻烦的工具，如果你只是需要大概了解一下网站的访问量和访问URL的比例，那么让我们看看最简单最容易的统计工具：Unix Shell。一个RoR网站的访问纪录，Web Server(Apache or lighttpd)会记录所有的访问请求，包括动态请求和静态请求，但大量图片，JS，CSS的请求对我们没有太大的统计价值，因此web server的日志参考价值就不大。RoR会记录所有动态请求日志到log/production.log里面，我们要做的就是让RoR进行日志交换，每天产生一个新的日志文件。很简单，修改config/environment.rb RAILS_DEFAULT_LOGGER = Logger.new(&quot;#{RAILS_ROOT}/log/#{RAILS_ENV}.log&quot;, &quot;daily&quot;)  那么每天就会产生一个诸如+production.log.20070702+这样的日志文件。*一、统计每日动态请求处理总数*cat production.log.20070702|grep &quot;200 OK&quot;|wc -l   打印日志文件，挑选正确处理的请求行，统计行数，一条shell命令就搞定了网站处理的动态请求数量。虽然动态请求数量不等于网站访问量，但是可以作为一个重要的参考指标。*二、统计URL的访问频度*网站管理员都很希望知道哪些频道受欢迎被访问的频繁，哪些URL格外受到关注，不必寻求专业的网站流量统计系统，一条shell命令就搞定了：cat production.log.20070702 |grep &quot;200 OK&quot; | awk '{print $17}'|sort|uniq -c | sort -r -n &gt; stat.log  打印日志文件，挑选正确处理请求行，把第17列即URL那一列挑出来，排序，统计唯一URL出现的次数，按照URL次数倒序输出到stat.log文件里面，让我们看看stat.log是什么：10096 [http://www.javaeye.com/]  3590 [http://www.javaeye.com/forums/index]  3446 [http://www.javaeye.com/forums/board/Java]  3300 [http://www.javaeye.com/index/rss_index_topics]  2477 [http://www.javaeye.com/forums/board/Life]  1605 [http://www.javaeye.com/forums/board/AJAX]  .........  网站首页被访问了10096次，论坛频道首页被访问了3590次，......是不是很爽？我们用一条shell命令可以做简单的网站访问统计系统了。那么用Java做的系统，能不能这样统计呢？其实照样可以。你可以在tomcat的配置文件里面设置输出详细的日志信息，然后照样用shell命令搞定。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2007-07-11 00:58:48</wp:post_date>
		<wp:post_date_gmt>2007-07-11 00:58:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e5%bf%ab%e9%80%9f%e7%bb%9f%e8%ae%a1ror%e7%bd%91%e7%ab%99%e7%9a%84%e8%ae%bf%e9%97%ae%e9%87%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>话题广告测试～</title>
		<link>http://www.iceskysl.com/?p=65</link>
		<pubDate>Wed, 04 Jul 2007 08:52:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[feedsky的话题广告测试下1ef0baf2]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2007-07-04 08:52:50</wp:post_date>
		<wp:post_date_gmt>2007-07-04 08:52:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%af%9d%e9%a2%98%e5%b9%bf%e5%91%8a%e6%b5%8b%e8%af%95%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>用图片代替link_to中的文字</title>
		<link>http://www.iceskysl.com/?p=66</link>
		<pubDate>Wed, 04 Jul 2007 00:52:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[link_to大家都会用吧，也有人用户把image_tag和link_to结合起来使用过吧，是不是觉得很长很不干净呢，不用怕，我们其实可以在link_to中直接使用图片来替代文字的，如下：&lt;code&gt;&lt;%= link_to image_tag(&quot;search.gif&quot;, :border=&gt;0), :action =&gt; 'show', :id =&gt; user %&gt;&lt;/code&gt;注意里面的:border=&gt;0是为了去掉图片四周那个无聊的框框的，需要加上哦～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2007-07-04 00:52:41</wp:post_date>
		<wp:post_date_gmt>2007-07-04 00:52:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8%e5%9b%be%e7%89%87%e4%bb%a3%e6%9b%bflink_to%e4%b8%ad%e7%9a%84%e6%96%87%e5%ad%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在rails中实现跟踪记录每个用户的最近十条记录</title>
		<link>http://www.iceskysl.com/?p=67</link>
		<pubDate>Wed, 04 Jul 2007 00:47:31 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候，你可能想显示给每个用户他最近浏览的页面，这个时候的一个很自然的想法就是使用数据库来存放，但是这样如果你的用户足够的多，而且页面的读取数据库又很频繁的话，就会对性能造成很大的影响，换个思路，我们可以在session里面存取，示范代码如下：&lt;code&gt;class ApplicationController &lt; ActionController::Base	before_filter :add_to_history	before_filter :page_title	###def add_to_history    session[:history] ||= []##    if File.exists?(&quot;#{RAILS_ROOT}/app/views/#{self.controller_name}/#{self.action_name}.rhtml&quot;) &amp;&amp; session[:history].empty? || session[:history].first['uri'] != @request.request_uri        session[:history].unshift({ 'uri' =&gt; @request.request_uri, 'name' =&gt; page_title })        session[:history].pop while session[:history].length &gt; 11    endend######## This bit came from Peter Cooper's snippets source and was moved into the application controller:###	def page_title		case self.controller_name			when 'tag' 				title = &quot;Tags &amp;raquo; &quot; + @params[:tags].join(&quot; &amp;gt; &quot;)			when 'user'				title = &quot;Users &amp;raquo; #{@params[:user]}&quot;	 			when 'features'					case self.action_name						when 'show' then title = &quot;Feature &amp;raquo; #{Feature.find(@params[:id]).title}&quot;						else title = APP_CONFIG[&quot;default_title&quot;]					end			else 				title = APP_CONFIG[&quot;default_title&quot;] + self.controller_name + &quot;:&quot; + self.action_name		end	end	helper_method :page_title###...end&lt;/code&gt;然后在页面上就可以这样显示了：&lt;code&gt;&lt;h4&gt;User History&lt;/h4&gt;&lt;% for cur in session[:history][0..9] -%&gt;  &lt;p&gt;&lt;a href=&quot;&lt;%= cur[&quot;url&quot;] %&gt;&quot;&gt;&lt;%= cur[&quot;name&quot;] %&gt;&lt;/a&gt;&lt;/p&gt;&lt;% end -%&gt;&lt;/code&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2007-07-04 00:47:31</wp:post_date>
		<wp:post_date_gmt>2007-07-04 00:47:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%ae%9e%e7%8e%b0%e8%b7%9f%e8%b8%aa%e8%ae%b0%e5%bd%95%e6%af%8f%e4%b8%aa%e7%94%a8%e6%88%b7%e7%9a%84%e6%9c%80%e8%bf%91%e5%8d%81%e6%9d%a1%e8%ae%b0%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>ruby中一个方法返回多个结果的实例</title>
		<link>http://www.iceskysl.com/?p=68</link>
		<pubDate>Wed, 04 Jul 2007 00:30:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[<p>大家知道，在一般的编程实现中，一个method只能返回一个结果，如果想实现返回多个结果，java中可以使用VO来实现，但是ruby借助其灵活的语法，我们可以一次返回多个结果，我记得前些时候还不晓得这么做，问了几个人貌似也没有提到，今天五一看到了这个实现，分享给大家：首先，按照这个需求，你可能会写出类似下面的这段代码来检验，如下:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;a_method_to_insult_innocent_people&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;error&nbsp;=&nbsp;compute_error&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:stupid</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;a&nbsp;stupid&nbsp;error&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">elsif</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:ridiculous</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;a&nbsp;ridiculous&nbsp;error&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">elsif</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:worst_of_all_time</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;the&nbsp;most&nbsp;idiot&nbsp;error&nbsp;in&nbsp;history.&nbsp;Way&nbsp;to&nbsp;go&hellip;&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;</span><span class="keyword">return</span><span>&nbsp;</span><span class="keyword">true</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;no&nbsp;error,&nbsp;you&nbsp;are&nbsp;still&nbsp;an&nbsp;idiot&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>success,&nbsp;msg&nbsp;=&nbsp;a_method_to_insult_innocent_people&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>do_something_with_success(success)&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>destroy_hateful_words!(msg)&nbsp; <br />
    </span></li>
</ol>
</div>
<p>但是这段代码还是只能返回一个结果，如何实现返回多个值呢，很简单，使用数组来实现，只要把上面这段代码中的- return false, &quot;you made a stupid error&quot;- 修改为  *return [false, &quot;you made a stupid error&quot;]*就可以了。记录记录以备不时之需。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家知道，在一般的编程实现中，一个method只能返回一个结果，如果想实现返回多个结果，java中可以使用VO来实现，但是ruby借助其灵活的语 法，我们可以一次返回多个结果，我记得前些时候还不晓得这么做，问了几个人貌似也没有提到，今天五一看到了这个实现，分享给大家：首先，按照这个需求，你 可能会写出类似下面的这段代码来检验，如下:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;a_method_to_insult_innocent_people&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;error&nbsp;=&nbsp;compute_error&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:stupid</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;a&nbsp;stupid&nbsp;error&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">elsif</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:ridiculous</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;a&nbsp;ridiculous&nbsp;error&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">elsif</span><span>&nbsp;error&nbsp;==&nbsp;</span><span class="symbol">:worst_of_all_time</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;the&nbsp;most&nbsp;idiot&nbsp;error&nbsp;in&nbsp;history.&nbsp;Way&nbsp;to&nbsp;go&hellip;&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;</span><span class="keyword">return</span><span>&nbsp;</span><span class="keyword">true</span><span>,&nbsp;</span><span class="string">&quot;You&nbsp;made&nbsp;no&nbsp;error,&nbsp;you&nbsp;are&nbsp;still&nbsp;an&nbsp;idiot&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>success,&nbsp;msg&nbsp;=&nbsp;a_method_to_insult_innocent_people&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>do_something_with_success(success)&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>destroy_hateful_words!(msg)&nbsp; <br />
    </span></li>
</ol>
</div>
<p>但是这段代码还是只能返回一个结果，如何实现返回多个值呢，很简单，使用数组来实现，只要把上面这段代码 中的- return false, &quot;you made a stupid error&quot;- 修改为 *return [false, &quot;you made a stupid error&quot;]*就可以了。记录记录以备不时之需。</p>]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2007-07-04 00:30:06</wp:post_date>
		<wp:post_date_gmt>2007-07-04 00:30:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e4%b8%ad%e4%b8%80%e4%b8%aa%e6%96%b9%e6%b3%95%e8%bf%94%e5%9b%9e%e5%a4%9a%e4%b8%aa%e7%bb%93%e6%9e%9c%e7%9a%84%e5%ae%9e%e4%be%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在rails中使用POP3接收邮件</title>
		<link>http://www.iceskysl.com/?p=69</link>
		<pubDate>Wed, 04 Jul 2007 00:24:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上次我们写了如何在rails中发送email，自然接收email也是常常需要的功能，今天给出一段代码实现在rails中接受并处理email，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#!/usr/bin/env&nbsp;ruby</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'net/pop'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>require&nbsp;<span class="builtin">File</span><span>.dirname(__FILE__)&nbsp;+&nbsp;</span><span class="string">'/../config/environment'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger&nbsp;=&nbsp;RAILS_DEFAULT_LOGGER&nbsp;&nbsp;</span></li>
    <li class="alt"><span>logger.info&nbsp;<span class="string">&quot;Running&nbsp;Mail&nbsp;Importer...&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Net::POP3.start(<span class="string">&quot;localhost&quot;</span><span>,&nbsp;</span><span class="keyword">nil</span><span>,&nbsp;</span><span class="string">&quot;username&quot;</span><span>,&nbsp;</span><span class="string">&quot;password&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|pop|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">if</span><span>&nbsp;pop.mails.empty?&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;logger.info&nbsp;<span class="string">&quot;NO&nbsp;MAIL&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;pop.mails.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|email|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">begin</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;logger.info&nbsp;<span class="string">&quot;receiving&nbsp;mail...&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Notifier.receive(email.pop)&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;email.delete&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;</span><span class="builtin">Exception</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;logger.error&nbsp;<span class="string">&quot;Error&nbsp;receiving&nbsp;email&nbsp;at&nbsp;&quot;</span><span>&nbsp;+&nbsp;</span><span class="builtin">Time</span><span>.now.to_s&nbsp;+&nbsp;</span><span class="string">&quot;:::&nbsp;&quot;</span><span>&nbsp;+&nbsp;e.message&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger.info&nbsp;<span class="string">&quot;Finished&nbsp;Mail&nbsp;Importer.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
<strong>做些说明：</strong><br />
你需要在*<strong>Net::POP3.start</strong>*这行写上你要接收的邮箱的服务器地址以及你的用户名密码，如上配置好了，你就可以在cron中配置调度这个任务了，至于调度的频度你可以按照自己的需求来设定了。如何，还算简单吧。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>上次我们写了如何在rails中发送email，自然接收email也是常常需要的功能，今天给出一段代码实现在rails中接受并处理email，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#!/usr/bin/env&nbsp;ruby</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'net/pop'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>require&nbsp;<span class="builtin">File</span><span>.dirname(__FILE__)&nbsp;+&nbsp;</span><span class="string">'/../config/environment'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger&nbsp;=&nbsp;RAILS_DEFAULT_LOGGER&nbsp;&nbsp;</span></li>
    <li class="alt"><span>logger.info&nbsp;<span class="string">&quot;Running&nbsp;Mail&nbsp;Importer...&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Net::POP3.start(<span class="string">&quot;localhost&quot;</span><span>,&nbsp;</span><span class="keyword">nil</span><span>,&nbsp;</span><span class="string">&quot;username&quot;</span><span>,&nbsp;</span><span class="string">&quot;password&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|pop|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">if</span><span>&nbsp;pop.mails.empty?&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;logger.info&nbsp;<span class="string">&quot;NO&nbsp;MAIL&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;pop.mails.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|email|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">begin</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;logger.info&nbsp;<span class="string">&quot;receiving&nbsp;mail...&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Notifier.receive(email.pop)&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;email.delete&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;</span><span class="builtin">Exception</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;logger.error&nbsp;<span class="string">&quot;Error&nbsp;receiving&nbsp;email&nbsp;at&nbsp;&quot;</span><span>&nbsp;+&nbsp;</span><span class="builtin">Time</span><span>.now.to_s&nbsp;+&nbsp;</span><span class="string">&quot;:::&nbsp;&quot;</span><span>&nbsp;+&nbsp;e.message&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger.info&nbsp;<span class="string">&quot;Finished&nbsp;Mail&nbsp;Importer.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
<strong>做些说明：</strong><br />
你需要在*<strong>Net::POP3.start</strong>*这行写上你要接收的邮箱的服务器地址以及你的用户名密码，如上配置好了，你就可以在cron中配置调度这个任务了，至于调度的频度你可以按照自己的需求来设定了。如何，还算简单吧。</p>]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2007-07-04 00:24:28</wp:post_date>
		<wp:post_date_gmt>2007-07-04 00:24:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8pop3%e6%8e%a5%e6%94%b6%e9%82%ae%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>本站可以订阅啦～</title>
		<link>http://www.iceskysl.com/?p=70</link>
		<pubDate>Sun, 01 Jul 2007 17:24:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[很多朋友说喜欢在googleReader里面看文章，希望我提供XML的订阅功能，其实这个feed早就有了，细心的朋友可能已经找到了，呵呵，在左下角的# RSS、# Comments RSS，是可以直接订阅的。有朋友推荐feedburner，说更加方便、也适合自己做统计，于是就添加了这个功能，在右边可以看到有个大大的订阅图标啦，其地址是http://feeds.feedburner.com/1stlog，大家可以使用这个来订阅啦。我会写出更多的Rails方面的文章，欢迎讨论～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2007-07-01 17:24:21</wp:post_date>
		<wp:post_date_gmt>2007-07-01 17:24:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%ac%e7%ab%99%e5%8f%af%e4%bb%a5%e8%ae%a2%e9%98%85%e5%95%a6%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>提交多个check_box的写法-check_box_tag.</title>
		<link>http://www.iceskysl.com/?p=71</link>
		<pubDate>Sat, 30 Jun 2007 09:28:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候可能需要有这样的需求，发一篇文章的时候，需要选择多个tag，我们把Tag取出来后就可以循环显示，但是注意应该是使用check_box_tag，如下是几个例子：&lt;code&gt;&lt;% Business.find(@know.business_id).know_tags.each do |t| %&gt;&lt;%= check_box_tag('know[know_tags_ids][]',t.know_tag_id,@know.know_tags.include?(t))%&gt;&amp;nbsp;&lt;%= t.name %&gt;&lt;%end %&gt;--------------&lt;% @know_tags.each do |t| %&gt;&lt;%= check_box_tag('know[know_tags_ids][]',t.know_tag_id,@know.know_tags.include?(t))%&gt;&amp;nbsp;&lt;%= t.name %&gt;&lt;%end %&gt;---------------&lt;% @tags.each do |tag|%&gt;&lt;%= check_box_tag (&quot;topic[tags_ids][]&quot;,tag.id)%&gt;&lt;%= tag.name %&gt;&lt;% end %&gt;&lt;/code&gt;我想上面几个例子，大家应该明白了吧？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2007-06-30 09:28:06</wp:post_date>
		<wp:post_date_gmt>2007-06-30 09:28:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8f%90%e4%ba%a4%e5%a4%9a%e4%b8%aacheck_box%e7%9a%84%e5%86%99%e6%b3%95-check_box_tag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用ActionMaile发送邮件实例</title>
		<link>http://www.iceskysl.com/?p=72</link>
		<pubDate>Sat, 30 Jun 2007 00:12:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[来源：http://www.javaeye.com/topic/40778更改config目录下的配置文件*environment.rb* 在最下面追加一段：&lt;code&gt;ActionMailer::Base.delivery_method = :smtp#以简单邮件传送协议发送邮件ActionMailer::Base.default_charset = &quot;GBK&quot;#设置邮件的默认编码为国标码否则发送的邮件主题可能会乱码ActionMailer::Base.server_settings = {:address =&gt; &quot;192.168.1.110&quot;,:port =&gt; 25,:domain =&gt; &quot;xxx.com&quot;,:authentication =&gt; :login,:user_name =&gt; &quot;xxx&quot;,:password =&gt; &quot;xxx&quot;,}&lt;/code&gt;1、:address =&gt; and :port =&gt; 决定你将使用的SMTP的地址和端口。这些缺省值分别为localhost和25。2、:domain =&gt; 当识别自己是服务器时 mailer应该使用的域名。这是对HELO(因为HELO是命令客户端发送服务来启动一个连接)域的调用。你通常应该使用顶级域名机制来发送e-mail，但这依赖于你的SMTP服务的设置(some don’t check, and some check to try to reduce spam and socalled open-relay issues)3、:user_name =&gt; and :password =&gt; 如果:authentication被设置则要求有此。4、:authentication =&gt; :plain，:login，或:cram_md中的一个。你的服务器管理员将帮助选择正确的选项。当前没使用TLS(SSL)来从Rails连接邮件服务器的方式。这个参数应该被忽略，如果你的服务器不要求确认。 创建一个mailer的models&lt;code&gt;class OrderMailer &lt; ActionMailer::Base def signup(domain, sent_at = Time.now)    @subject    = 'Welcome to Beast'    @body       = &quot;hello world&quot;    @recipients = &quot;yyy@yyy.com&quot;    @from = 'yyy@yyy.com'    @sent_on    = sent_at    @headers    = {} endend&lt;/code&gt;@subject:邮件标题@body:邮件正文可以使用html标签但需要设置参考下面@recipients:收件人可以接收数组进行群发多人发送：@recipients = [ &quot;1@a.com&quot;，&quot;2@b.com&quot;]@from:发件人@sent_on:用于设置邮件 Date: header的Time 对象@headers:一个header name/value 对的哈希望表，用于添加任意header行给邮件 如：@headers[&quot;Organization&quot;] = &quot;Pragmatic Programmers, LLC&quot;既要使用HTML格式发送邮件又要增加附件的话，需要在model里就对content-type进行设置 @content-type=”text/html” *创建一个controller 用于发送邮件*def send_maileremail = OrderMailer.deliver_signup(request.host_with_port)Puts email.encoded #邮件内容打印#email = OrderMailer.create_signup(request.host_with_port)#email.set_content_type(&quot;text/html&quot;) 可在模型中设置#OrderMailer.deliver(email)#发送HTML格式的邮件的设置end *发送HTML模板邮件*在views中创建一个模板：_mail_content.rhtml ……model中的mailer类改成如下：def signup(domain,content,sent_at = Time.now)        @subject    = &quot;xxx&quot;        @body       = content        @recipients = &quot;xxx@xxx.com&quot;        @from = 'xxx@xxx.com'        @sent_on    = sent_at        @headers    = {} endcontroller中更改发送方法： def send_mail    content =render_to_string :partial=&gt;&quot; mail_content &quot;email = OrderMailer.create_signup(request.host_with_port,content)           email.set_content_type(&quot;text/html&quot;)            OrderMailer.deliver(email)            render :text=&gt;&quot;发送成功&quot; end render_to_string方法返回的是String 与render不同的是它返回后不会发送给客户端。 *发送附件* 修改model中的mailer类，如下： def signup(domain,content,sent_at = Time.now)        @subject    = &quot;xxx&quot;        @body       = content        @recipients = &quot;xxx@xxx.com&quot;        @from = 'xxx@xxx.com'        @sent_on    = sent_at        @headers    = {}       @data = &quot;&quot;        File.open(&quot;D:\\Tools\\FastAIT.rar&quot;, &quot;rb&quot;) { |fp|            @data&lt;           }       #参数的含义rb表示只读并且以二进制方式创建一个file对象       #不写r会出现丢失数据的问题，发送的附件也就被破坏了``r''	Read-only, starts at beginning of file (default mode).只读，清除原有内容（默认方式）``r+''	Read-write, starts at beginning of file.读写，清除原有内容``w''	Write-only, truncates existing file to zero length or creates a new file for writing.只写，创建一个新的文件覆盖旧的``w+''	Read-write, truncates existing file to zero length or creates a new file for reading and writing.读写，创建一个新的文件覆盖旧的``a''	Write-only, starts at end of file if file exists, otherwise creates a new file for writing.只写，追加``a+''	Read-write, starts at end of file if file exists, otherwise creates a new file for reading and writing.读写，追加``b''	(DOS/Windows only) Binary file mode (may appear with any of the key letters listed above).*二进制模式* attachment :content_type =&gt; &quot;application/rar&quot;,           :filename     =&gt; &quot;FastAIT.rar&quot; ,       :body =&gt; @data end邮件附件的content_type（内容类型表） &quot;.asf&quot;     ContentType = &quot;video/x-ms-asf&quot; &quot;.avi&quot;      ContentType = &quot;video/avi&quot; &quot;.doc&quot;    ContentType = &quot;application/msword&quot; &quot;.zip&quot;     ContentType = &quot;application/zip&quot; &quot;.xls&quot;     ContentType = &quot;application/vnd.ms-excel&quot; &quot;.gif&quot;     ContentType = &quot;image/gif&quot; &quot;.jpg&quot;, &quot;jpeg&quot;        ContentType = &quot;image/jpeg&quot; &quot;.wav&quot;  ContentType = &quot;audio/wav&quot; &quot;.mp3&quot;  ContentType = &quot;audio/mpeg3&quot; &quot;.mpg&quot;, &quot;mpeg&quot;    ContentType = &quot;video/mpeg&quot; &quot;.rtf&quot;     ContentType = &quot;application/rtf&quot; &quot;.htm&quot;, &quot;html&quot;       ContentType = &quot;text/html&quot; &quot;.txt&quot;     ContentType = &quot;text/plain&quot;&quot;.pdf&quot;    ContentType = &quot;application/pdf&quot; 其他      ContentType = &quot;application/octet-stream&quot;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2007-06-30 00:12:18</wp:post_date>
		<wp:post_date_gmt>2007-06-30 00:12:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8actionmaile%e5%8f%91%e9%80%81%e9%82%ae%e4%bb%b6%e5%ae%9e%e4%be%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby中的方法调用</title>
		<link>http://www.iceskysl.com/?p=73</link>
		<pubDate>Tue, 26 Jun 2007 05:00:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[引言:张雪同学blog上的这个文章很是不错，从一个侧面展示了Ruby的一些和别的不一样的特性，显出了其灵活和强大，很值得仔细看看～会使得你对ruby中的方法调用更加理解～&lt;br/&gt;&lt;br /&gt;*来源:*for each_day in life: ruby中的方法调用&lt;br /&gt;*地址:*http://blog.snowonrails.com/articles/2007/05/15/ruby%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8&lt;br /&gt;*标题:*ruby中的方法调用&lt;br /&gt;*内容摘要:*&lt;br /&gt;和我一样许多习惯了java的程序员在刚刚开始接触ruby的时候对ruby当中的方法声名以及调用的方式会感到非常的奇怪和别扭。比如我们在ruby当中经常可以看到类似的方法声名 method(arg1, *args), 又如这样的方法 method2(arg2, &amp;block), 等等。相比于java那明确简单的方法声名方式，ruby中的方法声名要灵活许多，下面就ruby当中常见的几种方法声名的形式，以及方法调用的方式做一个简要的总结：1. 首先，不同于java的方法声名，ruby中的方法可以接收的参数是可变的，而不是像java那样必须和方法声名中的参数类型相等，个数相等。当你希望ruby方法接收一个或者多个参数的时候，可在普通的参数名前放置一个星号(*),比如：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;  “&lt;span class=&quot;constant&quot;&gt;Received&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#{arg1} and #{rest.join(', ')}”&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and &amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and two&amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;three&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and two, three&amp;quot;&lt;/span&gt;以上代码出自《&lt;span class=&quot;ident&quot;&gt;programming&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;ruby&lt;/span&gt; 中文版》&lt;span class=&quot;ident&quot;&gt;p80&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;在这里，varargs方法的第二个形参前有一个星号，表示将方法中第二个以后的所有参数都装到一个数组当中，然后赋值给rest. 所以当方法声名的参数前边又一个*的时候，代表：将方法调用时传入的所有&lt;b&gt;除之前已匹配完毕的参数外的剩余参数&lt;/b&gt;放入一个Array并将其赋值给*后边的形参。2. 我们也经常会见到在方法声名的参数当中有“&amp;args”的形式，比如&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;keyword&quot;&gt;class &lt;/span&gt;&lt;span class=&quot;class&quot;&gt;TaxCalculator&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&amp;amp;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;attribute&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;@block&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;block&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;punct&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;expr&quot;&gt;#{@name}&lt;/span&gt; on &lt;span class=&quot;expr&quot;&gt;#{amount}&lt;/span&gt; = &lt;span class=&quot;expr&quot;&gt;#{@block.call(amount)}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;TaxCalculator&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;Sales tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;){|&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;amt&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;amt&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.075&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Sales tax on 100 = 7.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Sales tax on 250 = 18.75&amp;quot;&lt;/span&gt;以上代码出自《&lt;span class=&quot;ident&quot;&gt;programming&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;ruby&lt;/span&gt; 中文版》&lt;span class=&quot;ident&quot;&gt;p81&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;当方法的&lt;b&gt;最后一个参数&lt;/b&gt;前缀为&amp;,那么改方法调用的后边可以跟一个block，同时方法会将block转换为一个Proc对象，然后赋值给该参数。3. 我们经常可以在rails的文档中看到这种方法声名：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;
no
textile&gt;&lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;={})&lt;/span&gt;  &lt;span class=&quot;punct&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;然后我们调用的时候可以以任意的顺序传入key=&gt;value hash pair 如：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;ident&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,...)&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;在参数列表中，&lt;b&gt;当hash参数在正常参数之后,并且位于任何数组或block参数之前&lt;/b&gt;，我们就可以直接用key=&gt;value对，而不用加{}。所有的这些key=&gt;value对会被集合到一个hash，然后赋值给形参，传入方法。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2007-06-26 05:00:54</wp:post_date>
		<wp:post_date_gmt>2007-06-26 05:00:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e4%b8%ad%e7%9a%84%e6%96%b9%e6%b3%95%e8%b0%83%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>来,Rubyize你的代码～</title>
		<link>http://www.iceskysl.com/?p=74</link>
		<pubDate>Tue, 26 Jun 2007 01:12:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[了解Ruby语法的朋友应该对Ruby的语法和表达形式很惊叹，这都要归功与Ruby强大的表达能力，有的时候，把以前的写的不完善的代码Ruby化不仅能加深对Ruby的理解，还能提高代码质量，更加可读，或者说更加Ruby一些～好，下面举个例子来说明一下，希望有见解的朋友能分享你的写法。&lt;code&gt;      def manage_ducks(ducks)        if ducks == nil          ducks = fetch_some_champions        else          unless ducks.won_stanley_cup?               ducks = fetch_some_champions          end        end        ducks.beat_random_opponent      end&lt;/code&gt;如果是刚刚解除Ruby的话，上面这段代码可能就是你写出来的，她虽然可行，但是一点都不符合ruby的风格，你将怎么改呢～请留言分享～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2007-06-26 01:12:19</wp:post_date>
		<wp:post_date_gmt>2007-06-26 01:12:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9d%a5rubyize%e4%bd%a0%e7%9a%84%e4%bb%a3%e7%a0%81%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog Version1.0.1可以下载了！</title>
		<link>http://www.iceskysl.com/?p=75</link>
		<pubDate>Sun, 24 Jun 2007 16:50:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[不好意思，今天出去有点事情，回来晚了点，结果就没能赶在0点之前发布，对不起了～现在可以下载了，为了保持1ster的ROR技术笔记氛围，不在这里提供下载了，将下载统一转到*1sters.com*站上，请大家前去下载，谢谢～为了再以后发布新版本的时候能迅速通知到大家，这次要求要下载的朋友提供邮箱，下次发布将第一时间通知各位，谢谢～下载页面：http://www.1sters.com/download谢谢大家支持～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2007-06-24 16:50:02</wp:post_date>
		<wp:post_date_gmt>2007-06-24 16:50:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog-version1-0-1%e5%8f%af%e4%bb%a5%e4%b8%8b%e8%bd%bd%e4%ba%86%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1stlog Version1.0.1即将发布～</title>
		<link>http://www.iceskysl.com/?p=76</link>
		<pubDate>Sat, 23 Jun 2007 16:29:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[1stlog Version1.0.1即将发布～1、添加一些必须的数据库初始化脚本2、完善定制模板的实现原理3、修复文件拷贝在UNIX下不工作的4、后台界面修改为中文的5、添加了一个Youtube的组件6、修改了模板定制的规范7、增加初次安装注册管理员8、制定组件编写规范包和文档都整理好了，实在太困了，明天发布吧～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2007-06-23 16:29:01</wp:post_date>
		<wp:post_date_gmt>2007-06-23 16:29:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog-version1-0-1%e5%8d%b3%e5%b0%86%e5%8f%91%e5%b8%83%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一个很棒的Find方法！</title>
		<link>http://www.iceskysl.com/?p=77</link>
		<pubDate>Fri, 22 Jun 2007 12:47:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[今天CFC问我有没有用过find(:all, :select =&gt; )这个用法，别说，还真没有用过，直接告诉我应该是可以取指定的字段。果不其然，比如我要取Contact表的id和name两个字段，可以有兩種寫法，一個是find，一個是find_by_sql，如下：&lt;code&gt;Contact.find(:all, :select =&gt; &quot;id, name&quot;)Contact.find_by_sql(&quot;SELECT id, name FROM `contacts`&quot;)&lt;/code&gt;这两种写法效果是一样的，怎么样，是不是比较棒呀？可能你还要问这个写法有什么好处呀？写过rails的朋友应该对它的Find方法很熟悉，但是Find是一次吧所有字段都取出来，如果字段内容比较多，会耗费很多的内存的哦，这样的话，我们只取需要的字段就OK了。你还有什么想法，欢迎留言讨论～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2007-06-22 12:47:16</wp:post_date>
		<wp:post_date_gmt>2007-06-22 12:47:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e4%b8%aa%e5%be%88%e6%a3%92%e7%9a%84find%e6%96%b9%e6%b3%95%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>乱码,警惕编辑器的编码～</title>
		<link>http://www.iceskysl.com/?p=78</link>
		<pubDate>Fri, 22 Jun 2007 10:37:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=78</guid>
		<description></description>
		<content:encoded><![CDATA[今天没什么事情，写个小的问题分析系统，在数据库初始化的时候，用了&lt;code&gt;  def self.up    create_table :priorities do |t|    t.column :name, :string, :default =&gt; &quot;&quot;    t.column :desc, :string, :default =&gt; &quot;&quot;    end    Priority.new(:name=&gt;&quot;一级&quot;,:desc=&gt;&quot;很紧急,4-8小时完成&quot;).save    Priority.new(:name=&gt;&quot;二级&quot;,:desc=&gt;&quot;紧急,8-24小时完成&quot;).save    Priority.new(:name=&gt;&quot;三级&quot;,:desc=&gt;&quot;一般,24－48小时完成&quot;).save    Priority.new(:name=&gt;&quot;四级&quot;,:desc=&gt;&quot;不紧急,48小时以上&quot;).save    Priority.new(:name=&gt;&quot;不详&quot;,:desc=&gt;&quot;不详&quot;).save  end&lt;/code&gt;遇到下列错误bq. ./db/migrate//003_create_priorities.rb:10: Invalid char `\274' in expression./db/migrate//003_create_priorities.rb:10: Invalid char `\266' in expression./db/migrate//003_create_priorities.rb:10: Invalid char `\262' in expression./db/migrate//003_create_priorities.rb:10: Invalid char `\273' in expression./db/migrate//003_create_priorities.rb:10: Invalid char `\275' in expression./db/migrate//003_create_priorities.rb:10: syntax error, unexpected tIDENTIFIER, expecting kEND  Priority.new(:name=&gt;&quot;四级&quot;,:desc=&gt;&quot;不紧急，48小时以上&quot;).save真是ft，感觉是编码的问题，我数据库用的是UTF-8呀，我在environment.rb也加了$KCODE = 'u' require 'jcode'了呀，我在application.rb也写了:configure_charsets了下，我在数据库配置文件也加了encoding: utf8了呀。这个问题搞得我一肚子火，最后想到了，还有一处编码需要注意，那就是文件的编码，也就是把radrails的editor默认字符集改成utf-8。寒～真是ft，大家遇到类似问题千万记住呀，需要检查下面几个地方～ # 数据库编码 # application.rb # environment.rb # database.yml]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2007-06-22 10:37:52</wp:post_date>
		<wp:post_date_gmt>2007-06-22 10:37:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b9%b1%e7%a0%81%e8%ad%a6%e6%83%95%e7%bc%96%e8%be%91%e5%99%a8%e7%9a%84%e7%bc%96%e7%a0%81%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于HAML的一点点想法～</title>
		<link>http://www.iceskysl.com/?p=79</link>
		<pubDate>Fri, 22 Jun 2007 01:32:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[大清早的，CFC就给我推荐HAML,说未来必将流行，这个东西以前我关注过，无非是使用一种规定的标记来替代RHTML，在显示的时候反向解析（这是我的理解），CFC给我看了他写的一篇文章（没有找到单篇的RSS，只能COPY过来啦==&quot;），内容如下：---------------------------最近開始接觸HAML在Rails中，預設使用ERb來當作模板描述語言，可是這樣寫個人認為非常醜也非常累...而之前看到HAML時感覺到那東西似乎沒有太大的可用性，難道要Designer也學Ruby嗎？不過後來我想通了..架構這部分可以給Coder作，Designer乖乖設計CSS就夠了..來看看底下這個Sample吧：*這是rhtml*&lt;code&gt;&lt;div id='content'&gt;    &lt;div class='left column'&gt;      &lt;h2&gt;Welcome to our site!&lt;/h2&gt;      &lt;p&gt;        &lt;%= print_information %&gt;      &lt;/p&gt;    &lt;/div&gt;    &lt;div class=&quot;right column&quot;&gt;      &lt;%= render :partial =&gt; &quot;sidebar&quot; %&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/code&gt;*這是HAML*&lt;code&gt;    #content    .left.column      %h2 Welcome to our site!      %p= print_information    .right.column= render :partial =&gt; &quot;sidebar&quot;&lt;/code&gt;看！少了多少行？可以讓開發速度變快耶= v =...最主要的是，看起來也比較美觀了！--------------------------说说偶的看法：（基本上是不推荐的）1、多了一次解析反解析，效果难道不受影响（除非是直接解析成html）2、难道要Designer也學Ruby嗎？同问？3、我把RHTML分成 局部模板，单个文件就不会很大，也很简单。4、美观么？ruby本来是不强制缩进的，这个东西还要求缩进~=_=~有谁再给出一些理由呢？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2007-06-22 01:32:50</wp:post_date>
		<wp:post_date_gmt>2007-06-22 01:32:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8ehaml%e7%9a%84%e4%b8%80%e7%82%b9%e7%82%b9%e6%83%b3%e6%b3%95%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[lzqustc]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.211.115.6</wp:comment_author_IP>
			<wp:comment_date>2008-12-30 09:47:42</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能否让scaffold直接生成haml呢?
还是需要手动将rhtml改为haml？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>关于rails启动报500错误的可能问题点</title>
		<link>http://www.iceskysl.com/?p=80</link>
		<pubDate>Wed, 20 Jun 2007 03:24:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[当你启动rails的时候可能会遇到500错误“500- Premature end of script.”或者类似的错误，使得程序跑不起来～问题可能出在两个地方：    1、 The file permissions are not set to allow the dispatch.cgi to execute properly.      Chmod the dispatch.cgi to +0755+.    2、The path to Ruby is is incorrect in the dispatch.cgi file.      The first line of the file is called the shebang-- it sets the location of the intrepretor (in this case ruby).      Change the shebang to the correct path to Ruby (/usr/bin/ruby).      The first line of the dispatch.cgi file should look like this:      #!/usr/bin/ruby]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2007-06-20 03:24:55</wp:post_date>
		<wp:post_date_gmt>2007-06-20 03:24:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8erails%e5%90%af%e5%8a%a8%e6%8a%a5500%e9%94%99%e8%af%af%e7%9a%84%e5%8f%af%e8%83%bd%e9%97%ae%e9%a2%98%e7%82%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Rails中用Gmail发送邮件</title>
		<link>http://www.iceskysl.com/?p=81</link>
		<pubDate>Tue, 19 Jun 2007 04:25:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[在rails中配置发送邮件还是比较简单的，但是由于rails还不支持TLS，也就是说默认的情况下是不可以通过gmail来发送邮件的，还好，老外改写了一个类库，使得我们可以使用gmail来发送了。步骤如下：1、把附件smtp_tls.rb放在你的/lib/smtp_tls.rb下。2.然后在你的environment.rb中添加require ‘smtp_tls’3.配置邮件服务器&lt;code&gt;ActionMailer::Base.server_settings = {:address =&gt; &quot;smtp.gmail.com&quot;,:port =&gt; &quot;587&quot;,:domain =&gt; &quot;localhost.localdomain&quot;,:authentication =&gt; :plain,:user_name =&gt; &quot;someusername&quot;,:password =&gt; &quot;somepassword&quot;}&lt;/code&gt;需要注意的是，该版本只支持ruby1.8.4及其以上版本。参考：http://blog.pomozov.info/posts/how-to-send-actionmailer-mails-to-gmailcom.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2007-06-19 04:25:43</wp:post_date>
		<wp:post_date_gmt>2007-06-19 04:25:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e7%94%a8gmail%e5%8f%91%e9%80%81%e9%82%ae%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gmail"><![CDATA[Gmail]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>技能云(iTechTag)二期功能收集整理</title>
		<link>http://www.iceskysl.com/?p=5</link>
		<pubDate>Wed, 05 Sep 2007 14:19:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>技能云(<a href="http://www.itechtag.com">iTechTag</a>)从策划到一期的实现，经历了不少的波折，现在终于稳定，就朋友们的反应来看还是比较认同的，都认为是个很好的Idea，也有很多人鼓励支持我，很是激动，于是再接再厉，收集整理第二期需求，并加快开发速度。<br />
<br />
目前已经有好几个朋友提到了几个不错的功能，记录于此，以免遗忘，我们会筛选优先级加以实现，谢谢这些给我建议的朋友，也希望更多的人能提一些建议和意见，您的关注将激励我不断前行。<br />
<br />
<strong>庄表伟：</strong><br />
一个非常榜的主意！我曾经有另一个类似的设想，每个人都有一个地方记录自己的项目经验和教训。比如：多少人做了一个项目，在哪些方面是成功的，在哪些方面是失败的。<br />
<br />
<strong>冰云：</strong><br />
我曾经也有类似的想法。不妨考虑把个人的经历组织起来，形成一个人的视图。这个视图可以看作是个人门户，包括做过的项目（可以查看做过这个项目的还有谁），写的blog（从个人blog来聚合），参与的论坛（例如JavaEye），发表过的文章，别人的评价等等。综合起来可以提供信息给其他网站，例如获取一个人的简历，或者别人对他的评价 。<br />
<br />
<strong>IceskYsl:</strong></p>
<p>维护公司的基本信息,比如可以修改该公司的地址，简介，等等。。考虑提供对其公司的评价，顶、踩等功能，以展示该公司在大家心目中的样子，而求职者一些游泳的参考。<br />
<br />
<strong>IceskYsl:</strong><br />
生成简历, 个人简历生成。<br />
<br />
<strong>David：</strong><br />
把个人技能做成论坛前面图片。<br />
<br />
<strong>霍泰稳：</strong><br />
做项目肯定会遇到各种各样的问题<br />
而项目经理的问题差不多<br />
他们肯定想和有类似问题的人交流</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>技能云(<a href="http://www.itechtag.com/">iTechTag</a>)从策划到一期的实现，经历了不少的波折，现在终于稳定，就朋友们的反应来看还是比较认同的，都认为是个很好的Idea，也有很多人鼓励支持我，很是激动，于是再接再厉，收集整理第二期需求，并加快开发速度。<br />
<br />
目前已经有好几个朋友提到了几个不错的功能，记录于此，以免遗忘，我们会筛选优先级加以实现，谢谢这些给我建议的朋友，也希望更多的人能提一些建议和意见，您的关注将激励我不断前行。</p>]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2007-09-05 14:19:00</wp:post_date>
		<wp:post_date_gmt>2007-09-05 14:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e4%ba%8c%e6%9c%9f%e5%8a%9f%e8%83%bd%e6%94%b6%e9%9b%86%e6%95%b4%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.83.181</wp:comment_author_IP>
			<wp:comment_date>2007-09-21 12:26:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>>下次访问时自动登录
Reported by gigix1980, Yesterday (26 hours ago)
作为用户，我希望iTechTag在登录时给我选择“自动登录”的机会，这样我在下次访问
时就不用再次登录。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[icefox]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://admin_fox@163.com</wp:comment_author_url>
			<wp:comment_author_IP>218.7.40.208</wp:comment_author_IP>
			<wp:comment_date>2007-09-26 09:29:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真心想加入你们小组1ST 小弟在黑吧做一个小小的斑竹 技术实在不怎么样 但我有一棵对技术热爱的心 一棵永远不会倦怠的心！
                                 By:         1c3f0x
                                                 QQ:     383055050]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[weskycn]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weskycn@126.com</wp:comment_author_url>
			<wp:comment_author_IP>219.141.211.94</wp:comment_author_IP>
			<wp:comment_date>2007-09-28 17:25:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[想问一下,你们的主机是放在哪里的?自己的还是虚拟主机?
谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pengshourong@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>61.131.229.126</wp:comment_author_IP>
			<wp:comment_date>2007-09-28 22:48:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[gigix 在 javaeye 的文章：声望创造价值 貌似可以参考作为网站标题：比如 技术声望创造价值， 比hi 我的技能云好点吧，]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>为技能云的绽放贡献自己的力量！</title>
		<link>http://www.iceskysl.com/?p=6</link>
		<pubDate>Wed, 05 Sep 2007 15:08:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.itechtag.com/">技能云</a>上线测试这么些天来，得到不少朋友的支持和鼓励，不少朋友甚至还特意写了文章介绍过，在此表示感谢，一下列举几篇我看到的推荐&ldquo;技能云&rdquo;的几篇文章，如果你曾写过关于&ldquo;技能云&rdquo;的文章，请通过回复让我们知晓，谢谢！<br />
<br />
<a href="http://swordi.com/2007/08/20/itechtag-and-coroflot-sns-for-psf/">个人品牌：程序同人，我们的声望被严重低估了</a>。(小容)<br />
<a href="http://gigix.thoughtworkers.org/2007/8/17/itechtag-%E9%87%8D%E5%BB%BA%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E5%A3%B0%E6%9C%9B">iTechTag: 重建软件开发者的声望</a>(透明思考)<br />
<a href="http://gigix.javaeye.com/blog/post/369076">iTechTag：声望创造价值</a>(透明之眼)<br />
<a href="http://blog.csdn.net/gigix/archive/2007/09/01/1768328.aspx">iTechTag：声望创造价值</a>(透明思考@CSDN)<br />
<a href="http://groups.google.com/group/agilechina/browse_thread/thread/219216ec4efa788b">iTechTag: 记录程序员的声望</a>(敏捷中国)</p>
<p>为了让这朵&ldquo;技能云&rdquo;更好的绽放，欢迎也感谢所有写过介绍、推荐、说明&ldquo;技能云&rdquo;的文章，如果你写了一篇关于&ldquo;技能云&rdquo;的文章，请让我们知道，一起见证它的绽放！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://www.itechtag.com/">技能云</a>上线测试这么些天来，得到不少朋友的支持和鼓励，不少朋友甚至还特意写了文章介绍过，在此表示感谢，一下列举几篇我看到的推荐&ldquo;技能云&rdquo;的几篇文章，如果你曾写过关于&ldquo;技能云&rdquo;的文章，请通过回复让我们知晓，谢谢！<br />
<br />
<a href="http://swordi.com/2007/08/20/itechtag-and-coroflot-sns-for-psf/">个人品牌：程序同人，我们的声望被严重低估了</a>。(小容)<br />
<a href="http://gigix.thoughtworkers.org/2007/8/17/itechtag-%E9%87%8D%E5%BB%BA%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E5%A3%B0%E6%9C%9B">iTechTag: 重建软件开发者的声望</a>(透明思考)<br />
<a href="http://gigix.javaeye.com/blog/post/369076">iTechTag：声望创造价值</a>(透明之眼)<br />
<a href="http://blog.csdn.net/gigix/archive/2007/09/01/1768328.aspx">iTechTag：声望创造价值</a>(透明思考@CSDN)<br />
<a href="http://groups.google.com/group/agilechina/browse_thread/thread/219216ec4efa788b">iTechTag: 记录程序员的声望</a>(敏捷中国)</p>
<p>为了让这朵&ldquo;技能云&rdquo;更好的绽放，欢迎也感谢所有写过介绍、推荐、说明&ldquo;技能云&rdquo;的文章，如果你写了一篇关于&ldquo;技能云&rdquo;的文章，请让我们知道，一起见证它的绽放！</p>]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2007-09-05 15:08:32</wp:post_date>
		<wp:post_date_gmt>2007-09-05 15:08:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ba%e6%8a%80%e8%83%bd%e4%ba%91%e7%9a%84%e7%bb%bd%e6%94%be%e8%b4%a1%e7%8c%ae%e8%87%aa%e5%b7%b1%e7%9a%84%e5%8a%9b%e9%87%8f%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[eyes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.1ster.cn</wp:comment_author_url>
			<wp:comment_author_IP>219.134.211.18</wp:comment_author_IP>
			<wp:comment_date>2007-09-13 08:51:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[写给我那还没有飘来的技能云
http://www.blogjava.net/ponzmd/archive/2007/09/12/143489.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.83.181</wp:comment_author_IP>
			<wp:comment_date>2007-09-21 12:17:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To技能云：还请耐住寂寞
               ——送给IceskYsl的“困惑”
http://www.blogjava.net/ponzmd/archive/2007/09/19/146314.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>好久没通宵了，偶尔来下还行！</title>
		<link>http://www.iceskysl.com/?p=7</link>
		<pubDate>Thu, 06 Sep 2007 04:20:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上学那会经常通宵写程序、做设计、编稿子等，特别是那年暑假的时候几乎完全是颠倒的，太阳升起的时候我准时出门去&ldquo;过早&rdquo;，而后回宿舍睡觉到下午3点，吃点东西去球场，也挺不错的；</p>
<p>工作后就没有怎么那么晚了，偶尔周末的时候晚一点，但是会在凌晨3点前睡觉，为了自己给某些人的承诺，也为了自己不那么快的衰老（谁说熬夜会衰老的），尽管每次都抓紧时间写代码，做设计，但是很久都不曾通宵了。</p>
<p>今天项目组升级现网，做为项目开发组接口，需要留下来配合SS升级，从晚上7点开始一直干到早上8点多，几十台服务器，十几个子系统的升级，浩浩荡荡呀，虽然出现了一些问题，但是还好有惊无险，一切都还顺利。</p>
<p>敲了24小时的键盘了，手指都不灵活了～好久不曾通宵～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>上学那会经常通宵写程序、做设计、编稿子等，特别是那年暑假的时候几乎完全是颠倒的，太阳升起的时候我准时出门去&ldquo;过早&rdquo;，而后回宿舍睡觉到下午3点，吃点东西去球场，也挺不错的；</p>
<p>工作后就没有怎么那么晚了，偶尔周末的时候晚一点，但是会在凌晨3点前睡觉，为了自己给某些人的承诺，也为了自己不那么快的衰老（谁说熬夜会衰老的），尽管每次都抓紧时间写代码，做设计，但是很久都不曾通宵了。</p>
<p>今天项目组升级现网，做为项目开发组接口，需要留下来配合SS升级，从晚上7点开始一直干到早上8点多，几十台服务器，十几个子系统的升级，浩浩荡荡呀，虽然出现了一些问题，但是还好有惊无险，一切都还顺利。</p>
<p>敲了24小时的键盘了，手指都不灵活了～好久不曾通宵～</p>]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2007-09-06 04:20:11</wp:post_date>
		<wp:post_date_gmt>2007-09-06 04:20:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a5%bd%e4%b9%85%e6%b2%a1%e9%80%9a%e5%ae%b5%e4%ba%86%ef%bc%8c%e5%81%b6%e5%b0%94%e6%9d%a5%e4%b8%8b%e8%bf%98%e8%a1%8c%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>新注册了一个NET域名～</title>
		<link>http://www.iceskysl.com/?p=8</link>
		<pubDate>Thu, 06 Sep 2007 05:00:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>偶以前创办的&ldquo;天马行空技术组（1.S.T）&rdquo;的域名到期了，几个朋友说天马需要革新了，于是大家决定从头再来，一个暂新的开始，于是我们打算改变，原来的域名1steam.cn不打算续费了，大家一致同意采用新的域名1sters.net,我们重新开始。</p>
<p>正好装上芒果，立即申请下这个域名，然后做指向，再翻出N久N久前偶和另外一个朋友整的一个logo图片；再去阿里妈妈申请了个帐号，拿来一个广告，一起放在主页上，至于里面的东西，我们会按照讨论的模式重新开始。</p>
<p>至于是什么杨的模式，不久后就可见分晓，不多言，有兴趣的朋友继续关注1sters.net的发展。</p>
<p>附录：1.S.T简介</p>
<p>天马行空(1.S.T),是一个纯技术型研究小组,如同天马自由自在、灵气十足。 主要致力于软件开发、Web设计、网络安全及其相关技术的学习和研究;纯小组成员个人爱好,无任何商业赢利成份.</p>
<p>小组坚持原创,追求自由；小组成员平等互助,一起进步;诣在塑造一个和平轻松,自由快乐的环境，我们的梦想是有一天，我们都可以在个人喜好的领域扬眉吐气，天马行空...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>偶以前创办的&ldquo;天马行空技术组（1.S.T）&rdquo;的域名到期了，几个朋友说天马需要革新了，于是大家决定从头再来，一个暂新的开始，于是我们打算改变，原来的域名1steam.cn不打算续费了，大家一致同意采用新的域名<a href="http://www.1sters.net,">1sters.net,</a>我们重新开始。</p>
<p>正好装上芒果，立即申请下这个域名，然后做指向，再翻出N久N久前偶和另外一个朋友整的一个logo图片；再去阿里妈妈申请了个帐号，拿来一个广告，一起放在主页上，至于里面的东西，我们会按照讨论的模式重新开始。</p>
<p>至于是什么杨的模式，不久后就可见分晓，不多言，有兴趣的朋友继续关注1sters.net的发展。</p>
<p>附录：1.S.T简介</p>]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2007-09-06 05:00:52</wp:post_date>
		<wp:post_date_gmt>2007-09-06 05:00:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e6%b3%a8%e5%86%8c%e4%ba%86%e4%b8%80%e4%b8%aanet%e5%9f%9f%e5%90%8d%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>有惊无险，玩心跳～</title>
		<link>http://www.iceskysl.com/?p=9</link>
		<pubDate>Thu, 06 Sep 2007 16:01:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天夜里通宵，今天回家睡觉，中午醒来的时候打开电脑突然发现&ldquo;技能云&rdquo;和&ldquo;第一次&rdquo;均无法打开，寒呀，急呀，怎么回事，一切来的都太突然了。</p>
<p>我记得早上睡觉的时候还是好好的呢，抓紧解决中。。</p>
<p>google一批资料均没有什么大的作用，应该不会是我配置的问题吧，先前可以跑的嘛，google到的资料一般说的就下面：</p>
<p>修改plublic目录下的dispatch.*的三个文件中的头为服务器上ruby的路径，如bluehost是&rdquo;/usr/bin/ruby&rdquo;</p>
<p>还是不行，真是见鬼了，后来直接rails mygod生成一个，把上面几个文件连同.htaccess搞下来看看，有点不一样，急忙替换上去后，重启后，技能云终于可以访问，比较下异同，最大的区别就是这句：</p>
<p>RewriteRule ^(.*)$ dispatch.cgi [QSA,L]</p>
<p>原来使用的是dispatch.fcgi的，难道这个也。。奇怪中。。</p>
<p>还发SMS给偶兄弟彭了呢，把他从半路上搞了回来，真囧～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>昨天夜里通宵，今天回家睡觉，中午醒来的时候打开电脑突然发现&ldquo;技能云&rdquo;和&ldquo;第一次&rdquo;均无法打开，寒呀，急呀，怎么回事，一切来的都太突然了。</p>
<p>我记得早上睡觉的时候还是好好的呢，抓紧解决中。。</p>
<p>google一批资料均没有什么大的作用，应该不会是我配置的问题吧，先前可以跑的嘛，google到的资料一般说的就下面：</p>
<p>修改plublic目录下的dispatch.*的三个文件中的头为服务器上ruby的路径，如bluehost是&rdquo;/usr/bin/ruby&rdquo;</p>
<p>还是不行，真是见鬼了，后来直接rails mygod生成一个，把上面几个文件连同.htaccess搞下来看看，有点不一样，急忙替换上去后，重启后，技能云终于可以访问，比较下异同，最大的区别就是这句：</p>
<p>RewriteRule ^(.*)$ dispatch.cgi [QSA,L]</p>
<p>原来使用的是dispatch.fcgi的，难道这个也。。奇怪中。。</p>
<p>还发SMS给偶兄弟彭了呢，把他从半路上搞了回来，真囧～</p>]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2007-09-06 16:01:57</wp:post_date>
		<wp:post_date_gmt>2007-09-06 16:01:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%89%e6%83%8a%e6%97%a0%e9%99%a9%ef%bc%8c%e7%8e%a9%e5%bf%83%e8%b7%b3%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[bet365]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.bet365.net.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.20.19.92</wp:comment_author_IP>
			<wp:comment_date>2008-01-15 20:39:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[网站合作已经是被各网站很好的应用，地方网站更容易进行相关合作]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>最近好多事情～</title>
		<link>http://www.iceskysl.com/?p=10</link>
		<pubDate>Mon, 10 Sep 2007 19:59:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近好多事情，业余的事情进展很缓慢～项目的事情好多，设计，编码，</p>
<p>升级，部署，扩容，一大堆了，一个patch加上一个patch，一个版本接着一个版本，快顶不主了，都～ 觉得都是重复劳动，做这样的事情不是我的性格和风格，也不符合我追寻的风格。</p>
<p>还记得有人说过：现实中可以稍微的低头，但是心目中的那个脑袋一定要是高昂着的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近好多事情，业余的事情进展很缓慢～项目的事情好多，设计，编码，</p>
<p>升级，部署，扩容，一大堆了，一个patch加上一个patch，一个版本接着一个版本，快顶不主了，都～ 觉得都是重复劳动，做这样的事情不是我的性格和风格，也不符合我追寻的风格。</p>
<p>还记得有人说过：现实中可以稍微的低头，但是心目中的那个脑袋一定要是高昂着的。</p>]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2007-09-10 19:59:50</wp:post_date>
		<wp:post_date_gmt>2007-09-10 19:59:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%80%e8%bf%91%e5%a5%bd%e5%a4%9a%e4%ba%8b%e6%83%85%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pengshourong@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>61.131.229.126</wp:comment_author_IP>
			<wp:comment_date>2007-09-28 23:33:53</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我会一直支持你！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[xingruofei]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xingruofei@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>221.222.13.247</wp:comment_author_IP>
			<wp:comment_date>2007-10-29 12:56:52</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[说得对！支持～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>PS命令查看进程详细参数～</title>
		<link>http://www.iceskysl.com/?p=11</link>
		<pubDate>Tue, 11 Sep 2007 10:13:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[<p>遇到一个问题需要查看下当前进程中执行到哪条命令了，于是</p>
<p>使用ps -ef | grep java，无奈看不全参数，于是google，请教了下其他同学，得到：</p>
<div class="codeText">
<div class="codeHead">LUNIX代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ps&nbsp;-auxww&nbsp;|&nbsp;more&nbsp;&nbsp;</span></span></li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>遇到一个问题需要查看下当前进程中执行到哪条命令了，于是</p>
<p>使用ps -ef | grep java，无奈看不全参数，于是google，请教了下其他同学，得到：</p>
<div class="codeText">
<div class="codeHead">LUNIX代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ps&nbsp;-auxww&nbsp;|&nbsp;more&nbsp; <br />
    </span></span></li>
</ol>
</div>]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2007-09-11 10:13:51</wp:post_date>
		<wp:post_date_gmt>2007-09-11 10:13:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ps%e5%91%bd%e4%bb%a4%e6%9f%a5%e7%9c%8b%e8%bf%9b%e7%a8%8b%e8%af%a6%e7%bb%86%e5%8f%82%e6%95%b0%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云(iTechTag)下一步需要实现的功能！</title>
		<link>http://www.iceskysl.com/?p=12</link>
		<pubDate>Tue, 11 Sep 2007 11:21:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[<p>恩，做互联网，尤其是做web2的人都知道beta是什么意思，技能云的理想模式也是web2的，所以也一直在beta阶段。</p>
<p>也许透明同学说的对&ldquo;可以说很快，大概两周就上线了；也可以说一直没有开发完，不断的在提高和改善。这也是web 2.0的特点，永远都在beta。&quot;</p>
<p>初步规划了下当前最需求的功能如下：</p>
<p><strong>1、简历生成 </strong>-本来打算导出PDF的，但是ruby中我采用了FPDF来生成，总体效果还不错，但是不能自动换行和英文字符的显示都存在一些问题，于是打算先生成HTNL格式的好了。</p>
<p><strong>2、通知功能</strong>&nbsp; -当一个新功能上线的时候，可以给用户发送通知mail告诉他这个新功能，以及其使用，附带其他一些话语。</p>
<p><strong>3、邀请成员</strong>&nbsp; --这个很重要，现在发完一个项目后，往往就提交项目后自己加入了，但是项目的 其他人并不知道，于是需要这个功能，使得可以针对项目发出邀请。输入对方的mail和你需要说的话，附带上项目URL已经注册，登录URL等发给被邀请者。</p>
<p><strong>4、用户自定义</strong>&nbsp; --需要给用户提供定制功能，比如是否需要接收新功能通知等。</p>
<p>先就规划这么多，快速实现之再规划下一步需要的功能～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>恩，做互联网，尤其是做web2的人都知道beta是什么意思，技能云的理想模式也是web2的，所以也一直在beta阶段。</p>
<p>也许透明同学说的对&ldquo;可以说很快，大概两周就上线了；也可以说一直没有开发完，不断的在提高和改善。这也是web 2.0的特点，永远都在beta。&quot;</p>
<p>初步规划了下当前最需求的功能如下：</p>
<p><strong>1、简历生成 </strong>-本来打算导出PDF的，但是ruby中我采用了FPDF来生成，总体效果还不错，但是不能自动换行和英文字符的显示都存在一些问题，于是打算先生成HTNL格式的好了。</p>
<p><strong>2、通知功能</strong>&nbsp; -当一个新功能上线的时候，可以给用户发送通知mail告诉他这个新功能，以及其使用，附带其他一些话语。</p>
<p><strong>3、邀请成员</strong>&nbsp; --这个很重要，现在发完一个项目后，往往就提交项目后自己加入了，但是项目的 其他人并不知道，于是需要这个功能，使得可以针对项目发出邀请。输入对方的mail和你需要说的话，附带上项目URL已经注册，登录URL等发给被邀请者。</p>
<p><strong>4、用户自定义</strong>&nbsp; --需要给用户提供定制功能，比如是否需要接收新功能通知等。</p>
<p>先就规划这么多，快速实现之再规划下一步需要的功能～</p>]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2007-09-11 11:21:52</wp:post_date>
		<wp:post_date_gmt>2007-09-11 11:21:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e4%b8%8b%e4%b8%80%e6%ad%a5%e9%9c%80%e8%a6%81%e5%ae%9e%e7%8e%b0%e7%9a%84%e5%8a%9f%e8%83%bd%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.211.18</wp:comment_author_IP>
			<wp:comment_date>2007-09-13 12:03:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[4、用户自定义
--已经完成..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>技能云(iTechTag)的简历功能已经完成.</title>
		<link>http://www.iceskysl.com/?p=13</link>
		<pubDate>Thu, 13 Sep 2007 11:15:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天在家休息，自然想到正好有时间把<a href="http://www.itechtag.com/">技能云</a>的简历功能添加上，于是衣服都没来得及穿好就抱出本本干活，开点音乐，let's coding...<img border="0" src="http://blog.1sters.com/images/smiles/smile.gif" alt="" /></p>
<p>按照和<a href="http://gigix.thoughtworkers.org/">透明</a>同学讨论的结果，<a href="../../../?action=show&amp;id=12">生成简历</a>属于紧急需求，于是经过简单的规划设计就开始了，在<a href="http://www.itechtag.com/">技能云</a>的简历是按照技能云记载的你参与的项目自动生成的，辅助其他一些信息，比如你掌握的技能和扮演过的角色，生成一份能真实的展现自我实力的简历。</p>
<p>目前还不允许个人编辑自己的简历，这个后期看情况可能会加入（还要看情况），目前看不到这个需求。针对这个功能，还请各位提提意见和建议，以更加符合大家的口味，谢谢。</p>
<p>如想看看效果，可以看<a href="http://www.itechtag.com/people/resume/1">这里是我的简历</a>，其他人的简历，你可以在他们的介绍页面看到，登录后在最上方可以看到自己简历的链接，希望大家喜欢这个功能。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天在家休息，自然想到正好有时间把<a href="http://www.itechtag.com/">技能云</a>的简历功能添加上，于是衣服都没来得及穿好就抱出本本干活，开点音乐，let's coding...<img border="0" src="http://blog.1sters.com/images/smiles/smile.gif" alt="" /></p>
<p>按照和<a href="http://gigix.thoughtworkers.org/">透明</a>同学讨论的结果，<a href="../../../?action=show&amp;id=12">生成简历</a>属于紧急需求，于是经过简单的规划设计就开始了，在<a href="http://www.itechtag.com/">技能云</a>的简历是按照技能云记载的你参与的项目自动生成的，辅助其他一些信息，比如你掌握的技能和扮演过的角色，生成一份能真实的展现自我实力的简历。</p>
<p>目前还不允许个人编辑自己的简历，这个后期看情况可能会加入（还要看情况），目前看不到这个需求。针对这个功能，还请各位提提意见和建议，以更加符合大家的口味，谢谢。</p>
<p>如想看看效果，可以看<a href="http://www.itechtag.com/people/resume/1">这里是我的简历</a>，其他人的简历，你可以在他们的介绍页面看到，登录后在最上方可以看到自己简历的链接，希望大家喜欢这个功能。</p>]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2007-09-13 11:15:43</wp:post_date>
		<wp:post_date_gmt>2007-09-13 11:15:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e7%9a%84%e7%ae%80%e5%8e%86%e5%8a%9f%e8%83%bd%e5%b7%b2%e7%bb%8f%e5%ae%8c%e6%88%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>lunix操作技巧(一):tar和gzip及其压缩相关～</title>
		<link>http://www.iceskysl.com/?p=14</link>
		<pubDate>Sat, 15 Sep 2007 10:05:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[<p>老是忘记，干脆记下来好了～</p>
<p>最简提示：<br />
tar zxvf XXXX.tar.gz<br />
tar jxvf XXXX tar.bz2<br />
1.压缩一组文件为tar.gz后缀。<br />
# tar cvf backup.tar /etc #gzip -q backup.tar<br />
或<br />
# tar cvfz backup.tar.gz /etc/<br />
<br />
2.释放一个后缀为tar.gz的文件。<br />
#gunzip backup.tar.gz #tar xvf backup.tar<br />
或<br />
# tar xvfz backup.tar.gz<br />
<br />
3.用一个命令完成压缩<br />
#tar cvf - /etc/ | gzip -qc &gt; backup.tar.gz<br />
4.用一个命令完成释放<br />
# gunzip -c backup.tar.gz | tar xvf -<br />
<br />
5.如何解开tar.Z的文件？<br />
# tar xvfz backup.tar.Z 或 # uncompress backup.tar.Z #tar xvf backup.tar<br />
<br />
6.如何解开.tgz文件？<br />
#gunzip backup.tgz<br />
<br />
7.如何压缩和解压缩.bz2的包？<br />
#bzip2 /etc/smb.conf<br />
这将压缩文件smb.conf成smb.conf.bz2<br />
#bunzip2 /etc/smb.conf.bz2<br />
这将在当前目录下还原smb.conf.bz2为smb.conf<br />
<br />
(bzip2 -d也一样)<br />
注: .bz2压缩格式不是很常用，你可以man bzip2</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>老是忘记，干脆记下来好了～</p>
<p>最简提示：<br />
tar zxvf XXXX.tar.gz<br />
tar jxvf XXXX tar.bz2<br />
1.压缩一组文件为tar.gz后缀。<br />
# tar cvf backup.tar /etc #gzip -q backup.tar<br />
或<br />
# tar cvfz backup.tar.gz /etc/<br />
<br />
2.释放一个后缀为tar.gz的文件。<br />
#gunzip backup.tar.gz #tar xvf backup.tar<br />
或<br />
# tar xvfz backup.tar.gz<br />
<br />
3.用一个命令完成压缩<br />
#tar cvf - /etc/ | gzip -qc &gt; backup.tar.gz<br />
4.用一个命令完成释放<br />
# gunzip -c backup.tar.gz | tar xvf -<br />
<br />
5.如何解开tar.Z的文件？<br />
# tar xvfz backup.tar.Z 或 # uncompress backup.tar.Z #tar xvf backup.tar<br />
<br />
6.如何解开.tgz文件？<br />
#gunzip backup.tgz<br />
<br />
7.如何压缩和解压缩.bz2的包？<br />
#bzip2 /etc/smb.conf<br />
这将压缩文件smb.conf成smb.conf.bz2<br />
#bunzip2 /etc/smb.conf.bz2<br />
这将在当前目录下还原smb.conf.bz2为smb.conf<br />
<br />
(bzip2 -d也一样)<br />
注: .bz2压缩格式不是很常用，你可以man bzip2</p>]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2007-09-15 10:05:57</wp:post_date>
		<wp:post_date_gmt>2007-09-15 10:05:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lunix%e6%93%8d%e4%bd%9c%e6%8a%80%e5%b7%a7%e4%b8%80tar%e5%92%8cgzip%e5%8f%8a%e5%85%b6%e5%8e%8b%e7%bc%a9%e7%9b%b8%e5%85%b3%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>解决ubuntu下的rails开发时mysql的问题！</title>
		<link>http://www.iceskysl.com/?p=56</link>
		<pubDate>Tue, 31 Jul 2007 03:47:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[今天开电脑的时候没有注意选择，直接重启到前几天装的ubuntu下，于是懒得重新启动了，于是就在 ubuntu下继续开发好了，rails环境前几天就搭建好了,也测试过了，于是把源代码copy过来，重启后，初始化数据库，页面显示乱码，进数据库看看也是乱码，看来是有点问题。于是google了一把，抓住关键点，很快就解决了，以前在win下出现过乱码都解决了，所以这里针对ubuntu上的问题：1、配置sock地址另外还可能会出现一个错误No such file or directory - /tmp/mysql.sock这个是因为在ubuntu下默认的mysql是如上位置，于是在database.ym里面需要重新设置一下就ok了，如下：SQL代码   1. development:     2.   adapter: mysql     3.   database: sdroad_development     4.   username: root     5.   password:     6.   host: localhost     7.   socket: /var/run/mysqld/mysqld.sock 2、改变mysql编码，如下：1.） 修改mysql的配置文件 sudo gedit /etc/mysql/my.cnf在[client]下面增加 default-character=utf82. ）在mysql shell下建立数据库.create database 1ster default character set utf8;*同时发表：*http://weblog.1ster.cn/?action=show&amp;id=153]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2007-07-31 03:47:59</wp:post_date>
		<wp:post_date_gmt>2007-07-31 03:47:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3ubuntu%e4%b8%8b%e7%9a%84rails%e5%bc%80%e5%8f%91%e6%97%b6mysql%e7%9a%84%e9%97%ae%e9%a2%98%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>rails笔记 active controller</title>
		<link>http://www.iceskysl.com/?p=57</link>
		<pubDate>Tue, 31 Jul 2007 03:45:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[别人写的一篇文章，推荐整理下，如下地址：http://weblog.1ster.cn/?action=show&amp;id=150]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2007-07-31 03:45:51</wp:post_date>
		<wp:post_date_gmt>2007-07-31 03:45:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e7%ac%94%e8%ae%b0-active-controller</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>用Magick操作数据库blog字段的图像！</title>
		<link>http://www.iceskysl.com/?p=58</link>
		<pubDate>Tue, 31 Jul 2007 03:43:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[一直不是很喜欢用一些插件，一来觉得没有必要使用那么复杂的，一些特色功能我们完全可以写代码完成，比如用Magick操作图片等等，就很方便和简单；以前说过如何处理磁盘上的图片，今天看看如何用Magick操作数据库中blob字段的图片，看代码就明白咯，如果对你有用，记得谢谢我哈:)Ruby代码   1. #这个是用来生成用户图像的     2. def picture     3.   @user = User.find(params[:id])     4.    image = Magick::Image::from_blob(@user.data).first     5. #   clown = Magick::Image.read(.read).first     6.    image.crop_resized!(60, 60, Magick::NorthGravity)     7.   send_data(image.to_blob,     8.             :filename =&gt; @user.nickname,     9.             :type =&gt; @user.content_type,    10.             :disposition =&gt; &quot;inline&quot;)    11. end  有不明白的就留言问哈。同时发表于：http://weblog.1ster.cn/?action=show&amp;id=145]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2007-07-31 03:43:53</wp:post_date>
		<wp:post_date_gmt>2007-07-31 03:43:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8magick%e6%93%8d%e4%bd%9c%e6%95%b0%e6%8d%ae%e5%ba%93blog%e5%ad%97%e6%ae%b5%e7%9a%84%e5%9b%be%e5%83%8f%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>10 Great New Ruby / Rails Screencasts from July 2007</title>
		<link>http://www.iceskysl.com/?p=59</link>
		<pubDate>Mon, 30 Jul 2007 01:32:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=59</guid>
		<description></description>
		<content:encoded><![CDATA[这里列举了十个很不错的视频教程，但是都是老外的，打击可以看看，很不错的！http://www.rubyinside.com/12-great-new-ruby-rails-screencasts-from-july-2007-566.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2007-07-30 01:32:52</wp:post_date>
		<wp:post_date_gmt>2007-07-30 01:32:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>10-great-new-ruby-rails-screencasts-from-july-2007</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>mongrel启动时报错的解决</title>
		<link>http://www.iceskysl.com/?p=60</link>
		<pubDate>Sat, 21 Jul 2007 00:55:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[记不得时候在本地机子上安装了mongrel，今天把1stlog用mongrel运行时，报告：-e:3:in `load': no such file to load -- mongrel_rails (LoadError)	from -e:3看错误提示貌似mongrel_rails 这个加载不到，那么应该就是配置的问题了，问题解决如下：找到RadRails的 preferences &gt; Rails &gt; configuration ，在这里指定mongrel_rails的路径就可以了（注意不是bat也不是cmd，而是那个没有后缀的）ok，解决了，如果有谁遇到这个问题，也算帮忙了。呵呵。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2007-07-21 00:55:52</wp:post_date>
		<wp:post_date_gmt>2007-07-21 00:55:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongrel%e5%90%af%e5%8a%a8%e6%97%b6%e6%8a%a5%e9%94%99%e7%9a%84%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>警惕rails中的保留字带来的问题～</title>
		<link>http://www.iceskysl.com/?p=61</link>
		<pubDate>Thu, 12 Jul 2007 13:10:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[这个问题还真一直没有关注过，只是晓得rails和ruby中有些关键字、保留字，也没太注意，昨天开始遇到一个很奇怪的问题，我建立了一个用来存放友情链接的表links，里面有title，desc，*type*，created_at等字段，然后在controller中取记录的时候类似如下语句：  @friend_links = Link.find(:all, :conditions =&gt; { :type =&gt; 1, :visible =&gt; 1 })貌似一切都很平常，却发生如下的错误：compile errorD:/soft/ruby/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/base.rb:1358: syntax errorObject::1一切都很平常呀，试着换个find的写法，还是一样出问题，真是够邪门的～！然后今天问了几个朋友，也说奇怪，没有遇到过，还好google还是找到了这个问题的根源：保留字。请注意，这里我使用了一个保留字*type*做为字段名，导致这个错误的发生，就像一个朋友这样解释的一样：Its because *type *is a reserved word, so you'll have to change that column's name (perhaps to kind or something). Otherwise you're code looks fine wink.大家以后一定要注意，这个小问题浪费了不少时间～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2007-07-12 13:10:19</wp:post_date>
		<wp:post_date_gmt>2007-07-12 13:10:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ad%a6%e6%83%95rails%e4%b8%ad%e7%9a%84%e4%bf%9d%e7%95%99%e5%ad%97%e5%b8%a6%e6%9d%a5%e7%9a%84%e9%97%ae%e9%a2%98%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>服务器坏掉了～</title>
		<link>http://www.iceskysl.com/?p=442</link>
		<pubDate>Fri, 24 Aug 2007 00:31:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=442</guid>
		<description></description>
		<content:encoded><![CDATA[<p>真是闹心，坏了好几天了，还没有好～～</p>
<p>可怜的技能云才上线两天就挂掉了，实在悲哀。。</p>
<p>什么时间才能好呀～～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>真是闹心，坏了好几天了，还没有好～～</p>
<p>可怜的技能云才上线两天就挂掉了，实在悲哀。。</p>
<p>什么时间才能好呀～～</p>]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2007-08-24 00:31:17</wp:post_date>
		<wp:post_date_gmt>2007-08-24 00:31:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%8d%e5%8a%a1%e5%99%a8%e5%9d%8f%e6%8e%89%e4%ba%86%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Mr WordPress]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wordpress.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-24 05:02:13</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 05:02:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, this is a comment.<br />To delete a comment, just log in and view the post&#039;s comments. There you will have the option to edit or delete them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>技能云(iTechTag)上线了～</title>
		<link>http://www.iceskysl.com/?p=443</link>
		<pubDate>Tue, 28 Aug 2007 09:25:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=443</guid>
		<description></description>
		<content:encoded><![CDATA[<p>服务器的事情总算差不多了，以前的数据还是导不出来（暗暗的郁闷一下，也对某些人BS一下），现在换了新的服务器；</p>
<p>还请注册过的朋友重新注册，这次我们不会再丢失数据了（每天都有备份），谢谢各位大理支持～</p>
<p>如果发现Bug或者有其他一些建议、意见，欢迎交流～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>服务器的事情总算差不多了，以前的数据还是导不出来（暗暗的郁闷一下，也对某些人BS一下），现在换了新的服务器；</p>
<p>还请注册过的朋友重新注册，这次我们不会再丢失数据了（每天都有备份），谢谢各位大理支持～</p>
<p>如果发现Bug或者有其他一些建议、意见，欢迎交流～</p>]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2007-08-28 09:25:49</wp:post_date>
		<wp:post_date_gmt>2007-08-28 09:25:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e4%b8%8a%e7%ba%bf%e4%ba%86%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Blog换服务器了！</title>
		<link>http://www.iceskysl.com/?p=444</link>
		<pubDate>Tue, 04 Sep 2007 23:21:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在没有自己独立服务器器的日志里，我只能搬来搬去，原来是和技能云放在一个老外的空间里面的，但是觉得有点慢，且对PHP的二级目录支持不好，很多图片都看不到。</p>
<p>于是联系了浪子兄弟暂时寄存在这里，数据随手备份，方便有自己服务器的时候可以迁移。</p>
<p>感谢浪子。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在没有自己独立服务器器的日志里，我只能搬来搬去，原来是和技能云放在一个老外的空间里面的，但是觉得有点慢，且对PHP的二级目录支持不好，很多图片都看不到。</p>
<p>于是联系了浪子兄弟暂时寄存在这里，数据随手备份，方便有自己服务器的时候可以迁移。</p>
<p>感谢浪子。</p>]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2007-09-04 23:21:07</wp:post_date>
		<wp:post_date_gmt>2007-09-04 23:21:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog%e6%8d%a2%e6%9c%8d%e5%8a%a1%e5%99%a8%e4%ba%86%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>转透明:iTechTag：声望创造价值</title>
		<link>http://www.iceskysl.com/?p=708</link>
		<pubDate>Tue, 04 Sep 2007 23:45:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=4</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="entrybody">
<p>本文是透明同学为&ldquo;技能云&rdquo;写的介绍，看完热血沸腾，转过来激励不断的完善技能云。</p>
<p>以前在<a target="_blank" href="http://www.javaeye.com/topic/102677?page=2">JavaEye的一个讨论</a>里，有位同志说&ldquo;简历嘛，大家都知道，肯定是有水分的&rdquo;。于是我在<a target="_blank" href="http://gigix.thoughtworkers.org/2007/7/19/%E7%9C%9F%E5%AE%9E%E7%9A%84%E7%AE%80%E5%8E%86%EF%BC%8C%E7%9C%9F%E5%AE%9E%E7%9A%84%E8%87%AA%E6%88%91">另一个blog</a>里说到，简历里唯一有意义的，就是工作经历。认真回想一下，我在看应聘者的简历时，也基本上不看基本信息、自我评价之类的，只看工作经历：做过什么项目，用过什么技术，比说什么&ldquo;熟练&rdquo;、&ldquo;精通&rdquo;要有意义得多。我的期望、我的评估、整个后续的面试过程都是围绕着工作经历来展开的。</p>
<p>求职者的工作经历，这份信息对于潜在雇主有价值。但这份价值在求职者自己身上实现了多少？作为软件开发者，不妨问问自己：还有谁记得你几年前完成的那些&ldquo;不可能的任务&rdquo;？还有谁记得你通宵加班为项目做出的贡献？还有谁记得客户和领导曾给你的赞扬？有多少求贤若渴的潜在雇主想要知道你曾经那些了不起的成就，却无从获取这些信息？那么这份信息的价值去了哪里？我们把工作经历告诉了谁？是的，我们把工作经历写在简历里，把简历放在了招聘网站；而招聘网站把我们的简历锁起来，把我们的工作经历信息卖给潜在雇主。我们的工作经历，去给招聘网站创造价值了。</p>
<p>并非所有行业都是这样的。就拿电影来说吧，除了导演和演员以外，一部好电影离不开无数的幕后英雄：灯光、音乐、武指、剪辑&hellip;&hellip;不过这些幕后英雄并没有因为身处幕后而被埋没，他们的名字出现在影片的演职员表里，展现在所有观众的眼前。当大导演想要拍下一部大影片时，他立即就能想到自己喜欢哪部影片里的配乐，然后立即就能找出这个配乐的人。幕后英雄们的每一段工作经历不仅给自己带来收入，还积累成为自己的声望，为自己打开了未来的门。</p>
<p><a target="_blank" href="http://www.itechtag.com/">iTechTag</a>的目标就是让软件开发者的工作经历真正成为自己的<strong>声望</strong>，让声望给我们自己创造价值。我们希望记录下自己辛勤工作的成果，并与他人分享我们的骄傲。我们希望让别人知道我们掌握什么技能、参与过什么项目、帮助过什么客户、做出过什么贡献。我们希望让自己、让同事、让朋友、让所有关注我们的人有机会了解：我们是多么优秀的软件开发者。<br />
把这样一朵&ldquo;技能云&rdquo;贴在自己的blog旁边，向所有人炫耀自己的强大技能和丰富经验，让自己的声望开始发挥价值。这就是iTechTag想要给你的。</p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本文是透明同学为&ldquo;技能云&rdquo;写的介绍，看完热血沸腾，转过来激励不断的完善技能云。</p>
<p>以前在<a target="_blank" href="http://www.javaeye.com/topic/102677?page=2">JavaEye的一个讨论</a>里，有位同志说&ldquo;简历嘛，大家都知道，肯定是有水分的&rdquo;。于是我在<a target="_blank" href="http://gigix.thoughtworkers.org/2007/7/19/%E7%9C%9F%E5%AE%9E%E7%9A%84%E7%AE%80%E5%8E%86%EF%BC%8C%E7%9C%9F%E5%AE%9E%E7%9A%84%E8%87%AA%E6%88%91">另一个blog</a>里说到，简历里唯一有意义的，就是工作经历。认真回想一下，我在看应聘者的简历时，也基本上不看基本信息、自我评价之类的，只看工作经历：做过什么项目，用过什么技术，比说什么&ldquo;熟练&rdquo;、&ldquo;精通&rdquo;要有意义得多。我的期望、我的评估、整个后续的面试过程都是围绕着工作经历来展开的。</p>]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date>2007-09-04 23:45:01</wp:post_date>
		<wp:post_date_gmt>2007-09-04 23:45:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e9%80%8f%e6%98%8eitechtag%ef%bc%9a%e5%a3%b0%e6%9c%9b%e5%88%9b%e9%80%a0%e4%bb%b7%e5%80%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails上使用ruby来发Jabber消息～</title>
		<link>http://www.iceskysl.com/?p=15</link>
		<pubDate>Sat, 15 Sep 2007 16:05:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[<p>近日考虑一个新的需求，希望在技能云上加上一种IM的支持，可以直接对Gtalk之类的发消息，自然是用ruby实现，于是google到一些资料，如下：<br />
<br />
<strong>参考：</strong><br />
xmpp4r文档：<br />
http://home.gna.org/xmpp4r/rdoc/<br />
<br />
一个老外写了三篇文章：<br />
http://devblog.famundo.com/articles/category/xmpp4r-jabber<br />
<br />
javaeye上的一个例子：<br />
http://danoyang.javaeye.com/blog/67884<br />
<br />
一个日本人写的例子：<br />
http://d.hatena.ne.jp/technohippy/20070803#1186104969<br />
<br />
另外还可以使用xmpp4r-simple：<br />
http://romeda.org/blog/2006/11/announcing-jabbersimple.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>近日考虑一个新的需求，希望在技能云上加上一种IM的支持，可以直接对Gtalk之类的发消息，自然是用ruby实现，于是google到一些资料，如下：<br />
<br />
<strong>参考：</strong><br />
xmpp4r文档：<br />
http://home.gna.org/xmpp4r/rdoc/<br />
<br />
一个老外写了三篇文章：<br />
http://devblog.famundo.com/articles/category/xmpp4r-jabber<br />
<br />
javaeye上的一个例子：<br />
http://danoyang.javaeye.com/blog/67884<br />
<br />
一个日本人写的例子：<br />
http://d.hatena.ne.jp/technohippy/20070803#1186104969<br />
<br />
另外还可以使用xmpp4r-simple：<br />
http://romeda.org/blog/2006/11/announcing-jabbersimple.html</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2007-09-15 16:05:20</wp:post_date>
		<wp:post_date_gmt>2007-09-15 16:05:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%8a%e4%bd%bf%e7%94%a8ruby%e6%9d%a5%e5%8f%91jabber%e6%b6%88%e6%81%af%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_4a6fa761cee9e3dd5b688627095438b5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.74.118</wp:comment_author_IP>
			<wp:comment_date>2007-09-15 23:58:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[require 'xmpp4r'
to = 'toypu@gmail.com'
body = 'This message is from xmpp4r.'
subject = 'test'
message = Jabber::Message.new to, body
message.subject = subject

id = 'iceskysl@gmail.com'
password = 'XXXXX'
client = Jabber::Client.new Jabber::JID.new(id), false
client.connect
client.auth password
client.send message
client.close]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.74.118</wp:comment_author_IP>
			<wp:comment_date>2007-09-16 00:08:34</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再来个简单的：
require 'xmpp4r-simple'
jabber = Jabber::Simple.new("iceskysl@gmail.com", "XXXX")

jabber.deliver("asofttool2@gmail.com", "Hey! i am IceskYsl?")]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[1ster]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.74.118</wp:comment_author_IP>
			<wp:comment_date>2007-09-16 01:18:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[gem install xmpp4r-simple --install-dir /home/liquidch/gems]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[1ster]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.74.118</wp:comment_author_IP>
			<wp:comment_date>2007-09-16 01:19:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有的时候，虚拟主机提供商并不能按照每个用户的需求安装全部的gem,这个时候，我们就需要自己动手了，如下是我在一家虚拟主机上的安装builder的过程，主要就是先FTP把gem包放上去，然后本地安装的时候使用一个—install-dir来指定安装到的目录。

[1ster@1ster.cn@bee-00 gemdir]$ gem install builder-2.1.1.gem --install-dir /var/***/***/1ster.cn/gemdir
Successfully installed builder, version 2.1.1
Installing ri documentation for builder-2.1.1...
Installing RDoc documentation for builder-2.1.1..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>How do I install my own Gems?</title>
		<link>http://www.iceskysl.com/?p=16</link>
		<pubDate>Mon, 17 Sep 2007 15:39:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[<p>BH 上缺少了一些我需要的gem，于是需要自己安装，BH允许把Gems安装到自己的目录下，于是找了些资料，操作步骤如下：</p>
<p>The easiest and fastest way to install Ruby gems is to install them in your local directory, you will need shell access. To install your own gems use the following steps:<br />
<br />
1) Using File Manager in your cPanel make a copy of the .bashrc file in your root directory, name it .bashrc.bak.<br />
2) Now edit the .bashrc file and add the following to the end of the file:</p>
<div class="codeText">
<div class="codeHead">lunix代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>export&nbsp;PATH=</span><span class="string">&quot;$PATH:$HOME/packages/bin:$HOME/.gems/bin&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>export&nbsp;GEM_HOME=<span class="string">&quot;$HOME/.gems&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>export&nbsp;GEM_PATH=<span class="string">&quot;$GEM_HOME:/usr/lib/ruby/gems/1.8&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>export&nbsp;GEM_CACHE=&rdquo;<span class="variable">$GEM_HOME</span><span>/cache&rdquo;&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>3) Using your favorite SSH client connect to your site.<br />
<br />
4) at the prompt type:<br />
<br />
cp /usr/lib/ruby/gems/1.8/cache/sources-0.0.1.gem ./<br />
gem install sources-0.0.1.gem<br />
gem update -y<br />
<br />
This will update rails to the latest version and install it to your local gem directory.<br />
<br />
5) When using a rails application, make sure you add the following to your ./config/environment.rb:<br />
<br />
ENV['GEM_PATH'] = '/path/to/your/home/.gems:/usr/lib/ruby/gems/1.8'<br />
<br />
这里还有一个帖子，可以参考下：<br />
http://www.bluehostforum.com/showthread.php?t=1064</p>
<p>&nbsp;</p>
<p><strong>另外：</strong>还可以把在本地安装好gem后把其copy到Vendor目录下，但是这个方法我不喜欢，不晓得能不能直接把gem包copy到Vendor目录下？试过的告诉下下，多谢！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>BH 上缺少了一些我需要的gem，于是需要自己安装，BH允许把Gems安装到自己的目录下，于是找了些资料，操作步骤如下：</p>
<p>The easiest and fastest way to install Ruby gems is to install them in your local directory, you will need shell access. To install your own gems use the following steps:<br />
<br />
1) Using File Manager in your cPanel make a copy of the .bashrc file in your root directory, name it .bashrc.bak.<br />
2) Now edit the .bashrc file and add the following to the end of the file:</p>]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2007-09-17 15:39:53</wp:post_date>
		<wp:post_date_gmt>2007-09-17 15:39:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-do-i-install-my-own-gems</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_8ae00c2abe7031177137184e870fe38b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>郁闷的事情，Blue上的XMPP4R竟然连不出来..</title>
		<link>http://www.iceskysl.com/?p=17</link>
		<pubDate>Mon, 17 Sep 2007 23:46:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[<p>本来已经突破最后一个难题以为搞定了这个XMOO4R的使用，在本地测试很顺利，无奈的是在bluehost上就是不成功，开始因为上面没有安装XMPP4R，后来突破了这个后，还是不行，错误如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Processing&nbsp;PeopleController</span><span class="comment">#notify_in_gtalk&nbsp;(for&nbsp;121.35.109.40&nbsp;at&nbsp;2007-09-17&nbsp;09:02:42)&nbsp;[GET]</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;Session&nbsp;ID:&nbsp;192fbe2f031b846cbcba5fad37f32228&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;Parameters:&nbsp;{<span class="string">&quot;action&quot;</span><span>=&gt;</span><span class="string">&quot;notify_in_gtalk&quot;</span><span>,&nbsp;</span><span class="string">&quot;controller&quot;</span><span>=&gt;</span><span class="string">&quot;people&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;SQL&nbsp;(0.000151)&nbsp;&nbsp;&nbsp;SET&nbsp;NAMES&nbsp;<span class="string">'utf8'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;SQL&nbsp;(0.000047)&nbsp;&nbsp;&nbsp;SET&nbsp;SQL_AUTO_IS_NULL=0&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;SQL&nbsp;(0.000000)&nbsp;&nbsp;&nbsp;Mysql::Error:&nbsp;Query&nbsp;was&nbsp;empty:&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Errno::ETIMEDOUT&nbsp;(Connection&nbsp;timed&nbsp;out&nbsp;-&nbsp;connect(2)):&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53<span class="symbol">:in</span><span>&nbsp;`initialize</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53:in&nbsp;`new'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:73:in&nbsp;`connect'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:60<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:58:in&nbsp;`each'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:58<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:390:in&nbsp;`connect!'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:322<span class="symbol">:in</span><span>&nbsp;`client</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:331:in&nbsp;`send!'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:147<span class="symbol">:in</span><span>&nbsp;`status</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:90:in&nbsp;`initialize'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/people_controller.rb:122<span class="symbol">:in</span><span>&nbsp;`</span><span class="keyword">new</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/people_controller.rb:122:in&nbsp;`notify_in_gtalk'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems&nbsp;&nbsp;</span></li>
</ol>
</div>
真是郁闷，我估计是BH上的限制，明天发个mail问问，但愿可以搞定，好想有一台自己的服务器哦。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本来已经突破最后一个难题以为搞定了这个XMOO4R的使用，在本地测试很顺利，无奈的是在bluehost上就是不成功，开始因为上面没有安装XMPP4R，后来突破了这个后，还是不行，错误如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Processing&nbsp;PeopleController</span><span class="comment">#notify_in_gtalk&nbsp;(for&nbsp;121.35.109.40&nbsp;at&nbsp;2007-09-17&nbsp;09:02:42)&nbsp;[GET]</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;Session&nbsp;ID:&nbsp;192fbe2f031b846cbcba5fad37f32228&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;Parameters:&nbsp;{<span class="string">&quot;action&quot;</span><span>=&gt;</span><span class="string">&quot;notify_in_gtalk&quot;</span><span>,&nbsp;</span><span class="string">&quot;controller&quot;</span><span>=&gt;</span><span class="string">&quot;people&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;SQL&nbsp;(0.000151)&nbsp;&nbsp;&nbsp;SET&nbsp;NAMES&nbsp;<span class="string">'utf8'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;SQL&nbsp;(0.000047)&nbsp;&nbsp;&nbsp;SET&nbsp;SQL_AUTO_IS_NULL=0&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;SQL&nbsp;(0.000000)&nbsp;&nbsp;&nbsp;Mysql::Error:&nbsp;Query&nbsp;was&nbsp;empty:&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Errno::ETIMEDOUT&nbsp;(Connection&nbsp;timed&nbsp;out&nbsp;-&nbsp;connect(2)):&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53<span class="symbol">:in</span><span>&nbsp;`initialize</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53:in&nbsp;`new'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/connection.rb:53<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:73:in&nbsp;`connect'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:60<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:58:in&nbsp;`each'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/home/liquidch/ruby/gems/gems/xmpp4r-0.3/lib/xmpp4r/client.rb:58<span class="symbol">:in</span><span>&nbsp;`connect</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:390:in&nbsp;`connect!'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:322<span class="symbol">:in</span><span>&nbsp;`client</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:331:in&nbsp;`send!'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:147<span class="symbol">:in</span><span>&nbsp;`status</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/vendor/plugins/xmpp4r-simple-0.8.7/lib/xmpp4r-simple.rb:90:in&nbsp;`initialize'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/people_controller.rb:122<span class="symbol">:in</span><span>&nbsp;`</span><span class="keyword">new</span><span class="string">'</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/people_controller.rb:122:in&nbsp;`notify_in_gtalk'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>真是郁闷，我估计是BH上的限制，明天发个mail问问，但愿可以搞定，好想有一台自己的服务器哦。。</p>]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2007-09-17 23:46:17</wp:post_date>
		<wp:post_date_gmt>2007-09-17 23:46:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%83%81%e9%97%b7%e7%9a%84%e4%ba%8b%e6%83%85%ef%bc%8cblue%e4%b8%8a%e7%9a%84xmpp4r%e7%ab%9f%e7%84%b6%e8%bf%9e%e4%b8%8d%e5%87%ba%e6%9d%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>weblogic性能调优</title>
		<link>http://www.iceskysl.com/?p=18</link>
		<pubDate>Tue, 18 Sep 2007 10:58:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<p>注：在下面做的介绍都是以Weblogic8.1为例的，其它版本的Weblogic可能会有些许不同。<br />
<br />
<strong>1) 设置JAVA参数；</strong><br />
a) 编辑Weblogic Server启动脚本文件；<br />
BEA_HOME\user_projects\domains\domain-name\startWebLogic.cmd(startWebLogic.sh on Unix)&nbsp; <br />
BEA_HOME\user_projects\domains\domain-name\startManagedWebLogic.cmd(startManagedWebLogic.sh on Unix) --这个是做集群的时候用的<br />
b) 编辑set JAVA_OPTIONS命令，如：set JAVA_OPTIONS=-Xms256m &ndash;Xmx256m；<br />
（在UNIX下把<em>MEM_ARGS=&quot;-Xms1024m -Xmx1024m -Xmn128m&quot;</em>加到上述两个.sh文件中即可）<br />
c) 保存，重启即可。<br />
注：在WebLogic中，为了获得更好的性能，BEA公司推荐最小Java堆等于最大Java堆。<br />
（这个偶们的设置都是1024M的，反正偶们内存大大的4G呢）<br />
<br />
<strong>2) 开发模式 vs. 产品模式；</strong><br />
开发模式和产品模式的一些参数的默认值不同，可能会对性能造成影响，下面是对性能有影响的参数列表：</p>
<p>
<table width="505" height="121" cellspacing="1" cellpadding="1" border="1">
    <tbody>
        <tr>
            <td>参数</td>
            <td>开发模式默认值</td>
            <td>产品模式默认值</td>
        </tr>
        <tr>
            <td>Execute Queue: Thread Count</td>
            <td>15 threads</td>
            <td>25 threads</td>
        </tr>
        <tr>
            <td>JDBC Connection Pool: MaxCapacity</td>
            <td>15 connnections</td>
            <td>25 connections</td>
        </tr>
    </tbody>
</table>
<br />
通过启动管理控制台，在域（如：mydomain）&gt; 配置 &gt; 常规选择产品模式。<br />
<font color="#ff0000">（这个在创建weblogic的domain的时候是有选择的，选择&ldquo;产品&rdquo;模式就可以了，如果后期需要修改，可以按照上面的方法修改）</font><br />
<strong><br />
3) 尽量开启本地I/O；</strong><br />
通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; 配置 &gt; 调整选择启用本地I/O。<br />
注：此值也可通过手动的修改config.xml配置文件。<br />
<font color="#ff0000">（这个没有试验过，不晓得有什么效果和好处，知道的告诉偶下下。）</font><br />
<br />
<strong>4) 调优执行队列线程；</strong><br />
<u>a) 修改默认执行线程数</u><br />
在这里，执行队列的线程数表示执行队列能够同时执行的操作的数量。但此值不是设的越大越好，应该恰到好处的去设置它，太小了，执行队列中将会积累很多待处理的任务，太大了，则会消耗大量的系统资源从而影响整体的性能。在产品模式下默认为25个执行线程。<br />
<font color="#ff0000">（点：一般来说，其上限是每个CPU对应50个线程，其按照CPU个数线性增长.）</font><br />
<br />
为了设置理想的执行队列的线程数，我们可以启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; 监视 &gt; 性能中监控最大负载时执行队列的吞吐量和队列中的等待请求数，据此确定理想的数值。<br />
理想的默认执行线程数是由多方面的因素决定的，比如机器CPU性能、总体体系架构、I/O、操作系统的进程调度机制、JVM的线程调度机制。随着CPU个数的增加，WebLogic可以近乎线性地提高线程数。线程数越多，花费在线程切换的时间也就越多；线程数越小，CPU可能无法得到充分的利用。为获取一个理想的线程数，需要经过反复的测试。在测试中，可以以<strong>25*CPU</strong>个数为基准进行调整。当空闲线程较少，CPU利用率较低时，可以适当增加线程数的大小（每五个递增）。对于PC Server和Windows 2000，则最好每个CPU小于50个线程，以CPU利用率为90%左右为最佳。<br />
通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; Execute Queue &gt; weblogic.kernel.Defalt &gt; 配置中修改线程计数。<br />
<br />
<u>b) 设定执行队列的溢出条件；</u><br />
&nbsp;&nbsp;&nbsp; Weblogic Server提供给默认的执行队列或用户自定义的执行队列自定义溢出条件的功能，当满足此溢出条件时，服务器改变其状态为&ldquo;警告&rdquo;状态，并且额外的再分配一些线程去处理在队列中的请求，而达到降低队列长度的目的。<br />
&nbsp;&nbsp;&nbsp; 通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; Execute Queue &gt; weblogic.kernel.Defalt &gt; 配置下面几项：<br />
●队列长度：此值表示执行队列中可容纳的最大请求数，默认值是65536，最后不要手动改变此值。<br />
●队列长度阈值百分比：此值表示溢出条件，在此服务器指出队列溢出之前可以达到的队列长度大小的百分比。<br />
●线程数增加：当检测到溢出条件时，将增加到执行队列中的线程数量。如果CPU和内存不是足够的高，尽量不要改变默认值&ldquo;0&rdquo;。因为Weblogic一旦增加后不会自动缩减，虽然最终可能确实起到了降低请求的作用，但在将来的运行中将影响程序的性能。<br />
●最大线程数：为了防止创建过多的线程数量，可以通过设定最大的线程数进行控制。<br />
在实际的应用场景中，应根据具体情况适当的调整以上参数。<br />
<br />
<u>c) 设定执行队列监测行为</u><br />
Weblogic Server能够自动监测到当一个执行线程变为&ldquo;阻塞&rdquo;。变为&ldquo;阻塞&rdquo;状态的执行线程将无法完成当前的工作，也无法再执行新请求。如果执行队列中的所有执行线程都变为&ldquo;阻塞&rdquo;状态，Weblogic server可能改变状态为&ldquo;警告&rdquo;或&ldquo;严重&rdquo;状态。如果Weblogic server变为&ldquo;严重&rdquo;状态，可以通过Node Manager来自动关闭此服务器并重新启动它。具体请参考：Node Manager Capabilities文档。<br />
通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 调整下可配置下面几项：<br />
●阻塞线程最长时间：在此服务器将线程诊断为阻塞线程之前，线程必须连续工作的时间长度(秒)。默认情况下，WebLogic Server 认为线程在连续工作 600 秒后成为阻塞线程。<br />
●阻塞线程计时器间隔：WebLogic Server 定期扫描线程以查看它们是否已经连续工作了 &quot;阻塞线程最长时间&quot; 字段中指定的时间长度的间隔时间(秒)。默认情况下，WebLogic Server 将此时间间隔设置为 600 秒。<br />
<br />
<strong>5) 调优TCP连接缓存数；</strong><br />
WebLogic Server用<strong>Accept Backlog</strong>参数规定服务器向操作系统请求的队列大小，默认值为50。当系统重载负荷时,这个值可能过小,日志中报Connection Refused,导致有效连接请求遭到拒绝,此时可以提高Accept Backlog 25%直到连接拒绝错误消失。对于Portal类型的应用,默认值往往是不够的。<br />
Login Timeout和SSL Login Timeout参数表示普通连接和SSL连接的超时时间,如果客户连接被服务器中断或者SSL容量大,可以尝试增加该值。<br />
通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 调整下可配置&ldquo;接受预备连接&rdquo;。<br />
<br />
<strong>6) 改变Java编译器；</strong><br />
标准的Java编译器是javac，但编译JSP servlets速度太慢，为了提高编译速度，可以使用sj或jikes编译器取代javac编译器。下面说说更改Java编译器：<br />
通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 常规下改变Java 编译器，默认为javac。输入完整路径，如：c:\visualcafe31\bin\sj.exe。然后打开高级选项，在预规划到类路径填写编译 Java 代码时为 Java 编译器类路径预规划的选项，如：BEA_HOME\jdk141_02\jre\lib\rt.jar。<br />
<br />
<strong>7) 使用Webogic Server集群提高性能；</strong><br />
具体关于如何配置Weblogic集群，我就不细说了。详情可参考：Introduction to WebLogic Server Clustering。<br />
<br />
<strong>8) Weblogic EJB调优</strong><br />
由于EJB2.0已经很少项目在用了，EJB3.0再成熟一点，我再补充这一部分吧！<br />
<br />
<strong>9) JDBC应用调优</strong><br />
JDBC Connection Pool的调优受制于WebLogic Server线程数的设置和数据库进程数,游标的大小。通常我们在一个线程中使用一个连接,所以连接数并不是越多越好,为避免两边的资源消耗，建议设置连接池的最大值等于或者略小于线程数。同时为了减少新建连接的开销,将最小值和最大值设为一致。<br />
增加Statement Cache Size对于大量使用PreparedStatement对象的应用程序很有帮助,WebLogic能够为每一个连接缓存这些对象,此值默认为10。在保证数据库游标大小足够的前提下,可以根据需要提高Statement Cache Size。比如当你设置连接数为25,Cache Size为10时,数据库可能需要打开25*10=250个游标。不幸的是,当遇到与PreparedStatement Cache有关的应用程序错误时,你需要将Cache Size设置为0。<br />
尽管JDBC Connection Pool提供了很多高级参数,在开发模式下比较有用,但大部分在生产环境下不需调整。这里建议最好不要设置测试表, 同时Test Reserved Connections和Test Released Connections也无需勾上。 当然如果你的数据库不稳定,时断时续,你就可能需要上述的参数打开。<br />
最后提一下驱动程序类型的选择,以Oracle为例,Oracle提供thin驱动和oci驱动,从性能上来讲,oci驱动强于thin驱动,特别是大数据量的操作。但在简单的数据库操作中,性能相差不大,随着thin驱动的不断改进,这一弱势将得到弥补。而thin驱动的移植性明显强于oci驱动。所以在通常情况下建议使用thin驱动。而最新驱动器由于WebLogic server/bin目录下的类包可能不是最新的,请以Oracle网站为准: http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc9201.html。<br />
<br />
<strong>10) JSP调优</strong><br />
设置jsp-param pageCheckSeconds=-1；<br />
设置serlet-reload-check=-1或ServletReloadCheckSecs=-1；<br />
设置jsp-param precompile=true，关闭JSP预编译选项。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于项目比较大，使用的weblogic要经常关注和调优，开这篇文章由来随手保存相关的调优设置，也是对自己经验的积累和记录，同时可以给其他google来的同学一点思路和建议，以后会以评价的模式增加其他的内容，长期更新下去。</p>
<p>另外，如果您发现我用的不对，希望能指出，如果你还有其他的方法，希望能分享一二。</p>
<p>注：在下面做的介绍都是以Weblogic8.1为例的，其它版本的Weblogic可能会有些许不同。</p>]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2007-09-18 10:58:44</wp:post_date>
		<wp:post_date_gmt>2007-09-18 10:58:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>weblogic%e6%80%a7%e8%83%bd%e8%b0%83%e4%bc%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.83.87</wp:comment_author_IP>
			<wp:comment_date>2007-09-22 21:39:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我遇到的weblogic运行600秒超时主要有两个原因：
1）SQL语句运行时线程阻塞
2）out.println语句运行时线程阻塞

第一种问题的解决办法，编写一个java桌面应用，测试运行的SQL语句是否可以正常运行，并返还正确结果。若无法正常运行，就需要通过视图或其他的方式调整和优化SQL语句。
这里需要注意：数据库的不同版本可能需要相应版本的数据库驱动。SQL语句不能正常运行，通常都是由驱动引起的。

第二种情况的解决办法，weblogic或其他的中间件产品，服务端大多都会使用缓冲发送数据机制，当数据量大的时候会分批发送出去，若数据中出现过多的回车（\n或直接的回车）就会有一定的几率出线线程阻塞的情况，解决办法就是消除回车符，尽量使输出的数据是连续的字符流。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.140</wp:comment_author_IP>
			<wp:comment_date>2007-09-23 02:13:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[分析线程堆栈：
http://bbs.sinoweb.com.cn/archiver/tid-405.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.140</wp:comment_author_IP>
			<wp:comment_date>2007-09-23 02:25:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.cntesting.com/portal/html/testing-technique/load-test/20070509/178.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>*UNIX学习之系统调优篇</title>
		<link>http://www.iceskysl.com/?p=19</link>
		<pubDate>Tue, 18 Sep 2007 14:28:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[<p>本文用来总结UNIX系统参数的理解和调优实践、理论等，不断补充，不断更新，</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本文用来总结UNIX系统参数的理解和调优实践、理论等，不断补充，不断更新，</p>]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2007-09-18 14:28:05</wp:post_date>
		<wp:post_date_gmt>2007-09-18 14:28:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unix%e5%ad%a6%e4%b9%a0%e4%b9%8b%e7%b3%bb%e7%bb%9f%e8%b0%83%e4%bc%98%e7%af%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>gtalk表情符号,纯粹吹水～</title>
		<link>http://www.iceskysl.com/?p=20</link>
		<pubDate>Thu, 20 Sep 2007 19:51:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>发现自己发明的表情符号还挺有趣，Gt的桌面客户端是不支持表情的，于是大家都用只发明的表情符号，还挺好玩的。。。</p>
<p>大比拼开始啦～～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>发现自己发明的表情符号还挺有趣，Gt的桌面客户端是不支持表情的，于是大家都用只发明的表情符号，还挺好玩的。。。</p>
<p>大比拼开始啦～～</p>]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2007-09-20 19:51:30</wp:post_date>
		<wp:post_date_gmt>2007-09-20 19:51:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gtalk%e8%a1%a8%e6%83%85%e7%ac%a6%e5%8f%b7%e7%ba%af%e7%b2%b9%e5%90%b9%e6%b0%b4%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.pixnet.net/zusocfc</wp:comment_author_url>
			<wp:comment_author_IP>211.74.215.247</wp:comment_author_IP>
			<wp:comment_date>2007-09-20 19:55:18</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:D
:P
:x
XD
:(
:))
=))
Orz
stO
||Orz
囧
囧rz
0.<
0.o
O..O
o(^o^)o
(^oo^)
m(>"<)o
凸(=..=)凸
OGC]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>转:To技能云：还请耐住寂寞   ——送给IceskYsl的“困惑”</title>
		<link>http://www.iceskysl.com/?p=21</link>
		<pubDate>Fri, 21 Sep 2007 12:16:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一个在<a href="http://www.itechtag.com">技能云</a>注册的用户对技能云的关注，以及送我的<strong>困惑</strong>，其中很多部分正是前期考虑到的，也有尚未考虑成熟的，针对这个文章，我想到很多，也倍受鼓舞，也对&ldquo;寂寞&rdquo;做好了心理准备，但是我一定会坚持，突破，把技能云绽放在每个程序员的心目中。。<br />
<br />
得原作者&ldquo;<a href="http://www.blogjava.net/ponzmd/archive/2007/09/19/146314.html">过河卒</a>&rdquo;的允许，特意把这篇文章娶回来，一来鼓励我自己，二来思考更多的东西，谢谢&ldquo;过河卒&rdquo;，希望你一路向前，永不退缩，早日绽放自己的那块&ldquo;蘑菇云&rdquo;。。</p>
<div class="codeText">
<div class="codeHead"><font color="#0000ff">-----以下是转来的文章--------------</font></div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>在互联网里面让一个东西火起来，聚集更多的人气并不是一件想得到做不到的事情，只要去做了效果是立杆见影的。但是我觉得一个互联网上的东西吸引人的东西只有两种：内容和服务。有些网站靠内容，如javaeye，有些网站靠服务，如自称要转向服务的IBM。而技能云，我觉得是偏向内容的，当然一个好的网站内容和服务都是不可或缺的。&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;技能云的初衷是好的，但是最终能不能作出预期的模样，还看当事人是否奈得住寂寞。在我看来，技能云提倡的保持程序员的一种骨子里面的骄傲，勇敢的&nbsp;show，勇敢的show出真实的自己。技能云中技能的来源的基础来自于从事过的项目，而项目本身的状态是公开的，面向所有人的，受到所有人监督的，这样会起到一定的约束力。进而想通过这种约束力，形成一种公正诚信的氛围，在这种氛围中提取有价值的信息作为网站的自养之道。诚然，社会舆论和监督是一种巨大的力量。但是这对于技能云是个双刃剑，正面维护了网站内容的公正和诚信，负面隔绝了那些还需要通过通过一纸简历来养家糊口，给孩子卖奶粉的从业者。基于这点技能云不可能有太大的规模，毕竟程序员数量有限，能坦诚的交代自己的程序员就更有限了。记得几天前上技能云发现上面注册的用户的大多是些大牛，还有很大一部分是些只留下了ID，其他什么也没有留下的人。我觉得这些人也是值得我们尊敬，他们或基于现实的考虑，或受困于自身的经历，没有能在技能云上面留下什么，但是一个简单的ID表明了作为一个程序员的骄傲。&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;维护技能云信息的公正诚信很大一方面靠的的技能云本身提供的监督机制，而另外程序员本身的诚信。这种诚信最为可贵。古语云：诚信是金，而且在当前这种现实环境中这句话太惨白。据闻某彩票点把500W归还某代买彩票的人，一般听众的反应是：彩票点的人傻了。这就是现实。但是我想说的是技能云做的不错，在那个小的环境里面，我个人愿意相信所有的信息都是真实的。这可能就是技能云想要的氛围。而我个人的感觉也就是这种氛围影响了我。留下一个ID后就悄悄的离开的，回到自己的地方小声的吼了一下。话说，打江山不易，守江山更难。形成一种氛围固然不容易，但是要巩固它，加深它的影响自然是难上加难。虽然上面说的都很难，但是容易的事情也很容易，就是吹散这种氛围。&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何维护这种氛围，我本无发言权。但是我觉得javaeye做的很不错。一件小事情可以看出来，前不久javaeye更改了论坛的积分规则，把只要回帖就有的两分给取消了。自然，这样少了论坛的人气，但是同时也少了论坛里面的无意义内容。这符合javaeye的口号：做最棒的软件开发交流社区。正是这样的手段，隔离了那些看似的热闹，才有了javaeye上面的激烈的讨论和质量颇高的原创文章。这方面的问题，你自可以和robbin交流去，看上去他是个相当热心的人。&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;（BWT：我以前也在javaeye上面写Blog，可是感觉力不从心，任何一个问题似乎都没有人看的明白和透彻，看着一山又比一山高，压力实在太大，所以我就到这里来了。这里自由，写写自己看的，听的，想的，挺好。当然，我还是时不时的回去看看，毕竟那很吸引人。）&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看看现在的javaeye，每天是3WIP，15W左右的PV。而技能云要做到这个现在似乎很难，但是javaeye可能很难复制了，不可能再有一个&nbsp;rubyeye，perleye了。但是技能云还有这个潜力，不仅仅是程序员会对自己的工作产生自豪感，任何一个行业对有一群人狂热的爱着自己的工作。古语云：360行，行行出状元。只要技能云能够把握好自己，耐住了寂寞，维护建站的初衷和理想。可以想见：总有一天技能云会看起来像核弹引爆后的蘑菇云的。&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;副标题里面说这是&ldquo;困惑&rdquo;，这只是应景的一个说法。或许在IceskYsl心里面另有高谋。说的不好，还请IceskYsl自酌。&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一个在<a href="http://www.itechtag.com/">技能云</a>注册的用户对技能云的关注，以及送我的<strong>困惑</strong>，其中很多部分正是前期考虑到的，也有尚未考虑成熟的，针对这个文章，我想到很多，也倍受鼓舞，也对&ldquo;寂寞&rdquo;做好了心理准备，但是我一定会坚持，突破，把技能云绽放在每个程序员的心目中。。<br />
<br />
得原作者&ldquo;<a href="http://www.blogjava.net/ponzmd/archive/2007/09/19/146314.html">过河卒</a>&rdquo;的允许，特意把这篇文章娶回来，一来鼓励我自己，二来思考更多的东西，谢谢&ldquo;过河卒&rdquo;，希望你一路向前，永不退缩，早日绽放自己的那块&ldquo;蘑菇云&rdquo;。。</p>]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2007-09-21 12:16:32</wp:post_date>
		<wp:post_date_gmt>2007-09-21 12:16:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%acto%e6%8a%80%e8%83%bd%e4%ba%91%ef%bc%9a%e8%bf%98%e8%af%b7%e8%80%90%e4%bd%8f%e5%af%82%e5%af%9e-%e9%80%81%e7%bb%99iceskysl%e7%9a%84%e5%9b%b0%e6%83%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e8%bd%acto%e6%8a%80%e8%83%bd%e4%ba%91%ef%bc%9a%e8%bf%98%e8%af%b7%e8%80%90%e4%bd%8f%e5%af%82%e5%af%9e-%e2%80%94%e2%80%94%e9%80%81%e7%bb%99iceskysl%e7%9a%84%e2%80%9c%e5%9b%b0%e6%83%91%e2%80%9d]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.83.181</wp:comment_author_IP>
			<wp:comment_date>2007-09-21 12:25:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[回答一：
国内的程序员准确的数量不是很清楚，从一些做咨询的朋友那了解到，国内程序员大概在40W人左右。
这个基数不大，去掉一些不屑、不愿、来不及的人，如果我们技能云能在10个人中触动一个人的心，我想规模就起来了，呵呵。
另外一点，关于我们创建技能云的初衷，不久后会有一个采访的文章放出来，也可以按照那个了解一二。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pengshourong@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>61.131.229.126</wp:comment_author_IP>
			<wp:comment_date>2007-09-28 23:15:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“前不久javaeye更改了论坛的积分规则，把只要回帖就有的两分给取消了”，积分机制等规则很重要！ 51.com 和douban.com 刚起家时对垃圾信息和id一律全部删除；livid的v2ex 的规则更是独特，回帖减分，帖子和回帖一般永久不会删除，作为一个信用记录； 淘宝的信用评价体系也是永久不可以删除和改变的，就是一个人有污点，曾经做过的事情要面对它。
有什么样的规则就会有什么样的社区文化，我认为。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中实现自动登录功能！</title>
		<link>http://www.iceskysl.com/?p=22</link>
		<pubDate>Fri, 21 Sep 2007 15:15:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[<p>透明同学说需要给<a href="http://www.itechtag.com/">技能云</a>一个&rdquo;自动登录&ldquo;的功能，于是下午睡觉起来google了些资料，也大概问了下几个朋友，思路就有了，思路很多种，这里采取的是<a href="http://livsey.org/2006/6/30/persistent-logins-in-rails">这篇文章</a>介绍的方式。</p>
<p>基本步骤如下：</p>
<p>1、首先创建一个用来保存用户信息的表modle（<span class="cl">PersistentLogin</span>），代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;CreatePersistentLogins&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;create_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:string</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:user_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:datetime</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;uid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;created_on&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;drop_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>2、然后写这个modle，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;PersistentLogin&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;belongs_to&nbsp;<span class="symbol">:user</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;before_create&nbsp;<span class="symbol">:assign_uid</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;private&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;assign_uid&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.uid&nbsp;=&nbsp;UUID.random_create.to_s&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>3、紧接着在登录的页面加一个chechk_box用来供用户选择是否保存自己的信息以实现自动登录，代码如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span>%=check_box_tag(&quot;persist&quot;,&nbsp;</span><span class="attribute">value</span><span>&nbsp;=&nbsp;</span><span class="attribute-value">&quot;1&quot;</span><span>,&nbsp;</span><span class="attribute">checked</span><span>&nbsp;=&nbsp;</span><span class="attribute-value">true</span><span>,&nbsp;</span><span class="attribute">options</span><span>&nbsp;=&nbsp;{})%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;记住我吧.&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>4、接着在你原来的验证登录的地方，添加如下代码：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;inside&nbsp;your&nbsp;'login'&nbsp;code&nbsp;after&nbsp;you&nbsp;have&nbsp;validated&nbsp;the&nbsp;credentials</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">if</span><span>&nbsp;params[</span><span class="symbol">:persist</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.create(<span class="symbol">:user</span><span>=&gt;u)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;cookies[<span class="symbol">:p_session_id</span><span>]&nbsp;=&nbsp;{</span><span class="symbol">:value</span><span>&nbsp;=&gt;&nbsp;p.uid,&nbsp;</span><span class="symbol">:expires</span><span>&nbsp;=&gt;&nbsp;</span><span class="builtin">Time</span><span>.now&nbsp;+&nbsp;7.days}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>5、写一个前置过滤器，判断用户是否存在cookie，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_current_user&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;session[</span><span class="symbol">:user</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;c_user.id&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>6、最后用户点了退出登录以后，删除cookie和表中记录，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;logout&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;p.destroy&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;cookies.delete&nbsp;<span class="symbol">:p_session_id</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>备注：需要安装一个<a href="http://rubyforge.org/projects/uuidtools/">UUID</a>用来产生随机数，自然你也可以自己写，对时间MD5一下肯定重复不了，呵呵。</p>
<p>代码偶给的已经相当详细了，就不具体解释了。</p>
<p>另外还可以参考：</p>
<p>http://lightyror.thegiive.net/2007/04/persistent-login-on-rails.html</p>
<p>http://livsey.org/2006/6/30/persistent-logins-in-rails</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>透明同学说需要给<a href="http://www.itechtag.com/">技能云</a>一个&rdquo;自动登录&ldquo;的功能，于是下午睡觉起来google了些资料，也大概问了下几个朋友，思路就有了，思路很多种，这里采取的是<a href="http://livsey.org/2006/6/30/persistent-logins-in-rails">这篇文章</a>介绍的方式。</p>
<p>基本步骤如下：</p>
<p>1、首先创建一个用来保存用户信息的表modle（<span class="cl">PersistentLogin</span>），代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;CreatePersistentLogins&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;create_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:string</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:user_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:datetime</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;uid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;created_on&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;drop_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>2、然后写这个modle，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;PersistentLogin&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;belongs_to&nbsp;<span class="symbol">:user</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;before_create&nbsp;<span class="symbol">:assign_uid</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;private&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;assign_uid&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.uid&nbsp;=&nbsp;UUID.random_create.to_s&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>3、紧接着在登录的页面加一个chechk_box用来供用户选择是否保存自己的信息以实现自动登录，代码如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span>%=check_box_tag(&quot;persist&quot;,&nbsp;</span><span class="attribute">value</span><span>&nbsp;=&nbsp;</span><span class="attribute-value">&quot;1&quot;</span><span>,&nbsp;</span><span class="attribute">checked</span><span>&nbsp;=&nbsp;</span><span class="attribute-value">true</span><span>,&nbsp;</span><span class="attribute">options</span><span>&nbsp;=&nbsp;{})%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;记住我吧.&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>4、接着在你原来的验证登录的地方，添加如下代码：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;inside&nbsp;your&nbsp;'login'&nbsp;code&nbsp;after&nbsp;you&nbsp;have&nbsp;validated&nbsp;the&nbsp;credentials</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">if</span><span>&nbsp;params[</span><span class="symbol">:persist</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.create(<span class="symbol">:user</span><span>=&gt;u)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;cookies[<span class="symbol">:p_session_id</span><span>]&nbsp;=&nbsp;{</span><span class="symbol">:value</span><span>&nbsp;=&gt;&nbsp;p.uid,&nbsp;</span><span class="symbol">:expires</span><span>&nbsp;=&gt;&nbsp;</span><span class="builtin">Time</span><span>.now&nbsp;+&nbsp;7.days}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>5、写一个前置过滤器，判断用户是否存在cookie，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_current_user&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;session[</span><span class="symbol">:user</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;c_user.id&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>6、最后用户点了退出登录以后，删除cookie和表中记录，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;logout&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;p.destroy&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;cookies.delete&nbsp;<span class="symbol">:p_session_id</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>备注：需要安装一个<a href="http://rubyforge.org/projects/uuidtools/">UUID</a>用来产生随机数，自然你也可以自己写，对时间MD5一下肯定重复不了，呵呵。</p>
<p>代码偶给的已经相当详细了，就不具体解释了。</p>
<p>另外还可以参考：</p>
<p>http://lightyror.thegiive.net/2007/04/persistent-login-on-rails.html</p>
<p>http://livsey.org/2006/6/30/persistent-logins-in-rails</p>]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2007-09-21 15:15:38</wp:post_date>
		<wp:post_date_gmt>2007-09-21 15:15:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%ae%9e%e7%8e%b0%e8%87%aa%e5%8a%a8%e7%99%bb%e5%bd%95%e5%8a%9f%e8%83%bd%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.110</wp:comment_author_IP>
			<wp:comment_date>2007-10-02 12:57:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[注意：这里有个很严重的BUG：
# def get_current_user
#   if session[:user].nil?
#     if cookies[:p_session_id] && p = PersistentLogin.find_by_uid(cookies[:p_session_id])
#       session[:user] = c_user.id
#     end
#   end
# end

这个最后面的 session[:user] = c_user.id  是错误的，应该是 session[:user] = c_user.user_id，我在技能云上就遇到了这个问题，其他在javaeye上看到也有人也遇到了该问题，现在修正了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.110</wp:comment_author_IP>
			<wp:comment_date>2007-10-02 13:15:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[该问题的分析和修复另外写了一篇文章：
http://blog.1sters.com/?action=show&id=38]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中实现自动登录功能！</title>
		<link>http://www.iceskysl.com/?p=23</link>
		<pubDate>Sun, 23 Sep 2007 14:19:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[<p>做WEB开发的都知道log的重要性，开发过java的肯定知道<u>log4j</u>等日志记录工具，使用起来非常方便的；RoR下发开发自然也少不了日志的应用，刚刚开始的那会把日志都写到一个文件里，很恐怖的说，后来查了些资料，可以看到ROR默认的log是可以分级别的，记录如下：<br />
<br />
<strong>日志级别（Log Level）</strong><br />
Rails可以通过选择不同的log lever来控制log文件的输出，可以使用的log lever有<u>:debug, :info, :warn,:error, :fatal.</u><br />
<strong>:debug</strong> level提供最详细的log, 可以将每一条sql都记录下来。<br />
<strong>:info&nbsp;</strong> level是production环境下的默认设置，不会写出sql的执行情况，但也会很详细，如果是ActiveMailer，它会记录下每封信的内容，Log文件内容就是快速增长。<br />
为了避免Log把空间塞满的情况发生，要注意定期清除Log，另外是选择:warn level等log level, 只记录重要的信息.<br />
<br />
<strong>设置方法：</strong><br />
在/config/environment.rb文件中可以设置以下选项<br />
config.log_level = :debug<br />
如果只希望在production环境下，输入少量的log,<br />
则只需要在config/environments/production.rb中增加一项（我就是这样设置的）<br />
config.log_level = :warn</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>做WEB开发的都知道log的重要性，开发过java的肯定知道<u>log4j</u>等日志记录工具，使用起来非常方便的；RoR下发开发自然也少不了日志的应用，刚刚开始的那会把日志都写到一个文件里，很恐怖的说，后来查了些资料，可以看到ROR默认的log是可以分级别的，记录如下：<br />
<br />
<strong>日志级别（Log Level）</strong><br />
Rails可以通过选择不同的log lever来控制log文件的输出，可以使用的log lever有<u>:debug, :info, :warn,:error, :fatal.</u><br />
<strong>:debug</strong> level提供最详细的log, 可以将每一条sql都记录下来。<br />
<strong>:info&nbsp;</strong> level是production环境下的默认设置，不会写出sql的执行情况，但也会很详细，如果是ActiveMailer，它会记录下每封信的内容，Log文件内容就是快速增长。<br />
为了避免Log把空间塞满的情况发生，要注意定期清除Log，另外是选择:warn level等log level, 只记录重要的信息.<br />
<br />
<strong>设置方法：</strong><br />
在/config/environment.rb文件中可以设置以下选项<br />
config.log_level = :debug<br />
如果只希望在production环境下，输入少量的log,<br />
则只需要在config/environments/production.rb中增加一项（我就是这样设置的）<br />
config.log_level = :warn</p>]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2007-09-23 14:19:40</wp:post_date>
		<wp:post_date_gmt>2007-09-23 14:19:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%ae%9e%e7%8e%b0%e8%87%aa%e5%8a%a8%e7%99%bb%e5%bd%95%e5%8a%9f%e8%83%bd%ef%bc%81-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Ruby on Rails Security Guide</title>
		<link>http://www.iceskysl.com/?p=24</link>
		<pubDate>Mon, 24 Sep 2007 16:06:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 class="entry-title">&nbsp;</h2>
<p>好久没去ROR官方站点了，今天google到他上面的一个wiki，看完后随手到其blog里面看看，看到一篇好文章，是介绍Rails中安全控制的，于是跟着那个链接过去，看了一部分，没时间看完，特转回来记录着有时间再看～</p>
<p>Ruby on Rails does a decent job in handling security concerns in the background. You will have to configure your application to avoid few security attacks while plugins would be required for many security concerns which are not at all or poorly managed by rails.</p>
<p>In this article I have described the security issues related to a ruby on rails web application. I have followed <abbr title="Don't Repeat Yourself">DRY</abbr> by linking to articles with good explanation and solutions to security concerns wherever required. This guide can also be used as a quick security check for your current web application.</p>
<p>原文地址：<a href="http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide">http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide</a></p>
<h2 class="entry-title"><a href="http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide#comments"></a></h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[<h2 class="entry-title">&nbsp;</h2>
<p>好久没去ROR官方站点了，今天google到他上面的一个wiki，看完后随手到其blog里面看看，看到一篇好文章，是介绍Rails中安全控制的，于是跟着那个链接过去，看了一部分，没时间看完，特转回来记录着有时间再看～</p>
<p>Ruby on Rails does a decent job in handling security concerns in the background. You will have to configure your application to avoid few security attacks while plugins would be required for many security concerns which are not at all or poorly managed by rails.</p>
<p>In this article I have described the security issues related to a ruby on rails web application. I have followed <abbr title="Don't Repeat Yourself">DRY</abbr> by linking to articles with good explanation and solutions to security concerns wherever required. This guide can also be used as a quick security check for your current web application.</p>
<p>原文地址：<a href="http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide">http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide</a></p>
<h2 class="entry-title"><a href="http://www.quarkruby.com/2007/9/20/ruby-on-rails-security-guide#comments"></a></h2>]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2007-09-24 16:06:52</wp:post_date>
		<wp:post_date_gmt>2007-09-24 16:06:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-on-rails-security-guide</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Rails中两种&quot;多对多&quot;关系的建立的方法 ！</title>
		<link>http://www.iceskysl.com/?p=25</link>
		<pubDate>Mon, 24 Sep 2007 16:27:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[<p>以前的时候只知道在Rails中建立多对多的关系可以把两个表的复数做表名，并去掉其主键ID，后来使用的过程中遇到不少问题，虽然当时也可以 hack过去了，但是心理一直觉得不爽，上次看《敏捷开发第二版》的时候，看到还有另外一个方法，刚好刚才在railscasts上也看到了，现在归纳记 录如下：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">第一种方法： has_and_belongs_to_many</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;in&nbsp;migration</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;create_table&nbsp;<span class="string">'categories_products'</span><span>,&nbsp;</span><span class="symbol">:id</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:category_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:product_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_and_belongs_to_many&nbsp;<span class="symbol">:categories</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;models/category.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_and_belongs_to_many&nbsp;<span class="symbol">:products</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">第二种方法：has_many :through</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;models/categorization.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>belongs_to&nbsp;<span class="symbol">:product</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>belongs_to&nbsp;<span class="symbol">:category</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_many&nbsp;<span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_many&nbsp;<span class="symbol">:categories</span><span>,&nbsp;</span><span class="symbol">:through</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/category.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_many&nbsp;<span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_many&nbsp;<span class="symbol">:products</span><span>,&nbsp;</span><span class="symbol">:through</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>很显然，使用第二种会更加明了和便捷，且那个联系表可以随意命名，更加优雅！</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前的时候只知道在Rails中建立多对多的关系可以把两个表的复数做表名，并去掉其主键ID，后来使用的过程中遇到不少问题，虽然当时也可以 hack过去了，但是心理一直觉得不爽，上次看《敏捷开发第二版》的时候，看到还有另外一个方法，刚好刚才在railscasts上也看到了，现在归纳记 录如下：</p>
<div class="codeText">
<div class="codeHead">第一种方法： has_and_belongs_to_many</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;in&nbsp;migration</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;create_table&nbsp;<span class="string">'categories_products'</span><span>,&nbsp;</span><span class="symbol">:id</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:category_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:product_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_and_belongs_to_many&nbsp;<span class="symbol">:categories</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;models/category.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_and_belongs_to_many&nbsp;<span class="symbol">:products</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">第二种方法：has_many :through</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;models/categorization.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>belongs_to&nbsp;<span class="symbol">:product</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>belongs_to&nbsp;<span class="symbol">:category</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_many&nbsp;<span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_many&nbsp;<span class="symbol">:categories</span><span>,&nbsp;</span><span class="symbol">:through</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;models/category.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>has_many&nbsp;<span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>has_many&nbsp;<span class="symbol">:products</span><span>,&nbsp;</span><span class="symbol">:through</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:categorizations</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>很显然，使用第二种会更加明了和便捷，且那个联系表可以随意命名，更加优雅！</p>]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2007-09-24 16:27:13</wp:post_date>
		<wp:post_date_gmt>2007-09-24 16:27:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e4%b8%ad%e4%b8%a4%e7%a7%8d%e5%a4%9a%e5%af%b9%e5%a4%9a%e5%85%b3%e7%b3%bb%e7%9a%84%e5%bb%ba%e7%ab%8b%e7%9a%84%e6%96%b9%e6%b3%95-%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Rails项目管理之SubVersion(SVN)</title>
		<link>http://www.iceskysl.com/?p=26</link>
		<pubDate>Mon, 24 Sep 2007 17:09:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<p>多人协作的时候版本控制是很重要的，我以前公司使用的<strong>VSS</strong>或者<strong>CC&amp;CQ</strong>，这些都是比较重量级的，做大项目的控制比较合适，但是做一些 rails的比较小的项目的时候就没有这个必要，也没有这个必要；</p>
<p>相反，SVN和CVS可能更适合一点，因为CVS比较老，现在SVN比较主流，使用起来 也很方便，于是做Rails项目自然选择SVN，以前使用不多，虽然也会用，但是做了不少无用功，今天看到一篇介绍的文章，改吧改吧记录下。</p>
<p>
<div class="codeText">
<div class="codeHead">第一步，创建Rails应用并做基础设置</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>mkdir&nbsp;project&nbsp;//创建工程目录，在此目录下设置基础的导入数据&nbsp;&nbsp;</span></span></li>
    <li class=""><span>cd&nbsp;project&nbsp;&nbsp;&nbsp;&nbsp;//进入project目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>rails&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;//生成rails应用，名字为test&nbsp;&nbsp;</span></li>
    <li class=""><span>cd&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入rails应用目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mv&nbsp;config/database.yml&nbsp;config/database_example.yml&nbsp;//修改数据库配置文件的名字，因为这个配置文件可能每个开发人员的都不一样&nbsp;&nbsp;</span></li>
    <li class=""><span>rm&nbsp;-r&nbsp;log/*&nbsp;&nbsp;&nbsp;//删除log目录下的所有文件，这个目录下的文件不需要加入到版本控制&nbsp;&nbsp;</span></li>
    <li class="alt"><span>rm&nbsp;-r&nbsp;tmp/*&nbsp;&nbsp;&nbsp;//同上，临时目录也不要加入版本控制&nbsp;&nbsp;</span></li>
    <li class=""><span>cd&nbsp;..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//回到project目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mv&nbsp;test&nbsp;trunk&nbsp;//修改rails应用test目录的名字为trunk，这是svn的惯例，相当与CVS的HEAD，是开发主目录&nbsp;&nbsp;</span></li>
    <li class=""><span>mkdir&nbsp;tags&nbsp;&nbsp;&nbsp;&nbsp;//惯例，保存tag&nbsp;&nbsp;</span></li>
    <li class=""><span>mkdir&nbsp;branches//惯例，保存分支第二步，生成将项目文件导入SVN&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<span>没个项目的SVN库所使用的协议可能个不相同，这里假设你已经创建好了SVN库并可以使用了 。</span></p>
<p><span>
<div class="codeText">
<div class="codeHead">第二步：导入</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>cd&nbsp;project&nbsp;在project目录下执行&nbsp;&nbsp;</span></span></li>
    <li class=""><span>svn&nbsp;import&nbsp;.&nbsp;http://your_domain/svn/test&nbsp;-m&nbsp;<span class="string">&quot;初始化导入&quot;</span><span> --username&nbsp;your_name&nbsp;&nbsp;</span></span></li>
</ol>
</div>
如果没有错误，项目就导入成功了，现在我们到自己的rails项目工作目录checkout刚刚创建的项目<br />
</span></p>
<p><span>
<div class="codeText">
<div class="codeHead"><span>第三步：签出</span></div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>cd&nbsp;/rails&nbsp;//进入你的rails工作目录&nbsp;&nbsp;</span></span></li>
    <li class=""><span>svn&nbsp;co&nbsp;http://your_domain/svn/test/trunk&nbsp;test&nbsp;//checkout代码到test&nbsp;&nbsp;</span></li>
    <li class="alt"><span>cd&nbsp;test&nbsp;&nbsp;</span></li>
    <li class=""><span>cp&nbsp;config/database_example.yml&nbsp;config/database.yml&nbsp;//创建自己的数据库配置文件&nbsp;&nbsp;</span></li>
    <li class="alt"><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;database.yml&nbsp;config/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略database.yml文件，也就是不将此文件纳入版本控制&nbsp;&nbsp;</span></li>
    <li class=""><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;&quot;*&quot;&nbsp;log/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略log下的所有文件&nbsp;&nbsp;</span></li>
    <li class="alt"><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;&quot;*&quot;&nbsp;tmp/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略tmp目录下的所有文件&nbsp;&nbsp;</span></li>
    <li class=""><span>svn&nbsp;commit&nbsp;-m&nbsp;&quot;忽略文件&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//提交配置好了，到现在基本的项目初始化&nbsp; <br />
    </span></li>
</ol>
</div>
工作即可告一段落了，以后的工作基本就是更新，编码，提交了，属于svn基本使用问题，我们就不详述了。 <br />
</span></p>
<p><span>参考其他类似文章：</span></p>
<p><span>http://www.javaeye.com/article/107799</span></p>
<p><span>http://railscasts.com/episodes/36<br />
</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>多人协作的时候版本控制是很重要的，我以前公司使用的<strong>VSS</strong>或者<strong>CC&amp;CQ</strong>，这些都是比较重量级的，做大项目的控制比较合适，但是做一些 rails的比较小的项目的时候就没有这个必要，也没有这个必要；</p>
<p>相反，SVN和CVS可能更适合一点，因为CVS比较老，现在SVN比较主流，使用起来 也很方便，于是做Rails项目自然选择SVN，以前使用不多，虽然也会用，但是做了不少无用功，今天看到一篇介绍的文章，改吧改吧记录下。</p>
<div class="codeText">
<div class="codeHead">第一步，创建Rails应用并做基础设置</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>mkdir&nbsp;project&nbsp;//创建工程目录，在此目录下设置基础的导入数据&nbsp;&nbsp;</span></span></li>
    <li class=""><span>cd&nbsp;project&nbsp;&nbsp;&nbsp;&nbsp;//进入project目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>rails&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;//生成rails应用，名字为test&nbsp;&nbsp;</span></li>
    <li class=""><span>cd&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//进入rails应用目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mv&nbsp;config/database.yml&nbsp;config/database_example.yml&nbsp;//修改数据库配置文件的名字，因为这个配置文件可能每个开发人员的都不一样&nbsp;&nbsp;</span></li>
    <li class=""><span>rm&nbsp;-r&nbsp;log/*&nbsp;&nbsp;&nbsp;//删除log目录下的所有文件，这个目录下的文件不需要加入到版本控制&nbsp;&nbsp;</span></li>
    <li class="alt"><span>rm&nbsp;-r&nbsp;tmp/*&nbsp;&nbsp;&nbsp;//同上，临时目录也不要加入版本控制&nbsp;&nbsp;</span></li>
    <li class=""><span>cd&nbsp;..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//回到project目录&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mv&nbsp;test&nbsp;trunk&nbsp;//修改rails应用test目录的名字为trunk，这是svn的惯例，相当与CVS的HEAD，是开发主目录&nbsp;&nbsp;</span></li>
    <li class=""><span>mkdir&nbsp;tags&nbsp;&nbsp;&nbsp;&nbsp;//惯例，保存tag&nbsp;&nbsp;</span></li>
    <li class=""><span>mkdir&nbsp;branches//惯例，保存分支第二步，生成将项目文件导入SVN&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><span>没个项目的SVN库所使用的协议可能个不相同，这里假设你已经创建好了SVN库并可以使用了 。</span></p>
<p><span>
<div class="codeText">
<div class="codeHead">第二步：导入</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>cd&nbsp;project&nbsp;在project目录下执行&nbsp;&nbsp;</span></span></li>
    <li class=""><span>svn&nbsp;import&nbsp;.&nbsp;http://your_domain/svn/test&nbsp;-m&nbsp;<span class="string">&quot;初始化导入&quot;</span><span> --username&nbsp;your_name&nbsp;&nbsp;</span></span></li>
</ol>
</div>
如果没有错误，项目就导入成功了，现在我们到自己的rails项目工作目录checkout刚刚创建的项目<br />
</span></p>
<p><span>
<div class="codeText">
<div class="codeHead"><span>第三步：签出</span></div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>cd&nbsp;/rails&nbsp;//进入你的rails工作目录&nbsp;&nbsp;</span></span></li>
    <li class=""><span>svn&nbsp;co&nbsp;http://your_domain/svn/test/trunk&nbsp;test&nbsp;//checkout代码到test&nbsp;&nbsp;</span></li>
    <li class="alt"><span>cd&nbsp;test&nbsp;&nbsp;</span></li>
    <li class=""><span>cp&nbsp;config/database_example.yml&nbsp;config/database.yml&nbsp;//创建自己的数据库配置文件&nbsp;&nbsp;</span></li>
    <li class="alt"><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;database.yml&nbsp;config/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略database.yml文件，也就是不将此文件纳入版本控制&nbsp;&nbsp;</span></li>
    <li class=""><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;&quot;*&quot;&nbsp;log/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略log下的所有文件&nbsp;&nbsp;</span></li>
    <li class="alt"><span>svn&nbsp;propset&nbsp;svn:ignore&nbsp;&quot;*&quot;&nbsp;tmp/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//忽略tmp目录下的所有文件&nbsp;&nbsp;</span></li>
    <li class=""><span>svn&nbsp;commit&nbsp;-m&nbsp;&quot;忽略文件&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//提交配置好了，到现在基本的项目初始化&nbsp; <br />
    </span></li>
</ol>
</div>
工作即可告一段落了，以后的工作基本就是更新，编码，提交了，属于svn基本使用问题，我们就不详述了。 <br />
</span></p>
<p><span>参考其他类似文章：</span></p>
<p><span>http://www.javaeye.com/article/107799</span></p>
<p><span>http://railscasts.com/episodes/36<br />
</span></p>]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2007-09-24 17:09:39</wp:post_date>
		<wp:post_date_gmt>2007-09-24 17:09:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e9%a1%b9%e7%9b%ae%e7%ae%a1%e7%90%86%e4%b9%8bsubversionsvn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>让你的Rails远离SQL Injection</title>
		<link>http://www.iceskysl.com/?p=27</link>
		<pubDate>Mon, 24 Sep 2007 17:26:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<p>做为一名安全爱好者，我自然知道现在在动态语言写的web系统中可能存在的安全隐患的，例如大名鼎鼎的SQL Injection，CSS/XSS，文件包含，暴路径，泄露源代码等等，其中目前最杀手级的应该是SQL注射了，在PHP和ASP的世界了，辅助 union查询可以恩容易的暴出敏感数据，例如管理员用户名、密码等，就算你的密码MD5加密了，也有诸如XMD5这样的站点在线查询破解，如果存在漏 洞，自然非常危险。</p>
<p>Rails出生于真实的WEB应用，自然考虑到这些问题，例如如下代码即可杜绝Rails的SQL Injection：</p>
<p>
<div class="codeText">
<div class="codeHead">示范代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;tasks_controller.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@tasks</span><span>&nbsp;=&nbsp;Task.find(</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;name&nbsp;LIKE&nbsp;?&quot;</span><span>,&nbsp;</span><span class="string">&quot;%</span></span><span><span class="string"><span><span class="string">#{params[:query]}</span></span></span></span><span><span class="string">%&quot;</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
如上代码在PHP或者ASP中的处理逻辑是先取得<span><span class="string">params[:query]，再对这个进行检查、过滤，才能放进去查询的，在Rails中，只要使用? 替代符，然后就可以实现这个效果。如果你写成下面这个样子，肯定是危险的：</span></span></p>
<p><span><span class="string">
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;tasks_controller.rb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="variable">@tasks</span><span>&nbsp;=&nbsp;Task.find(</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;name&nbsp;LIKE&nbsp;#{params[:query]}&quot;</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
以一个业余hacker的口气告诫您，一定要注意！<br />
</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>做为一名安全爱好者，我自然知道现在在动态语言写的web系统中可能存在的安全隐患的，例如大名鼎鼎的SQL Injection，CSS/XSS，文件包含，暴路径，泄露源代码等等，其中目前最杀手级的应该是SQL注射了，在PHP和ASP的世界了，辅助 union查询可以恩容易的暴出敏感数据，例如管理员用户名、密码等，就算你的密码MD5加密了，也有诸如XMD5这样的站点在线查询破解，如果存在漏 洞，自然非常危险。</p>
<p>Rails出生于真实的WEB应用，自然考虑到这些问题，例如如下代码即可杜绝Rails的SQL Injection：</p>
<div class="codeText">
<div class="codeHead">示范代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;tasks_controller.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@tasks</span><span>&nbsp;=&nbsp;Task.find(</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;name&nbsp;LIKE&nbsp;?&quot;</span><span>,&nbsp;</span><span class="string">&quot;%</span></span><span><span class="string"><span><span class="string">#{params[:query]}</span></span></span></span><span><span class="string">%&quot;</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>如上代码在PHP或者ASP中的处理逻辑是先取得<span><span class="string">params[:query]，再对这个进行检查、过滤，才能放进去查询的，在Rails中，只要使用? 替代符，然后就可以实现这个效果。如果你写成下面这个样子，肯定是危险的：</span></span></p>
<p><span><span class="string">
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;tasks_controller.rb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="variable">@tasks</span><span>&nbsp;=&nbsp;Task.find(</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;name&nbsp;LIKE&nbsp;#{params[:query]}&quot;</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
以一个业余hacker的口气告诫您，一定要注意！<br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2007-09-24 17:26:08</wp:post_date>
		<wp:post_date_gmt>2007-09-24 17:26:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%a9%e4%bd%a0%e7%9a%84rails%e8%bf%9c%e7%a6%bbsql-injection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>随意指定Layouts～</title>
		<link>http://www.iceskysl.com/?p=28</link>
		<pubDate>Tue, 25 Sep 2007 10:18:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=28</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很多时候，我们会使用global layouts, controller layouts, shared layouts, dynamic layouts and action layouts.另外，我们还可以用如下方法的layouts，看例子：</p>
<p>
<div class="codeText">
<div class="codeHead">layouts示例代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;projects_controller.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>layout&nbsp;<span class="symbol">:user_layout</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@projects</span><span>&nbsp;=&nbsp;Project.find(</span><span class="symbol">:all</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;render&nbsp;<span class="symbol">:layout</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'projects'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>protected&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;user_layout&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;current_user.admin?&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;admin&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;application&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很多时候，我们会使用global layouts, controller layouts, shared layouts, dynamic layouts and action layouts.另外，我们还可以用如下方法的layouts，看例子：</p>
<div class="codeText">
<div class="codeHead">layouts示例代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;projects_controller.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>layout&nbsp;<span class="symbol">:user_layout</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@projects</span><span>&nbsp;=&nbsp;Project.find(</span><span class="symbol">:all</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;render&nbsp;<span class="symbol">:layout</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'projects'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>protected&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;user_layout&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;current_user.admin?&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;admin&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;application&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2007-09-25 10:18:33</wp:post_date>
		<wp:post_date_gmt>2007-09-25 10:18:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%8f%e6%84%8f%e6%8c%87%e5%ae%9alayouts%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>content_for:动态改变您的Layouts</title>
		<link>http://www.iceskysl.com/?p=29</link>
		<pubDate>Tue, 25 Sep 2007 11:19:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>content_for</strong>这个方法竟然一直没看到过，今天也是无意中看到的，看到对此介绍为：<br />
If you want to change something in the layout on a per-template basis, content_for is your answer! This allows templates to specify view code that can be placed anywhere in a layout.<br />
也就是说，如果你想动态的改变你原来layout中的东西，你可以使用content_for这个方法，结合代码就很好理解了，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="comments">&lt;!--&nbsp;projects/index.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%&nbsp;content_for&nbsp;:head&nbsp;do&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;stylesheet_link_tag&nbsp;'projects'&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%&nbsp;end&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comments">&lt;!--&nbsp;layouts/application.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">head</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">title</span><span class="tag">&gt;</span><span>Todo&nbsp;List</span><span class="tag">&lt;/</span><span class="tag-name">title</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;stylesheet_link_tag&nbsp;'application'&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;yield&nbsp;:head&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">head</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
先用<span><span>content_for申明一个变量，接着可以在你需要的地方使用</span></span><span><span class="tag">&lt;</span><span>%=&nbsp;yield&nbsp;:name %</span><span class="tag">&gt;</span><span> 来调用，参考如上代码应该不难理解。</span></span></p>
<p><span><span>另外，对于其详细用法，</span></span></p>
<p><span><span>请参考API:<a href="http://api.rubyonrails.com/classes/ActionView/Helpers/CaptureHelper.html">http://api.rubyonrails.com/classes/ActionView/Helpers/CaptureHelper.html</a><br />
</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>content_for</strong>这个方法竟然一直没看到过，今天也是无意中看到的，看到对此介绍为：<br />
If you want to change something in the layout on a per-template basis, content_for is your answer! This allows templates to specify view code that can be placed anywhere in a layout.<br />
也就是说，如果你想动态的改变你原来layout中的东西，你可以使用content_for这个方法，结合代码就很好理解了，如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="comments">&lt;!--&nbsp;projects/index.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%&nbsp;content_for&nbsp;:head&nbsp;do&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;stylesheet_link_tag&nbsp;'projects'&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%&nbsp;end&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comments">&lt;!--&nbsp;layouts/application.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">head</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">title</span><span class="tag">&gt;</span><span>Todo&nbsp;List</span><span class="tag">&lt;/</span><span class="tag-name">title</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;stylesheet_link_tag&nbsp;'application'&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;yield&nbsp;:head&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">head</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>先用<span><span>content_for申明一个变量，接着可以在你需要的地方使用</span></span><span><span class="tag">&lt;</span><span>%=&nbsp;yield&nbsp;:name %</span><span class="tag">&gt;</span><span> 来调用，参考如上代码应该不难理解。</span></span></p>
<p><span><span>另外，对于其详细用法，</span></span></p>
<p><span><span>请参考API:<a href="http://api.rubyonrails.com/classes/ActionView/Helpers/CaptureHelper.html">http://api.rubyonrails.com/classes/ActionView/Helpers/CaptureHelper.html</a><br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2007-09-25 11:19:53</wp:post_date>
		<wp:post_date_gmt>2007-09-25 11:19:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>content_for%e5%8a%a8%e6%80%81%e6%94%b9%e5%8f%98%e6%82%a8%e7%9a%84layouts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.110</wp:comment_author_IP>
			<wp:comment_date>2007-10-02 12:54:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个在技能云的 个人展示页面中用到了，果然很方便～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>隐藏你log中的敏感信息～</title>
		<link>http://www.iceskysl.com/?p=30</link>
		<pubDate>Tue, 25 Sep 2007 13:20:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[<p>写过rails的肯定看过它的日志文件，在登录的时候，你肯定看过类型下面的内容：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Processing&nbsp;UsersController#create&nbsp;(for&nbsp;127.0.0.1&nbsp;at&nbsp;2007-02-23&nbsp;19:11:20)&nbsp;[POST]&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Session&nbsp;ID:&nbsp;4047778b64af62d387f7e860e51cce20&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">style</span><span>=</span><span class="attribute-value">&quot;color:red;&quot;</span><span class="tag">&gt;</span><span>Parameters</span><span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>:&nbsp;{&quot;user&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;{&quot;name&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;name&quot;,&nbsp;&quot;password_confirmation&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;123456&quot;,&nbsp;&quot;password&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;123456&quot;},&nbsp;&quot;commit&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&quot;Register&quot;,&nbsp;&quot;action&quot;&nbsp;=<span class="tag">&gt;</span><span>&nbsp;&quot;create&quot;,&nbsp;&quot;controller&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;users&quot;}&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQL&nbsp;(0.000108)&nbsp;BEGIN&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">style</span><span>=</span><span class="attribute-value">&quot;color:red;&quot;</span><span class="tag">&gt;</span><span>SQL</span><span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>&nbsp;(0.000238)&nbsp;INSERT&nbsp;INTO&nbsp;users&nbsp;('name',&nbsp;'password')&nbsp;VALUES('name',&nbsp;'123456')&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQL&nbsp;(0.000395)&nbsp;COMMIT&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>Redirected&nbsp;to&nbsp;http://localhost:3000/users/5&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>...&nbsp;&nbsp;&nbsp; <br />
    </span></li>
</ol>
</div>
<p>做为一个安全爱好者，我可以负责任的告诉你，这些东西非常危险，恶意的人总是能想办法（这个办法很多，比如旁注等）拿到你的日志文件，而这个日志文件比起加密的数据库文件还要危险，于是肯定是需要做一些工作的。</p>
<p><strong>ActionController#filter_parameter_logging</strong> 就是我们需要的东西，它可以用来过滤那些你不想保存在日志中的数据，它可以阻止一些敏感数据赤裸裸的暴露在日志文件中，比如密码，或者信用卡帐号。也可以防止一些大块的数据占用日志文件，等等。<br />
如果你的应用用到passwords，复制下面这行到你的ApplicaitonController&nbsp; Class:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>filter_parameter_logging&nbsp;</span><span class="string">&quot;password&quot;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>这样就可以阻止任何匹配<u>/password/i</u>模式的数据被写入日志，诸如：<u>[user][password] 或 [user][password_confirmation]</u><br />
<br />
另外，如果想在开发环境下显示POST logging,但是在产品环境下完全不显示，如何做呢？</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>filter_parameter_logging(</span><span class="string">&quot;password&quot;</span><span>)&nbsp;</span><span class="keyword">if</span><span>&nbsp;RAILS_ENV&nbsp;==&nbsp;</span><span class="string">&quot;production&quot;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>如果想完全禁止POST logging，则可以在production.rb中修改：config.log_level = :<font color="#ff0000">warn</font><br />
<br />
其他类似文章，请参考：</p>
<p>http://blackanger.blog.51cto.com/140924/35735<br />
http://hideto.javaeye.com/blog/106956<br />
http://api.rubyonrails.com/classes/ActionController/Base.html#M000260</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>写过rails的肯定看过它的日志文件，在登录的时候，你肯定看过类型下面的内容：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Processing&nbsp;UsersController#create&nbsp;(for&nbsp;127.0.0.1&nbsp;at&nbsp;2007-02-23&nbsp;19:11:20)&nbsp;[POST]&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Session&nbsp;ID:&nbsp;4047778b64af62d387f7e860e51cce20&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">style</span><span>=</span><span class="attribute-value">&quot;color:red;&quot;</span><span class="tag">&gt;</span><span>Parameters</span><span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>:&nbsp;{&quot;user&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;{&quot;name&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;name&quot;,&nbsp;&quot;password_confirmation&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;123456&quot;,&nbsp;&quot;password&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;123456&quot;},&nbsp;&quot;commit&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&quot;Register&quot;,&nbsp;&quot;action&quot;&nbsp;=<span class="tag">&gt;</span><span>&nbsp;&quot;create&quot;,&nbsp;&quot;controller&quot;&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;users&quot;}&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQL&nbsp;(0.000108)&nbsp;BEGIN&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">style</span><span>=</span><span class="attribute-value">&quot;color:red;&quot;</span><span class="tag">&gt;</span><span>SQL</span><span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>&nbsp;(0.000238)&nbsp;INSERT&nbsp;INTO&nbsp;users&nbsp;('name',&nbsp;'password')&nbsp;VALUES('name',&nbsp;'123456')&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQL&nbsp;(0.000395)&nbsp;COMMIT&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>Redirected&nbsp;to&nbsp;http://localhost:3000/users/5&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>...&nbsp;&nbsp;&nbsp; <br />
    </span></li>
</ol>
</div>
<p>做为一个安全爱好者，我可以负责任的告诉你，这些东西非常危险，恶意的人总是能想办法（这个办法很多，比如旁注等）拿到你的日志文件，而这个日志文件比起加密的数据库文件还要危险，于是肯定是需要做一些工作的。</p>
<p><strong>ActionController#filter_parameter_logging</strong> 就是我们需要的东西，它可以用来过滤那些你不想保存在日志中的数据，它可以阻止一些敏感数据赤裸裸的暴露在日志文件中，比如密码，或者信用卡帐号。也可以防止一些大块的数据占用日志文件，等等。<br />
如果你的应用用到passwords，复制下面这行到你的ApplicaitonController&nbsp; Class:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>filter_parameter_logging&nbsp;</span><span class="string">&quot;password&quot;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>这样就可以阻止任何匹配<u>/password/i</u>模式的数据被写入日志，诸如：<u>[user][password] 或 [user][password_confirmation]</u><br />
<br />
另外，如果想在开发环境下显示POST logging,但是在产品环境下完全不显示，如何做呢？</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>filter_parameter_logging(</span><span class="string">&quot;password&quot;</span><span>)&nbsp;</span><span class="keyword">if</span><span>&nbsp;RAILS_ENV&nbsp;==&nbsp;</span><span class="string">&quot;production&quot;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>如果想完全禁止POST logging，则可以在production.rb中修改：config.log_level = :<font color="#ff0000">warn</font><br />
<br />
其他类似文章，请参考：</p>
<p>http://blackanger.blog.51cto.com/140924/35735<br />
http://hideto.javaeye.com/blog/106956<br />
http://api.rubyonrails.com/classes/ActionController/Base.html#M000260</p>]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2007-09-25 13:20:22</wp:post_date>
		<wp:post_date_gmt>2007-09-25 13:20:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%90%e8%97%8f%e4%bd%a0log%e4%b8%ad%e7%9a%84%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_1e2037b010bca0a107f34a23452ea32a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Rails中取得REFERER！</title>
		<link>http://www.iceskysl.com/?p=31</link>
		<pubDate>Wed, 26 Sep 2007 17:22:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>需要取打开技能云tag的页面地址，于是需要取得<strong>referer</strong>的值，记录如下：<strong><br />Try: </strong><br />request.env['HTTP_REFERER']<br />或者<br />request.referer<br />参考：http://www.ruby-forum.com/topic/79405</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<pre>需要取打开技能云tag的页面地址，于是需要取得<strong>referer</strong>的值，记录如下：<strong><br />Try: </strong><br />request.env['HTTP_REFERER']<br />或者<br />request.referer<br />参考：http://www.ruby-forum.com/topic/79405</pre>]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2007-09-26 17:22:48</wp:post_date>
		<wp:post_date_gmt>2007-09-26 17:22:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%8f%96%e5%be%97referer%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.73.230</wp:comment_author_IP>
			<wp:comment_date>2007-09-29 22:37:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[request.env['HTTP_REFERER']:http://blog.1sters.com/?action=show&id=33
request.referer:http://blog.1sters.com/?action=show&id=33]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>warning: already initialized constant OPTIONS</title>
		<link>http://www.iceskysl.com/?p=32</link>
		<pubDate>Thu, 27 Sep 2007 11:52:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[<p>着手开发1stlog Ver 1.1版本，把代码整理了一下，带到公司跑不起来，看了下Ruby版本，是1.8.4的，难道是版本太老，卸掉重新装个1.8.6的版本，接着装rails，<font>mongrel和</font><font>mongrel_service等。</font></p>
<p>
<div class="codeText">
<div class="codeHead">安装套件</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>gem&nbsp;install&nbsp;rails&nbsp;&ndash;y&nbsp;&nbsp;</span></span></li>
    <li class=""><span>gem&nbsp;install&nbsp;mongrel&nbsp;&ndash;y&nbsp;&nbsp;</span></li>
    <li class="alt"><span>gem&nbsp;install&nbsp;mongrel_service&nbsp;-y&nbsp;&nbsp;</span></li>
</ol>
</div>
可是<u>ruby ./script/server</u>启动后，还是报错，如下：</p>
<div><font>
<div class="codeText">
<div class="codeHead"><font>XML/HTML代码</font></div>
<ol start="1" class="dp-xml"><font>
    <li class="alt"><span><span>=</span><span class="tag">&gt;</span><span>&nbsp;Booting&nbsp;Mongrel&nbsp;(use&nbsp;'script/server&nbsp;webrick'&nbsp;to&nbsp;force&nbsp;WEBrick)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>=<span class="tag">&gt;</span><span>&nbsp;Rails&nbsp;application&nbsp;starting&nbsp;on&nbsp;http://</span><span class="attribute">0.0.0.0:3000</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>=<span class="tag">&gt;</span><span>&nbsp;Call&nbsp;with&nbsp;-d&nbsp;to&nbsp;</span><span class="attribute">detach</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>=<span class="tag">&gt;</span><span>&nbsp;Ctrl-C&nbsp;to&nbsp;shutdown&nbsp;server&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>**&nbsp;Starting&nbsp;Mongrel&nbsp;listening&nbsp;at&nbsp;0.0.0.0:3000&nbsp;&nbsp;</span></li>
    <li class=""><span>**&nbsp;Starting&nbsp;Rails&nbsp;with&nbsp;development&nbsp;environment...&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Exiting&nbsp;&nbsp;</span></li>
    <li class=""><span>/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/servers/mongrel.rb:15:&nbsp;warning:&nbsp;already&nbsp;initialized&nbsp;constant&nbsp;OPTIONS&nbsp;&nbsp;</span></li>
    <li class="alt"><span>/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/servers/mongrel.rb:18:&nbsp;undefined&nbsp;method&nbsp;`options'&nbsp;for&nbsp;[]:Array&nbsp;(NoMethodError)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:32:in&nbsp;`gem_original_require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:32:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:342:in&nbsp;`new_constants_in'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/server.rb:39&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:27:in&nbsp;`gem_original_require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:27:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:342:in&nbsp;`new_constants_in'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;script/server:3&nbsp;&nbsp;</span></li>
    </font></ol>
    </div>
    十分之不解，于是卸掉</font><font><font><span>mongrel，重新安装下，还是不行，google到<a href="http://www.dansketcher.com/2007/05/07/warning-already-initialized-constant-options/">这篇文章</a>：情况几乎差不多，他说是缺少app中使用的gem，恩，很有可能，打开我的environment.rb，看到require 'redcloth',哦，原来如此。<br />
    装上这个gem后一切正常，接着看到一个修复方法，如下：<br />
    </span></font></font>
    <div class="codeText">
    <div class="codeHead">Ruby代码</div>
    <ol start="1" class="dp-rb">
        <li class="alt"><span><span>&ldquo;require&nbsp;&lsquo;nonexistingfile&rsquo;&rdquo;.&nbsp; <br />
        </span></span></li>
    </ol>
    </div>
    但是加上这句保证可启动，但是其中遇到需要使用gem的时候，肯定还是不行的。</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>着手开发1stlog Ver 1.1版本，把代码整理了一下，带到公司跑不起来，看了下Ruby版本，是1.8.4的，难道是版本太老，卸掉重新装个1.8.6的版本，接着装rails，<font>mongrel和</font><font>mongrel_service等。</font></p>
<div class="codeText">
<div class="codeHead">安装套件</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>gem&nbsp;install&nbsp;rails&nbsp;&ndash;y&nbsp;&nbsp;</span></span></li>
    <li class=""><span>gem&nbsp;install&nbsp;mongrel&nbsp;&ndash;y&nbsp;&nbsp;</span></li>
    <li class="alt"><span>gem&nbsp;install&nbsp;mongrel_service&nbsp;-y&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>可是<u>ruby ./script/server</u>启动后，还是报错，如下：</p>
<div><font>
<div class="codeText">
<div class="codeHead"><font>XML/HTML代码</font></div>
<ol start="1" class="dp-xml"><font>
    <li class="alt"><span><span>=</span><span class="tag">&gt;</span><span>&nbsp;Booting&nbsp;Mongrel&nbsp;(use&nbsp;'script/server&nbsp;webrick'&nbsp;to&nbsp;force&nbsp;WEBrick)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>=<span class="tag">&gt;</span><span>&nbsp;Rails&nbsp;application&nbsp;starting&nbsp;on&nbsp;http://</span><span class="attribute">0.0.0.0:3000</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>=<span class="tag">&gt;</span><span>&nbsp;Call&nbsp;with&nbsp;-d&nbsp;to&nbsp;</span><span class="attribute">detach</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>=<span class="tag">&gt;</span><span>&nbsp;Ctrl-C&nbsp;to&nbsp;shutdown&nbsp;server&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>**&nbsp;Starting&nbsp;Mongrel&nbsp;listening&nbsp;at&nbsp;0.0.0.0:3000&nbsp;&nbsp;</span></li>
    <li class=""><span>**&nbsp;Starting&nbsp;Rails&nbsp;with&nbsp;development&nbsp;environment...&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Exiting&nbsp;&nbsp;</span></li>
    <li class=""><span>/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/servers/mongrel.rb:15:&nbsp;warning:&nbsp;already&nbsp;initialized&nbsp;constant&nbsp;OPTIONS&nbsp;&nbsp;</span></li>
    <li class="alt"><span>/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/servers/mongrel.rb:18:&nbsp;undefined&nbsp;method&nbsp;`options'&nbsp;for&nbsp;[]:Array&nbsp;(NoMethodError)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:32:in&nbsp;`gem_original_require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:32:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:342:in&nbsp;`new_constants_in'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/rails-1.2.3/lib/commands/server.rb:39&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:27:in&nbsp;`gem_original_require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:27:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:342:in&nbsp;`new_constants_in'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/opt/local/lib/ruby/gems/1.8/gems/activesupport-1.4.2/lib/active_support/dependencies.rb:495:in&nbsp;`require'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;script/server:3&nbsp;&nbsp;</span></li>
    </font></ol>
    </div>
    十分之不解，于是卸掉</font><font><font><span>mongrel，重新安装下，还是不行，google到<a href="http://www.dansketcher.com/2007/05/07/warning-already-initialized-constant-options/">这篇文章</a>：情况几乎差不多，他说是缺少app中使用的gem，恩，很有可能，打开我的environment.rb，看到require 'redcloth',哦，原来如此。<br />
    装上这个gem后一切正常，接着看到一个修复方法，如下：<br />
    </span></font></font>
    <div class="codeText">
    <div class="codeHead">Ruby代码</div>
    <ol start="1" class="dp-rb">
        <li class="alt"><span><span>&ldquo;require&nbsp;&lsquo;nonexistingfile&rsquo;&rdquo;.&nbsp; <br />
        </span></span></li>
    </ol>
    </div>
    但是加上这句保证可启动，但是其中遇到需要使用gem的时候，肯定还是不行的。</div>]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2007-09-27 11:52:41</wp:post_date>
		<wp:post_date_gmt>2007-09-27 11:52:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>warning-already-initialized-constant-options</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云(iTechTag)最新功能及其来源～</title>
		<link>http://www.iceskysl.com/?p=33</link>
		<pubDate>Sat, 29 Sep 2007 16:52:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最新的两个功能，完成后将进行一次宣传推广，抓紧时间实现，记录：<br />
<strong> 1、要求战友功能</strong> --自动的给项目成员（提交者）发送提醒Email，让其邀请自己的战友加入项目成员；</p>
<p><strong>2、智能抓取&nbsp;</strong> --按照展示&ldquo;技能云&rdquo;的地址，智能抓取其对于的BLOG内容（按照RSS抓取），解析后入库，显示在其个人的页面上。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最新的两个功能，完成后将进行一次宣传推广，抓紧时间实现，记录：<br />
<strong> 1、要求战友功能</strong> --自动的给项目成员（提交者）发送提醒Email，让其邀请自己的战友加入项目成员；</p>
<p><strong>2、智能抓取&nbsp;</strong> --按照展示&ldquo;技能云&rdquo;的地址，智能抓取其对于的BLOG内容（按照RSS抓取），解析后入库，显示在其个人的页面上。</p>]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2007-09-29 16:52:24</wp:post_date>
		<wp:post_date_gmt>2007-09-29 16:52:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e6%9c%80%e6%96%b0%e5%8a%9f%e8%83%bd%e5%8f%8a%e5%85%b6%e6%9d%a5%e6%ba%90%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.25.130</wp:comment_author_IP>
			<wp:comment_date>2007-09-30 20:37:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2、智能抓取
----已经实现。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.75.201</wp:comment_author_IP>
			<wp:comment_date>2007-10-01 00:09:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1、要求战友功能
---已经完成。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>抓取到了展示“技能云”的页面URL了</title>
		<link>http://www.iceskysl.com/?p=34</link>
		<pubDate>Sat, 29 Sep 2007 23:15:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[<p>和前面说的那个文章中的道理，今天晚上测试了下，可以顺利抓取到展示&ldquo;技能云&rdquo;的页面URL了，并且做了一些处理，比如记录次数，就可以帮忙用户统计其页 面被欢迎程度了，呵呵，感觉和站点统计有点相像，下一步是抓取用户页面上的RSS地址，并抓取解析其内容，截个图片，如下：</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>和前面说的那个文章中的道理，今天晚上测试了下，可以顺利抓取到展示&ldquo;技能云&rdquo;的页面URL了，并且做了一些处理，比如记录次数，就可以帮忙用户统计其页面被欢迎程度了，呵呵，感觉和站点统计有点相像，下一步是抓取用户页面上的RSS地址，并抓取解析其内容，截个图片，如下：</p>]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2007-09-29 23:15:13</wp:post_date>
		<wp:post_date_gmt>2007-09-29 23:15:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%93%e5%8f%96%e5%88%b0%e4%ba%86%e5%b1%95%e7%a4%ba%e6%8a%80%e8%83%bd%e4%ba%91%e7%9a%84%e9%a1%b5%e9%9d%a2url%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%8a%93%e5%8f%96%e5%88%b0%e4%ba%86%e5%b1%95%e7%a4%ba%e2%80%9c%e6%8a%80%e8%83%bd%e4%ba%91%e2%80%9d%e7%9a%84%e9%a1%b5%e9%9d%a2url%e4%ba%86]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.73.230</wp:comment_author_IP>
			<wp:comment_date>2007-09-29 23:17:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[上面显示的就是刚刚上线后抓到的几个来源URL，很不错哦，完全满足需求..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.73.230</wp:comment_author_IP>
			<wp:comment_date>2007-09-29 23:42:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<link href="http://www.itechtag.com/feed" rel="alternate" title="RSS" type="application/rss+xml" />
------------------
<link rel="alternate" href="http://www.itechtag.com/feed" title="RSS" type="application/rss+xml" />
咋写正则哦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.73.230</wp:comment_author_IP>
			<wp:comment_date>2007-09-30 00:45:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[测试成功，代码如下：
require "open-uri"
require "hpricot"
doc = open("http://www.itechtag.com/") { |f| Hpricot(f) }
rel = doc.search("//link[@rel='alternate']").first[:href]
print rel.to_s]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.73.230</wp:comment_author_IP>
			<wp:comment_date>2007-09-30 00:45:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[上面得到的结果是：
F:\>ruby 1st.rb
http://www.itechtag.com/feed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>(x)HTML解析利器:Hpricot</title>
		<link>http://www.iceskysl.com/?p=35</link>
		<pubDate>Sun, 30 Sep 2007 11:20:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于需要在技能云(iTechTag) 上智能抓取展示&ldquo;技能云&rdquo;的页面的URL对于的RSS进行解析，所以需要写取RSS已经解析的代码，先贴一个一般的例子，如下：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">首先给一段XML代码（<span><span class="string">my.xml）</span></span></div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>403276</span><span class="tag">&lt;/</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>Trivet</span><span class="tag">&lt;/</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;/</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>紧接着，我们用来解析并入库：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>FIELDS&nbsp;=&nbsp;%w[SKU&nbsp;ItemName&nbsp;CollectionNo&nbsp;Pages]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;Hpricot.parse(<span class="builtin">File</span><span>.read(</span><span class="string">&quot;my.xml&quot;</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class=""><span>(doc/<span class="symbol">:product</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|xml_product|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product&nbsp;=&nbsp;Product.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;field&nbsp;</span><span class="keyword">in</span><span>&nbsp;FIELDS&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;product[field]&nbsp;=&nbsp;(xml_product/field.intern).first.innerHTML&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product.save&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong> 遗留问题：</strong></p>
<p>&nbsp;</p>
<p>1、对于中文，可能会出现乱码</p>
<p>2、另外，有人说不是线程安全的，多线程的话可能有问题。</p>
<p><strong>再附录</strong>一段我写的：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">&quot;open-uri&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">&quot;hpricot&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;open(<span class="string">&quot;http://blog.1sters.com&quot;</span><span>)&nbsp;{&nbsp;|f|&nbsp;Hpricot(f)&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>rel&nbsp;=&nbsp;doc.search(<span class="string">&quot;//link[@rel='alternate']&quot;</span><span>).first[</span><span class="symbol">:href</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>print&nbsp;rel.to_s&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#xmldoc&nbsp;=&nbsp;Hpricot.XML(open(&quot;http://blog.1sters.com/&quot;+rel))</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>xmldoc&nbsp;=&nbsp;open(<span class="string">&quot;http://blog.1sters.com/&quot;</span><span>+rel)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|fi|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;Hpricot.XML(fi)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;(xmldoc/<span class="symbol">:item</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|item|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;title&nbsp;=&nbsp;(item/<span class="symbol">:title</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;link&nbsp;=&nbsp;(item/<span class="symbol">:link</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;(item/<span class="string">'dc:date'</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{title}:&nbsp;#{link}&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#print&nbsp;xmldoc.to_s</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
</p>
<p><strong>参考：</strong></p>
<p>1、http://www.ave7.net/forum/showthread.php?t=5919<br />
2、http://club.phpe.net/index.php?act=ST&amp;f=19&amp;t=15267&amp;s=04a67d90deb7607c0907d28dafba10f5</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于需要在技能云(iTechTag) 上智能抓取展示&ldquo;技能云&rdquo;的页面的URL对于的RSS进行解析，所以需要写取RSS已经解析的代码，先贴一个一般的例子，如下：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">首先给一段XML代码（<span><span class="string">my.xml）</span></span></div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>403276</span><span class="tag">&lt;/</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>Trivet</span><span class="tag">&lt;/</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;/</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>紧接着，我们用来解析并入库：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>FIELDS&nbsp;=&nbsp;%w[SKU&nbsp;ItemName&nbsp;CollectionNo&nbsp;Pages]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;Hpricot.parse(<span class="builtin">File</span><span>.read(</span><span class="string">&quot;my.xml&quot;</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class=""><span>(doc/<span class="symbol">:product</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|xml_product|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product&nbsp;=&nbsp;Product.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;field&nbsp;</span><span class="keyword">in</span><span>&nbsp;FIELDS&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;product[field]&nbsp;=&nbsp;(xml_product/field.intern).first.innerHTML&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product.save&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong> 遗留问题：</strong></p>
<p>1、对于中文，可能会出现乱码</p>
<p>2、另外，有人说不是线程安全的，多线程的话可能有问题。</p>
<p><strong>再附录</strong>一段我写的：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">&quot;open-uri&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">&quot;hpricot&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;open(<span class="string">&quot;http://blog.1sters.com&quot;</span><span>)&nbsp;{&nbsp;|f|&nbsp;Hpricot(f)&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>rel&nbsp;=&nbsp;doc.search(<span class="string">&quot;//link[@rel='alternate']&quot;</span><span>).first[</span><span class="symbol">:href</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>print&nbsp;rel.to_s&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#xmldoc&nbsp;=&nbsp;Hpricot.XML(open(&quot;http://blog.1sters.com/&quot;+rel))</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>xmldoc&nbsp;=&nbsp;open(<span class="string">&quot;http://blog.1sters.com/&quot;</span><span>+rel)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|fi|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;Hpricot.XML(fi)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;(xmldoc/<span class="symbol">:item</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|item|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;title&nbsp;=&nbsp;(item/<span class="symbol">:title</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;link&nbsp;=&nbsp;(item/<span class="symbol">:link</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;(item/<span class="string">'dc:date'</span><span>).inner_html&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{title}:&nbsp;#{link}&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#print&nbsp;xmldoc.to_s</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>参考：</strong></p>
<p>1、http://www.ave7.net/forum/showthread.php?t=5919<br />
2、http://club.phpe.net/index.php?act=ST&amp;f=19&amp;t=15267&amp;s=04a67d90deb7607c0907d28dafba10f5</p>]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2007-09-30 11:20:33</wp:post_date>
		<wp:post_date_gmt>2007-09-30 11:20:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xhtml%e8%a7%a3%e6%9e%90%e5%88%a9%e5%99%a8hpricot</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云上又一个令人兴奋的功能：智能抓取</title>
		<link>http://www.iceskysl.com/?p=36</link>
		<pubDate>Sun, 30 Sep 2007 20:13:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[<p>实现了对展示&ldquo;<a href="http://www.itechtag.com/">技能云</a>&rdquo;的用户的博客内容的智能抓取，效果相当不错，呵呵，为以后的发展提供了不错的思路，大家可以看这个地址上的右下角，显示的即是该用户的blog上的最新内容：<br />
<br />
<a href="http://www.itechtag.com/people/view/16"> http://www.itechtag.com/people/view/16</a></p>
<p><a href="http://www.itechtag.com/people/view/1">http://www.itechtag.com/people/view/1</a></p>
<p>其他的，只有用户在自己的页面上展示了自己的&ldquo;技能云&rdquo;，我们就可以智能的抓取到其最新的博客内容，相当方便。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>实现了对展示&ldquo;<a href="http://www.itechtag.com">技能云</a>&rdquo;的用户的博客内容的智能抓取，效果相当不错，呵呵，为以后的发展提供了不错的思路，大家可以看这个地址上的右下角，显示的即是该用户的blog上的最新内容：<br />
<br />
<a href="http://www.itechtag.com/people/view/16"> http://www.itechtag.com/people/view/16</a></p>
<p><a href="http://www.itechtag.com/people/view/1">http://www.itechtag.com/people/view/1</a></p>
<p>其他的，只有用户在自己的页面上展示了自己的&ldquo;技能云&rdquo;，我们就可以智能的抓取到其最新的博客内容，相当方便。</p>]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2007-09-30 20:13:32</wp:post_date>
		<wp:post_date_gmt>2007-09-30 20:13:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91%e4%b8%8a%e5%8f%88%e4%b8%80%e4%b8%aa%e4%bb%a4%e4%ba%ba%e5%85%b4%e5%a5%8b%e7%9a%84%e5%8a%9f%e8%83%bd%ef%bc%9a%e6%99%ba%e8%83%bd%e6%8a%93%e5%8f%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Win下安装Rmagick！</title>
		<link>http://www.iceskysl.com/?p=37</link>
		<pubDate>Mon, 01 Oct 2007 20:29:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[<p>说来惭愧，写了这么久的Ruby，做了那么多的网站，也写过不少使用Rmagick来处理图片的代码，但是自己的机子上始终安装不成功，折腾了好几 次，我记得都没有最终完全搞定。本来准备使用Ubuntu上，但是很多东西在Win下使用惯了，所以还是安心的在WIN下做开发吧。</p>
<p>言归正传，说说怎么在Win下安装Rmagick，其他的部分可以参考http://www.javaeye.com/post/167758和 http://blog.sina.com.cn/s/blog_4a6ae9750100076w.html这两文章，我大概说下步骤和可能会出现的问 题，记录一下：</p>
<div>1、首先到<a target="_blank" href="http://rubyforge.org/frs/?group_id=12&amp;release_id=6780">这个地方</a>去下载RMagick的最新Windows版本，到目前为止的最新版本是<a target="_blank" href="http://rubyforge.org/frs/download.php/12890/rmagick-win32-1.13.0_IM-6.2.9-3.zip">rmagick-win32-1.13.0_IM-6.2.9-3.zip</a>。</div>
<div>2、先解压，然后输入命令安装：gem install rmagick-1.13.0-win32.gem</div>
<div>3、然后再点ImageMagick-6.2.9-3-Q8-windows-dll.exe安装，并且把这个的安装路径放到path环境变量里面去，否则会出现CORE_RL_magick_.dll找不到的错误（需要注意，加入后CMD需要重新打开下，否则不行）。<br />
然后试试这段代码，如下：<br />
<div class="codeText">
<div class="codeHead">示例代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>include&nbsp;Magick&nbsp;&nbsp;</span></li>
    <li class="alt"><span>pic&nbsp;=&nbsp;ImageList.<span class="keyword">new</span><span>(</span><span class="string">&quot;vd2.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>l&nbsp;=&nbsp;pic.columns&nbsp;&gt;&nbsp;pic.rows&nbsp;?&nbsp;pic.columns&nbsp;:&nbsp;pic.rows&nbsp;&nbsp;</span></li>
    <li class="alt"><span>f&nbsp;=&nbsp;128.0/l;&nbsp;&nbsp;</span></li>
    <li class=""><span>thumb&nbsp;=&nbsp;pic.thumbnail(f)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>thumb.write(<span class="string">&quot;vd2_tb.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
其他的就不写的，互联网的资源是无限的，参考以下：<br />
1、http://blog.sina.com.cn/s/blog_4a6ae9750100076w.html<br />
2、http://www.javaeye.com/post/167758<br />
3、http://rmagick.rubyforge.org/portfolio.html</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>说来惭愧，写了这么久的Ruby，做了那么多的网站，也写过不少使用Rmagick来处理图片的代码，但是自己的机子上始终安装不成功，折腾了好几 次，我记得都没有最终完全搞定。本来准备使用Ubuntu上，但是很多东西在Win下使用惯了，所以还是安心的在WIN下做开发吧。</p>
<p>言归正传，说说怎么在Win下安装Rmagick，其他的部分可以参考http://www.javaeye.com/post/167758和 http://blog.sina.com.cn/s/blog_4a6ae9750100076w.html这两文章，我大概说下步骤和可能会出现的问 题，记录一下：</p>
<div>1、首先到<a target="_blank" href="http://rubyforge.org/frs/?group_id=12&amp;release_id=6780">这个地方</a>去下载RMagick的最新Windows版本，到目前为止的最新版本是<a target="_blank" href="http://rubyforge.org/frs/download.php/12890/rmagick-win32-1.13.0_IM-6.2.9-3.zip">rmagick-win32-1.13.0_IM-6.2.9-3.zip</a>。</div>
<div>2、先解压，然后输入命令安装：gem install rmagick-1.13.0-win32.gem</div>
<div>3、然后再点ImageMagick-6.2.9-3-Q8-windows-dll.exe安装，并且把这个的安装路径放到path环境变量里面去，否则会出现CORE_RL_magick_.dll找不到的错误（需要注意，加入后CMD需要重新打开下，否则不行）。<br />
然后试试这段代码，如下：<br />
<div class="codeText">
<div class="codeHead">示例代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>include&nbsp;Magick&nbsp;&nbsp;</span></li>
    <li class="alt"><span>pic&nbsp;=&nbsp;ImageList.<span class="keyword">new</span><span>(</span><span class="string">&quot;vd2.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>l&nbsp;=&nbsp;pic.columns&nbsp;&gt;&nbsp;pic.rows&nbsp;?&nbsp;pic.columns&nbsp;:&nbsp;pic.rows&nbsp;&nbsp;</span></li>
    <li class="alt"><span>f&nbsp;=&nbsp;128.0/l;&nbsp;&nbsp;</span></li>
    <li class=""><span>thumb&nbsp;=&nbsp;pic.thumbnail(f)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>thumb.write(<span class="string">&quot;vd2_tb.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
其他的就不写的，互联网的资源是无限的，参考以下：<br />
1、http://blog.sina.com.cn/s/blog_4a6ae9750100076w.html<br />
2、http://www.javaeye.com/post/167758<br />
3、http://rmagick.rubyforge.org/portfolio.html</div>]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2007-10-01 20:29:15</wp:post_date>
		<wp:post_date_gmt>2007-10-01 20:29:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8win%e4%b8%8b%e5%ae%89%e8%a3%85rmagick%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.105.111</wp:comment_author_IP>
			<wp:comment_date>2007-10-01 20:33:07</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里还有一篇比较不错的文章（Rails上的RMagick使用经验之谈）：
http://www.javaeye.com/post/380907]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[dingr]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://att21@163.com</wp:comment_author_url>
			<wp:comment_author_IP>117.32.131.188</wp:comment_author_IP>
			<wp:comment_date>2009-05-06 15:58:15</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[老大 我安装chito 1.1.0 出问题了 他需要安装Rmagick 我看装好后 出现如下错误
D:\chito>rake db:migrate
(in D:/chito)
rake aborted!
14001: 由于应用程序配置不正确，应用程序未能启动。重新安装应用程序可能会纠正这个
问题。   - d:/ruby/lib/ruby/gems/1.8/gems/rmagick-1.14.1-unknown/ext/RMagick.so

(See full trace by running task with --trace)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>修复一个关于自动登录的BUG！</title>
		<link>http://www.iceskysl.com/?p=38</link>
		<pubDate>Tue, 02 Oct 2007 13:13:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前几天给&ldquo;技能云&rdquo;加上了自动登录的功能，并写了一篇手记文章（参考这里：<a href="../../../?action=show&amp;id=22&amp;page=1#cm59">在Rails中实现自动登录功能！</a>），但是前几天<span class="author"><a href="http://code.google.com/u/wangdi.cd/">wangdi.cd</a>提了一个问题如下：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>我前几天用了一下itechtag，并且注册了一个hobitton的用户名，，但是现在，，我还没登&nbsp;&nbsp;</span></span></li>
    <li class=""><span>录，就自己给我用trail的用户名登录了，，还能修改他的信息，，怎么回事呢？&nbsp;&nbsp;</span></li>
</ol>
</div>
开始还没有引起重视，昨天晚上另外一个用户dbd也说存在这个问题，详细问了下，他说上次登录的时候选择了&ldquo;记住我&rdquo;，今天再次登录的时候就出现该问题了，而后google时无意看到JAVAEYE的抛出异常的爱说：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">抛出异常的爱：</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>刚刚在&nbsp;&nbsp;</span></span></li>
    <li class=""><span>技能云http://www.itechtag.com/about&nbsp;&nbsp;</span></li>
    <li class="alt"><span>遇到了。。。&nbsp;&nbsp;</span></li>
    <li class=""><span>用的是温柔一刀的账号。。。。。&nbsp;&nbsp;</span></li>
</ol>
</div>
看来是有问题了，立即检查代码，看到取当前用户是否自动登录的代码如下：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_current_user&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;session[</span><span class="symbol">:user</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;<font color="#ff0000">c_user.id&nbsp;</font>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
再看看</span><span class="author"><span><span>PersistentLogin这个表的结构，如下：</span></span></span></p>
<p><span class="author"><span><span>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;CreatePersistentLogins&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;create_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:string</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:user_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:datetime</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;uid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;created_on&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;drop_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
一眼看出问题所在，</span></span></span><span class="author"><span><span><span><span class="symbol">user_id</span><span>这个字段保存的才是用户的ID，而前面那段代码取成了id 字段，真是疏忽呀～</span></span></span></span></span></p>
<p><span class="author"><span><span><span><span>找到问题，自然好解决了，不在废话～<br />
</span></span></span></span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天给&ldquo;技能云&rdquo;加上了自动登录的功能，并写了一篇手记文章（参考这里：<a href="../../../?action=show&amp;id=22&amp;page=1#cm59">在Rails中实现自动登录功能！</a>），但是前几天<span class="author"><a href="http://code.google.com/u/wangdi.cd/">wangdi.cd</a>提了一个问题如下：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>我前几天用了一下itechtag，并且注册了一个hobitton的用户名，，但是现在，，我还没登&nbsp;&nbsp;</span></span></li>
    <li class=""><span>录，就自己给我用trail的用户名登录了，，还能修改他的信息，，怎么回事呢？&nbsp;&nbsp;</span></li>
</ol>
</div>
开始还没有引起重视，昨天晚上另外一个用户dbd也说存在这个问题，详细问了下，他说上次登录的时候选择了&ldquo;记住我&rdquo;，今天再次登录的时候就出现该问题了，而后google时无意看到JAVAEYE的抛出异常的爱说：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">抛出异常的爱：</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>刚刚在&nbsp;&nbsp;</span></span></li>
    <li class=""><span>技能云http://www.itechtag.com/about&nbsp;&nbsp;</span></li>
    <li class="alt"><span>遇到了。。。&nbsp;&nbsp;</span></li>
    <li class=""><span>用的是温柔一刀的账号。。。。。&nbsp;&nbsp;</span></li>
</ol>
</div>
看来是有问题了，立即检查代码，看到取当前用户是否自动登录的代码如下：</span></p>
<p><span class="author">
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_current_user&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;session[</span><span class="symbol">:user</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;cookies[</span><span class="symbol">:p_session_id</span><span>]&nbsp;&amp;&amp;&nbsp;p&nbsp;=&nbsp;PersistentLogin.find_by_uid(cookies[</span><span class="symbol">:p_session_id</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session[<span class="symbol">:user</span><span>]&nbsp;=&nbsp;<font color="#ff0000">c_user.id&nbsp;</font>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
再看看</span><span class="author"><span><span>PersistentLogin这个表的结构，如下：</span></span></span></p>
<p><span class="author"><span><span>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;CreatePersistentLogins&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;create_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:string</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:user_id</span><span>,&nbsp;</span><span class="symbol">:integer</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.column&nbsp;<span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:datetime</span><span>,&nbsp;</span><span class="symbol">:null</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:uid</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;uid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;add_index&nbsp;<span class="symbol">:persistent_logins</span><span>,&nbsp;</span><span class="symbol">:created_on</span><span>,&nbsp;</span><span class="symbol">:name</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;created_on&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;drop_table&nbsp;<span class="symbol">:persistent_logins</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
一眼看出问题所在，</span></span></span><span class="author"><span><span><span><span class="symbol">user_id</span><span>这个字段保存的才是用户的ID，而前面那段代码取成了id 字段，真是疏忽呀～</span></span></span></span></span></p>
<p><span class="author"><span><span><span><span>找到问题，自然好解决了，不在废话～<br />
</span></span></span></span></span></p>]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2007-10-02 13:13:40</wp:post_date>
		<wp:post_date_gmt>2007-10-02 13:13:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bf%ae%e5%a4%8d%e4%b8%80%e4%b8%aa%e5%85%b3%e4%ba%8e%e8%87%aa%e5%8a%a8%e7%99%bb%e5%bd%95%e7%9a%84bug%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>我的音乐DNA测评报告～</title>
		<link>http://www.iceskysl.com/?p=39</link>
		<pubDate>Tue, 02 Oct 2007 14:52:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[<p>朋友发了一个URL，说在FF下太震撼了，随手打开，是个音乐的网站，首页最显著的地方有个很好玩的心理测试flash，按照自己的性格，做了下，按照其 生成的报告，还真挺准的，真的很准的。比如我喜欢的摇滚和朋克等，以及其推荐的linkpark等歌曲，这个网站貌似有点前途～</p>
<p>报告如下：</p>
<h1 style="margin: 20px 0pt; font-family: Arial,Helvetica,sans-serif; font-style: normal; font-variant: normal; font-weight: bold; font-size: 1.5em; line-height: normal; font-size-adjust: none; font-stretch: normal;">你的音乐DNA测评报告</h1>
<div id="ghg">
<div class="inner">
<div style="margin: 20px;" id="gh">
<div class="dnar"><span class="dnaf">(S)沉思的萨克斯</span><span class="dnab"><span style="width: 42px;" class="dnaa blue">25%</span></span></div>
<div class="dnar"><span class="dnaf">(G)激烈的电吉他</span><span class="dnab"><span style="width: 74px;" class="dnaa red">44%</span></span></div>
<div class="dnar"><span class="dnaf">(P)动听的钢琴</span><span class="dnab"><span style="width: 27px;" class="dnaa green">16%</span></span></div>
<div class="dnar"><span class="dnaf">(D)动感的电子鼓</span><span class="dnab"><span style="width: 25px;" class="dnaa yellow">15%</span></span></div>
<div class="dnar">&nbsp;</div>
</div>
</div>
</div>
<div style="border: 1px dashed rgb(204, 204, 204); margin: -145px 0pt 0pt 350px; padding: 10px; position: absolute; font-family: Arial,Helvetica,sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 1.2em; line-height: normal; font-size-adjust: none; font-stretch: normal; color: rgb(53, 92, 157); width: 294px; left: 5px;" id="ghg_float">
<div>显性音乐DNA为：(G)激烈的电吉他</div>
<div>隐性音乐DNA为：(S)沉思的萨克斯</div>
</div>
<div style="display: none;" id="redoMindtest">
<div style="display: block;" id="swf_564_finalPlayer"><object width="591" height="206" align="middle" id="finalPlayer" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000">
<param name="movie" value="/flash/t/102/YoboPsyTest.swf" />
<param name="bgcolor" value="#ffffff" />
<param name="FlashVars" value="GW=engine.yobo.com&amp;U=825856&amp;L=0&amp;S=d71d8677cddb40469bcaf749a80a0a0ed0c9d1c5&amp;P=0&amp;V=-1&amp;D=0&amp;cID=0&amp;VER=0.30" />
<param name="quality" value="high" /><embed width="591" height="206" align="middle" type="application/x-shockwave-flash" name="finalPlayer" bgcolor="#ffffff" quality="high" flashvars="GW=engine.yobo.com&amp;U=825856&amp;L=0&amp;S=d71d8677cddb40469bcaf749a80a0a0ed0c9d1c5&amp;P=0&amp;V=-1&amp;D=0&amp;cID=0&amp;VER=0.30" src="http://www.yobo.com/flash/t/102/YoboPsyTest.swf"></embed> </object></div>
<script language="javascript" type="text/javascript">var js_564=new yobo_SWF("/flash/t/102/YoboPsyTest.swf", "finalPlayer", "8", "GW=engine.yobo.com&U=825856&L=0&S=d71d8677cddb40469bcaf749a80a0a0ed0c9d1c5&P=0&V=-1&D=0&cID=0&VER=0.30", "591", "206", "#ffffff");js_564.write("swf_564_finalPlayer");</script>
</div>
<div id="dnaDes">
<div class="inner">
<div class="dna_content">
<h3>你是：典型的&ldquo;(G)激烈的电吉他&rdquo;类型</h3>
<p style="font-size: 1.2em;">G类型（反叛型）音乐DNA呈显性的人，认为音乐是情绪表达的最好出口。音乐于你来讲就如同一项刺激的探险旅行，你期待在音乐中获得异于他人的新鲜体验。</p>
<ul>
    <li>速度偏爱</li>
    <p>在大多数情况下，偏爱节拍速度较快的音乐（BPM &rdquo;Beat per Minute&rdquo;&gt;80）。在歌曲节奏性与旋律性的对比上，你更倾向于节奏性较强的音乐表达和充满能量的速度感体验。</p>
    <li>歌词偏爱</li>
    <p>简单直接，甚至带有一些无所谓何般抵抗的词汇才是脑中所想，反叛性的歌词亦是这类听者的最爱&ldquo;我不愿相信真的有魔鬼,也不愿与任何人作对&rdquo;，&ldquo;噢姐 姐，我想回家，牵着我的手，我有些困了&hellip;&hellip;&rdquo;。&ldquo;你会看见雾、看见云、看见太阳，纪念和大地重复着悲伤&hellip;&hellip;&rdquo;你完全不喜欢千篇一律的情感描述词句。</p>
    <li>歌曲情绪体现</li>
    <p>在你看来，情绪表达是一首歌的重要内容之一。你会十分在意一首歌的情绪是否与你心情合拍，并倾向于较为直接和激烈的情绪表达。</p>
    <li>人声体现</li>
    <p>喜欢不一样的声音，喜欢嗓子里像粘上碎玻璃的声音；喜欢人声随着乐器越来越猛烈的嘶喊，混乱、躁动，不安现状的声音会得到青睐；不喜欢做作和感情扭捏造作的口水式演唱。</p>
    <li>曲风偏好</li>
    <p>在纷繁的音乐类型中，这种类型的爱好者会偏爱硬摇滚、另类、朋克（PUNK）、重金属Heavy metal、流行金属等能量较高的音乐。</p>
    <li>乐器偏好</li>
    <p>偏爱电声乐器（什么是？）：如失真电吉他、电贝司、架子鼓、饱满的木吉他扫弦或是一段精彩的乐器SOLO（什么是？）中那充满延伸的电子合成器；喜欢原始却不失热情的配器，</p>
    <li>能量消耗</li>
    <p>无论从演奏者还是演唱者，都会有极度消耗能量的倾向，而这样的倾向，会获得典型此类型人的极大共鸣</p>
    <li>音乐人偏好</li>
    <p>Beyond、F.I.R、蔡健雅、信乐团、孙燕姿、崔健、莫文蔚、谢天啸、Metallica 、Nirvana、Korn、Green Day、Coldplay、X-Japan</p>
</ul>
</div>
</div>
</div>
<div style="background: rgb(255, 251, 208) none repeat scroll 0% 50%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" id="youknow">
<div class="inner">
<p>注：关于测评结果，你需要了解，</p>
<ul class="gray">
    <li>YOBO 根据人们对音乐偏好的差异，将每个人的音乐DNA分为4种倾向性。你的音乐DNA可能在其中一类上尤为突出，也有可能同时倾向于2－3类不同的音乐偏好。 YOBO的前期调查显示，每个人都具有其最明显的显性倾向和相对较为隐蔽的隐性倾向，然而，没有会对4类音乐偏好都同时具有明显倾向性的人&mdash;当然，你也有 可能是最例外的一位</li>
    <li>在音乐心理测评报告中，我们描述你的音乐喜好所举的实例，包括歌词、歌曲、人名等等，有可能因为一些不可预计的因素而存在个体差异，请你更关注整体描述</li>
    <li>除了针对音乐元素的心理分析报告，我们还将分析你的性格特征和情感体现</li>
</ul>
</div>
</div>
<div id="col1">
<div id="largeButtons">&nbsp;</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>朋友发了一个URL，说在FF下太震撼了，随手打开，是个音乐的网站，首页最显著的地方有个很好玩的心理测试flash，按照自己的性格，做了下，按照其生成的报告，还真挺准的，真的很准的。比如我喜欢的摇滚和朋克等，以及其推荐的linkpark等歌曲，这个网站貌似有点前途～</p>
<p>报告如下：</p>]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2007-10-02 14:52:02</wp:post_date>
		<wp:post_date_gmt>2007-10-02 14:52:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e7%9a%84%e9%9f%b3%e4%b9%90dna%e6%b5%8b%e8%af%84%e6%8a%a5%e5%91%8a%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.55.209</wp:comment_author_IP>
			<wp:comment_date>2007-10-02 17:53:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个网站背后有一个叫圆圆的女人，而且是rails开发的， 可以参考 keso的文章，]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Migration把 MySQL的表引擎修改为InnoDB</title>
		<link>http://www.iceskysl.com/?p=40</link>
		<pubDate>Tue, 02 Oct 2007 15:26:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[<p>尽管现在还没有这个需求，但是还是有必要了解一下，也是对Migration掌握的必须掌握的东西，代码不是我写的，来自与http://snippets.dzone.com/posts/show/4601，我怕时间按久了在那里找不到，所以干脆贴过来。</p>
<div class="codeText">
<div class="codeHead">Migration的Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;ChangeTableTypes&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ActiveRecord::Migration:<span class="symbol">:say</span><span>&nbsp;</span><span class="string">'Setting&nbsp;all&nbsp;tables&nbsp;to&nbsp;InnoDB&nbsp;engine&nbsp;(excluding&nbsp;schema_info&nbsp;table)...'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;ActiveRecord::Migration:<span class="symbol">:execute</span><span>&nbsp;</span><span class="string">'show&nbsp;tables'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>&nbsp;table&nbsp;=&nbsp;result.fetch_row&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execute(<span class="string">&quot;ALTER&nbsp;TABLE&nbsp;#{table.to_s}&nbsp;TYPE&nbsp;=&nbsp;InnoDB&quot;</span><span>)&nbsp;</span><span class="keyword">unless</span><span>&nbsp;table.to_s&nbsp;==&nbsp;</span><span class="string">'schema_info'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">raise</span><span>&nbsp;ActiveRecord::IrreversibleMigration&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>尽管现在还没有这个需求，但是还是有必要了解一下，也是对Migration掌握的必须掌握的东西，代码不是我写的，来自与http://snippets.dzone.com/posts/show/4601，我怕时间按久了在那里找不到，所以干脆贴过来。</p>
<div class="codeText">
<div class="codeHead">Migration的Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;ChangeTableTypes&nbsp;&lt;&nbsp;ActiveRecord::Migration&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.up&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ActiveRecord::Migration:<span class="symbol">:say</span><span>&nbsp;</span><span class="string">'Setting&nbsp;all&nbsp;tables&nbsp;to&nbsp;InnoDB&nbsp;engine&nbsp;(excluding&nbsp;schema_info&nbsp;table)...'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;ActiveRecord::Migration:<span class="symbol">:execute</span><span>&nbsp;</span><span class="string">'show&nbsp;tables'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>&nbsp;table&nbsp;=&nbsp;result.fetch_row&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execute(<span class="string">&quot;ALTER&nbsp;TABLE&nbsp;#{table.to_s}&nbsp;TYPE&nbsp;=&nbsp;InnoDB&quot;</span><span>)&nbsp;</span><span class="keyword">unless</span><span>&nbsp;table.to_s&nbsp;==&nbsp;</span><span class="string">'schema_info'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.down&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">raise</span><span>&nbsp;ActiveRecord::IrreversibleMigration&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2007-10-02 15:26:50</wp:post_date>
		<wp:post_date_gmt>2007-10-02 15:26:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8migration%e6%8a%8a-mysql%e7%9a%84%e8%a1%a8%e5%bc%95%e6%93%8e%e4%bf%ae%e6%94%b9%e4%b8%bainnodb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>正在筹备给技能云进行一次大改版～</title>
		<link>http://www.iceskysl.com/?p=41</link>
		<pubDate>Mon, 08 Oct 2007 12:18:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有些地方使用起来不是很顺，需要大改一下，目前可能会修改的地方有：</p>
<p><strong>角色的规则</strong>（可能改成和技能一样的处理方式，可以随便用户自动添加，就像技能一样）</p>
<p><strong>显示方式</strong>（可能会使用tab的方式，进行显示）</p>
<p>其他的部分正在一步步的想。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有些地方使用起来不是很顺，需要大改一下，目前可能会修改的地方有：</p>
<p><strong>角色的规则</strong>（可能改成和技能一样的处理方式，可以随便用户自动添加，就像技能一样）</p>
<p><strong>显示方式</strong>（可能会使用tab的方式，进行显示）</p>
<p>其他的部分正在一步步的想。</p>]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2007-10-08 12:18:03</wp:post_date>
		<wp:post_date_gmt>2007-10-08 12:18:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%ad%a3%e5%9c%a8%e7%ad%b9%e5%a4%87%e7%bb%99%e6%8a%80%e8%83%bd%e4%ba%91%e8%bf%9b%e8%a1%8c%e4%b8%80%e6%ac%a1%e5%a4%a7%e6%94%b9%e7%89%88%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Will Paginate :分页不可或缺的插件</title>
		<link>http://www.iceskysl.com/?p=42</link>
		<pubDate>Wed, 10 Oct 2007 15:08:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Rails以前的版本中包含了一个分页的方法，我使用的使用做了一些扩充，一直用到现在，看到很多人介绍Will Paginate，偶也不感兴趣，后来发现一个消息说Rails2.0将祛除内置的Paginate，于是就看看这个Will Paginate。</p>
<p>参考资料：</p>
<ul>
    <li><a href="http://dev.rubyonrails.org/changeset/6993">http://dev.rubyonrails.org/changeset/6993</a></li>
    <li><a href="http://errtheblog.com/post/4791">http://errtheblog.com/post/4791</a></li>
    <li><a href="http://agilewebdevelopment.com/plugins/will_paginate">http://agilewebdevelopment.com/plugins/will_paginate</a></li>
    <li><a href="http://mattrobinson.net/2007/6/26/rails-plugins-scope_out-and-will_paginate">http://mattrobinson.net/2007/6/26/rails-plugins-scope_out-and-will_paginate</a></li>
    <li><a href="http://www.dcmanges.com/blog/21">http://www.dcmanges.com/blog/21</a></li>
    <li>http://www.lycom.de/past/2007/7/12/rails_will_paginate20070712_200741/</li>
    <li>http://www.javaeye.com/topic/108118</li>
    <li><font color="#ff0000">http://railscasts.com/episodes/51</font></li>
</ul>
<p><strong>附录：基本步骤和过程</strong></p>
<p>
<div class="codeText">
<div class="codeHead"><strong>安装will_paginate </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ruby&nbsp;script/plugin&nbsp;install&nbsp;svn://errtheblog.com/svn/plugins/will_paginate&nbsp;&nbsp; <br />
    </span></span></li>
</ol>
</div>
</p>
<script type="text/javascript">render_code();</script>
<div class="code_title">
<div class="codeText">
<div class="codeHead"><strong>在Model中使用will_paginate </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.search(search,&nbsp;page)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;paginate&nbsp;<span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;5,&nbsp;</span><span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">'name&nbsp;like&nbsp;?'</span><span>,&nbsp;</span><span class="string">&quot;%#{search}%&quot;</span><span>],&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;order&nbsp;=&gt;&nbsp;<span class="string">'name'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>nd&nbsp;&nbsp;&nbsp; <br />
    </span></li>
</ol>
</div>
</div>
<script type="text/javascript">render_code();</script>
<div class="code_title">
<div class="codeText">
<div class="codeHead"><strong>在controller中使用search </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;products_controller.rb&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@products</span><span>&nbsp;=&nbsp;Product.search(params[</span><span class="symbol">:search</span><span>],&nbsp;params[</span><span class="symbol">:page</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp; <br />
    </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><strong>在页面中使用will_paginate </strong></div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>#&nbsp;</span><span class="comments">&lt;!--&nbsp;products/index.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;will_paginate&nbsp;@products&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</div>
<script type="text/javascript">render_code();</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails以前的版本中包含了一个分页的方法，我使用的使用做了一些扩充，一直用到现在，看到很多人介绍Will Paginate，偶也不感兴趣，后来发现一个消息说Rails2.0将祛除内置的Paginate，于是就看看这个Will Paginate。</p>
<p>参考资料：</p>
<ul>
    <li><a href="http://dev.rubyonrails.org/changeset/6993">http://dev.rubyonrails.org/changeset/6993</a></li>
    <li><a href="http://errtheblog.com/post/4791">http://errtheblog.com/post/4791</a></li>
    <li><a href="http://agilewebdevelopment.com/plugins/will_paginate">http://agilewebdevelopment.com/plugins/will_paginate</a></li>
    <li><a href="http://mattrobinson.net/2007/6/26/rails-plugins-scope_out-and-will_paginate">http://mattrobinson.net/2007/6/26/rails-plugins-scope_out-and-will_paginate</a></li>
    <li><a href="http://www.dcmanges.com/blog/21">http://www.dcmanges.com/blog/21</a></li>
    <li>http://www.lycom.de/past/2007/7/12/rails_will_paginate20070712_200741/</li>
    <li>http://www.javaeye.com/topic/108118</li>
    <li><font color="#ff0000">http://railscasts.com/episodes/51</font></li>
</ul>
<p><strong>附录：基本步骤和过程</strong></p>
<div class="codeText">
<div class="codeHead"><strong>安装will_paginate </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ruby&nbsp;script/plugin&nbsp;install&nbsp;svn://errtheblog.com/svn/plugins/will_paginate&nbsp;&nbsp; <br />
    </span></span></li>
</ol>
</div>
<script type="text/javascript">render_code();</script>
<div class="code_title">
<div class="codeText">
<div class="codeHead"><strong>在Model中使用will_paginate </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;models/product.rb&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.search(search,&nbsp;page)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;paginate&nbsp;<span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;5,&nbsp;</span><span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">'name&nbsp;like&nbsp;?'</span><span>,&nbsp;</span><span class="string">&quot;%#{search}%&quot;</span><span>],&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;order&nbsp;=&gt;&nbsp;<span class="string">'name'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>nd&nbsp;&nbsp;&nbsp; <br />
    </span></li>
</ol>
</div>
</div>
<script type="text/javascript">render_code();</script>
<div class="code_title">
<div class="codeText">
<div class="codeHead"><strong>在controller中使用search </strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;products_controller.rb&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">@products</span><span>&nbsp;=&nbsp;Product.search(params[</span><span class="symbol">:search</span><span>],&nbsp;params[</span><span class="symbol">:page</span><span>])&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp; <br />
    </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><strong>在页面中使用will_paginate </strong></div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>#&nbsp;</span><span class="comments">&lt;!--&nbsp;products/index.rhtml&nbsp;--&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;will_paginate&nbsp;@products&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</div>
<script type="text/javascript">render_code();</script>]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2007-10-10 15:08:55</wp:post_date>
		<wp:post_date_gmt>2007-10-10 15:08:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>will-paginate-%e5%88%86%e9%a1%b5%e4%b8%8d%e5%8f%af%e6%88%96%e7%bc%ba%e7%9a%84%e6%8f%92%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>抓取在线网页图像的方法～</title>
		<link>http://www.iceskysl.com/?p=43</link>
		<pubDate>Fri, 12 Oct 2007 17:39:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在考虑给技能云添加一个特色的功能，就是给动态抓取提交项目的页面图片，google了一些方法，记录如下：</p>
<p>1、http://thumbnailspro.com/网站</p>
<div class="codeText">
<div class="codeHead">Website Thumbnails - Screenshots captured in seconds - Over 1000 sizes!</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">a</span><span>&nbsp;</span><span class="attribute">href</span><span>=</span><span class="attribute-value">&quot;http://thumbnailspro.com&quot;</span><span>&nbsp;</span><span class="attribute">title</span><span>=</span><span class="attribute-value">&quot;website&nbsp;thumbnails&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">img</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">&quot;http://thumbnailspro.com/thumb.php?url=http://www.itechtag.com&amp;S=150&quot;</span><span>&nbsp;</span><span class="attribute">border</span><span>=</span><span class="attribute-value">&quot;0&quot;</span><span>&nbsp;</span><span class="attribute">alt</span><span>=</span><span class="attribute-value">&quot;website&nbsp;thumbnails&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">a</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>这个网站号称Screenshots captured in seconds，我在本地测试了几个，感觉速度还不错，我们可以直接使用，或者第一次把这个图片保存到本地即可。</p>
<p>2、http://webthumb.bluga.net/home.php<br />
按照http://snippets.dzone.com/posts/show/3621上面的代码，抓取，采用ruby代码，用webservice连接到做snap的网站获得jpg文件，但是需要注册，申请API的key，免费有限制每月250次。</p>
<p>3、www.artviper.net</p>
<p>第3种比较简单和第一种web service相似<br />
不过不用ruby而是纯html img的tag， 有点慢<br />
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">img</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">&quot;http://www.artviper.net/screenshots/screener.php?&amp;url=www.meinedomain.com&amp;q=xx&amp;h=hh&amp;w=ww&amp;sdx=xxx&amp;sdy=xxx&quot;</span><span>&nbsp;</span><span class="attribute">alt</span><span>=</span><span class="attribute-value">&quot;artViper&nbsp;designstudio&nbsp;website&nbsp;thumbnail&nbsp;&quot;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
The parameters as following:<br />
&nbsp;&nbsp;&nbsp; * q = quality level ( 30-70% )<br />
&nbsp;&nbsp;&nbsp; * h = output height<br />
&nbsp;&nbsp;&nbsp; * w = output width<br />
&nbsp;&nbsp;&nbsp; * sdx = crop area horizontally<br />
&nbsp;&nbsp;&nbsp; * sdy = crop area vertically<br />
<br />
If you omit the sdx &amp; sdy values, the whole page gets snapped.<br />
Don't forget to add a backlink to www.artviper.net or www.artviper.de ( textlink is enough ) but please place the link good visible.<br />
http://www.artviper.net/screenshots/screener.php?&amp;url=http://www.itechtag.com&amp;q=70&amp;h=180&amp;w=360</p>
<p><img src="http://www.artviper.net/screenshots/screener.php?&amp;url=http://www.itechtag.com&amp;q=70&amp;h=180&amp;w=360" alt="" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在考虑给技能云添加一个特色的功能，就是给动态抓取提交项目的页面图片，google了一些方法，记录如下：</p>
<p>1、http://thumbnailspro.com/网站</p>
<div class="codeText">
<div class="codeHead">Website Thumbnails - Screenshots captured in seconds - Over 1000 sizes!</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">a</span><span>&nbsp;</span><span class="attribute">href</span><span>=</span><span class="attribute-value">&quot;http://thumbnailspro.com&quot;</span><span>&nbsp;</span><span class="attribute">title</span><span>=</span><span class="attribute-value">&quot;website&nbsp;thumbnails&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">img</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">&quot;http://thumbnailspro.com/thumb.php?url=http://www.itechtag.com&amp;S=150&quot;</span><span>&nbsp;</span><span class="attribute">border</span><span>=</span><span class="attribute-value">&quot;0&quot;</span><span>&nbsp;</span><span class="attribute">alt</span><span>=</span><span class="attribute-value">&quot;website&nbsp;thumbnails&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">a</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>这个网站号称Screenshots captured in seconds，我在本地测试了几个，感觉速度还不错，我们可以直接使用，或者第一次把这个图片保存到本地即可。</p>
<p>2、http://webthumb.bluga.net/home.php<br />
按照http://snippets.dzone.com/posts/show/3621上面的代码，抓取，采用ruby代码，用webservice连接到做snap的网站获得jpg文件，但是需要注册，申请API的key，免费有限制每月250次。</p>
<p>3、www.artviper.net</p>
<p>第3种比较简单和第一种web service相似<br />
不过不用ruby而是纯html img的tag， 有点慢</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">img</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">&quot;http://www.artviper.net/screenshots/screener.php?&amp;url=www.meinedomain.com&amp;q=xx&amp;h=hh&amp;w=ww&amp;sdx=xxx&amp;sdy=xxx&quot;</span><span>&nbsp;</span><span class="attribute">alt</span><span>=</span><span class="attribute-value">&quot;artViper&nbsp;designstudio&nbsp;website&nbsp;thumbnail&nbsp;&quot;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>The parameters as following:<br />
&nbsp;&nbsp;&nbsp; * q = quality level ( 30-70% )<br />
&nbsp;&nbsp;&nbsp; * h = output height<br />
&nbsp;&nbsp;&nbsp; * w = output width<br />
&nbsp;&nbsp;&nbsp; * sdx = crop area horizontally<br />
&nbsp;&nbsp;&nbsp; * sdy = crop area vertically<br />
<br />
If you omit the sdx &amp; sdy values, the whole page gets snapped.<br />
Don't forget to add a backlink to www.artviper.net or www.artviper.de ( textlink is enough ) but please place the link good visible.<br />
http://www.artviper.net/screenshots/screener.php?&amp;url=http://www.itechtag.com&amp;q=70&amp;h=180&amp;w=360</p>]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2007-10-12 17:39:04</wp:post_date>
		<wp:post_date_gmt>2007-10-12 17:39:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%93%e5%8f%96%e5%9c%a8%e7%ba%bf%e7%bd%91%e9%a1%b5%e5%9b%be%e5%83%8f%e7%9a%84%e6%96%b9%e6%b3%95%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_c1f39a54c55d4e7ec7027c8167a24596</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>技能云(iTechTag)功能需求归纳</title>
		<link>http://www.iceskysl.com/?p=44</link>
		<pubDate>Fri, 12 Oct 2007 17:44:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">1</font>、修改角色云的添加方式</strong><br />
说明：按照技能云的模式修改角色云，可以让用户自己随意添加角色；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">2</font>、添加项目的时候的检查</strong></p>
<p style="margin-bottom: 0cm;">说明：检查项目名称、项目简介等信息，如果以上两个为空，则不能添加；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">3</font>、添加项目时对公司、行业等的添加方式～</strong></p>
<p style="margin-bottom: 0cm;">说明：这个需要更改下添加方式，现在的方式在公司多了的时候那个下拉列表会很长；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">4</font>、界面优化</strong></p>
<p style="margin-bottom: 0cm;">说明：需要对界面进行一些优化，现在的界面有的地方看上去很丑～</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">5</font>、重构</strong></p>
<p style="margin-bottom: 0cm;">说明：有些地方很不合理，需要重构下代码。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">6</font>、评价的时候有个<font face="Times New Roman, serif">bug</font></strong></p>
<p style="margin-bottom: 0cm;">说明：我第一次评价时，明明评价了一次，却显示评价了<font face="Times New Roman, serif">2</font>次。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">7</font>、后台管理功能</strong></p>
<p style="margin-bottom: 0cm;">说明：后台现在还缺少很多的管理功能，需要加上部分管理功能。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">8</font>、评价的显示</strong></p>
<p style="margin-bottom: 0cm;">说明：修改为按照<font face="Times New Roman, serif">tab</font>的模式进行显示，不再把项目成员的信息显示在侧边栏，侧边栏可以放诸如类似性质的项目或者同一个行业的项目；或者同一个公司的项目；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">9</font>、展示最新消息</strong></p>
<p style="margin-bottom: 0cm;">说明：为了使得网站看上去是持续的改进，需要把最新的动态告诉大家， 后台发布信息的已经有了，但是需要在前台找个地方展示出来。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">10</font>、抓取网页图片</strong></p>
<p style="margin-bottom: 0cm;">说明：按照提交项目的地址抓取用户的页面图片。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">1</font>、修改角色云的添加方式</strong><br />
说明：按照技能云的模式修改角色云，可以让用户自己随意添加角色；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">2</font>、添加项目的时候的检查</strong></p>
<p style="margin-bottom: 0cm;">说明：检查项目名称、项目简介等信息，如果以上两个为空，则不能添加；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">3</font>、添加项目时对公司、行业等的添加方式～</strong></p>
<p style="margin-bottom: 0cm;">说明：这个需要更改下添加方式，现在的方式在公司多了的时候那个下拉列表会很长；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">4</font>、界面优化</strong></p>
<p style="margin-bottom: 0cm;">说明：需要对界面进行一些优化，现在的界面有的地方看上去很丑～</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">5</font>、重构</strong></p>
<p style="margin-bottom: 0cm;">说明：有些地方很不合理，需要重构下代码。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">6</font>、评价的时候有个<font face="Times New Roman, serif">bug</font></strong></p>
<p style="margin-bottom: 0cm;">说明：我第一次评价时，明明评价了一次，却显示评价了<font face="Times New Roman, serif">2</font>次。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">7</font>、后台管理功能</strong></p>
<p style="margin-bottom: 0cm;">说明：后台现在还缺少很多的管理功能，需要加上部分管理功能。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">8</font>、评价的显示</strong></p>
<p style="margin-bottom: 0cm;">说明：修改为按照<font face="Times New Roman, serif">tab</font>的模式进行显示，不再把项目成员的信息显示在侧边栏，侧边栏可以放诸如类似性质的项目或者同一个行业的项目；或者同一个公司的项目；</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">9</font>、展示最新消息</strong></p>
<p style="margin-bottom: 0cm;">说明：为了使得网站看上去是持续的改进，需要把最新的动态告诉大家， 后台发布信息的已经有了，但是需要在前台找个地方展示出来。</p>
<p style="margin-bottom: 0cm;"><strong><font face="Times New Roman, serif">10</font>、抓取网页图片</strong></p>
<p style="margin-bottom: 0cm;">说明：按照提交项目的地址抓取用户的页面图片。</p>]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2007-10-12 17:44:22</wp:post_date>
		<wp:post_date_gmt>2007-10-12 17:44:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e5%8a%9f%e8%83%bd%e9%9c%80%e6%b1%82%e5%bd%92%e7%ba%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Will Paginate的扩充使用～</title>
		<link>http://www.iceskysl.com/?p=45</link>
		<pubDate>Sat, 13 Oct 2007 10:04:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Will Paginate真的很容易使用，看他自带的readme就能明白，但是其他的一些东西可以看看代码就明白了，比如你想显示一共多少页？当前是第几页？已经一共多少个item，都是可以做到的，看一个我在<a href="http://Will Paginate真的很容易使用，看他自带的readme就能明白，但是其他的一些东西可以看看代码就明白了，比如你想显示一共多少页？当前是第几页？已经一共多少个item，都是可以做到的，看一个我在技能云上用的例子，代码如下：">技能云</a>上用的例子，代码如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="comments">&lt;!--分页导航&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">table</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">tr</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">td</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=&nbsp;will_paginate&nbsp;@projects&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">td</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">td</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">div</span><span>&nbsp;</span><span class="attribute">class</span><span>=</span><span class="attribute-value">&quot;pagination&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">class</span><span>=</span><span class="attribute-value">&quot;lable&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页面信息:&nbsp;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>总</span><span class="tag">&lt;</span><span>%=@projects.total_entries&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>个,&nbsp;共</span><span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=@projects.page_count&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页,&nbsp;&nbsp;当前第</span><span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=&nbsp;@projects.current_page%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页.&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">tr</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">table</span><span class="tag">&gt;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>其他的用法，比如显示的页数什么的，以及是否支持ajax等都是可以找到相关资料的，我就不多说了，参考如下资料：</p>
<p>http://errtheblog.com/post/929</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Will Paginate真的很容易使用，看他自带的readme就能明白，但是其他的一些东西可以看看代码就明白了，比如你想显示一共多少页？当前是第几页？已经一共多少个item，都是可以做到的，看一个我在<a href="http://will%20paginate%e7%9c%9f%e7%9a%84%e5%be%88%e5%ae%b9%e6%98%93%e4%bd%bf%e7%94%a8%ef%bc%8c%e7%9c%8b%e4%bb%96%e8%87%aa%e5%b8%a6%e7%9a%84readme%e5%b0%b1%e8%83%bd%e6%98%8e%e7%99%bd%ef%bc%8c%e4%bd%86%e6%98%af%e5%85%b6%e4%bb%96%e7%9a%84%e4%b8%80%e4%ba%9b%e4%b8%9c%e8%a5%bf%e5%8f%af%e4%bb%a5%e7%9c%8b%e7%9c%8b%e4%bb%a3%e7%a0%81%e5%b0%b1%e6%98%8e%e7%99%bd%e4%ba%86%ef%bc%8c%e6%af%94%e5%a6%82%e4%bd%a0%e6%83%b3%e6%98%be%e7%a4%ba%e4%b8%80%e5%85%b1%e5%a4%9a%e5%b0%91%e9%a1%b5%ef%bc%9f%e5%bd%93%e5%89%8d%e6%98%af%e7%ac%ac%e5%87%a0%e9%a1%b5%ef%bc%9f%e5%b7%b2%e7%bb%8f%e4%b8%80%e5%85%b1%e5%a4%9a%e5%b0%91%e4%b8%aaitem%ef%bc%8c%e9%83%bd%e6%98%af%e5%8f%af%e4%bb%a5%e5%81%9a%e5%88%b0%e7%9a%84%ef%bc%8c%e7%9c%8b%e4%b8%80%e4%b8%aa%e6%88%91%e5%9c%a8%e6%8a%80%e8%83%bd%e4%ba%91%e4%b8%8a%e7%94%a8%e7%9a%84%e4%be%8b%e5%ad%90%ef%bc%8c%e4%bb%a3%e7%a0%81%e5%a6%82%e4%b8%8b%ef%bc%9a/">技能云</a>上用的例子，代码如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="comments">&lt;!--分页导航&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">table</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">tr</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">td</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=&nbsp;will_paginate&nbsp;@projects&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">td</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">td</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">div</span><span>&nbsp;</span><span class="attribute">class</span><span>=</span><span class="attribute-value">&quot;pagination&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">span</span><span>&nbsp;</span><span class="attribute">class</span><span>=</span><span class="attribute-value">&quot;lable&quot;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页面信息:&nbsp;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>总</span><span class="tag">&lt;</span><span>%=@projects.total_entries&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>个,&nbsp;共</span><span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=@projects.page_count&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页,&nbsp;&nbsp;当前第</span><span class="tag">&lt;</span><span class="tag-name">b</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=&nbsp;@projects.current_page%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">b</span><span class="tag">&gt;</span><span>页.&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">span</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">tr</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">table</span><span class="tag">&gt;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>其他的用法，比如显示的页数什么的，以及是否支持ajax等都是可以找到相关资料的，我就不多说了，参考如下资料：</p>
<p>http://errtheblog.com/post/929</p>]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2007-10-13 10:04:17</wp:post_date>
		<wp:post_date_gmt>2007-10-13 10:04:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>will-paginate%e7%9a%84%e6%89%a9%e5%85%85%e4%bd%bf%e7%94%a8%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Introducing the AJAX Feed API FeedControl</title>
		<link>http://www.iceskysl.com/?p=46</link>
		<pubDate>Sun, 14 Oct 2007 10:55:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #333399;"> 这篇文章是我很早前写的，放在原来的blog上的，无奈那个blog坏掉了，幸好还有”百度快照 “（http://cache.baidu.com/c?word=feedcontrol&amp;url=http%3A//weblog% 2E1ster%2Ecn/%3Faction%3Dshow%26id%3D112&amp;p=98769a45dcd011a05be7d3284c0096&amp; user=baidu），找回来了，呵呵。以下是原文。</span>

Google放出来的AJAX feed API我老早就关注到了，也试用了一些，感觉还真的不错，现在又添加了一些东西，如下：
其API都很简单，详细的可以看这个页面上的介绍：
http://code.google.com/apis/ajaxfeeds/documentation/reference.html#FeedControl
只有一个构造器：FeedControl
四个函数：
<strong>1.addFeed(url, label) /</strong>/添加需要显示的FEED的URL
<strong>2.addFeed(element, opt_options?)</strong>；//这个其实就是draw方法，指定显示的方式，例如：

feedControl.draw(
document.getElementById("feedControl"),
{
drawMode : google.feeds.FeedControl.DRAW_MODE_TABBED
});

feedControl这个是页面的DOM的ID名称，google.feeds.FeedControl.DRAW_MODE_TABBED 就是指定的显示方式，默认值是：google.feeds.FeedControl.DRAW_MODE_LINEAR.

<strong>3.setNumEntries(num)；</strong> //设定显示的条数（貌似只能统一指定，不能为各个FEED单独指定）
<strong>4.setLinkTarget(linkTarget)</strong> //设定链接的打开方式，其值分别如下：

* google.feeds.LINK_TARGET_BLANK - links will open in a new window
* google.feeds.LINK_TARGET_SELF - links will open in the current window
* google.feeds.LINK_TARGET_TOP - links will open in the topmost frame
* google.feeds.LINK_TARGET_PARENT - links will open in either the topmost frame, or replace the current frame.
* anything-else - the value of target in the resulting anchor element is set to linkTarget

附录其网站上的说明：
---------------
This morning we added a new class to the Google AJAX Feed API designed to allow you to more easily add a collection of feeds to your pages. The FeedControl is pretty simple:

var feedControl = new google.feeds.FeedControl();
feedControl.addFeed("http://www.digg.com/rss/index.xml", "Digg");
feedControl.addFeed("http://feeds.feedburner.com/Techcrunch", "TechCrunch");
feedControl.draw(document.getElementById("feedControl"));

In addition to the formal documentation, we have put together a few samples to help you quickly come up to speed.
<ul>
	<li>Basic <strong style="color: black; background-color: #ffffff;">FeedControl</strong> - <a href="http://www.google.com/uds/samples/feedapidocs/feedcontrol.html"><strong style="color: black; background-color: #ffffff;">feedcontrol</strong>.html</a></li>
	<li style="background-color: #ffffff;">Tabbed <strong style="color: black;">FeedControl</strong> - <a href="http://www.google.com/uds/samples/feedapidocs/tabbed.html">tabbed.html</a></li>
	<li style="background-color: #ffffff;">Sidebar Style <strong style="color: black;">FeedControl</strong> - <a href="http://www.google.com/uds/samples/feedapidocs/sidebar.html">sidebar.html</a></li>
	<li><a href="http://ajaxfeed.blogspot.com/">AJAX Feed API Playground Blog</a></li>
</ul>
另外，补充一点东西，如果你需要定制他的CSS样式表，可以按照这个模式定制，如下：
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span class="comments">&lt;!-- The Feed Control Class (Note: Linear Mode is Shown) --&gt;</span><span>  </span></span></li>
	<li><span><span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-control"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  <span class="comments">&lt;!-- Per Feed Container --&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-resultsRoot"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>    <span class="comments">&lt;!-- Per Feed Header --&gt;</span><span>  </span></span></li>
	<li><span>    <span class="comments">&lt;!-- .gfc-title holds Feed's Label --&gt;</span><span>  </span></span></li>
	<li class="alt"><span>    <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-resultsHeader"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>      <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-title"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>    <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>    <span class="comments">&lt;!-- Collection of Entries --&gt;</span><span>  </span></span></li>
	<li><span>    <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-results"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>      <span class="comments">&lt;!-- One .gfc-result per entry --&gt;</span><span>  </span></span></li>
	<li class="alt"><span>      <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-result"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>        <span class="comments">&lt;!-- One .gf-result per entry --&gt;</span><span>  </span></span></li>
	<li><span>        <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-result"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>          <span class="comments">&lt;!-- Hyperlinked Entry Title --&gt;</span><span>  </span></span></li>
	<li class="alt"><span>          <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-title"</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>            <span class="tag">&lt;</span><span class="tag-name">a</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-title"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">a</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>          <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>          <span class="comments">&lt;!-- Author (Only if entry.author is present --&gt;</span><span>  </span></span></li>
	<li><span>          <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-author"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>          <span class="comments">&lt;!-- Published Date (Only if entry.publishedDate is present --&gt;</span><span>  </span></span></li>
	<li class="alt"><span>          <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-relativePublishedDate"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>          <span class="comments">&lt;!-- Snippet entry.contentSnippet --&gt;</span><span>  </span></span></li>
	<li><span>          <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gf-snippet"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>        <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>      <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>      ...  </span></li>
	<li class="alt"><span>      <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-result"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>    <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  ...  </span></li>
	<li class="alt"><span>  <span class="tag">&lt;</span><span class="tag-name">div</span><span> </span><span class="attribute">class</span><span>=</span><span class="attribute-value">"gfc-resultsRoot"</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">div</span><span class="tag">&gt;</span><span>  </span></span></li>
</ol>
</div>
参考Google文档：http://code.google.com/apis/ajaxfeeds/documentation/reference.html#FeedControl]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><font color="#333399">&nbsp;这篇文章是我很早前写的，放在原来的blog上的，无奈那个blog坏掉了，幸好还有&rdquo;百度快照 &ldquo;，找回来了，呵呵。以下是原文。</font></p>
<p>Google放出来的AJAX feed API我老早就关注到了，也试用了一些，感觉还真的不错，现在又添加了一些东西，如下：<br />
其API都很简单，详细的可以看这个页面上的介绍：<br />
http://code.google.com/apis/ajaxfeeds/documentation/reference.html#FeedControl<br />
只有一个构造器：FeedControl<br />
四个函数：<br />
<strong>1.addFeed(url, label) /</strong>/添加需要显示的FEED的URL<br />
<strong>2.addFeed(element, opt_options?)</strong>；//这个其实就是draw方法，指定显示的方式，例如：<br />
<br />
feedControl.draw(<br />
&nbsp; document.getElementById(&quot;feedControl&quot;), <br />
&nbsp; {<br />
&nbsp;&nbsp;&nbsp; drawMode : google.feeds.FeedControl.DRAW_MODE_TABBED<br />
&nbsp; });<br />
<br />
feedControl这个是页面的DOM的ID名称，google.feeds.FeedControl.DRAW_MODE_TABBED 就是指定的显示方式，默认值是：google.feeds.FeedControl.DRAW_MODE_LINEAR.<br />
<br />
<strong>3.setNumEntries(num)；</strong> //设定显示的条数（貌似只能统一指定，不能为各个FEED单独指定）<br />
<strong>4.setLinkTarget(linkTarget)</strong> //设定链接的打开方式，其值分别如下：<br />
<br />
&nbsp;&nbsp;&nbsp; * google.feeds.LINK_TARGET_BLANK - links will open in a new window<br />
&nbsp;&nbsp;&nbsp; * google.feeds.LINK_TARGET_SELF - links will open in the current window<br />
&nbsp;&nbsp;&nbsp; * google.feeds.LINK_TARGET_TOP - links will open in the topmost frame<br />
&nbsp;&nbsp;&nbsp; * google.feeds.LINK_TARGET_PARENT - links will open in either the topmost frame, or replace the current frame.<br />
&nbsp;&nbsp;&nbsp; * anything-else - the value of target in the resulting anchor element is set to linkTarget</p>
<p>&nbsp; 参考Google文档：http://code.google.com/apis/ajaxfeeds/documentation/reference.html#FeedControl</p>
<p><font color="#333399">（http://cache.baidu.com/c?word=feedcontrol&amp;url=http%3A//weblog% 2E1ster%2Ecn/%3Faction%3Dshow%26id%3D112&amp;p=98769a45dcd011a05be7d3284c0096&amp; user=baidu）</font></p>]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2007-10-14 10:55:28</wp:post_date>
		<wp:post_date_gmt>2007-10-14 10:55:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-the-ajax-feed-api-feedcontrol</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="htmlcssjs"><![CDATA[Html/css/js]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d3ad9135ad14f4523d064f52448cb3d1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>随笔有用的Ruby的函数～</title>
		<link>http://www.iceskysl.com/?p=47</link>
		<pubDate>Sun, 14 Oct 2007 23:28:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&nbsp;</p>
<p>经常查一些比较有用的Ruby函数，时间久了就忘记了，随手记录下，以备忘，如果你有不错的函数，欢迎分享，如果顺便附带上一些实例代码就更好了。</p>
<p>
<div class="codeText">
<div class="codeHead">ActiveSupport::CoreExtensions::String::StartsEndsWith</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>starts_with?&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Description&nbsp;&nbsp;</span></li>
    <li class=""><span>starts_with?(prefix)&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Does&nbsp;the&nbsp;string&nbsp;start&nbsp;with&nbsp;the&nbsp;specified&nbsp;prefix?&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
例如如下代码检测上传的文件是否是图片：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>(&nbsp;params[</span><span class="symbol">:asset</span><span>][</span><span class="symbol">:uploaded_data</span><span>].content_type.to_s.starts_with?&nbsp;&nbsp;</span><span class="string">&quot;image&quot;</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>&nbsp;</p>
<p>经常查一些比较有用的Ruby函数，时间久了就忘记了，随手记录下，以备忘，如果你有不错的函数，欢迎分享，如果顺便附带上一些实例代码就更好了。</p>
<div class="codeText">
<div class="codeHead">ActiveSupport::CoreExtensions::String::StartsEndsWith</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>starts_with?&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Description&nbsp;&nbsp;</span></li>
    <li class=""><span>starts_with?(prefix)&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Does&nbsp;the&nbsp;string&nbsp;start&nbsp;with&nbsp;the&nbsp;specified&nbsp;prefix?&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>例如如下代码检测上传的文件是否是图片：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>(&nbsp;params[</span><span class="symbol">:asset</span><span>][</span><span class="symbol">:uploaded_data</span><span>].content_type.to_s.starts_with?&nbsp;&nbsp;</span><span class="string">&quot;image&quot;</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2007-10-14 23:28:36</wp:post_date>
		<wp:post_date_gmt>2007-10-14 23:28:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%8f%e7%ac%94%e6%9c%89%e7%94%a8%e7%9a%84ruby%e7%9a%84%e5%87%bd%e6%95%b0%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Rails 1.2.5: Security and maintenance release</title>
		<link>http://www.iceskysl.com/?p=48</link>
		<pubDate>Mon, 15 Oct 2007 11:23:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This release closes a <span class="caps">JSON XSS</span> vulnerability, fixes a couple of minor regressions introduced in 1.2.4, and backports a handful of features and fixes from the 2.0 preview release.</p>
<p>All users of Rails 1.2.4 or earlier are advised to upgrade to 1.2.5, though it isn&rsquo;t strictly necessary if you aren&rsquo;t working with <span class="caps">JSON</span>. For more information the <span class="caps">JSON</span> vulnerability, see <span class="caps">CVE</span>-2007-3227.</p>
<p>Summary of changes:</p>
<ul>
    <li>acts_as_list: fixed an edge case where removing an item from the list then destroying the item leads to incorrect item positioning</li>
    <li>deprecated calling .create on has_many associations with an unsaved owner (like post = Post.new; post.comments.create)</li>
    <li>backport array and hash query parameters</li>
    <li>fix in place editor&rsquo;s setter action with non-string fields</li>
    <li>updated config/boot.rb to correctly recognize <span class="caps">RAILS</span>_GEM_VERSION</li>
</ul>
<p>To upgrade, `gem install rails`, set <span class="caps">RAILS</span>_GEM_VERSION to &lsquo;1.2.5&rsquo; in config/environment.rb, and `rake rails:update:configs`.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>This release closes a <span class="caps">JSON XSS</span> vulnerability, fixes a couple of minor regressions introduced in 1.2.4, and backports a handful of features and fixes from the 2.0 preview release.</p>
<p>All users of Rails 1.2.4 or earlier are advised to upgrade to 1.2.5, though it isn&rsquo;t strictly necessary if you aren&rsquo;t working with <span class="caps">JSON</span>. For more information the <span class="caps">JSON</span> vulnerability, see <span class="caps">CVE</span>-2007-3227.</p>
<p>Summary of changes:</p>
<ul>
    <li>acts_as_list: fixed an edge case where removing an item from the list then destroying the item leads to incorrect item positioning</li>
    <li>deprecated calling .create on has_many associations with an unsaved owner (like post = Post.new; post.comments.create)</li>
    <li>backport array and hash query parameters</li>
    <li>fix in place editor&rsquo;s setter action with non-string fields</li>
    <li>updated config/boot.rb to correctly recognize <span class="caps">RAILS</span>_GEM_VERSION</li>
</ul>
<p>To upgrade, `gem install rails`, set <span class="caps">RAILS</span>_GEM_VERSION to &lsquo;1.2.5&rsquo; in config/environment.rb, and `rake rails:update:configs`.</p>]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2007-10-15 11:23:17</wp:post_date>
		<wp:post_date_gmt>2007-10-15 11:23:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-1-2-5-security-and-maintenance-release</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Rails URL Validation</title>
		<link>http://www.iceskysl.com/?p=49</link>
		<pubDate>Tue, 16 Oct 2007 13:31:31 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[<p>从上看到的，随手记录如下，可能需要用到。</p>
<div class="codeText">
<div class="codeHead">Rails URL Validation</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>validates_each&nbsp;</span><span class="symbol">:href</span><span>,&nbsp;</span><span class="symbol">:on</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:create</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|record,&nbsp;attr,&nbsp;value|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;uri&nbsp;=&nbsp;URI.parse(value)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;uri.</span><span class="keyword">class</span><span>&nbsp;!=&nbsp;URI::HTTP&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.errors.add(attr,&nbsp;<span class="string">'Only&nbsp;HTTP&nbsp;protocol&nbsp;addresses&nbsp;can&nbsp;be&nbsp;used'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;URI::InvalidURIError&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;record.errors.add(attr,&nbsp;<span class="string">'The&nbsp;format&nbsp;of&nbsp;the&nbsp;url&nbsp;is&nbsp;not&nbsp;valid.'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>以前我判断的时候都是按照是不是http://开头等做的判断，感觉好傻，这样的判断才更加专业和准确。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>从上看到的，随手记录如下，可能需要用到。</p>
<div class="codeText">
<div class="codeHead">Rails URL Validation</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>validates_each&nbsp;</span><span class="symbol">:href</span><span>,&nbsp;</span><span class="symbol">:on</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:create</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|record,&nbsp;attr,&nbsp;value|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;uri&nbsp;=&nbsp;URI.parse(value)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;uri.</span><span class="keyword">class</span><span>&nbsp;!=&nbsp;URI::HTTP&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.errors.add(attr,&nbsp;<span class="string">'Only&nbsp;HTTP&nbsp;protocol&nbsp;addresses&nbsp;can&nbsp;be&nbsp;used'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;URI::InvalidURIError&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;record.errors.add(attr,&nbsp;<span class="string">'The&nbsp;format&nbsp;of&nbsp;the&nbsp;url&nbsp;is&nbsp;not&nbsp;valid.'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>以前我判断的时候都是按照是不是http://开头等做的判断，感觉好傻，这样的判断才更加专业和准确。</p>]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2007-10-16 13:31:31</wp:post_date>
		<wp:post_date_gmt>2007-10-16 13:31:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-url-validation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.pixnet.net/zusocfc</wp:comment_author_url>
			<wp:comment_author_IP>59.105.60.243</wp:comment_author_IP>
			<wp:comment_date>2007-10-31 22:21:32</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不錯，但是底下這個版本會更好:)

  validates_each :url, :on => :create do |record, attr, value|
    begin
      uri = URI.parse(value)
      record.errors.add(attr, \"只允許HTTP與HTTPS協定\") unless uri.is_a? URI::HTTP
    rescue URI::InvalidURIError
      record.errors.add(attr, \"請輸入正確的網址\")
    end
  end]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.pixnet.net/zusocfc</wp:comment_author_url>
			<wp:comment_author_IP>59.105.60.243</wp:comment_author_IP>
			<wp:comment_date>2007-11-11 02:45:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[感覺多了個uri變量是多餘的
就這麼著吧

  validates_each :url, :on => :create do |record, attr, value|
    begin
      record.errors.add(attr, \"只允許HTTP與HTTPS協定\") unless URI.parse(value).is_a? URI::HTTP
    rescue URI::InvalidURIError
      record.errors.add(attr, \"請輸入正確的網址\")
    end
  end]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.81.109</wp:comment_author_IP>
			<wp:comment_date>2007-11-11 14:58:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，追求完美的男人呀～～赞一个～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Tickets-News.de]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.BackLinks2RSS.com/feeds/20025.xml</wp:comment_author_url>
			<wp:comment_author_IP>92.230.198.183</wp:comment_author_IP>
			<wp:comment_date>2011-09-28 04:36:20</wp:comment_date>
			<wp:comment_date_gmt>2011-09-27 20:36:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... Iceskysl.1sters.com...</strong>

[...] There you will find more Infos: iceskysl.1sters.com/?p=49 [...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>image_tag with popup for alt attribute</title>
		<link>http://www.iceskysl.com/?p=50</link>
		<pubDate>Tue, 16 Oct 2007 13:39:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[<p>firefox不能显示alt指定的文字，只能显示title 指定的，以前的做法是每个地方都写两个，真是够麻烦的，在rails中可以扩充下这个helper，使用起来方便多了，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;ApplicationHelper&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;image_tag(location,&nbsp;options)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;options[<span class="symbol">:title</span><span>]&nbsp;||=&nbsp;options[</span><span class="symbol">:alt</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">super</span><span>(location,&nbsp;options)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
感谢互联网～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>firefox不能显示alt指定的文字，只能显示title 指定的，以前的做法是每个地方都写两个，真是够麻烦的，在rails中可以扩充下这个helper，使用起来方便多了，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;ApplicationHelper&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;image_tag(location,&nbsp;options)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;options[<span class="symbol">:title</span><span>]&nbsp;||=&nbsp;options[</span><span class="symbol">:alt</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">super</span><span>(location,&nbsp;options)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>感谢互联网～</p>]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2007-10-16 13:39:50</wp:post_date>
		<wp:post_date_gmt>2007-10-16 13:39:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_tag-with-popup-for-alt-attribute</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>软件架构的十大错误</title>
		<link>http://www.iceskysl.com/?p=51</link>
		<pubDate>Fri, 19 Oct 2007 09:22:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在infoQ上看到一篇关于软件构架的文章，说了一个软件构架中可能存在的一些错误，有些错误在现有的软件，项目构架中是普遍存在的问题，转载记录一二。</p>
<p>虽然我不是构架师，但是在做RoR项目的时候，这些角色都是混杂起来的，必须是全部了解，因为没有那么多的空闲资源，所以了解还是很有必要的。</p>
<p>原文开始：</p>
<p><a href="http://www.iasahome.org/web/home/membership/fellows">IASA成员</a><a href="http://www.eoinwoods.info/">Eoin Woods</a>发表了一篇文章讲述他所认为的<a href="http://www.itarchitect.co.uk/articles/display.asp?id=377">十大软件架构错误</a>&mdash;&mdash;常常要碰得头破血流才会得到的一些教训。这十大错误简要总结如下：</p>
<ol>
    <li><strong>不能界定项目范围。</strong>&ldquo;在这种情况发生时，一个简单的出差登记系统结果变成内建了完整的花费报销管理系统，项目费用、时间跨度和质量都留下不可避免的烂摊子&hellip;&hellip;除了简单的登录真的不需要安全措施了？用户登录系统后真的不能够执行任何系统操作吗？&rdquo;</li>
    <li><strong>网撒得不够宽。</strong>&ldquo;我们都曾经犯过的一个错误是，只关注系统所有利益相关者中的一两方&mdash;&mdash;通常受让人（为系统出钱的人）和最终用户得到了全部的关注。&rdquo;</li>
    <li><strong>只关注功能。</strong>&ldquo;&hellip;&hellip;除非系统表现出了全面的高质量（诸如性能、安全、可维护性等等），否则不太可能成功。&rdquo;</li>
    <li><strong>用方框和线条来描述。</strong>&ldquo;[一个无所不包的]巨大的Visio图无法成为有效的架构描述，有两个原因：第一，它试图在单一表示中呈现太多信息；第二，没人真正清楚地知道你画的各种符号到底表示什么意思。&rdquo;</li>
    <li><strong>忘了需要培养的过程。</strong>&ldquo;在建造系统的时候常常需要小心的事物包括：开发者和测试者没法真正理解设计，他们不热衷或者没时间学习技术，以及还没有很好的工具支持的新技术，或者新技术会强迫人们以新的不熟悉的方式工作。&rdquo;</li>
    <li><strong>平台定义不精确。</strong>&ldquo;光用&lsquo;需要Unix和Oracle&rsquo;来描述你的平台是不足够的。你需要精确地说明每一部分具体的版本和配置，才能保证得到你所需的平台。不然如果有人好心为平台的某一部分升级了一个库，就可能导致某些东西停止运作。精确定义平台你才能在部署中避免这样的情形。&rdquo;</li>
    <li><strong>对性能和伸缩能力想当然。</strong>&ldquo;及早开始考虑性能和伸缩性，构建性能模型尝试预测关键的性能指标并定位瓶颈，在设计逐渐成型的同时投入到一些实际的验证性工作中去。这会帮助你提高对设计中不存在严重性能和伸缩性缺陷的信心。&rdquo;</li>
    <li><strong>自己发明安全技术。</strong>&ldquo;多 年来许多系统所犯的一个错误是试图加入自己发明的安全技术来提高系统安全性。比如定制的加密算法，开发者自己编写的审核系统，甚至完全DIY的访问控制系 统。自家开发的安全方案基本上都是不明智的。虽然很多人都以为自己可以马上搞出一些聪明的安全技术，但通常都只是自作聪明。&rdquo;</li>
    <li><strong>没有灾难恢复。</strong>&ldquo;要想得到资源来实现系统的灾难恢复机制，其关键在于在若干真实的场景中，具体衡量系统不可用所导致的损失。如果你还能估算这些场景发生的概率，你就可以用这两组数据去说服人们灾难恢复的重要性，并获得合理的预算去实现它。&rdquo;</li>
    <li><strong>没有撤退计划。</strong>&ldquo;确保无论在系统部署或升级的过程中发生任何事，你都有一份书面的、经过审查的、一致同意的撤退计划，允许你将整个环境恢复到部署之前的状态。&rdquo;</li>
</ol>
<p>Eoin Woods是UBS Investment Bank的软件及企业架构师。</p>
<p><strong>查看英文原文：</strong><a href="http://www.infoq.com/news/2007/10/top-ten-architecture-mistakes">Top Ten Software Architecture Mistakes</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在infoQ上看到一篇关于软件构架的文章，说了一个软件构架中可能存在的一些错误，有些错误在现有的软件，项目构架中是普遍存在的问题，转载记录一二。</p>
<p>虽然我不是构架师，但是在做RoR项目的时候，这些角色都是混杂起来的，必须是全部了解，因为没有那么多的空闲资源，所以了解还是很有必要的。</p>
<p>原文开始：</p>
<p><a href="http://www.iasahome.org/web/home/membership/fellows">IASA成员</a><a href="http://www.eoinwoods.info/">Eoin Woods</a>发表了一篇文章讲述他所认为的<a href="http://www.itarchitect.co.uk/articles/display.asp?id=377">十大软件架构错误</a>&mdash;&mdash;常常要碰得头破血流才会得到的一些教训。这十大错误简要总结如下：</p>
<ol>
    <li><strong>不能界定项目范围。</strong>&ldquo;在这种情况发生时，一个简单的出差登记系统结果变成内建了完整的花费报销管理系统，项目费用、时间跨度和质量都留下不可避免的烂摊子&hellip;&hellip;除了简单的登录真的不需要安全措施了？用户登录系统后真的不能够执行任何系统操作吗？&rdquo;</li>
    <li><strong>网撒得不够宽。</strong>&ldquo;我们都曾经犯过的一个错误是，只关注系统所有利益相关者中的一两方&mdash;&mdash;通常受让人（为系统出钱的人）和最终用户得到了全部的关注。&rdquo;</li>
    <li><strong>只关注功能。</strong>&ldquo;&hellip;&hellip;除非系统表现出了全面的高质量（诸如性能、安全、可维护性等等），否则不太可能成功。&rdquo;</li>
    <li><strong>用方框和线条来描述。</strong>&ldquo;[一个无所不包的]巨大的Visio图无法成为有效的架构描述，有两个原因：第一，它试图在单一表示中呈现太多信息；第二，没人真正清楚地知道你画的各种符号到底表示什么意思。&rdquo;</li>
    <li><strong>忘了需要培养的过程。</strong>&ldquo;在建造系统的时候常常需要小心的事物包括：开发者和测试者没法真正理解设计，他们不热衷或者没时间学习技术，以及还没有很好的工具支持的新技术，或者新技术会强迫人们以新的不熟悉的方式工作。&rdquo;</li>
    <li><strong>平台定义不精确。</strong>&ldquo;光用&lsquo;需要Unix和Oracle&rsquo;来描述你的平台是不足够的。你需要精确地说明每一部分具体的版本和配置，才能保证得到你所需的平台。不然如果有人好心为平台的某一部分升级了一个库，就可能导致某些东西停止运作。精确定义平台你才能在部署中避免这样的情形。&rdquo;</li>
    <li><strong>对性能和伸缩能力想当然。</strong>&ldquo;及早开始考虑性能和伸缩性，构建性能模型尝试预测关键的性能指标并定位瓶颈，在设计逐渐成型的同时投入到一些实际的验证性工作中去。这会帮助你提高对设计中不存在严重性能和伸缩性缺陷的信心。&rdquo;</li>
    <li><strong>自己发明安全技术。</strong>&ldquo;多 年来许多系统所犯的一个错误是试图加入自己发明的安全技术来提高系统安全性。比如定制的加密算法，开发者自己编写的审核系统，甚至完全DIY的访问控制系 统。自家开发的安全方案基本上都是不明智的。虽然很多人都以为自己可以马上搞出一些聪明的安全技术，但通常都只是自作聪明。&rdquo;</li>
    <li><strong>没有灾难恢复。</strong>&ldquo;要想得到资源来实现系统的灾难恢复机制，其关键在于在若干真实的场景中，具体衡量系统不可用所导致的损失。如果你还能估算这些场景发生的概率，你就可以用这两组数据去说服人们灾难恢复的重要性，并获得合理的预算去实现它。&rdquo;</li>
    <li><strong>没有撤退计划。</strong>&ldquo;确保无论在系统部署或升级的过程中发生任何事，你都有一份书面的、经过审查的、一致同意的撤退计划，允许你将整个环境恢复到部署之前的状态。&rdquo;</li>
</ol>
<p>Eoin Woods是UBS Investment Bank的软件及企业架构师。</p>
<p><strong>查看英文原文：</strong><a href="http://www.infoq.com/news/2007/10/top-ten-architecture-mistakes">Top Ten Software Architecture Mistakes</a></p>]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2007-10-19 09:22:23</wp:post_date>
		<wp:post_date_gmt>2007-10-19 09:22:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%af%e4%bb%b6%e6%9e%b6%e6%9e%84%e7%9a%84%e5%8d%81%e5%a4%a7%e9%94%99%e8%af%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云：两人两周的Web 2.0网站</title>
		<link>http://www.iceskysl.com/?p=52</link>
		<pubDate>Fri, 19 Oct 2007 10:06:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="info">本文是infoQ中文站的采访帖，版权归infoQ所有，如需要查看原文，请到<a href="http://www.infoq.com/cn/articles/itechtag-team-interview">这里</a>：</p>
<p class="info">作者 			<strong>霍泰稳</strong> 			发布于 			2007年10月17日 上午3时7分</p>
<dl class="tags2"><dt class="community">社区<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="1,390" name="architecture" href="http://www.infoq.com/cn/architecture">Architecture</a>,<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="741" name="ruby" href="http://www.infoq.com/cn/ruby">Ruby</a></dt><dt class="topics">主题<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="767" name="web2_0" href="http://www.infoq.com/cn/web2_0">Web 2.0</a>,<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="755" name="rubyonrails" href="http://www.infoq.com/cn/rubyonrails">Ruby on Rails</a></dt></dl>
<p><strong>编者按：</strong>因 为Ruby on Rails的出现，借用互联网创业的人越来越多，虽然不能说全是RoR的功劳，但至少说明技术门槛的降低加速了互联网的发展。从前从一个点子的产生到实现 可能要耗费少则几个月，多则几年的时间，而现在，只要你的点子够新，有实践的可能，几天几周就可以看到原型。而后面的维护也比较方便，几乎可以说是实时进 行。本文通过采访<a href="http://www.itechtag.com/">技能云网站</a>的策划人熊节和主设计师Iceskysl就是想证明前文所述，据两人介绍，这两个到现在还没有见过面的年轻人通过网络，在不到两周的时间里，将一个创意点子变成了现实。</p>
<p><strong>InfoQ中文站：这个项目发布后，你被人问到的最多的三个问题是什么？</strong></p>
<p><strong>InfoQ中文站：介绍一下你自己和你的团队？ </strong></p>
<p><strong>IceskYsl：</strong>我是IceskYsl，目前还是靠Java吃饭，ROR是暂时还是业余活动，很享受这种方 式；1sters!暂时还是个虚拟的、我自己心中理想中的团队模式，也正一步步的走向成熟。我接触RoR有一段时间了，期间被它的灵活吸引，有事没事的就 会写写代码，时间不多，写了好几个像模像样的系统如：</p>
<ol>
    <li><a href="http://www.byeloo.cn/">byeloo.cn</a>（毕业咯）：一个开源的多班级同学录系统，趴在床上用笔画出大概的模块以及基本的数据结构后；利用一个通宵写完了整个框架，而后就上线使用，根据同学们的要求，主键完善。目前功能都很实用；</li>
    <li>然后是1stlog，一个针对国内用户的基于ROR的blog程序，功能强大可定制，方便扩展，已经发布两个版本，马上即将发布第三个版本；</li>
    <li><a href="http://www.1sters.com/">1sters.com</a>：一个集新闻，产品展示，官方blog，已经产品缺陷跟踪管理于一体的CMS系统；</li>
    <li>1stimes：第一次是一个分享你我第一次经历的Web 2.0的系统；</li>
    <li><a href="http://www.itechtag.com/">itechtag</a>：技能云。</li>
</ol>
<p><span style="font-weight: bold;">熊节：</span>我是熊节，网名叫&quot;透明&quot;的。先后干过媒体、程序员、咨询师三种职业，所以有一堆Web 2.0的点子。可惜每天忙忙叨叨的，这些点子落地的很少。</p>
<p><strong>InfoQ中文站：技能云的创意是从何而来？</strong></p>
<p><strong>IceskYsl：</strong>项目的创意随着时间逐步演化，起初只是为程序员及其相关的人提供一个展现自我的平台，为国内的程序员赢得更多的他曾被无形剥夺的东西；进而发展为项目展示、交流、经验分享及其人脉的一个平台。</p>
<p><strong>熊节：</strong>这个东西的想法很简单：<a href="http://gigix.thoughtworkers.org/assets/2007/9/1/techtag.png">我要有一个widget</a>挂 在我的blog上，告诉别人我有些什么技能，譬如说我Ruby很不错、Java很不错、JavaScript也有经验，等等。为什么我想给别人show这 些呢？因为我觉得骄傲，为自己骄傲。我在过去的8年里一直在编程，我掌握了那么多的技能，我觉得很骄傲。说白了就是，我要向别人炫耀自己的技能。</p>
<p>东西很简单，但背后可以有引申。这个炫耀的widget一展开，就引出了别的东西，那就是从哪里得到这些技能的信息。当然了，只有从项目经验里来。 只有真正在项目里做过，用过一种技术，你才能说你掌握了这种技能。而且一般来说，技能掌握的熟练程度还是和使用的时间成正比的。所以iTechTag是以 项目为基础的。你不能说自己&quot;精通&quot;、&quot;熟练掌握&quot;什么技能，你必须证明，证据就是真实的项目经验。</p>
<p>那么有了一个炫耀的widget，有了一堆项目经验，就可以很方便的导出简历了。（这是我们下一步的重点功能。）技能－经验－简历，这个三位一体就 构成了一个程序员的声望（reputation）。谁对这些声望感兴趣呢？当然是正在招人的潜在雇主。换句话说iTechTag的注册用户在炫耀的同时顺 手得到了直接面对潜在雇主的机会。这就是我一开始说的，&ldquo;释放程序员声望的价值&rdquo;。如果说开源软件是把源代码的价值还给程序员（和用户），那么 iTechTag这个模式就像是人才招聘领域的开源，把程序员的价值还给程序员（和潜在雇主）。</p>
<p><strong>InfoQ中文站：为什么会采用 RoR实现，用RoR开发你们体味到什么特殊之处？</strong><br />
<span style="font-weight: bold;">InfoQ中文站：这个项目的开发过程是怎么样子的，比如时间、人力等？</span><br />
<strong>InfoQ中文站：敏捷开发方法在你们的开发过程中有没有得到什么实践？<br />
InfoQ中文站：类似于用RoR开发技能云这样的项目，有什么经验和教训和大家分享？</strong></p>
<p><strong>IceskYsl：</strong>Idea一定要足够的好，且你自己对这个Idea有充分的兴趣，自己必须是这个Idea的超级拥护者和使用者。必须脱离传统的类似外包项目的模式，否则其中的乐趣你肯定体会不到。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p class="info">本文是infoQ中文站的采访帖，版权归infoQ所有，如需要查看原文，请到<a href="http://www.infoq.com/cn/articles/itechtag-team-interview">这里</a>：</p>
<p class="info">作者 			<strong>霍泰稳</strong> 			发布于 			2007年10月17日 上午3时7分</p>
<dl class="tags2"><dt class="community">社区<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="1,390" name="architecture" href="http://www.infoq.com/cn/architecture">Architecture</a>,<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="741" name="ruby" href="http://www.infoq.com/cn/ruby">Ruby</a></dt><dt class="topics">主题<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="767" name="web2_0" href="http://www.infoq.com/cn/web2_0">Web 2.0</a>,<a onclick="try {CategoryPopup.showPopup(this);} catch(e) {}; return false;" id="755" name="rubyonrails" href="http://www.infoq.com/cn/rubyonrails">Ruby on Rails</a></dt></dl>
<p><strong>编者按：</strong>因 为Ruby on Rails的出现，借用互联网创业的人越来越多，虽然不能说全是RoR的功劳，但至少说明技术门槛的降低加速了互联网的发展。从前从一个点子的产生到实现 可能要耗费少则几个月，多则几年的时间，而现在，只要你的点子够新，有实践的可能，几天几周就可以看到原型。而后面的维护也比较方便，几乎可以说是实时进 行。本文通过采访<a href="http://www.itechtag.com/">技能云网站</a>的策划人熊节和主设计师Iceskysl就是想证明前文所述，据两人介绍，这两个到现在还没有见过面的年轻人通过网络，在不到两周的时间里，将一个创意点子变成了现实。</p>
<p><strong>InfoQ中文站：这个项目发布后，你被人问到的最多的三个问题是什么？</strong></p>
<p><strong>InfoQ中文站：介绍一下你自己和你的团队？ </strong></p>
<p><strong>IceskYsl：</strong>我是IceskYsl，目前还是靠Java吃饭，ROR是暂时还是业余活动，很享受这种方 式；1sters!暂时还是个虚拟的、我自己心中理想中的团队模式，也正一步步的走向成熟。我接触RoR有一段时间了，期间被它的灵活吸引，有事没事的就 会写写代码，时间不多，写了好几个像模像样的系统如：</p>
<ol>
    <li><a href="http://www.byeloo.cn/">byeloo.cn</a>（毕业咯）：一个开源的多班级同学录系统，趴在床上用笔画出大概的模块以及基本的数据结构后；利用一个通宵写完了整个框架，而后就上线使用，根据同学们的要求，主键完善。目前功能都很实用；</li>
    <li>然后是1stlog，一个针对国内用户的基于ROR的blog程序，功能强大可定制，方便扩展，已经发布两个版本，马上即将发布第三个版本；</li>
    <li><a href="http://www.1sters.com/">1sters.com</a>：一个集新闻，产品展示，官方blog，已经产品缺陷跟踪管理于一体的CMS系统；</li>
    <li>1stimes：第一次是一个分享你我第一次经历的Web 2.0的系统；</li>
    <li><a href="http://www.itechtag.com/">itechtag</a>：技能云。</li>
</ol>
<p><span style="font-weight: bold;">熊节：</span>我是熊节，网名叫&quot;透明&quot;的。先后干过媒体、程序员、咨询师三种职业，所以有一堆Web 2.0的点子。可惜每天忙忙叨叨的，这些点子落地的很少。</p>
<p><strong>InfoQ中文站：技能云的创意是从何而来？</strong></p>
<p><strong>IceskYsl：</strong>项目的创意随着时间逐步演化，起初只是为程序员及其相关的人提供一个展现自我的平台，为国内的程序员赢得更多的他曾被无形剥夺的东西；进而发展为项目展示、交流、经验分享及其人脉的一个平台。</p>
<p><strong>熊节：</strong>这个东西的想法很简单：<a href="http://gigix.thoughtworkers.org/assets/2007/9/1/techtag.png">我要有一个widget</a>挂 在我的blog上，告诉别人我有些什么技能，譬如说我Ruby很不错、Java很不错、JavaScript也有经验，等等。为什么我想给别人show这 些呢？因为我觉得骄傲，为自己骄傲。我在过去的8年里一直在编程，我掌握了那么多的技能，我觉得很骄傲。说白了就是，我要向别人炫耀自己的技能。</p>
<p>东西很简单，但背后可以有引申。这个炫耀的widget一展开，就引出了别的东西，那就是从哪里得到这些技能的信息。当然了，只有从项目经验里来。 只有真正在项目里做过，用过一种技术，你才能说你掌握了这种技能。而且一般来说，技能掌握的熟练程度还是和使用的时间成正比的。所以iTechTag是以 项目为基础的。你不能说自己&quot;精通&quot;、&quot;熟练掌握&quot;什么技能，你必须证明，证据就是真实的项目经验。</p>
<p>那么有了一个炫耀的widget，有了一堆项目经验，就可以很方便的导出简历了。（这是我们下一步的重点功能。）技能－经验－简历，这个三位一体就 构成了一个程序员的声望（reputation）。谁对这些声望感兴趣呢？当然是正在招人的潜在雇主。换句话说iTechTag的注册用户在炫耀的同时顺 手得到了直接面对潜在雇主的机会。这就是我一开始说的，&ldquo;释放程序员声望的价值&rdquo;。如果说开源软件是把源代码的价值还给程序员（和用户），那么 iTechTag这个模式就像是人才招聘领域的开源，把程序员的价值还给程序员（和潜在雇主）。</p>
<p><strong>InfoQ中文站：为什么会采用 RoR实现，用RoR开发你们体味到什么特殊之处？</strong><br />
<span style="font-weight: bold;">InfoQ中文站：这个项目的开发过程是怎么样子的，比如时间、人力等？</span><br />
<strong>InfoQ中文站：敏捷开发方法在你们的开发过程中有没有得到什么实践？<br />
InfoQ中文站：类似于用RoR开发技能云这样的项目，有什么经验和教训和大家分享？</strong></p>
<p><strong>IceskYsl：</strong>Idea一定要足够的好，且你自己对这个Idea有充分的兴趣，自己必须是这个Idea的超级拥护者和使用者。必须脱离传统的类似外包项目的模式，否则其中的乐趣你肯定体会不到。</p>]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2007-10-19 10:06:21</wp:post_date>
		<wp:post_date_gmt>2007-10-19 10:06:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91%ef%bc%9a%e4%b8%a4%e4%ba%ba%e4%b8%a4%e5%91%a8%e7%9a%84web-2-0%e7%bd%91%e7%ab%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>ubuntu下出现缺少openssl的解决</title>
		<link>http://www.iceskysl.com/?p=53</link>
		<pubDate>Sun, 21 Oct 2007 21:11:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[<h1><font size="2">   MissingSourceFile        in PeopleController#invite</font></h1>
<h1><font size="2">no such file to load -- openssl</font></h1>
<pre><font size="3"><strong>解决：</strong><br /></font>$ sudo apt-get install libopenssl-ruby1.8</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<h1><font size="2">   MissingSourceFile        in PeopleController#invite</font></h1>
<h1><font size="2">no such file to load -- openssl</font></h1>
<pre><font size="3"><strong>解决：</strong><br /></font>$ sudo apt-get install libopenssl-ruby1.8</pre>]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2007-10-21 21:11:55</wp:post_date>
		<wp:post_date_gmt>2007-10-21 21:11:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu%e4%b8%8b%e5%87%ba%e7%8e%b0%e7%bc%ba%e5%b0%91openssl%e7%9a%84%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>请freeze你的Rails！</title>
		<link>http://www.iceskysl.com/?p=54</link>
		<pubDate>Mon, 22 Oct 2007 11:31:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早上起了一个大早，打开电脑，打开技能云，寒～出错了，信息如下：</p>
<p>Rails application failed to start properly&quot;RewriteCond %{HTTP_REFERER} !^<a href="http://1stimes.liquidchinaware.com/.*$" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://1stimes.liquidchinaware<wbr></wbr>.com/.*$ </a>      [NC]</p>
<p>看来有点问题，赶紧打开log看看，没有任何错误，看来还没到这步，奇怪，感觉应该是.htaccess的问题，但是我没改过呀，copy一个好的过去，还是不行，郁闷！</p>
<p>赶紧./script/server 试试，提示找不到1.2.3版本的rails，接着rails -v 看下，我靠，咋成1.2.5了，看来是Bl自己升级了，也不通知下,囧～</p>
<p>找到问题就好办了，修改配置文件environment.rb，把rails版本改成1.2.5即可！</p>
<p>引出另外一个话题，<font color="#0000ff">需要freeze你的Rails么？</font>答案是<strong>肯定</strong>的，转另外一个老外写的一段话，如下：</p>
<p>&quot;Freezing Rails is recommended if you are using a Rails application for a business site or another production environment where stability is the most important concern (if you don't freeze your application, there is a small possibility that your application might stop working due to compatibility problems when a new version of Rails is installed on our servers).&quot;</p>
<p>方法很简单：rake rails:freeze:gems等几个命令就ok，会把rails单独拷贝到你的 vender下，而rails启动的时候先看这个目录，如果有就加载，没有的话再加载系统的。</p>
<p>至于为什么这么做，你可以参考他写的文章：http://support.tigertech.net/freeze-rails</p>
<p><strong>参考命令：</strong></p>
<pre><a name="freezing-to-a-different">rake rails:freeze:gems<br />rake rails:freeze:edge<br /></a><a name="freezing-to-a-different">rake rails:freeze:edge TAG=rel_1-1-6<br /></a><a name="unfreezing-thawing-rails">rake rails:unfreeze</a></pre>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>&nbsp;(fccc36ff)早上起了一个大早，打开电脑，打开技能云，寒～出错了，信息如下：</p>
<p>Rails application failed to start properly&quot;RewriteCond %{HTTP_REFERER} !^<a href="http://1stimes.liquidchinaware.com/.*$" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://1stimes.liquidchinaware<wbr></wbr>.com/.*$ </a>      [NC]</p>
<p>看来有点问题，赶紧打开log看看，没有任何错误，看来还没到这步，奇怪，感觉应该是.htaccess的问题，但是我没改过呀，copy一个好的过去，还是不行，郁闷！</p>
<p>赶紧./script/server 试试，提示找不到1.2.3版本的rails，接着rails -v 看下，我靠，咋成1.2.5了，看来是Bl自己升级了，也不通知下,囧～</p>
<p>找到问题就好办了，修改配置文件environment.rb，把rails版本改成1.2.5即可！</p>
<p>引出另外一个话题，<font color="#0000ff">需要freeze你的Rails么？</font>答案是<strong>肯定</strong>的，转另外一个老外写的一段话，如下：</p>
<p>&quot;Freezing Rails is recommended if you are using a Rails application for a business site or another production environment where stability is the most important concern (if you don't freeze your application, there is a small possibility that your application might stop working due to compatibility problems when a new version of Rails is installed on our servers).&quot;</p>
<p>方法很简单：rake rails:freeze:gems等几个命令就ok，会把rails单独拷贝到你的 vender下，而rails启动的时候先看这个目录，如果有就加载，没有的话再加载系统的。</p>
<p>至于为什么这么做，你可以参考他写的文章：http://support.tigertech.net/freeze-rails</p>
<p><strong>参考命令：</strong></p>
<pre><a name="freezing-to-a-different">rake rails:freeze:gems<br />rake rails:freeze:edge<br /></a><a name="freezing-to-a-different">rake rails:freeze:edge TAG=rel_1-1-6<br /></a><a name="unfreezing-thawing-rails">rake rails:unfreeze</a></pre>]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2007-10-22 11:31:32</wp:post_date>
		<wp:post_date_gmt>2007-10-22 11:31:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%af%b7freeze%e4%bd%a0%e7%9a%84rails%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>留神你的session文件～</title>
		<link>http://www.iceskysl.com/?p=55</link>
		<pubDate>Thu, 25 Oct 2007 09:59:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早上6点半起床，打开电脑，打开技能云，一切正常，开始写Gtalk的发送消息的ruby代码，很顺利，全部搞定，准备关机的时候，刷新了下技能云，显示启动错误！</p>
<p>晕，哪里出问题了呢？我刚才没有更新代码上去呀，看来是系统的问题，SSH上去，看日志没有任何有用的信息，调试一把，可以启动，难道是 sessions的问题（我的session还是保存在文件系统里面的），转到tmp/sessions下wc -l 了一下，寒，7W多个文件，恐怖，貌似我忘记清理了，直接rm * （保存密码的人别骂我哈），显示参数过长，郁闷，看来文件数太多了，文件貌似也没有什么规律，总不能一个一个删吧（傻瓜才这个干），于是寻找解决办法。</p>
<p>Google到这段代码，试了下可以正常工作，共享给大家：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'find'</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>namespace&nbsp;<span class="symbol">:tmp</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;namespace&nbsp;<span class="symbol">:sessions</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desc&nbsp;<span class="string">'Clear&nbsp;expired&nbsp;sessions'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;task&nbsp;<span class="symbol">:clear_expired</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:environment</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctime&nbsp;=&nbsp;(ENV[<span class="string">'ctime'</span><span>]&nbsp;||&nbsp;120).to_i&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;atime&nbsp;=&nbsp;(ENV[<span class="string">'atime'</span><span>]&nbsp;|| 20).to_i&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find.find(RAILS_ROOT&nbsp;+&nbsp;<span class="string">&quot;/tmp/sessions/&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|path|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;FileTest.directory?(path)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;</span><span class="builtin">File</span><span>.basename(path)[0]&nbsp;==&nbsp;?.&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find.prune&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">next</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="builtin">File</span><span>.delete(path)&nbsp;</span><span class="keyword">if</span><span>&nbsp;</span><span class="builtin">File</span><span>.ctime(path)&nbsp;&lt;&nbsp;ctime.minutes.ago&nbsp;</span><span class="keyword">or</span><span>&nbsp;</span><span class="builtin">File</span><span>.atime(path)&nbsp;&lt;&nbsp;atime.minutes.ago&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
按照作者给出的用法，如下：</p>
<p>It can be run with 2 optional parameters: &ldquo;atime&rdquo;, which defines the time in minutes that will be compared against the last access time of a session file and &ldquo;ctime&rdquo; which defines the time in minutes that will be compared against the creation time of a session file. The default values are: ctime = 120 (minutes) and atime = 20 (miuntes) which means that the session files not accessed in the last 20 minutes and created earlier than 2 hours ago will be removed when the script runs.</p>
<p>保存到你的lib/tasks目录下，然后用rake -T就可以看到这个rake命令，可以接受两个参数，举个例子，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>rake&nbsp;tmp</span><span class="symbol">:sessions</span><span class="symbol">:clear_expired</span><span>&nbsp;atime=15&nbsp;ctime=60&nbsp;&nbsp;</span></span></li>
</ol>
</div>
另外，还google到一段直接配置的脚本，如下：</p>
<p>Here's a cron-only one liner which, every 30 min, removes all session files that haven't been accessed in 4 hours.  10,40 * * * * /usr/bin/find /u/apps/*/current/tmp/sessions -name &quot;ruby_sess*&quot; -amin +240 -exec rm {} \;</p>
<p>如果你有更优雅的方法，请分享给我，谢谢～</p>
<p>参考地址：<br />
http://www.taknado.com/2007/7/25/rake-task-to-clear-expired-session-files</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早上6点半起床，打开电脑，打开技能云，一切正常，开始写Gtalk的发送消息的ruby代码，很顺利，全部搞定，准备关机的时候，刷新了下技能云，显示启动错误！</p>
<p>晕，哪里出问题了呢？我刚才没有更新代码上去呀，看来是系统的问题，SSH上去，看日志没有任何有用的信息，调试一把，可以启动，难道是 sessions的问题（我的session还是保存在文件系统里面的），转到tmp/sessions下wc -l 了一下，寒，7W多个文件，恐怖，貌似我忘记清理了，直接rm * （保存密码的人别骂我哈），显示参数过长，郁闷，看来文件数太多了，文件貌似也没有什么规律，总不能一个一个删吧（傻瓜才这个干），于是寻找解决办法。</p>
<p>Google到这段代码，试了下可以正常工作，共享给大家：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'find'</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>namespace&nbsp;<span class="symbol">:tmp</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;namespace&nbsp;<span class="symbol">:sessions</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desc&nbsp;<span class="string">'Clear&nbsp;expired&nbsp;sessions'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;task&nbsp;<span class="symbol">:clear_expired</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:environment</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctime&nbsp;=&nbsp;(ENV[<span class="string">'ctime'</span><span>]&nbsp;||&nbsp;120).to_i&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;atime&nbsp;=&nbsp;(ENV[<span class="string">'atime'</span><span>]&nbsp;|| 20).to_i&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find.find(RAILS_ROOT&nbsp;+&nbsp;<span class="string">&quot;/tmp/sessions/&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|path|&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;FileTest.directory?(path)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;</span><span class="builtin">File</span><span>.basename(path)[0]&nbsp;==&nbsp;?.&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find.prune&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">next</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="builtin">File</span><span>.delete(path)&nbsp;</span><span class="keyword">if</span><span>&nbsp;</span><span class="builtin">File</span><span>.ctime(path)&nbsp;&lt;&nbsp;ctime.minutes.ago&nbsp;</span><span class="keyword">or</span><span>&nbsp;</span><span class="builtin">File</span><span>.atime(path)&nbsp;&lt;&nbsp;atime.minutes.ago&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>按照作者给出的用法，如下：</p>
<p>It can be run with 2 optional parameters: &ldquo;atime&rdquo;, which defines the time in minutes that will be compared against the last access time of a session file and &ldquo;ctime&rdquo; which defines the time in minutes that will be compared against the creation time of a session file. The default values are: ctime = 120 (minutes) and atime = 20 (miuntes) which means that the session files not accessed in the last 20 minutes and created earlier than 2 hours ago will be removed when the script runs.</p>
<p>保存到你的lib/tasks目录下，然后用rake -T就可以看到这个rake命令，可以接受两个参数，举个例子，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>rake&nbsp;tmp</span><span class="symbol">:sessions</span><span class="symbol">:clear_expired</span><span>&nbsp;atime=15&nbsp;ctime=60&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>另外，还google到一段直接配置的脚本，如下：</p>
<p>Here's a cron-only one liner which, every 30 min, removes all session files that haven't been accessed in 4 hours.  10,40 * * * * /usr/bin/find /u/apps/*/current/tmp/sessions -name &quot;ruby_sess*&quot; -amin +240 -exec rm {} \;</p>
<p>如果你有更优雅的方法，请分享给我，谢谢～</p>
<p>参考地址：<br />
http://www.taknado.com/2007/7/25/rake-task-to-clear-expired-session-files</p>]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2007-10-25 09:59:53</wp:post_date>
		<wp:post_date_gmt>2007-10-25 09:59:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%95%99%e7%a5%9e%e4%bd%a0%e7%9a%84session%e6%96%87%e4%bb%b6%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_1ead7c30c778ddf05505a3ec3fe32801</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[cnhackTNT]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wanghui.org</wp:comment_author_url>
			<wp:comment_author_IP>58.33.162.206</wp:comment_author_IP>
			<wp:comment_date>2007-11-01 00:32:37</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[跑到session存放的目录下:
 ls | xargs rm
世界便清静了...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[老熊]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.laoxiong.cn</wp:comment_author_url>
			<wp:comment_author_IP>125.33.124.88</wp:comment_author_IP>
			<wp:comment_date>2007-11-05 00:19:05</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[直接选择将sessions保存的数据库中，删起来会方便很多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我的一个域名丢了</title>
		<link>http://www.iceskysl.com/?p=148</link>
		<pubDate>Mon, 29 Oct 2007 22:04:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[<p>去年买的一个我比较喜欢的域名，前几天到期了，找原来的代理找不到了，于是没有办法续费，还抱着侥幸的心理准备等他重新投入注册的时候再次注册，但是让人郁闷的事情发生了。</p>
<p>今天早上起来，发现被人抢注了，真TMD郁闷，真有这些鸟公司专门敢这样的事情，丫的把我郁闷的不行。</p>
<p>但是没有办法，忘记他吧。把手上的域名保护好。这个无论如何也不能再丢了。最后还鄙视下那个抢我域名的鸟公司。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>去年买的一个我比较喜欢的域名，前几天到期了，找原来的代理找不到了，于是没有办法续费，还抱着侥幸的心理准备等他重新投入注册的时候再次注册，但是让人郁闷的事情发生了。</p>
<p>今天早上起来，发现被人抢注了，真TMD郁闷，真有这些鸟公司专门敢这样的事情，丫的把我郁闷的不行。</p>
<p>但是没有办法，忘记他吧。把手上的域名保护好。这个无论如何也不能再丢了。最后还鄙视下那个抢我域名的鸟公司。</p>]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2007-10-29 22:04:52</wp:post_date>
		<wp:post_date_gmt>2007-10-29 22:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e7%9a%84%e4%b8%80%e4%b8%aa%e5%9f%9f%e5%90%8d%e4%b8%a2%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[jouy]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.162.13.135</wp:comment_author_IP>
			<wp:comment_date>2007-10-30 12:23:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[昨天，访问的时候看到被告知域名已被注册。

深表同情:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[小山]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.130.161.10</wp:comment_author_IP>
			<wp:comment_date>2008-01-23 20:37:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[旧的不去，新的不来。 ：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ruby GB2312和UTF-8编码转换</title>
		<link>http://www.iceskysl.com/?p=149</link>
		<pubDate>Tue, 30 Oct 2007 10:33:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=149</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天CFC测试技能云的时候，在导出简历的时候，报错，跟了下log发现，错误如下：</p>
<p>Iconv::IllegalSequence (&quot;閫欐槸涓&euro;鍊嬪皣\345&quot;...):</p>
<p>就是代码转换老是报错，原来CFC的输入的是繁体中文的，原来如此，一定要加上IGNORE参数，就好了。记录一下。
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Iconv.iconv(</span><span class="string">&quot;UTF-8//IGNORE&quot;</span><span>,</span><span class="string">&quot;GB2312//IGNORE&quot;</span><span>,text)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>最后感谢写CFC同学～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天CFC测试技能云的时候，在导出简历的时候，报错，跟了下log发现，错误如下：</p>
<p>Iconv::IllegalSequence (&quot;閫欐槸涓&euro;鍊嬪皣\345&quot;...):</p>
<p>就是代码转换老是报错，原来CFC的输入的是繁体中文的，原来如此，一定要加上IGNORE参数，就好了。记录一下。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Iconv.iconv(</span><span class="string">&quot;UTF-8//IGNORE&quot;</span><span>,</span><span class="string">&quot;GB2312//IGNORE&quot;</span><span>,text)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>最后感谢写CFC同学～</p>]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2007-10-30 10:33:37</wp:post_date>
		<wp:post_date_gmt>2007-10-30 10:33:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-gb2312%e5%92%8cutf-8%e7%bc%96%e7%a0%81%e8%bd%ac%e6%8d%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>导回以前的blog内容～</title>
		<link>http://www.iceskysl.com/?p=150</link>
		<pubDate>Tue, 30 Oct 2007 13:00:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前在51boo的时候，在1ster.cn上的一个专题博客，由于51boo的最后down机，最后没办法恢复就一直放在那里了；前段时间51boo恢复了一阵子，我正好上去把这个内容做了下备份，当时图省事，直接备份了RSS，也就是XML格式的内容；</p>
<p>昨天正好试试sablog后台的一个导入数据功能，说可以导入RSS文件，于是试着导入了一下以前备份下来的数据，比较幸运的是，很顺利，你现在可以看到很多我以前的写的、记录的文章了，虽然文字格式还有点问题，不过不影响阅读，就先这样吧。</p>
<p>值得高兴一下，这次资料终于没有丢失。</p>
<p>PS：1ster.cn被人抢注了，不是我的了，大家不用去那里看了:(</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前在51boo的时候，在1ster.cn上的一个专题博客(RubyOnRails)，由于51boo的最后down机，最后没办法恢复就一直放在那里了；前段时间51boo恢复了一阵子，我正好上去把这个内容做了下备份，当时图省事，直接备份了RSS，也就是XML格式的内容；</p>
<p>昨天正好试试sablog后台的一个导入数据功能，说可以导入RSS文件，于是试着导入了一下以前备份下来的数据，比较幸运的是，很顺利，你现在可以看到很多我以前的写的、记录的文章了，虽然文字格式还有点问题，不过不影响阅读，就先这样吧。</p>
<p>值得高兴一下，这次资料终于没有丢失。</p>
<p>PS：1ster.cn被人抢注了，不是我的了，大家不用去那里看了:(</p>]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2007-10-30 13:00:48</wp:post_date>
		<wp:post_date_gmt>2007-10-30 13:00:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%bc%e5%9b%9e%e4%bb%a5%e5%89%8d%e7%9a%84blog%e5%86%85%e5%ae%b9%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在rails中使用oracle</title>
		<link>http://www.iceskysl.com/?p=151</link>
		<pubDate>Wed, 07 Nov 2007 09:26:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>1.安装驱动</strong><br />
http://rubyforge.org/projects/ruby-oci8/<br />
下载并运行（双击）ruby-oci8-mswin里面的*.rb<br />
<strong><br />
2.更改database.yml</strong><br />
<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: examplesid<br />
&nbsp; username: exampleuser<br />
&nbsp; password: examplepass<br />
<br />
or<br />
<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: 192.168.0.50/examplesid<br />
&nbsp; username: exampleuser<br />
&nbsp; password: examplepass<br />
<br />
没有用到database字段；exampleuser可以用tns来代替；<br />
<br />
我的oracle装在另外一台机器上，所以配置如下<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: MyTnsName<br />
&nbsp; username: system<br />
&nbsp; password: manager</p>
<p>参考地址：http://www.oracle.com/technology/global/cn/pub/articles/haefel-oracle-ruby.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>1.安装驱动</strong><br />
http://rubyforge.org/projects/ruby-oci8/<br />
下载并运行（双击）ruby-oci8-mswin里面的*.rb<br />
<strong><br />
2.更改database.yml</strong><br />
<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: examplesid<br />
&nbsp; username: exampleuser<br />
&nbsp; password: examplepass<br />
<br />
or<br />
<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: 192.168.0.50/examplesid<br />
&nbsp; username: exampleuser<br />
&nbsp; password: examplepass<br />
<br />
没有用到database字段；exampleuser可以用tns来代替；<br />
<br />
我的oracle装在另外一台机器上，所以配置如下<br />
development:<br />
&nbsp; adapter: oci<br />
&nbsp; host: MyTnsName<br />
&nbsp; username: system<br />
&nbsp; password: manager</p>]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2007-11-07 09:26:17</wp:post_date>
		<wp:post_date_gmt>2007-11-07 09:26:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8oracle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>准备搬迁技能云，麻烦各地的朋友测试下速度～</title>
		<link>http://www.iceskysl.com/?p=152</link>
		<pubDate>Thu, 08 Nov 2007 10:56:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<p>首先感谢http://www.duxoo.com/的慷慨和大度，给技能云提供服务器，非常感谢。</p>
<p>前几天做了搬迁预演，可以实现完全搬迁，不会遗失资料或者其他的什么，请各地的朋友帮忙测试下您所在位置的速度差异。</p>
<p>请比较：<br />
http://www.itechtag.com/</p>
<p>http://itechtag.i410.cn/</p>
<p>这两个地址的响应速度，直接贴在下面即可，我好参考着看速度是否满意，谢谢各位参与者~</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>首先感谢http://www.duxoo.com/的慷慨和大度，给技能云提供服务器，非常感谢。</p>
<p>前几天做了搬迁预演，可以实现完全搬迁，不会遗失资料或者其他的什么，请各地的朋友帮忙测试下您所在位置的速度差异。</p>
<p>请比较：<br />
http://www.itechtag.com/</p>
<p>http://itechtag.i410.cn/</p>
<p>这两个地址的响应速度，直接贴在下面即可，我好参考着看速度是否满意，谢谢各位参与者~</p>]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2007-11-08 10:56:38</wp:post_date>
		<wp:post_date_gmt>2007-11-08 10:56:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%87%86%e5%a4%87%e6%90%ac%e8%bf%81%e6%8a%80%e8%83%bd%e4%ba%91%ef%bc%8c%e9%ba%bb%e7%83%a6%e5%90%84%e5%9c%b0%e7%9a%84%e6%9c%8b%e5%8f%8b%e6%b5%8b%e8%af%95%e4%b8%8b%e9%80%9f%e5%ba%a6%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_b8657c59dbb60b916b9f3df820d950c5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.30.129.77</wp:comment_author_IP>
			<wp:comment_date>2007-11-08 22:25:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[深圳电信：
D:\>ping www.itechtag.com

Pinging itechtag.com [69.89.25.179] with 32 bytes of data:

Reply from 69.89.25.179: bytes=32 time=500ms TTL=47
Request timed out.
Request timed out.
Reply from 69.89.25.179: bytes=32 time=499ms TTL=47

Ping statistics for 69.89.25.179:
    Packets: Sent = 4, Received = 2, Lost = 2 (50% loss),
Approximate round trip times in milli-seconds:
    Minimum = 499ms, Maximum = 500ms, Average = 499ms

D:\>ping itechtag.i410.cn

Pinging itechtag.i410.cn [220.194.44.138] with 32 bytes of data:

Reply from 220.194.44.138: bytes=32 time=87ms TTL=51
Reply from 220.194.44.138: bytes=32 time=104ms TTL=51
Reply from 220.194.44.138: bytes=32 time=71ms TTL=51
Reply from 220.194.44.138: bytes=32 time=70ms TTL=51

Ping statistics for 220.194.44.138:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 70ms, Maximum = 104ms, Average = 83ms

可以看到，CN的比原来的快10倍左右。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[zhYOng]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.238.245.116</wp:comment_author_IP>
			<wp:comment_date>2007-11-10 12:57:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[天津教育网：

C:\Documents and Settings\tipdo\桌面>ping www.itechtag.com

Pinging itechtag.com [69.89.25.179] with 32 bytes of data:

Reply from 69.89.25.179: bytes=32 time=238ms TTL=44
Reply from 69.89.25.179: bytes=32 time=255ms TTL=44
Reply from 69.89.25.179: bytes=32 time=237ms TTL=44
Reply from 69.89.25.179: bytes=32 time=240ms TTL=44

Ping statistics for 69.89.25.179:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 237ms, Maximum = 255ms, Average = 242ms

C:\Documents and Settings\tipdo\桌面>ping itechtag.i410.cn

Pinging itechtag.i410.cn [220.194.44.138] with 32 bytes of data:

Reply from 220.194.44.138: bytes=32 time=80ms TTL=47
Reply from 220.194.44.138: bytes=32 time=75ms TTL=47
Reply from 220.194.44.138: bytes=32 time=79ms TTL=47
Reply from 220.194.44.138: bytes=32 time=81ms TTL=47

Ping statistics for 220.194.44.138:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 75ms, Maximum = 81ms, Average = 78ms

C:\Documents and Settings\tipdo\桌面>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.2.186</wp:comment_author_IP>
			<wp:comment_date>2007-11-10 21:24:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2 zhYOng :
多谢。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[arong]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.32.17.254</wp:comment_author_IP>
			<wp:comment_date>2008-01-17 11:07:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[~$ ping www.itechtag.com
PING www.itechtag.com (220.194.44.138) 56(84) bytes of data.
64 bytes from 220.194.44.138: icmp_seq=1 ttl=51 time=219 ms
64 bytes from 220.194.44.138: icmp_seq=2 ttl=51 time=206 ms
64 bytes from 220.194.44.138: icmp_seq=3 ttl=51 time=154 ms
64 bytes from 220.194.44.138: icmp_seq=4 ttl=51 time=136 ms
64 bytes from 220.194.44.138: icmp_seq=5 ttl=51 time=146 ms
64 bytes from 220.194.44.138: icmp_seq=6 ttl=51 time=211 ms
64 bytes from 220.194.44.138: icmp_seq=7 ttl=51 time=188 ms
64 bytes from 220.194.44.138: icmp_seq=8 ttl=51 time=228 ms
64 bytes from 220.194.44.138: icmp_seq=9 ttl=51 time=482 ms
64 bytes from 220.194.44.138: icmp_seq=10 ttl=51 time=167 ms
64 bytes from 220.194.44.138: icmp_seq=11 ttl=51 time=178 ms
64 bytes from 220.194.44.138: icmp_seq=12 ttl=51 time=754 ms
64 bytes from 220.194.44.138: icmp_seq=13 ttl=51 time=579 ms

--- www.itechtag.com ping statistics ---
13 packets transmitted, 13 received, 0% packet loss, time 64080ms
rtt min/avg/max/mdev = 136.217/280.987/754.161/187.633 ms]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[arong]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.32.17.254</wp:comment_author_IP>
			<wp:comment_date>2008-01-17 11:10:42</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[~$ ping itechtag.i410.cn
PING itechtag.i410.cn (220.194.44.138) 56(84) bytes of data.
64 bytes from 220.194.44.138: icmp_seq=1 ttl=51 time=651 ms
64 bytes from 220.194.44.138: icmp_seq=2 ttl=51 time=207 ms
64 bytes from 220.194.44.138: icmp_seq=3 ttl=51 time=831 ms
64 bytes from 220.194.44.138: icmp_seq=4 ttl=51 time=564 ms
64 bytes from 220.194.44.138: icmp_seq=5 ttl=51 time=276 ms
64 bytes from 220.194.44.138: icmp_seq=6 ttl=51 time=384 ms
64 bytes from 220.194.44.138: icmp_seq=7 ttl=51 time=584 ms
64 bytes from 220.194.44.138: icmp_seq=8 ttl=51 time=138 ms
64 bytes from 220.194.44.138: icmp_seq=9 ttl=51 time=452 ms
64 bytes from 220.194.44.138: icmp_seq=10 ttl=51 time=334 ms
64 bytes from 220.194.44.138: icmp_seq=11 ttl=51 time=140 ms
64 bytes from 220.194.44.138: icmp_seq=12 ttl=51 time=139 ms
64 bytes from 220.194.44.138: icmp_seq=13 ttl=51 time=162 ms

--- itechtag.i410.cn ping statistics ---
13 packets transmitted, 13 received, 0% packet loss, time 67144ms
rtt min/avg/max/mdev = 138.673/374.493/831.516/218.615 ms]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[arong]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.32.17.254</wp:comment_author_IP>
			<wp:comment_date>2008-01-17 11:13:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[刚接触这个，不知道怎么看，可否简略说说，谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>lunix操作技巧(二):系统负载情况估算相关</title>
		<link>http://www.iceskysl.com/?p=153</link>
		<pubDate>Fri, 09 Nov 2007 15:13:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>--显示Linux内核版本号</strong><br />
[root@CentOS4 ~]# uname -a<br />
Linux CentOS4.5 2.6.9-55.ELsmp #1 SMP Wed May 2 14:28:44 EDT 2007 i686 i686 i386 GNU/Linux<br />
语　　法：uname [-amnrsv][--help][--version]<br />
补充说明：uname可显示电脑以及操作系统的相关信息。<br />
参　　数：<br />
-a或--all 　显示全部的信息。<br />
-m或--machine 　显示电脑类型。<br />
-n或-nodename 　显示在网络上的主机名称。<br />
-r或--release 　显示操作系统的发行编号。<br />
-s或--sysname 　显示操作系统名称。<br />
-V 　显示操作系统的版本。<br />
--help 　显示帮助。<br />
--version 　显示版本信息。</p>
<p><strong>--查看Linux内存使用情况</strong><br />
[root@CentOS4 ~]# free<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; shared&nbsp;&nbsp;&nbsp; buffers&nbsp;&nbsp;&nbsp;&nbsp; cached<br />
Mem:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1034584&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 71752&nbsp;&nbsp;&nbsp;&nbsp; 962832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 35260<br />
-/+ buffers/cache:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32752&nbsp;&nbsp;&nbsp; 1001832<br />
Swap:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1052248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 1052248<br />
<br />
<br />
语　　法： free [-bkmotV][-s &lt;间隔秒数&gt;]<br />
&nbsp;free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及系统核心使用的缓冲区等。<br />
参　　数：<br />
-b 　以Byte为单位显示内存使用情况。<br />
-k 　以KB为单位显示内存使用情况。<br />
-m 　以MB为单位显示内存使用情况。<br />
-o 　不显示缓冲区调节列。<br />
-s&lt;间隔秒数&gt; 　持续观察内存使用状况。<br />
-t 　显示内存总和列。<br />
-V 　显示版本信息。<br />
如MB为单位显示内存使用情况：<br />
[root@CentOS4 ~]# free -m<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; shared&nbsp;&nbsp;&nbsp; buffers&nbsp;&nbsp;&nbsp;&nbsp; cached<br />
Mem:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1010&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 70&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 940&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 34<br />
-/+ buffers/cache:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 978<br />
Swap:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1027</p>
<p><em><strong>附录：free的详细解释：</strong></em></p>
<p>[root@Linux /tmp]# free<br />
&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; total&nbsp; &nbsp;&nbsp; &nbsp; used&nbsp; &nbsp;&nbsp; &nbsp; free&nbsp; &nbsp;&nbsp;&nbsp;shared&nbsp; &nbsp; buffers&nbsp; &nbsp;&nbsp;&nbsp;cached<br />
Mem:&nbsp; &nbsp;&nbsp; &nbsp; 4149156&nbsp; &nbsp; 4130412&nbsp; &nbsp;&nbsp; &nbsp;18744&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 0&nbsp; &nbsp;&nbsp; &nbsp;13220&nbsp; &nbsp; 2720160<br />
-/+ buffers/cache:&nbsp; &nbsp; 1397032&nbsp; &nbsp; 2752124<br />
Swap:&nbsp; &nbsp;&nbsp; &nbsp;6289408&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;144&nbsp; &nbsp; 6289264第1行<br />
total 内存总数: 4149156<br />
used 已经使用的内存数: 4130412<br />
free 空闲的内存数: 18744<br />
shared 当前已经废弃不用，总是0<br />
buffers Buffer Cache内存数: 13220<br />
cached Page Cache内存数: 2720160<br />
<br />
关系：total = used + free<br />
<br />
第2行：<br />
-/+ buffers/cache的意思相当于：<br />
-buffers/cache 的内存数：1397032 (等于第1行的 used - buffers - cached)<br />
+buffers/cache 的内存数: 2752124 (等于第1行的 free + buffers + cached)<br />
<br />
可见-buffers/cache反映的是被程序实实在在吃掉的内存，而+buffers/cache反映的是可以挪用的内存总数。<br />
<br />
第三行单独针对交换分区, 就不用再说了.<br />
<br />
为了提高磁盘存取效率, Linux做了一些精心的设计, 除了对dentry进行缓存(用于VFS,加速文件路径名到inode的转换), 还采取了两种主要Cache方式：Buffer Cache和Page Cache。前者针对磁盘块的读写，后者针对文件inode的读写。这些Cache有效缩短了 I/O系统调用(比如read,write,getdents)的时间。<br />
<br />
如果感兴趣可以进一步参考文件/proc/meminfo，free命令就是根据它的信息生成的。free命令的源码可从procps-xxx-.src.rpm获取，xxx为版本号，比如procps-3.2.3-5.3.src.rpm。<br />
<br />
参考内核代码：<br />
<br />
arch/i386/mm/init.c<br />
fs/proc/proc_misc.c<br />
include/linux/swap.h<br />
mm/filemap.c<br />
fs/buffer.c<br />
<br />
另外还可以参考O'REILLY的书《Understanding the LINUX KERNEL》。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>--显示Linux内核版本号</strong><br />
[root@CentOS4 ~]# uname -a<br />
Linux CentOS4.5 2.6.9-55.ELsmp #1 SMP Wed May 2 14:28:44 EDT 2007 i686 i686 i386 GNU/Linux</p>
<p><strong>--查看Linux内存使用情况</strong><br />
[root@CentOS4 ~]# free<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; used&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; free&nbsp;&nbsp;&nbsp;&nbsp; shared&nbsp;&nbsp;&nbsp; buffers&nbsp;&nbsp;&nbsp;&nbsp; cached<br />
Mem:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1034584&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 71752&nbsp;&nbsp;&nbsp;&nbsp; 962832&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3740&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 35260<br />
-/+ buffers/cache:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32752&nbsp;&nbsp;&nbsp; 1001832<br />
Swap:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1052248&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 1052248</p>]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2007-11-09 15:13:57</wp:post_date>
		<wp:post_date_gmt>2007-11-09 15:13:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lunix%e6%93%8d%e4%bd%9c%e6%8a%80%e5%b7%a7%e4%ba%8c%e7%b3%bb%e7%bb%9f%e8%b4%9f%e8%bd%bd%e6%83%85%e5%86%b5%e4%bc%b0%e7%ae%97%e7%9b%b8%e5%85%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云迁移时遇到一点意外</title>
		<link>http://www.iceskysl.com/?p=154</link>
		<pubDate>Sat, 10 Nov 2007 01:43:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[<p>迁移过程比较顺利，最后解析域名的时候出现一些问题，导致现在域名解析不了，只能等到明天早上才能恢复了，这段时间请大家使用 http://itechtag.i410.cn/ 访问技能云，谢谢。</p>
<p>我们将尽快恢复，给大家带来的不便，还请海涵》。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>迁移过程比较顺利，最后解析域名的时候出现一些问题，导致现在域名解析不了，只能等到明天早上才能恢复了，这段时间请大家使用 http://itechtag.i410.cn/ 访问技能云，谢谢。</p>
<p>我们将尽快恢复，给大家带来的不便，还请海涵》。</p>]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2007-11-10 01:43:48</wp:post_date>
		<wp:post_date_gmt>2007-11-10 01:43:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91%e8%bf%81%e7%a7%bb%e6%97%b6%e9%81%87%e5%88%b0%e4%b8%80%e7%82%b9%e6%84%8f%e5%a4%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>技能云(iTechTag)服务器迁移顺利完成</title>
		<link>http://www.iceskysl.com/?p=155</link>
		<pubDate>Sun, 11 Nov 2007 17:29:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[<p>各位朋友，很高兴的告诉大家，技能云迁移工作顺利完成，期间遇到一些意外（域名迁移比较诡异，域名解析时间比我们预期的时间要长），不过还好，总算顺利迁移完成。</p>
<p>经过很多热心朋友的测试，我们确定新服务器比起原来的服务器速度方面更加令人满意，各方限制（包括带宽、内存等）基本上都不存在了。</p>
<p>以后我们会逐渐完善很多用户反馈的问题，力求这朵&ldquo;技能云&rdquo;开的更加艳丽<img border="0" src="http://blog.1sters.com/images/smiles/laugh.gif" alt="" />。</p>
<p>各位朋友如果发现什么问题，请联系我们解决，谢谢～</p>
<p>联系方式：iceskysl@1sers.com</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>各位朋友，很高兴的告诉大家，技能云迁移工作顺利完成，期间遇到一些意外（域名迁移比较诡异，域名解析时间比我们预期的时间要长），不过还好，总算顺利迁移完成。</p>
<p>经过很多热心朋友的测试，我们确定新服务器比起原来的服务器速度方面更加令人满意，各方限制（包括带宽、内存等）基本上都不存在了。</p>
<p>以后我们会逐渐完善很多用户反馈的问题，力求这朵&ldquo;技能云&rdquo;开的更加艳丽<img border="0" src="http://blog.1sters.com/images/smiles/laugh.gif" alt="" />。</p>
<p>各位朋友如果发现什么问题，请联系我们解决，谢谢～</p>
<p>联系方式：iceskysl@1sers.com</p>]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2007-11-11 17:29:56</wp:post_date>
		<wp:post_date_gmt>2007-11-11 17:29:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e6%9c%8d%e5%8a%a1%e5%99%a8%e8%bf%81%e7%a7%bb%e9%a1%ba%e5%88%a9%e5%ae%8c%e6%88%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[小丘]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogxq@126.com</wp:comment_author_url>
			<wp:comment_author_IP>221.122.57.34</wp:comment_author_IP>
			<wp:comment_date>2007-11-12 18:03:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈。域名慢点啊？
你的域名所有人怎么是 贺州学生网
你哪整的域名啊？
深圳？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>unix定时JOB随笔</title>
		<link>http://www.iceskysl.com/?p=156</link>
		<pubDate>Sun, 11 Nov 2007 18:56:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[<p>0 0 * * * /home/iceskysl/itechtag/backup/automysqlbackup.sh<br />
（每天凌晨0点执行automysqlbackup.sh进行数据备份）</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>0 0 * * * /home/iceskysl/itechtag/backup/automysqlbackup.sh<br />
（每天凌晨0点执行automysqlbackup.sh进行数据备份）</p>]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2007-11-11 18:56:38</wp:post_date>
		<wp:post_date_gmt>2007-11-11 18:56:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unix%e5%ae%9a%e6%97%b6job%e9%9a%8f%e7%ac%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>关于Ruby的Hash和Array的遍历</title>
		<link>http://www.iceskysl.com/?p=157</link>
		<pubDate>Mon, 12 Nov 2007 16:25:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Hach遍历：<br />
&nbsp;&nbsp; h = { &quot;我&quot; =&gt;&quot; 谁呀&quot; , &quot;b&quot; =&gt; 200 }<br />
&nbsp;&nbsp; h.each {|key, value| puts &quot;#{key} is #{value}&quot; }</p>
<p>数组遍历：</p>
<p>&nbsp;&nbsp; b = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]<br />
&nbsp;&nbsp; b.each_with_index{|value, index| puts index.to_s + &quot; - &quot; + value.to_s}<br />
&nbsp;&nbsp; <br />
&nbsp;&nbsp; for i in 0...b.size<br />
&nbsp;&nbsp; puts i.to_s + '---'&nbsp; + b[i].to_s<br />
&nbsp;&nbsp; end</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Hach遍历：<br />
&nbsp;&nbsp; h = { &quot;我&quot; =&gt;&quot; 谁呀&quot; , &quot;b&quot; =&gt; 200 }<br />
&nbsp;&nbsp; h.each {|key, value| puts &quot;#{key} is #{value}&quot; }</p>
<p>数组遍历：</p>
<p>&nbsp;&nbsp; b = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]<br />
&nbsp;&nbsp; b.each_with_index{|value, index| puts index.to_s + &quot; - &quot; + value.to_s}<br />
&nbsp;&nbsp; <br />
&nbsp;&nbsp; for i in 0...b.size<br />
&nbsp;&nbsp; puts i.to_s + '---'&nbsp; + b[i].to_s<br />
&nbsp;&nbsp; end</p>]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2007-11-12 16:25:59</wp:post_date>
		<wp:post_date_gmt>2007-11-12 16:25:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8eruby%e7%9a%84hash%e5%92%8carray%e7%9a%84%e9%81%8d%e5%8e%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Ice]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.144.37.31</wp:comment_author_IP>
			<wp:comment_date>2008-11-06 17:17:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里有篇不错的文章：
http://www.globalnerdy.com/2008/08/01/enumerating-enumerable-enumerableeach_with_index/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hpricot解析XML示例～</title>
		<link>http://www.iceskysl.com/?p=158</link>
		<pubDate>Tue, 13 Nov 2007 13:53:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>来源：http://errtheblog.com/post/8</strong><br />
Given a piece of XML:</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>403276</span><span class="tag">&lt;/</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>Trivet</span><span class="tag">&lt;/</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;/</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>One might assume that REXML is the way to parse it, but we all know how slow it is.<br />
<br />
Enter _why&rsquo;s HTML parser, Hpricot. It&rsquo;s written in C and since XHTML is a subset of XML, there&rsquo;s no reason it shouldn&rsquo;t be able to parse my file.<br />
<br />
Turns out it does, it&rsquo;s really fast, and the code is dead simple.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>FIELDS&nbsp;=&nbsp;%w[SKU&nbsp;ItemName&nbsp;CollectionNo&nbsp;Pages]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;Hpricot.parse(<span class="builtin">File</span><span>.read(</span><span class="string">&quot;my.xml&quot;</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class=""><span>(doc/<span class="symbol">:product</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|xml_product|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product&nbsp;=&nbsp;Product.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;field&nbsp;</span><span class="keyword">in</span><span>&nbsp;FIELDS&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;product[field]&nbsp;=&nbsp;(xml_product/field.intern).first.innerHTML&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product.save&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>Update: Slight refactoring of the code above. Chris figured out last night that you can use innerHTML which eliminated the only ugly part of the code.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>来源：http://errtheblog.com/post/8</strong><br />
Given a piece of XML:</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>403276</span><span class="tag">&lt;/</span><span class="tag-name">SKU</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>Trivet</span><span class="tag">&lt;/</span><span class="tag-name">ItemName</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">CollectionNo</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>0</span><span class="tag">&lt;/</span><span class="tag-name">Pages</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">Product</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;/</span><span class="tag-name">Export</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>One might assume that REXML is the way to parse it, but we all know how slow it is.<br />
<br />
Enter _why&rsquo;s HTML parser, Hpricot. It&rsquo;s written in C and since XHTML is a subset of XML, there&rsquo;s no reason it shouldn&rsquo;t be able to parse my file.<br />
<br />
Turns out it does, it&rsquo;s really fast, and the code is dead simple.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>FIELDS&nbsp;=&nbsp;%w[SKU&nbsp;ItemName&nbsp;CollectionNo&nbsp;Pages]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>doc&nbsp;=&nbsp;Hpricot.parse(<span class="builtin">File</span><span>.read(</span><span class="string">&quot;my.xml&quot;</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class=""><span>(doc/<span class="symbol">:product</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|xml_product|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product&nbsp;=&nbsp;Product.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;field&nbsp;</span><span class="keyword">in</span><span>&nbsp;FIELDS&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;product[field]&nbsp;=&nbsp;(xml_product/field.intern).first.innerHTML&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;product.save&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>Update: Slight refactoring of the code above. Chris figured out last night that you can use innerHTML which eliminated the only ugly part of the code.</p>]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2007-11-13 13:53:29</wp:post_date>
		<wp:post_date_gmt>2007-11-13 13:53:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hpricot%e8%a7%a3%e6%9e%90xml%e7%a4%ba%e4%be%8b%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>统计本星期～</title>
		<link>http://www.iceskysl.com/?p=159</link>
		<pubDate>Wed, 14 Nov 2007 13:09:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<p>raecoo问有没有办法统计一个星期中最受欢迎的文章，我问是&rsquo;标准星期？还是最近7天&lsquo;，他说要的是标准星期，于是感觉这么杨貌似可以，</p>
<p>where scores.updated_at beteen Time.now.moday ... Time.now.sunday order by score</p>
<p>上面只是一个思路示意，开始翻API找相应的函数，无奈的是翻遍API也没找到合适的函数，最后raecoo从MYSQL的函数库中找到几个，给了我一段代码：<br />
where TO_DAYS(NOW()) - TO_DAYS(updated_at) &lt;= 7</p>
<p><em><font face="宋体">MYSQL的TO_DAYS(DATE)函数是这样说明的： 传回DATE到公元0年的总日数</font></em></p>
<p><font face="宋体">貌似不满足需要嘛～这个取出来的还是最近几天的呀，再想想～</font><em><font face="宋体"><br />
</font></em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>raecoo问有没有办法统计一个星期中最受欢迎的文章，我问是&rsquo;标准星期？还是最近7天&lsquo;，他说要的是标准星期，于是感觉这么杨貌似可以，</p>
<p>where scores.updated_at beteen Time.now.moday ... Time.now.sunday order by score</p>
<p>上面只是一个思路示意，开始翻API找相应的函数，无奈的是翻遍API也没找到合适的函数，最后raecoo从MYSQL的函数库中找到几个，给了我一段代码：<br />
where TO_DAYS(NOW()) - TO_DAYS(updated_at) &lt;= 7</p>
<p><em><font face="宋体">MYSQL的TO_DAYS(DATE)函数是这样说明的： 传回DATE到公元0年的总日数</font></em></p>
<p><font face="宋体">貌似不满足需要嘛～这个取出来的还是最近几天的呀，再想想～</font><em><font face="宋体"><br />
</font></em></p>]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2007-11-14 13:09:06</wp:post_date>
		<wp:post_date_gmt>2007-11-14 13:09:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bb%9f%e8%ae%a1%e6%9c%ac%e6%98%9f%e6%9c%9f%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>查看Linux版本命令</title>
		<link>http://www.iceskysl.com/?p=160</link>
		<pubDate>Wed, 14 Nov 2007 17:29:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[<p>时间久了以后，想找出Linux 版本信息来看看，有2个文件里面有保存。<br />
<br />
<strong>cat /etc/redhat-release</strong><br />
Fedora Core release 5 (Bordeaux)<br />
<br />
<strong>cat /etc/issue</strong><br />
Fedora Core release 5 (Bordeaux)<br />
Kernel \r on an \m<br />
<br />
还有内核的版本信息在这里：<br />
<strong>cat /proc/version</strong><br />
<br />
Linux version 2.6.17-1.2145_FC5smp (<a href="mailto:brewbuilder@hs20-bc2-2.build.redhat.com">brewbuilder@hs20-bc2-2.build.redhat.com</a>) (gcc version 4.1.1 20060525 (Red Hat 4.1.1-1)) #1 SMP Sat Jul 1 13:19:14 EDT 2006</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>时间久了以后，想找出Linux 版本信息来看看，有2个文件里面有保存。<br />
<br />
<strong>cat /etc/redhat-release</strong><br />
Fedora Core release 5 (Bordeaux)<br />
<br />
<strong>cat /etc/issue</strong><br />
Fedora Core release 5 (Bordeaux)<br />
Kernel \r on an \m<br />
<br />
还有内核的版本信息在这里：<br />
<strong>cat /proc/version</strong><br />
<br />
Linux version 2.6.17-1.2145_FC5smp (<a href="mailto:brewbuilder@hs20-bc2-2.build.redhat.com">brewbuilder@hs20-bc2-2.build.redhat.com</a>) (gcc version 4.1.1 20060525 (Red Hat 4.1.1-1)) #1 SMP Sat Jul 1 13:19:14 EDT 2006</p>]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2007-11-14 17:29:08</wp:post_date>
		<wp:post_date_gmt>2007-11-14 17:29:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9f%a5%e7%9c%8blinux%e7%89%88%e6%9c%ac%e5%91%bd%e4%bb%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>RoR中操作时间和日期</title>
		<link>http://www.iceskysl.com/?p=161</link>
		<pubDate>Fri, 16 Nov 2007 15:34:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[<p>time = Date.today<br />
<br />
puts &quot;Date.today:&quot; + time.to_s<br />
<br />
puts &quot;----&quot;*20<br />
puts&nbsp;&nbsp; &quot;time.cwday():&quot; + time.cwday().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.cweek():&quot; + time.cweek().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.cwyear():&quot; + time.cwyear().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.mon() :&quot; + time.mon().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.day():&quot; + time.day().to_s&nbsp;&nbsp; <br />
puts &quot;----&quot;*20<br />
<br />
===<br />
selected_mon = params[:mon].to_date.mon()<br />
@tasks = Task.find(:all, :conditions =&gt;[ &quot;MONTH(created_at) = ?&quot;,selected_mon])&nbsp;</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;File&nbsp;src/rails-1.2.3/activesupport/lib/active_support/core_ext/string/conversions.rb,&nbsp;line&nbsp;13</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;to_date&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::Date.<span class="keyword">new</span><span>(*ParseDate.parsedate(</span><span class="keyword">self</span><span>)[0..2])&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
</p>
<p>&nbsp;参考：http://fanqiang.chinaunix.net/a2/b1/20010705/150000802.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>time = Date.today<br />
<br />
puts &quot;Date.today:&quot; + time.to_s<br />
<br />
puts &quot;----&quot;*20<br />
puts&nbsp;&nbsp; &quot;time.cwday():&quot; + time.cwday().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.cweek():&quot; + time.cweek().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.cwyear():&quot; + time.cwyear().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.mon() :&quot; + time.mon().to_s&nbsp;&nbsp; <br />
puts&nbsp;&nbsp; &quot;time.day():&quot; + time.day().to_s&nbsp;&nbsp; <br />
puts &quot;----&quot;*20<br />
<br />
===<br />
selected_mon = params[:mon].to_date.mon()<br />
@tasks = Task.find(:all, :conditions =&gt;[ &quot;MONTH(created_at) = ?&quot;,selected_mon])&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2007-11-16 15:34:21</wp:post_date>
		<wp:post_date_gmt>2007-11-16 15:34:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ror%e4%b8%ad%e6%93%8d%e4%bd%9c%e6%97%b6%e9%97%b4%e5%92%8c%e6%97%a5%e6%9c%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>理解.bash_profile和.bashrc</title>
		<link>http://www.iceskysl.com/?p=162</link>
		<pubDate>Thu, 22 Nov 2007 14:26:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>.bash_profile和.bashrc的什么区别</strong><br />
<strong>&nbsp;/etc/profile:</strong>此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.<br />
并从/etc/profile.d目录的配置文件中搜集shell的设置.<br />
<strong>/etc/bashrc:</strong>为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.<br />
<strong>~/.bash_profile:</strong>每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.<br />
~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该<br />
该文件被读取.<br />
<strong>~/.bash_logout:</strong>当每次退出系统(退出bash shell)时,执行该文件. <br />
另外,/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是&quot;父子&quot;关系.<br />
~/.bash_profile 是交互式、login 方式进入 bash 运行的<br />
~/.bashrc 是交互式 non-login 方式进入 bash 运行的<br />
通常二者设置大致相同，所以通常前者会调用后者。</p>
<p><strong>编辑.bash_profile</strong><br />
编辑你主目录下的.bash_profile文件@&quot;<br />
加上:<br />
alias ls='ls -laF'<br />
保存退出<br />
最后source .bash_profile 使变动生效</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>.bash_profile和.bashrc的什么区别</strong><br />
<strong>&nbsp;/etc/profile:</strong>此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.<br />
并从/etc/profile.d目录的配置文件中搜集shell的设置.<br />
<strong>/etc/bashrc:</strong>为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.<br />
<strong>~/.bash_profile:</strong>每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.<br />
~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该<br />
该文件被读取.<br />
<strong>~/.bash_logout:</strong>当每次退出系统(退出bash shell)时,执行该文件. <br />
另外,/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是&quot;父子&quot;关系.<br />
~/.bash_profile 是交互式、login 方式进入 bash 运行的<br />
~/.bashrc 是交互式 non-login 方式进入 bash 运行的<br />
通常二者设置大致相同，所以通常前者会调用后者。</p>
<p><strong>编辑.bash_profile</strong><br />
编辑你主目录下的.bash_profile文件@&quot;<br />
加上:<br />
alias ls='ls -laF'<br />
保存退出<br />
最后source .bash_profile 使变动生效</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2007-11-22 14:26:29</wp:post_date>
		<wp:post_date_gmt>2007-11-22 14:26:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%90%86%e8%a7%a3-bash_profile%e5%92%8c-bashrc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>自动FTP下载多个文件</title>
		<link>http://www.iceskysl.com/?p=163</link>
		<pubDate>Thu, 22 Nov 2007 17:41:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
<div class="codeText">
<div class="codeHead">SHELL代码</div>
<ol start="1" class="dp-c">
    <li class="alt"><span><span>ftp&nbsp;-i&nbsp;-n&nbsp;10.1.1.1&nbsp;&lt;&lt;YSL&nbsp;&nbsp;</span></span></li>
    <li class=""><span>user&nbsp;username&nbsp;password&nbsp;&nbsp;</span></li>
    <li class="alt"><span>bin&nbsp;&nbsp;</span></li>
    <li class=""><span>hash&nbsp;&nbsp;</span></li>
    <li class="alt"><span>cd&nbsp;some/path/here/datas/&nbsp;&nbsp;</span></li>
    <li class=""><span>#prompt&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mget&nbsp;*<span class="vars">$1</span><span>*&nbsp;&nbsp;</span></span></li>
    <li class=""><span>quit&nbsp;&nbsp;</span></li>
    <li class="alt"><span>YSL&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<div class="codeText">
<div class="codeHead">SHELL代码</div>
<ol start="1" class="dp-c">
    <li class="alt"><span><span>ftp&nbsp;-i&nbsp;-n&nbsp;10.1.1.1&nbsp;&lt;&lt;YSL&nbsp;&nbsp;</span></span></li>
    <li class=""><span>user&nbsp;username&nbsp;password&nbsp;&nbsp;</span></li>
    <li class="alt"><span>bin&nbsp;&nbsp;</span></li>
    <li class=""><span>hash&nbsp;&nbsp;</span></li>
    <li class="alt"><span>cd&nbsp;some/path/here/datas/&nbsp;&nbsp;</span></li>
    <li class=""><span>#prompt&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mget&nbsp;*<span class="vars">$1</span><span>*&nbsp;&nbsp;</span></span></li>
    <li class=""><span>quit&nbsp;&nbsp;</span></li>
    <li class="alt"><span>YSL&nbsp; <br />
    </span></li>
</ol>
</div>]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2007-11-22 17:41:10</wp:post_date>
		<wp:post_date_gmt>2007-11-22 17:41:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%87%aa%e5%8a%a8ftp%e4%b8%8b%e8%bd%bd%e5%a4%9a%e4%b8%aa%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>删除所有.svn目录</title>
		<link>http://www.iceskysl.com/?p=164</link>
		<pubDate>Tue, 27 Nov 2007 21:19:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[<p>当使用了svn版本控制系统后每个目录下都会有一个.svn目录存在，开发完当交付产品或者上传到服务器时一般要把这些目录删除，这里总结了一下在linux和win下的办法。</p>
<p><strong>一、在linux下</strong></p>
<p>删除这些目录是很简单的，命令如下<br />
<br />
find . -type d -name &quot;.svn&quot;|xargs rm -rf</p>
<p>或者</p>
<p>find&nbsp;.&nbsp;-type&nbsp;d&nbsp;-iname&nbsp;&quot;.svn&quot;&nbsp;-exec&nbsp;rm&nbsp;-rf&nbsp;{}&nbsp;\;&nbsp;&nbsp;</p>
<p>全部搞定。(http://tech.techweb.com.cn/redirect.php?fid=26&amp;tid=205673&amp;goto=nextnewset)</p>
<p>&nbsp;</p>
<p><strong>二、在windows下用以下法子：</strong></p>
<div>1、在项目平级的目录，执行dos命令： <br />
xcopy project_dir project_dir_1 /s /i</div>
<p>&nbsp;</p>
<div>2、或者在项目根目录执行以下dos命令 <br />
for /r . %%a in (.) do @if exist &quot;%%a\.svn&quot; rd /s /q &quot;%%a\.svn&quot;</div>
<p>其实第二种方法可以用来干很多事的，比如把代码中的.svn替换为任意其他文件名并在硬盘根目录下执行，就可以从硬盘上删除所有的这个文件啦。</p>
<p>3、加注册表</p>
<p><a href="http://weblogs.asp.net/jgalloway/default.aspx">Jon Galloway</a>提供了一段注册表代码，可以将&rdquo;Delete SVN Folders&rdquo;命名增加到资源管理器的右键上，这样，鼠标点两下就能把选中目录下的所有.svn目录干掉了。Works just great!</p>
<p>代码为：</p>
<pre>Windows Registry Editor Version 5.00<br /><br />[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN]@=&rdquo;<span style="color: rgb(139, 0, 0);">Delete SVN Folders</span>&ldquo;<br /><br />[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN\command]@=&rdquo;<span style="color: rgb(139, 0, 0);">cmd.exe /c \&rdquo;TITLE Removing SVN Folders in %1 &amp;&amp; COLOR 9A &amp;&amp; FOR /r \&rdquo;%1\&rdquo; %%f IN (.svn) DO RD /s /q \&rdquo;%%f\&rdquo; \&rdquo;</span>&ldquo;</pre>
<p>将这段代码保存为一个.reg文件，双击确认导入注册表即可。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>当使用了svn版本控制系统后每个目录下都会有一个.svn目录存在，开发完当交付产品或者上传到服务器时一般要把这些目录删除，这里总结了一下在linux和win下的办法。</p>
<p><strong>一、在linux下</strong></p>
<p>删除这些目录是很简单的，命令如下<br />
<br />
find . -type d -name &quot;.svn&quot;|xargs rm -rf</p>
<p>或者</p>
<p>find&nbsp;.&nbsp;-type&nbsp;d&nbsp;-iname&nbsp;&quot;.svn&quot;&nbsp;-exec&nbsp;rm&nbsp;-rf&nbsp;{}&nbsp;\;&nbsp;&nbsp;</p>
<p>全部搞定。(http://tech.techweb.com.cn/redirect.php?fid=26&amp;tid=205673&amp;goto=nextnewset)</p>
<p><strong>二、在windows下用以下法子：</strong></p>
<div>1、在项目平级的目录，执行dos命令： <br />
xcopy project_dir project_dir_1 /s /i</div>
<p>&nbsp;</p>
<div>2、或者在项目根目录执行以下dos命令 <br />
for /r . %%a in (.) do @if exist &quot;%%a\.svn&quot; rd /s /q &quot;%%a\.svn&quot;</div>
<p>其实第二种方法可以用来干很多事的，比如把代码中的.svn替换为任意其他文件名并在硬盘根目录下执行，就可以从硬盘上删除所有的这个文件啦。</p>
<p>3、加注册表</p>
<p><a href="http://weblogs.asp.net/jgalloway/default.aspx">Jon Galloway</a>提供了一段注册表代码，可以将&rdquo;Delete SVN Folders&rdquo;命名增加到资源管理器的右键上，这样，鼠标点两下就能把选中目录下的所有.svn目录干掉了。Works just great!</p>
<p>代码为：</p>
<pre>Windows Registry Editor Version 5.00<br /><br />[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN]@=&rdquo;<span style="color: rgb(139, 0, 0);">Delete SVN Folders</span>&ldquo;<br /><br />[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\DeleteSVN\command]@=&rdquo;<span style="color: rgb(139, 0, 0);">cmd.exe /c \&rdquo;TITLE Removing SVN Folders in %1 &amp;&amp; COLOR 9A &amp;&amp; FOR /r \&rdquo;%1\&rdquo; %%f IN (.svn) DO RD /s /q \&rdquo;%%f\&rdquo; \&rdquo;</span>&ldquo;</pre>
<p>将这段代码保存为一个.reg文件，双击确认导入注册表即可。</p>]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2007-11-27 21:19:59</wp:post_date>
		<wp:post_date_gmt>2007-11-27 21:19:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%a0%e9%99%a4%e6%89%80%e6%9c%89-svn%e7%9b%ae%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[衣服上的]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.108.19.186</wp:comment_author_IP>
			<wp:comment_date>2009-01-23 13:32:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[svn export 就是干这事的吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.130.158</wp:comment_author_IP>
			<wp:comment_date>2009-01-23 18:04:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不是哦。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>增加Feeds抓起功能</title>
		<link>http://www.iceskysl.com/?p=165</link>
		<pubDate>Tue, 04 Dec 2007 23:58:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[<p>为了让大家了解我们的成员都在干什么,也为了反应成员的动态，我们为1sters.com开发了Feeds抓取、展示的功能，会定时刷新，取每个成员的blog内容，详细的大家可以到<a href="http://1sters.com">1sters.com</a>站的，点击上面的&ldquo;Feeds&rdquo;标签。 <br />
也就是如下这个地址：<a href="http://www.1sters.com/feeds ">http://www.1sters.com/feeds </a><br />
有什么建议啥的，情告诉我。 <br />
我们正准备给技能云(<a href="http://www.iTechTag.com">iTechTag</a>)加上这个功能，用来展示每个用户写的blog、文章等。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>为了让大家了解我们的成员都在干什么,也为了反应成员的动态，我们为1sters.com开发了Feeds抓取、展示的功能，会定时刷新，取每个成员的blog内容，详细的大家可以到<a href="http://1sters.com/">1sters.com</a>站的，点击上面的&ldquo;Feeds&rdquo;标签。 <br />
也就是如下这个地址：<a href="http://www.1sters.com/feeds">http://www.1sters.com/feeds </a><br />
有什么建议啥的，情告诉我。 <br />
我们正准备给技能云(<a href="http://www.itechtag.com/">iTechTag</a>)加上这个功能，用来展示每个用户写的blog、文章等。。</p>]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2007-12-04 23:58:36</wp:post_date>
		<wp:post_date_gmt>2007-12-04 23:58:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a2%9e%e5%8a%a0feeds%e6%8a%93%e8%b5%b7%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>RSS和ATOM的版本和规范</title>
		<link>http://www.iceskysl.com/?p=166</link>
		<pubDate>Thu, 06 Dec 2007 09:37:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于需要在技能云(iTechTag.com)添加mash-up用户写过的文章（blog），于是写了一个自动探测用户提供的地址的RSS地址以及其附带的一些属性和其下的blog内容，由于之前只看了RSS2.0的规范，所以写的都是兼容RSS2.0的，测试了一把也相当顺利；</p>
<p>然后再测试透明的blog内容，无奈的是什么都检测不到，后来看了下他的塬，发现是ATOM的，以前倒是晓得RSS和ATOM，也晓得其不是很兼容，但不晓得差别这么大，看来还需要写一份解析ATOM的了。</p>
<p><strong>附录几个问题：</strong></p>
<p>1、怎么判断RSS是RSS2.0规范还是微软的SSE,还是Atom的XML格式？</p>
<p>文件头部&nbsp; <br />
RSS&nbsp;&nbsp; 2.0 判断&lt;rss&nbsp;&nbsp; version=&quot;2.0&quot;&gt;&nbsp; <br />
atom&nbsp; 判断&lt;feed&nbsp;&nbsp; xmlns=&quot;http://www.w3.org/2005/Atom&quot;&gt;</p>
<p>2、几个有用的文章</p>
<p><strong>RSS 简介</strong>：http://www.ibm.com/developerworks/cn/xml/x-rssintro/</p>
<p><strong>Atom 规范及中文翻译 附：ATOM规范英文原版</strong>&nbsp; http://hi.baidu.com/liberty88/blog/item/f5dd1db3decde1a7d8335a12.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于需要在技能云(iTechTag.com)添加mash-up用户写过的文章（blog），于是写了一个自动探测用户提供的地址的RSS地址以及其附带的一些属性和其下的blog内容，由于之前只看了RSS2.0的规范，所以写的都是兼容RSS2.0的，测试了一把也相当顺利；</p>
<p>然后再测试透明的blog内容，无奈的是什么都检测不到，后来看了下他的塬，发现是ATOM的，以前倒是晓得RSS和ATOM，也晓得其不是很兼容，但不晓得差别这么大，看来还需要写一份解析ATOM的了。</p>
<p><strong>附录几个问题：</strong></p>
<p>1、怎么判断RSS是RSS2.0规范还是微软的SSE,还是Atom的XML格式？</p>
<p>文件头部&nbsp; <br />
RSS&nbsp;&nbsp; 2.0 判断&lt;rss&nbsp;&nbsp; version=&quot;2.0&quot;&gt;&nbsp; <br />
atom&nbsp; 判断&lt;feed&nbsp;&nbsp; xmlns=&quot;http://www.w3.org/2005/Atom&quot;&gt;</p>
<p>2、几个有用的文章</p>
<p><strong>RSS 简介</strong>：http://www.ibm.com/developerworks/cn/xml/x-rssintro/</p>
<p><strong>Atom 规范及中文翻译 附：ATOM规范英文原版</strong>&nbsp; http://hi.baidu.com/liberty88/blog/item/f5dd1db3decde1a7d8335a12.html</p>]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2007-12-06 09:37:54</wp:post_date>
		<wp:post_date_gmt>2007-12-06 09:37:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rss%e5%92%8catom%e7%9a%84%e7%89%88%e6%9c%ac%e5%92%8c%e8%a7%84%e8%8c%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>用Ruby实现抓取ATOM格式的feed～</title>
		<link>http://www.iceskysl.com/?p=167</link>
		<pubDate>Fri, 07 Dec 2007 13:47:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前几天写完了技能云上抓取用户RSS2.0的feed的功能，紧接着需要实现抓取ATOM格式的，如下是随手做的几个小测试，代码如下：</p>
<p>&nbsp;require 'hpricot'<br />
&nbsp;require 'open-uri'<br />
&nbsp;<br />
doc = open(&quot;http://gigix.thoughtworkers.org/feed/atom.xml&quot;) do |f|<br />
&nbsp;&nbsp; Hpricot.XML(f)<br />
&nbsp;end<br />
&nbsp;<br />
puts rel = doc.search(&quot;//feed&quot;).first[:xmlns].downcase<br />
&nbsp;<br />
&nbsp;puts root = doc.root.name<br />
&nbsp;<br />
puts feed_title = (doc/:feed/:title).first.inner_html<br />
puts feed_id = (doc/:feed/:id).first.inner_html<br />
puts rel = doc.search(&quot;//link[@rel='alternate']&quot;).first[:href].downcase<br />
puts rel = doc.search(&quot;//link[@rel='self']&quot;).first[:href].downcase<br />
puts feed_generator = (doc/:feed/:generator).first.inner_html<br />
puts feed_rights = (doc/:feed/:rights).first.inner_html<br />
<br />
puts feed_updated = (doc/:feed/:updated).first.inner_html<br />
puts feed_link = (doc/:feed/:link).first[:href].downcase<br />
puts feed_link = (doc/:feed/:link).first[:href].downcase<br />
&nbsp;<br />
<br />
&nbsp;(doc/:entry).each do |item|<br />
&nbsp;#puts author = (item/:author/:name).inner_html<br />
&nbsp;&nbsp; #puts title = (item/:title).inner_html<br />
&nbsp;&nbsp; #puts link = (item/:link).first[:href].downcase<br />
&nbsp; # rel = doc.search(&quot;//link[@rel='alternate']&quot;).first[:href].downcase<br />
&nbsp;&nbsp; #puts id = (item/:id).inner_html<br />
&nbsp;&nbsp; #puts date = (item/:published).inner_html<br />
&nbsp;&nbsp; #puts updated = (item/:updated).inner_html<br />
&nbsp;&nbsp; #puts content = (item/:content).inner_html<br />
&nbsp;end</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天写完了技能云上抓取用户RSS2.0的feed的功能，紧接着需要实现抓取ATOM格式的，如下是随手做的几个小测试，代码如下：</p>
<p>&nbsp;require 'hpricot'<br />
&nbsp;require 'open-uri'<br />
&nbsp;<br />
doc = open(&quot;http://gigix.thoughtworkers.org/feed/atom.xml&quot;) do |f|<br />
&nbsp;&nbsp; Hpricot.XML(f)<br />
&nbsp;end<br />
&nbsp;<br />
puts rel = doc.search(&quot;//feed&quot;).first[:xmlns].downcase<br />
&nbsp;<br />
&nbsp;puts root = doc.root.name<br />
&nbsp;<br />
puts feed_title = (doc/:feed/:title).first.inner_html<br />
puts feed_id = (doc/:feed/:id).first.inner_html<br />
puts rel = doc.search(&quot;//link[@rel='alternate']&quot;).first[:href].downcase<br />
puts rel = doc.search(&quot;//link[@rel='self']&quot;).first[:href].downcase<br />
puts feed_generator = (doc/:feed/:generator).first.inner_html<br />
puts feed_rights = (doc/:feed/:rights).first.inner_html<br />
<br />
puts feed_updated = (doc/:feed/:updated).first.inner_html<br />
puts feed_link = (doc/:feed/:link).first[:href].downcase<br />
puts feed_link = (doc/:feed/:link).first[:href].downcase<br />
&nbsp;<br />
<br />
&nbsp;(doc/:entry).each do |item|<br />
&nbsp;#puts author = (item/:author/:name).inner_html<br />
&nbsp;&nbsp; #puts title = (item/:title).inner_html<br />
&nbsp;&nbsp; #puts link = (item/:link).first[:href].downcase<br />
&nbsp; # rel = doc.search(&quot;//link[@rel='alternate']&quot;).first[:href].downcase<br />
&nbsp;&nbsp; #puts id = (item/:id).inner_html<br />
&nbsp;&nbsp; #puts date = (item/:published).inner_html<br />
&nbsp;&nbsp; #puts updated = (item/:updated).inner_html<br />
&nbsp;&nbsp; #puts content = (item/:content).inner_html<br />
&nbsp;end</p>]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2007-12-07 13:47:12</wp:post_date>
		<wp:post_date_gmt>2007-12-07 13:47:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8ruby%e5%ae%9e%e7%8e%b0%e6%8a%93%e5%8f%96atom%e6%a0%bc%e5%bc%8f%e7%9a%84feed%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中定期清理垃圾数据</title>
		<link>http://www.iceskysl.com/?p=168</link>
		<pubDate>Sat, 08 Dec 2007 23:54:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[<p>linux上用来清除长时不用的session的cron命令：<br />
$RAILS_APP_DIR/script/runner 'ActiveRecord::Base.connection.delete(&quot;DELETE FROM sessions WHERE updated_at &lt; now() - INTERVAL 1 HOUR&quot;)<br />
<br />
参考：<br />
http://rubyasylum.com/articles/2006/06/04/cron-job-tips-for-rails<br />
http://www.cslog.cn/articles/search?q=sessions</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>linux上用来清除长时不用的session的cron命令：<br />
$RAILS_APP_DIR/script/runner 'ActiveRecord::Base.connection.delete(&quot;DELETE FROM sessions WHERE updated_at &lt; now() - INTERVAL 1 HOUR&quot;)<br />
<br />
参考：<br />
http://rubyasylum.com/articles/2006/06/04/cron-job-tips-for-rails<br />
http://www.cslog.cn/articles/search?q=sessions</p>]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2007-12-08 23:54:19</wp:post_date>
		<wp:post_date_gmt>2007-12-08 23:54:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%ae%9a%e6%9c%9f%e6%b8%85%e7%90%86%e5%9e%83%e5%9c%be%e6%95%b0%e6%8d%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_5e2b39de2da34afa37bc36e192adb1f1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails中的定期JOB的实现方式。</title>
		<link>http://www.iceskysl.com/?p=169</link>
		<pubDate>Sat, 08 Dec 2007 23:57:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[<p>大概总结一下，有如下几种方式：</p>
<p>1、Thread based scheduler（sleep）</p>
<p>2、Flexible scheduling in Ruby（<a href="http://openwferu.rubyforge.org/">OpenWFEru</a> ）</p>
<p>3、BackgrounDRB</p>
<p>参考：</p>
<p>http://www.igvita.com/blog/2007/03/29/scheduling-tasks-in-ruby-rails/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大概总结一下，有如下几种方式：</p>
<p>1、Thread based scheduler（sleep）</p>
<p>2、Flexible scheduling in Ruby（<a href="http://openwferu.rubyforge.org/">OpenWFEru</a> ）</p>
<p>3、BackgrounDRB</p>
<p>参考：</p>
<p>http://www.igvita.com/blog/2007/03/29/scheduling-tasks-in-ruby-rails/</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2007-12-08 23:57:56</wp:post_date>
		<wp:post_date_gmt>2007-12-08 23:57:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e4%b8%ad%e7%9a%84%e5%ae%9a%e6%9c%9fjob%e7%9a%84%e5%ae%9e%e7%8e%b0%e6%96%b9%e5%bc%8f%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>将会试试FeedTools的功能</title>
		<link>http://www.iceskysl.com/?p=170</link>
		<pubDate>Wed, 12 Dec 2007 13:03:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于需要抽时间重新1st的站点，按照我设想的模式，会抓取指定的RSS功能，以前都是自己写的，前些日志看到ruby有个gem，可以找时间试试，</p>
<p>FeedTools is a simple Ruby library for handling rss, atom, and cdf parsing, generation, and translation as well as caching. It attempts to adhere to Postel&rsquo;s law&mdash;i.e. a liberal parsing and conservative generation policy.</p>
<p><strong>参考如下2篇文章：</strong></p>
<p>http://sporkmonger.com/projects/feedtools/</p>
<p>http://sporkmonger.com/2005/08/11/tutorial</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于需要抽时间重新1st的站点，按照我设想的模式，会抓取指定的RSS功能，以前都是自己写的，前些日志看到ruby有个gem，可以找时间试试，</p>
<p>FeedTools is a simple Ruby library for handling rss, atom, and cdf parsing, generation, and translation as well as caching. It attempts to adhere to Postel&rsquo;s law&mdash;i.e. a liberal parsing and conservative generation policy.</p>
<p><strong>参考如下2篇文章：</strong></p>
<p>http://sporkmonger.com/projects/feedtools/</p>
<p>http://sporkmonger.com/2005/08/11/tutorial</p>]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2007-12-12 13:03:29</wp:post_date>
		<wp:post_date_gmt>2007-12-12 13:03:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%86%e4%bc%9a%e8%af%95%e8%af%95feedtools%e7%9a%84%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Scrot -- ubuntu/Linux 下一个很好用抓屏截图工具</title>
		<link>http://www.iceskysl.com/?p=171</link>
		<pubDate>Sat, 15 Dec 2007 23:54:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[<p><font size="5" color="#ff00ff">ubuntu</font> 下 gnome 自带的截图工具其实也还不错，有快捷键，可以在命令行下用 --window 的方式指定对某窗进行截图，也可以使用 --border 来指定是否包含窗体边框，甚至可以有阴影。但我还是不满意，因为我经常需要用鼠标划定一个范围来截图，GNOME自带的就没法做到了。<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#3366ff">Scrot</font>，也是一个命令行下使用的截图工具，支持全屏、窗口、选取、多设备、缩略图、延时，甚至可以截图完毕之后指定某程序打开截好的图片。<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#ff0000">* </font><font color="#800080">其他非</font> <font color="#ff00ff">ubuntu</font> <font color="#800080">系统，你可以在</font> [<a target="_blank" href="http://linuxbrit.co.uk/scrot/">这里</a>] <font color="#800080">下载到这款截图工具。</font><br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <strong><font size="4">安装：</font></strong>  <br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    可以打开新立得搜索 scrot 并安装，也可以在终端：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000"><span style="background-color: rgb(204, 255, 204);"> </span></font><font color="#008080" style="background-color: rgb(204, 255, 204);">sudo apt-get install scrot</font><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    来进行安装。<br />
<br />
<font size="4"> <strong>Scrot 使用：</strong></font><br />
<font color="#ff0000">-----------------------------------------------------------------------------------------------------------------------</font><br />
<font color="#000000">概要<br />
scrot [options] [file]<br />
<br />
描述<br />
scrot 是一个使用 imlib2 库截取屏幕和保存图像的的工具。<br />
选项 [file] 指定截图保存的文件名。 如果 [file] 没有指定，<br />
截图就会以当前的日期和时间为文件名保存在当前目录中。<br />
<br />
选项<br />
-h, --help<br />
显示帮助并且退出<br />
-v, --version<br />
显示版本信息并且退出<br />
-b, --border<br />
当选择一个窗口时，同时包含窗口边框。<br />
-c, --count<br />
延时时的显示倒计时<br />
-d, --delay NUM<br />
延时 NUM 秒<br />
-e, --exec APP<br />
对保存的图像执行程序 APP<br />
-q, --quality NUM<br />
图像质量 (1-100) 值大意味着文件大， 压缩率低。<br />
-m, --multidisp<br />
对多个显示设备分别截图并且连接在一起。<br />
-s, --select<br />
用鼠标交互式的选择一个窗口或者区域。<br />
-t, --thumb NUM<br />
同时生成缩略图。 NUM 是缩略图的百分比。<br />
<br />
说明符<br />
--exec 和 文件名可以使用可以被 scrot 扩充的格式说明符。有两种类型的<br />
说明符。 '%' 前导的说明符由 strfile(2) 来解释。例程可以查看 strftile<br />
手册。这些选项用来引用当前的日期。第二种说明符由 scort 内部解释并且<br />
使用前缀 '$'. 可以识别的说明符如下:<br />
$f 图像的路径/文件名 (如果在文件名中就会忽略)<br />
$n 图像文件名 (如果在文件名中会被忽略)<br />
$s 图像大小(字节数) (如果在文件名会被忽略)<br />
$p 图像像素大小<br />
$w 图像宽度<br />
$h 图像高度<br />
$t 图像格式<br />
$$ 打印字符 '$'<br />
n 打印新行 (如果在文件名中会被忽略)</font><br />
<font color="#ff0000">-----------------------------------------------------------------------------------------------------------------------</font><br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;<strong><font size="4">  例子(~ 用户主目录)：</font></strong><br />
1、对全屏截图并保存文件名：<br />
<font color="#3366ff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    scrot ~/abc.png<br />
<br />
<font color="#000000">2、抓取窗口，b 参数表示带边框窗体，s 用户可以指定窗口：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#3366ff">scrot -bs ~/abc.png</font><br />
<br />
3、抓取鼠标选定区域：<br />
</font></font><font color="#3366ff"><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#339966"> <font color="#3366ff">scrot -s ~/abc.png</font></font><br />
<br />
4、延时抓取，d 表示延时，c 倒计时，10 是秒，抓菜单等其他东西时很好用：<br />
</font></font><font color="#3366ff"><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#3366ff">scrot -cd 10 ~/abc.png</font><br />
<br />
5、生成缩略图，t 表示要生成缩略图， 20% 表示缩略图的比例， s 表示截取用户划定区域：<br />
</font></font><font color="#3366ff"><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#3366ff">scrot -t 20% -s ~/abc.png</font><br />
<br />
6、启用某项操作 s 划定截图，-e 采用某项行为，这里用 gimp 打开截图图片，<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#339966"> <font color="#3366ff">scrot -s ~/abc.png -e 'gimp $f'</font></font></font></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><font size="5" color="#ff00ff">ubuntu</font> 下 gnome 自带的截图工具其实也还不错，有快捷键，可以在命令行下用 --window 的方式指定对某窗进行截图，也可以使用 --border 来指定是否包含窗体边框，甚至可以有阴影。但我还是不满意，因为我经常需要用鼠标划定一个范围来截图，GNOME自带的就没法做到了。<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#3366ff">Scrot</font>，也是一个命令行下使用的截图工具，支持全屏、窗口、选取、多设备、缩略图、延时，甚至可以截图完毕之后指定某程序打开截好的图片。<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <font color="#ff0000">* </font><font color="#800080">其他非</font> <font color="#ff00ff">ubuntu</font> <font color="#800080">系统，你可以在</font> [<a target="_blank" href="http://linuxbrit.co.uk/scrot/">这里</a>] <font color="#800080">下载到这款截图工具。</font><br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <strong><font size="4">安装：</font></strong>  <br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    可以打开新立得搜索 scrot 并安装，也可以在终端：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000"><span style="background-color: rgb(204, 255, 204);"> </span></font><font color="#008080" style="background-color: rgb(204, 255, 204);">sudo apt-get install scrot</font><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    来进行安装。</p>]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2007-12-15 23:54:42</wp:post_date>
		<wp:post_date_gmt>2007-12-15 23:54:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scrot-ubuntulinux-%e4%b8%8b%e4%b8%80%e4%b8%aa%e5%be%88%e5%a5%bd%e7%94%a8%e6%8a%93%e5%b1%8f%e6%88%aa%e5%9b%be%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Cheap wedding dresses]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressiton.com</wp:comment_author_url>
			<wp:comment_author_IP>126.15.0.82</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 12:26:08</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 04:26:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap wedding dresses...</strong>

[...]Scrot &#8212; ubuntu/Linux 下一个很好用抓屏截图工具[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[bilo weekly ad]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://biloweeklyad.com</wp:comment_author_url>
			<wp:comment_author_IP>66.30.173.212</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 14:08:27</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 06:08:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bilo weekly ad...</strong>

[...]Scrot &#8212; ubuntu/Linux 下一个很好用抓屏截图工具[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.142</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 16:57:29</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 08:57:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren outlet...</strong>

[...]Scrot &#8212; ubuntu/Linux 下一个很好用抓屏截图工具[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>技能云(iTechTag)完成重大升级</title>
		<link>http://www.iceskysl.com/?p=172</link>
		<pubDate>Sun, 16 Dec 2007 22:42:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这个周末是个疯狂的周末，我自己都不记得给<strong>技能云</strong>增加了多少新功能;完善了多少个不如意的地方，让我大概的回想一下吧：<br />
1、增加站内导航条的设计和实现（这个方法实在太棒了，重用了页面的一块区域，相当不错）<br />
2、增加了feed内容查看功能，也就是说，可以在技能云直接查看您提交的feed上的blos内容了，完成定时同步功能，相当漂亮。<br />
3、完善了用户界面的展示内容，现在展示的内容更加丰富合理了。<br />
4、添加公司（企业）信息维护，展示页面，社区话题等，可以维护企业的信息，和大家讨论的话题了，更清晰的认识这个企业。<br />
5、还有什么？想不起来了，貌似还有不少，这就是这个周末的劳动成果，真的，相当不错。<br />
现在的技能云，内容更加丰富，从多个方面展示一个软件开发者和企业、技能、角色等方面。目前来看，正在一步步的影响着软件开发者社区，希望有一天，技能云可以成长为参天大树。<br />
一个软件开发者的展示个人技能，其他相关信息分享的大平台。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这个周末是个疯狂的周末，我自己都不记得给<strong>技能云</strong>增加了多少新功能;完善了多少个不如意的地方，让我大概的回想一下吧：<br />
1、增加站内导航条的设计和实现（这个方法实在太棒了，重用了页面的一块区域，相当不错）<br />
2、增加了feed内容查看功能，也就是说，可以在技能云直接查看您提交的feed上的blos内容了，完成定时同步功能，相当漂亮。<br />
3、完善了用户界面的展示内容，现在展示的内容更加丰富合理了。<br />
4、添加公司（企业）信息维护，展示页面，社区话题等，可以维护企业的信息，和大家讨论的话题了，更清晰的认识这个企业。<br />
5、还有什么？想不起来了，貌似还有不少，这就是这个周末的劳动成果，真的，相当不错。<br />
现在的技能云，内容更加丰富，从多个方面展示一个软件开发者和企业、技能、角色等方面。目前来看，正在一步步的影响着软件开发者社区，希望有一天，技能云可以成长为参天大树。<br />
一个软件开发者的展示个人技能，其他相关信息分享的大平台。。</p>]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2007-12-16 22:42:52</wp:post_date>
		<wp:post_date_gmt>2007-12-16 22:42:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e8%83%bd%e4%ba%91itechtag%e5%ae%8c%e6%88%90%e9%87%8d%e5%a4%a7%e5%8d%87%e7%ba%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.15.186</wp:comment_author_IP>
			<wp:comment_date>2007-12-18 19:34:59</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[支持一个！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在ubuntu下配置使用nginx+mogrel跑Rails集群.</title>
		<link>http://www.iceskysl.com/?p=173</link>
		<pubDate>Sun, 16 Dec 2007 22:57:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=173</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前就曾经关注过nginx（一个俄罗斯人开发的HTTP服务器），看过一些中文和英文文档，觉得相当棒的一个服务器，但是一直没亲自试试其威力如何，这个周末写了不少代码，自己也都很满意，于是周日晚上准备休息下，顺便亲自试试nginx。</p>
<p>按照我对rails服务构架部署的理解，在我本本上是ubuntu系统，由于一直订阅了mogrel的邮件列表，所以对其相当看好和喜欢，于是这次就把这两个接合起来。</p>
<p>大概的架构是nginx在前面充当HTTP代理，同时处理一些静态的资源文件（比如图片，JS，CSS等），WEB请求直接到nginx后，将ruby的内容转到后端的mogrel处理;而mogrel采取集群的方式，可以自己设定需要启动的进程数（虽然以前说mogrel是非多线程的，但是从我现在跑的技能云的效果来看，一个实例都可以支撑相当的请求了），这样就形成一个前端nginx，后端mogrel的部署构架。</p>
<p>其他不在多说，网上资源相当丰富，从我试验的效果看，虽然没有刻意调优的等操作，但是其配置等都相当简介明了，用起来也相当放心。</p>
<p>如果以后有了自己的服务器，我肯定选择这个方式跑Rails应用。</p>
<p>如下是我在这个过程中google到的参考资料，各有侧重，请需要的朋友自己筛选需要的信息：</p>
<p>1、http://blackanger.blog.51cto.com/140924/40089</p>
<p>2、nginx官方：http://nginx.net/</p>
<p>3、英文wiki：http://wiki.codemongers.com/NginxGettingStarted</p>
<p>4、javaeye上有一篇：http://yangzx.javaeye.com/blog/105869</p>
<p>5、有部分中文wiki：http://wiki.codemongers.com/NginxChsWhyUseIt</p>
<p>如果您对nginx、rails、mogrel等有自己的见解，欢迎分享。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前就曾经关注过nginx（一个俄罗斯人开发的HTTP服务器），看过一些中文和英文文档，觉得相当棒的一个服务器，但是一直没亲自试试其威力如何，这个周末写了不少代码，自己也都很满意，于是周日晚上准备休息下，顺便亲自试试nginx。</p>
<p>按照我对rails服务构架部署的理解，在我本本上是ubuntu系统，由于一直订阅了mogrel的邮件列表，所以对其相当看好和喜欢，于是这次就把这两个接合起来。</p>
<p>大概的架构是nginx在前面充当HTTP代理，同时处理一些静态的资源文件（比如图片，JS，CSS等），WEB请求直接到nginx后，将 ruby的内容转到后端的mogrel处理;而mogrel采取集群的方式，可以自己设定需要启动的进程数（虽然以前说mogrel是非多线程的，但是从 我现在跑的技能云的效果来看，一个实例都可以支撑相当的请求了），这样就形成一个前端nginx，后端mogrel的部署构架。</p>
<p>其他不在多说，网上资源相当丰富，从我试验的效果看，虽然没有刻意调优的等操作，但是其配置等都相当简介明了，用起来也相当放心。</p>
<p>如果以后有了自己的服务器，我肯定选择这个方式跑Rails应用。</p>
<p>如下是我在这个过程中google到的参考资料，各有侧重，请需要的朋友自己筛选需要的信息：</p>
<p>1、http://blackanger.blog.51cto.com/140924/40089</p>
<p>2、nginx官方：http://nginx.net/</p>
<p>3、英文wiki：http://wiki.codemongers.com/NginxGettingStarted</p>
<p>4、javaeye上有一篇：http://yangzx.javaeye.com/blog/105869</p>
<p>5、有部分中文wiki：http://wiki.codemongers.com/NginxChsWhyUseIt</p>
<p>如果您对nginx、rails、mogrel等有自己的见解，欢迎分享。</p>]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2007-12-16 22:57:52</wp:post_date>
		<wp:post_date_gmt>2007-12-16 22:57:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ubuntu%e4%b8%8b%e9%85%8d%e7%bd%ae%e4%bd%bf%e7%94%a8nginxmogrel%e8%b7%91rails%e9%9b%86%e7%be%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[ash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ashchan@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>124.126.32.88</wp:comment_author_IP>
			<wp:comment_date>2008-01-04 17:35:16</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我已经在生产环境中使用nginx和mongrel cluster作前后端数月，效果令人非常满意。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.83.148</wp:comment_author_IP>
			<wp:comment_date>2008-01-06 00:36:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恩的，我在本地测试的效果也相当不错。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>DH要升级Rails了。</title>
		<link>http://www.iceskysl.com/?p=174</link>
		<pubDate>Tue, 18 Dec 2007 09:18:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早上看RSS订阅的时候，发现DH有一则公告，仔细看了下，原来其准备升级到Rails2.0.2版本了，看来Rails2的时代以及来临了，引起原话如下：</p>
<div class="entry-body">
<div id=""><ins class="item-body">
<div>
<p><font size="5"><strong>&ldquo;</strong></font>Just when I thought it was safe to upgrade, another version appears!</p>
<p>I&rsquo;m going to start upgrading our servers to Rails 2.0.2. This involves packaging, testing, and then slowly rolling it out. The jump is to a 2.x version from 1.2.6, so I&rsquo;m going to take my time with this one to make sure nothing goes horribly wrong, so it might be right after the new year when it&rsquo;s all done, just to be safe.</p>
<p>For your new year&rsquo;s resolution, you will freeze your rails! Login via shell, and in your rails directory, run &ldquo;rake freeze_gems&rdquo; - that should do the trick!</p>
<p>Please contact support if you have any questions or concerns.<strong><font size="5">&rdquo;</font></strong></p>
</div>
</ins></div>
</div>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早上看RSS订阅的时候，发现DH有一则公告，仔细看了下，原来其准备升级到Rails2.0.2版本了，看来Rails2的时代以及来临了，引起原话如下：</p>
<div class="entry-body">
<div id=""><ins class="item-body">
<div>
<p><font size="5"><strong>&ldquo;</strong></font>Just when I thought it was safe to upgrade, another version appears!</p>
<p>I&rsquo;m going to start upgrading our servers to Rails 2.0.2. This involves packaging, testing, and then slowly rolling it out. The jump is to a 2.x version from 1.2.6, so I&rsquo;m going to take my time with this one to make sure nothing goes horribly wrong, so it might be right after the new year when it&rsquo;s all done, just to be safe.</p>
<p>For your new year&rsquo;s resolution, you will freeze your rails! Login via shell, and in your rails directory, run &ldquo;rake freeze_gems&rdquo; - that should do the trick!</p>
<p>Please contact support if you have any questions or concerns.<strong><font size="5">&rdquo;</font></strong></p>
</div>
</ins></div>
</div>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2007-12-18 09:18:51</wp:post_date>
		<wp:post_date_gmt>2007-12-18 09:18:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dh%e8%a6%81%e5%8d%87%e7%ba%a7rails%e4%ba%86%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Google Chart Gem</title>
		<link>http://www.iceskysl.com/?p=175</link>
		<pubDate>Fri, 21 Dec 2007 13:24:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[<p>ruby的世界真的很活跃，前不久，在infoQ上看到有人介绍了google的chart功能，自己也花了点点时间，给技能云加上这个功能，可以 在这里（http://www.itechtag.com/widget/index）看到效果，也在想，可以把这个包装成一个gem，由于最近技能云进 行不少功能的开发，就暂时搁浅了；</p>
<p>中午看RSS发现，已经有人做了这个事情，而且做的相当棒，和我当初想法一样，而且有2个，呵呵，大家可以参考：</p>
<p>http://railsontherun.com/2007/12/10/google-chart-gem</p>
<p>http://code.google.com/p/gchartrb/</p>
<p>这个小功能真的相当好用，极力推荐～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>ruby的世界真的很活跃，前不久，在infoQ上看到有人介绍了google的chart功能，自己也花了点点时间，给技能云加上这个功能，可以在这里（http://www.itechtag.com/widget/index）看到效果，也在想，可以把这个包装成一个gem，由于最近技能云进行不少功能的开发，就暂时搁浅了；</p>
<p>中午看RSS发现，已经有人做了这个事情，而且做的相当棒，和我当初想法一样，而且有2个，呵呵，大家可以参考：</p>
<p>http://railsontherun.com/2007/12/10/google-chart-gem</p>
<p>http://code.google.com/p/gchartrb/</p>
<p>这个小功能真的相当好用，极力推荐～</p>]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2007-12-21 13:24:01</wp:post_date>
		<wp:post_date_gmt>2007-12-21 13:24:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-chart-gem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[liuting201]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.46.136</wp:comment_author_IP>
			<wp:comment_date>2007-12-23 18:40:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[favorits
http://www.itechtag.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中定制logger</title>
		<link>http://www.iceskysl.com/?p=176</link>
		<pubDate>Mon, 24 Dec 2007 01:41:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[<p>需要定制一些log格式等，都说rails的log比较简单，但是其基本功能还是满足了的，例如如下技巧等。</p>
<p>控制日志文件大小，保留10个历史文件，文件大小最大为1024000字节：</p>
<div align="left">
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger&nbsp;=&nbsp;Logger.</span><span class="keyword">new</span><span>('foo.log',&nbsp;10,&nbsp;1024000)&nbsp; <br />
    </span></span></li>
</ol>
每日/星期/月一个日志文件<br />
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger&nbsp;=&nbsp;Logger.</span><span class="keyword">new</span><span>('foo.log',&nbsp;'daily')&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger&nbsp;=&nbsp;Logger.<span class="keyword">new</span><span>('foo.log',&nbsp;'weekly')&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger&nbsp;=&nbsp;Logger.<span class="keyword">new</span><span>('foo.log',&nbsp;'monthly')&nbsp; <br />
    </span></span></li>
</ol>
<span><span>而后就可以这么用了。<br />
</span></span>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger.fatal&nbsp;{&nbsp;</span><span class="string">&quot;Argument&nbsp;'foo'&nbsp;not&nbsp;given.&quot;</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.error&nbsp;<span class="string">&quot;Argument&nbsp;#{&nbsp;@foo&nbsp;}&nbsp;mismatch.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger.info('initialize')&nbsp;{&nbsp;<span class="string">&quot;Initializing...&quot;</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.add(Logger::FATAL)&nbsp;{&nbsp;'Fatal&nbsp;error!'&nbsp;} <br />
    </span></li>
</ol>
<span><strong>其他：按日期来分开存储web日志文件和sql日志</strong><br />
</span>
<p><strong>1、简单做法</strong> <br />
首先，在log/目录下新建sql文件夹，sql文件夹用来保存sql日志 <br />
接着，修改config\environment.rb代码,需注意代码顺序。</p>
<p><span style="color: blue;">#web访问日志 <br />
RAILS_DEFAULT_LOGGER = Logger.new(&quot;#{RAILS_ROOT}/log/#{RAILS_ENV}_#{Date.today.to_s}.log&quot;, &quot;daily&quot;)</span></p>
<p>#rails的初始化 <br />
Rails::Initializer.run do |config| <br />
#... <br />
end</p>
<p>#sql日志 <br />
ActiveRecord::Base.logger = Logger.new(&quot;#{RAILS_ROOT}/log/sql/#{RAILS_ENV}_#{Date.today.to_s}.log&quot;, &quot;daily&quot;)</p>
<p>2、使用unix的cron做定时转存。</p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>需要定制一些log格式等，都说rails的log比较简单，但是其基本功能还是满足了的，例如如下技巧等。</p>
<p>控制日志文件大小，保留10个历史文件，文件大小最大为1024000字节：</p>
<div align="left">
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger&nbsp;=&nbsp;Logger.</span><span class="keyword">new</span><span>('foo.log',&nbsp;10,&nbsp;1024000)&nbsp; <br />
    </span></span></li>
</ol>
每日/星期/月一个日志文件<br />
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger&nbsp;=&nbsp;Logger.</span><span class="keyword">new</span><span>('foo.log',&nbsp;'daily')&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger&nbsp;=&nbsp;Logger.<span class="keyword">new</span><span>('foo.log',&nbsp;'weekly')&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger&nbsp;=&nbsp;Logger.<span class="keyword">new</span><span>('foo.log',&nbsp;'monthly')&nbsp; <br />
    </span></span></li>
</ol>
<span><span>而后就可以这么用了。<br />
</span></span>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>logger.fatal&nbsp;{&nbsp;</span><span class="string">&quot;Argument&nbsp;'foo'&nbsp;not&nbsp;given.&quot;</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.error&nbsp;<span class="string">&quot;Argument&nbsp;#{&nbsp;@foo&nbsp;}&nbsp;mismatch.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger.info('initialize')&nbsp;{&nbsp;<span class="string">&quot;Initializing...&quot;</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.add(Logger::FATAL)&nbsp;{&nbsp;'Fatal&nbsp;error!'&nbsp;} <br />
    </span></li>
</ol>
<span><strong>其他：按日期来分开存储web日志文件和sql日志</strong><br />
</span>
<p><strong>1、简单做法</strong> <br />
首先，在log/目录下新建sql文件夹，sql文件夹用来保存sql日志 <br />
接着，修改config\environment.rb代码,需注意代码顺序。</p>
<p><span style="color: blue;">#web访问日志 <br />
RAILS_DEFAULT_LOGGER = Logger.new(&quot;#{RAILS_ROOT}/log/#{RAILS_ENV}_#{Date.today.to_s}.log&quot;, &quot;daily&quot;)</span></p>
<p>#rails的初始化 <br />
Rails::Initializer.run do |config| <br />
#... <br />
end</p>
<p>#sql日志 <br />
ActiveRecord::Base.logger = Logger.new(&quot;#{RAILS_ROOT}/log/sql/#{RAILS_ENV}_#{Date.today.to_s}.log&quot;, &quot;daily&quot;)</p>
<p>2、使用unix的cron做定时转存。</p>
</div>]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2007-12-24 01:41:09</wp:post_date>
		<wp:post_date_gmt>2007-12-24 01:41:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%ae%9a%e5%88%b6logger</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.84</wp:comment_author_IP>
			<wp:comment_date>2008-01-25 23:40:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://my4java.itpub.net/post/9983/209686
若你想确保你的日志不会填满 /var 分区，你应该回转你的日志大小而不是用时间。在 environment.rb 环境文件内的 Rails::Initializer.run 块中添加下面行，以便只保存50 个大小为 1MB 的日志文件。

config.logger = Logger.new(\"#{RAILS_ROOT}/log/#{ENV[\'RAILS_ENV\']}.log\", 50, 1048576)

另外在《应用Rails进行敏捷Web开发》一书的467页作者写到：

“….为了解决这个问题，很多日志工具都提供了文件切换的功能：达到某个条件是，就关闭当前使用的日志文件，将其改名，然后新开一个空的日志文件。最终，你将得到一组日期递进的日志文件，这样就可以更方便地编写脚本定时打包存储或删除其中最老的文件。…”

可参考 Ruby 的 Logger 对象文档：http://corelib.rubyonrails.org/

1、格式：new(logdev, shift_age = 0, shift_size = 1048576)

2、用法：

Logger.new(name, shift_age = 7, shift_size = 1048576)

Logger.new(name, shift_age = \'weekly\')

3、参数：

Logdev：日志位置。

shift_age：保持的日志文件数量，以可以是刷新频率 (daily, weekly or monthly)。

shift_size：日志文件的最大尺寸(只在 shift_age 参数是数字时才可使用)。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>YAML Configuration File</title>
		<link>http://www.iceskysl.com/?p=177</link>
		<pubDate>Fri, 28 Dec 2007 12:44:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=177</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&nbsp;</p>
<p>Application configuration shouldn't be spread throughout your code base. Instead a much better place to put it is an external YAML file. See how to do that in this episode.</p>
<div class="CodeRay">
<div class="code">
<pre><span class="c">[code]<br /># config/initializers/load_config.rb</span><br /><span class="co">APP_CONFIG</span> = <span class="co">YAML</span>.load_file(<span class="s"><span class="dl">&quot;</span><span class="il"><span class="idl">#{</span><span class="co">RAILS_ROOT</span><span class="idl">}</span></span><span class="k">/config/config.yml</span><span class="dl">&quot;</span></span>)[<span class="co">RAILS_ENV</span>]<br /><br /><span class="c"># application.rb</span><br /><span class="r">def</span> <span class="fu">authenticate</span><br />  <span class="r">if</span> <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">perform_authentication</span><span class="dl">'</span></span>]<br />    authenticate_or_request_with_http_basic <span class="r">do</span> |username, password|<br />      username == <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">username</span><span class="dl">'</span></span>] &amp;&amp; password == <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">password</span><span class="dl">'</span></span>]<br />    <span class="r">end</span><br />  <span class="r">end</span><br /><span class="r">end<br /></span><span class="c">[/code]</span><br /><span class="r">---<br /></span><span class="c">[code]</span><br /># config/config.yml<br />development:<br />  perform_authentication: false<br /><br />test:<br />  perform_authentication: false<br /><br />production:<br />  perform_authentication: true<br />  username: admin<br />  password: secret<br /><span class="c">[/code]</span><br />来源：http://railscasts.com/episodes/85</pre>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>&nbsp;</p>
<p>Application configuration shouldn't be spread throughout your code base. Instead a much better place to put it is an external YAML file. See how to do that in this episode.</p>
<div class="CodeRay">
<div class="code">
<pre><span class="c">[code]<br /># config/initializers/load_config.rb</span><br /><span class="co">APP_CONFIG</span> = <span class="co">YAML</span>.load_file(<span class="s"><span class="dl">&quot;</span><span class="il"><span class="idl">#{</span><span class="co">RAILS_ROOT</span><span class="idl">}</span></span><span class="k">/config/config.yml</span><span class="dl">&quot;</span></span>)[<span class="co">RAILS_ENV</span>]<br /><br /><span class="c"># application.rb</span><br /><span class="r">def</span> <span class="fu">authenticate</span><br />  <span class="r">if</span> <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">perform_authentication</span><span class="dl">'</span></span>]<br />    authenticate_or_request_with_http_basic <span class="r">do</span> |username, password|<br />      username == <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">username</span><span class="dl">'</span></span>] &amp;&amp; password == <span class="co">APP_CONFIG</span>[<span class="s"><span class="dl">'</span><span class="k">password</span><span class="dl">'</span></span>]<br />    <span class="r">end</span><br />  <span class="r">end</span><br /><span class="r">end<br /></span><span class="c">[/code]</span><br /><span class="r">---<br /></span><span class="c">[code]</span><br /># config/config.yml<br />development:<br />  perform_authentication: false<br /><br />test:<br />  perform_authentication: false<br /><br />production:<br />  perform_authentication: true<br />  username: admin<br />  password: secret<br /><span class="c">[/code]</span><br />来源：http://railscasts.com/episodes/85</pre>
</div>
</div>]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2007-12-28 12:44:04</wp:post_date>
		<wp:post_date_gmt>2007-12-28 12:44:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yaml-configuration-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Web 2.0 ，有文化的网站做不大</title>
		<link>http://www.iceskysl.com/?p=178</link>
		<pubDate>Fri, 28 Dec 2007 12:47:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这个文章从一个层面上讲述了这个现象。<br />
原文：http://china.digitalwall.com/scripts/display.asp?UID=403<br />
摘要：</p>
<p>为什么会造成这种市场局面？笔者以前说过，Web 2.0 的发展基础是 社会学，因此一个Web 2.0 网站的用户数多寡，完全看它占领了那个 社会阶层（或者文化阶层）而定，那个阶层直接决定了用户数的上限。</p>
<p>因为Web 2.0 网站几乎是靠著人拉人发展起来。每个用户会拉动的人 都是他生活上熟悉的圈子，不管陌生人或熟人。当同一种阶层的人在 这个网站越积越多的时候，其他阶层的人也越难以加入到这里。</p>
<p>等到网站有第一批用户，为了牢牢抓住他们，及利用他们带更多用户 进来，必须更加揣摩他们的心思甚或社交习惯。结果更深化了这样的 发展，更加走向某一种文化氛围或者社会阶层，再也无法回头。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这个文章从一个层面上讲述了这个现象。<br />
原文：http://china.digitalwall.com/scripts/display.asp?UID=403<br />
摘要：</p>
<p>为什么会造成这种市场局面？笔者以前说过，Web 2.0 的发展基础是 社会学，因此一个Web 2.0 网站的用户数多寡，完全看它占领了那个 社会阶层（或者文化阶层）而定，那个阶层直接决定了用户数的上限。</p>
<p>因为Web 2.0 网站几乎是靠著人拉人发展起来。每个用户会拉动的人 都是他生活上熟悉的圈子，不管陌生人或熟人。当同一种阶层的人在 这个网站越积越多的时候，其他阶层的人也越难以加入到这里。</p>
<p>等到网站有第一批用户，为了牢牢抓住他们，及利用他们带更多用户 进来，必须更加揣摩他们的心思甚或社交习惯。结果更深化了这样的 发展，更加走向某一种文化氛围或者社会阶层，再也无法回头。</p>]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2007-12-28 12:47:04</wp:post_date>
		<wp:post_date_gmt>2007-12-28 12:47:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-2-0-%ef%bc%8c%e6%9c%89%e6%96%87%e5%8c%96%e7%9a%84%e7%bd%91%e7%ab%99%e5%81%9a%e4%b8%8d%e5%a4%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Oracle中的截取字符更新</title>
		<link>http://www.iceskysl.com/?p=179</link>
		<pubDate>Sat, 29 Dec 2007 11:57:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[<p>update bizobj_extend_value t <br />
set t.extend_value = substr(t.extend_value,1,10) <br />
where extend_key = 'BOSSID'&nbsp; and&nbsp; lengthb(trim(t.extend_value) )&gt; 20&nbsp;&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>update bizobj_extend_value t <br />
set t.extend_value = substr(t.extend_value,1,10) <br />
where extend_key = 'BOSSID'&nbsp; and&nbsp; lengthb(trim(t.extend_value) )&gt; 20&nbsp;&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2007-12-29 11:57:41</wp:post_date>
		<wp:post_date_gmt>2007-12-29 11:57:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle%e4%b8%ad%e7%9a%84%e6%88%aa%e5%8f%96%e5%ad%97%e7%ac%a6%e6%9b%b4%e6%96%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>见到了传说中的透明同学</title>
		<link>http://www.iceskysl.com/?p=180</link>
		<pubDate>Wed, 02 Jan 2008 21:25:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[<p>透明（http://gigix.thoughtworkers.org/）同学也算是界内大名鼎鼎的了哈，虽然一起完成了伟大的&lsquo;技能云&rsquo;网站，但是一直没有见过真人，实在遗憾;碰巧他来深圳做项目，赶在元旦节终于见到一面。</p>
<p>做为一个技术人员，我本人不是很喜欢社交活动，但是偶然见见几个朋友，还是很不错的：）</p>
<p>说到技能云，我们觉得还是大有前途的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>透明（http://gigix.thoughtworkers.org/）同学也算是界内大名鼎鼎的了哈，虽然一起完成了伟大的&lsquo;技能云&rsquo;网站，但是一直没有见过真人，实在遗憾;碰巧他来深圳做项目，赶在元旦节终于见到一面。</p>
<p>做为一个技术人员，我本人不是很喜欢社交活动，但是偶然见见几个朋友，还是很不错的：）</p>
<p>说到技能云，我们觉得还是大有前途的。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2008-01-02 21:25:57</wp:post_date>
		<wp:post_date_gmt>2008-01-02 21:25:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%81%e5%88%b0%e4%ba%86%e4%bc%a0%e8%af%b4%e4%b8%ad%e7%9a%84%e9%80%8f%e6%98%8e%e5%90%8c%e5%ad%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>2008年都来了，该盘点下去年的历程了</title>
		<link>http://www.iceskysl.com/?p=181</link>
		<pubDate>Wed, 02 Jan 2008 21:54:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[<p>好像真的好快，转眼间，我毕业都快2年了，2007年又悄悄的过完了，回首看看，我貌似也干了不少&lsquo;看上去&rsquo;了不起的事情，该坐下来稍微盘点下下拉。</p>
<p>本职工作，公司的项目我貌似完成的相当不错，开发和运维做的都不错的，电信级的产品让自己也学到了不少东西，虽然都是点点滴滴的，但每每需要用到什么东西的时候，我都可以搞定的差不多。有些机会，没有真正抓住，但是也促使了其他的一些新的机会，貌似很不错。</p>
<p>课余活动，貌似真的很丰富，我能用Rails实现了很多自己以前想到却无法实现的东西，做了一批我心目中的网站，虽然没有取得巨大的成功，但是看看<strong>技能云</strong>（iTechTag）、<strong>1.s.t</strong>，以及<strong>byeloo</strong>，<strong>1stlog</strong>，<strong>第一次</strong>等等，我自己都不敢相信，这些都是我做的。构建自己理想的团队模式和氛围<strong>1sters.com</strong>，做为国内第一批专业的ROR技术团队，虽然我们不曾实际运转，但其让我积累足够的经验。</p>
<p>晓得了什么是敏捷开发，什么是rails，什么是mogrel，ngnix等等等。。晓得了代码还可以这么优雅和舒服。</p>
<p>继续了<strong>天马行空</strong>的梦想，虽然遇到了不少困难和挫折，但是我们挺过来了，还是有那么多的安全爱好者兄弟，浪子，小A，丰初，心雨以及其他几个朋友，让我保持了对安全领域兴趣和爱好。</p>
<p>协助Tudou编辑nohack杂志，nohack中我还算是元老吧，从创办到现在，风风雨雨，虽然我不曾尽全力，但是始终关注，尽自己的一份绵薄之力，虽然还不成见过那群很神秘的TUdou、裤子，LCX等等。对nohack的热爱，使得自己也对网络安全保存自己的特有视觉。</p>
<p>另外认识了一些创业界的朋友，看着朋友的网站&ldquo;圈内&rdquo;，&ldquo;公益街&rdquo;，&ldquo;recity&rdquo;，&ldquo;善学&rdquo;，&ldquo;菜盘子&rdquo;等等，看着他们为自己的理想工作，实在不错;接触到ROR世界中的一些活跃者，看到未来的趋势。认识了一起扯蛋、讨论的reacoo，公益街那个心怀梦想的monty，上海recity的创者，透明、infoQ的老霍（泰稳）、不曾见面却提供很多帮助的fengbo，给我很多建议cash.zhao，一起讨论问题的tails， 在我故乡的创建自己善学的jouy、来自德国的maxime、在家过着我向往的节奏生活的snowzhang，javaeye的robbin前辈，国内ROR实践的先行者dongbing、rails的布道者caiwangqin、道喜以及程序员杂志社的朋友们。</p>
<p>还有伴着我已经5年风雨的<strong>shine</strong>，虽然没有多少惊喜，但是我们一起走过，琐碎的生活，让我们学会更多，虽然也曾惹你生气、流泪，但请相信，我们的未来肯定是美好的，相伴一生。</p>
<p>一年时间不算太长，我忙忙碌碌的没有停歇，回首过去，点点滴滴。</p>
<p>已经到来的2008,是充满希望的一年，虽然说不上雄伟的计划，但是2008中还是心怀梦想的，希望2008年，我们的&rsquo;技能云&lsquo;能爆发全面的威力;希望朋友们的梦想都能成真，还有诸多暂时不能说的秘密。</p>
<p>期待我们完美的2008..还没有盘点的XDJM该盘点下再前行啦。。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>好像真的好快，转眼间，我毕业都快2年了，2007年又悄悄的过完了，回首看看，我貌似也干了不少&lsquo;看上去&rsquo;了不起的事情，该坐下来稍微盘点下下拉。</p>
<p>本职工作，公司的项目我貌似完成的相当不错，开发和运维做的都不错的，电信级的产品让自己也学到了不少东西，虽然都是点点滴滴的，但每每需要用到什么东西的时候，我都可以搞定的差不多。有些机会，没有真正抓住，但是也促使了其他的一些新的机会，貌似很不错。</p>
<p>课余活动，貌似真的很丰富，我能用Rails实现了很多自己以前想到却无法实现的东西，做了一批我心目中的网站，虽然没有取得巨大的成功，但是看看<strong>技能云</strong>（iTechTag）、<strong>1.s.t</strong>，以及<strong>byeloo</strong>，<strong>1stlog</strong>，<strong>第一次</strong>等等，我自己都不敢相信，这些都是我做的。构建自己理想的团队模式和氛围<strong>1sters.com</strong>，做为国内第一批专业的ROR技术团队，虽然我们不曾实际运转，但其让我积累足够的经验。</p>
<p>晓得了什么是敏捷开发，什么是rails，什么是mogrel，ngnix等等等。。晓得了代码还可以这么优雅和舒服。</p>
<p>继续了<strong>天马行空</strong>的梦想，虽然遇到了不少困难和挫折，但是我们挺过来了，还是有那么多的安全爱好者兄弟，浪子，小A，丰初，心雨以及其他几个朋友，让我保持了对安全领域兴趣和爱好。</p>
<p>协助Tudou编辑nohack杂志，nohack中我还算是元老吧，从创办到现在，风风雨雨，虽然我不曾尽全力，但是始终关注，尽自己的一份绵薄 之力，虽然还不成见过那群很神秘的TUdou、裤子，LCX等等。对nohack的热爱，使得自己也对网络安全保存自己的特有视觉。</p>
<p>另外认识了一些创业界的朋友，看着朋友的网站&ldquo;圈内&rdquo;，&ldquo;公益街&rdquo;，&ldquo;recity&rdquo;，&ldquo;善学&rdquo;，&ldquo;菜盘子&rdquo;等等，看着他们为自己的理想工作，实在 不错;接触到ROR世界中的一些活跃者，看到未来的趋势。认识了一起扯蛋、讨论的reacoo，公益街那个心怀梦想的monty，上海recity的创 者，透明、infoQ的老霍（泰稳）、不曾见面却提供很多帮助的fengbo，给我很多建议cash.zhao，一起讨论问题的tails， 在我故乡的创建自己善学的jouy、来自德国的maxime、在家过着我向往的节奏生活的snowzhang，javaeye的robbin前辈，国内 ROR实践的先行者dongbing、rails的布道者caiwangqin、道喜以及程序员杂志社的朋友们。</p>
<p>还有伴着我已经5年风雨的<strong>shine</strong>，虽然没有多少惊喜，但是我们一起走过，琐碎的生活，让我们学会更多，虽然也曾惹你生气、流泪，但请相信，我们的未来肯定是美好的，相伴一生。</p>
<p>一年时间不算太长，我忙忙碌碌的没有停歇，回首过去，点点滴滴。</p>
<p>已经到来的2008,是充满希望的一年，虽然说不上雄伟的计划，但是2008中还是心怀梦想的，希望2008年，我们的&rsquo;技能云&lsquo;能爆发全面的威力;希望朋友们的梦想都能成真，还有诸多暂时不能说的秘密。</p>
<p>期待我们完美的2008..还没有盘点的XDJM该盘点下再前行啦。。</p>]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2008-01-02 21:54:57</wp:post_date>
		<wp:post_date_gmt>2008-01-02 21:54:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008%e5%b9%b4%e9%83%bd%e6%9d%a5%e4%ba%86%ef%bc%8c%e8%af%a5%e7%9b%98%e7%82%b9%e4%b8%8b%e5%8e%bb%e5%b9%b4%e7%9a%84%e5%8e%86%e7%a8%8b%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[ash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ashchan@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>124.126.32.88</wp:comment_author_IP>
			<wp:comment_date>2008-01-03 10:47:33</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2008继续努力：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nano简单就是美的基础指南</title>
		<link>http://www.iceskysl.com/?p=182</link>
		<pubDate>Thu, 03 Jan 2008 15:04:31 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[<p>使用的DH上的crontab的默认编辑器是nano，我以前在家里的电脑上貌似也看到过，但是当时觉得不会有，也懒得看DOCs，于是就按照google到的文档将其设定为vim了，今天在DH上配置crontab的时候，再次发现这个东西，决定好好看看到底是什么东西。</p>
<p>google到2篇文章，稍微看了下，在结合实例试了下，果然简洁好用，相当不错，使用起来也很简单，摘抄点放下面：</p>
<p>NANO中有这么几种特殊的输入方式，当你按下Ctrl键（用^表示）的同时再按其它键，或者连续按两下ESC键再按其它键，你就可以使用NANO的特殊功能。比如：<br />
^Y 向前翻一页<br />
^V 向后翻一页<br />
^X 退出编辑器<br />
^G 获得在线帮助 这是最重要的功能，请大家一定时常使用<br />
^O 存储文件<br />
^W 搜索<br />
^C 获得当前鼠标位置<br />
^K 删掉光标所在行<br />
还有好多好多特殊功能，大家可以^G通过在线帮助来学习，这里就不详述了。</p>
<p>其他的请参考我google到的2篇文章：</p>
<p>Nano基础指南：http://www.gentoo.org/doc/zh_cn/nano-basics-guide.xml</p>
<p>NANO，简单就是美：http://www.linuxer.cn/?uid-2-action-viewspace-itemid-9</p>
<p>Nano官方：<a href="http://www.nano-editor.org/">http://www.nano-editor.org</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>使用的DH上的crontab的默认编辑器是nano，我以前在家里的电脑上貌似也看到过，但是当时觉得不会有，也懒得看DOCs，于是就按照 google到的文档将其设定为vim了，今天在DH上配置crontab的时候，再次发现这个东西，决定好好看看到底是什么东西。</p>
<p>google到2篇文章，稍微看了下，在结合实例试了下，果然简洁好用，相当不错，使用起来也很简单，摘抄点放下面：</p>
<p>NANO中有这么几种特殊的输入方式，当你按下Ctrl键（用^表示）的同时再按其它键，或者连续按两下ESC键再按其它键，你就可以使用NANO的特殊功能。比如：<br />
^Y 向前翻一页<br />
^V 向后翻一页<br />
^X 退出编辑器<br />
^G 获得在线帮助 这是最重要的功能，请大家一定时常使用<br />
^O 存储文件<br />
^W 搜索<br />
^C 获得当前鼠标位置<br />
^K 删掉光标所在行<br />
还有好多好多特殊功能，大家可以^G通过在线帮助来学习，这里就不详述了。</p>
<p>其他的请参考我google到的2篇文章：</p>
<p>Nano基础指南：http://www.gentoo.org/doc/zh_cn/nano-basics-guide.xml</p>
<p>NANO，简单就是美：http://www.linuxer.cn/?uid-2-action-viewspace-itemid-9</p>
<p>Nano官方：<a href="http://www.nano-editor.org/">http://www.nano-editor.org</a></p>]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2008-01-03 15:04:31</wp:post_date>
		<wp:post_date_gmt>2008-01-03 15:04:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nano%e7%ae%80%e5%8d%95%e5%b0%b1%e6%98%af%e7%be%8e%e7%9a%84%e5%9f%ba%e7%a1%80%e6%8c%87%e5%8d%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Google SOAP Search API不在提供服务</title>
		<link>http://www.iceskysl.com/?p=183</link>
		<pubDate>Thu, 03 Jan 2008 23:58:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[<p>其实很早前我就用过这个，貌似还是在读书的时候吧，现在技能云上我突然感觉这个相当不错的一个功能，可惜的是，在其站上发现，已经不在提供了，看到其公告如下：<br />
<font color="#ffcc00" style="background-color: rgb(255, 255, 153);">&ldquo;<br />
f December 5, 2006, we are no longer issuing new API keys for the SOAP Search API. Developers with existing SOAP Search API keys will not be affected.<br />
</font></p>
<p style="background-color: rgb(255, 255, 153);"><font color="#ffcc00">Depending on your application, the <a href="http://code.google.com/apis/ajaxsearch/">AJAX Search API</a>       may be a better choice for you instead.  It tends to be better suited for search-based       web applications and supports additional features like Video, News, Maps, and Blog        search results.</font></p>
<p style="background-color: rgb(255, 255, 153);"><font color="#ffcc00">For developers who are already using the SOAP Search API, we've kept the documentation live       on this site.</font></p>
<p><font color="#ffcc00" style="background-color: rgb(255, 255, 153);">&rdquo;</font></p>
<p>唉，按照其意思是推荐大家使用更强大的AJAX Search API，但是我不觉得其好用，也不符合我的需要，可惜了哦。<br />
还是贴一段代码吧，如下：<br />
require 'soap/wsdlDriver'<br />
$KCODE = &quot;UTF8&quot;<br />
key = 'LVJnAm5QFHblahblahblah your key here'<br />
<br />
#create driver<br />
wsdl = &quot;http://api.google.com/GoogleSearch.wsdl&quot;<br />
driver = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver<br />
query = &quot;your query string here&quot;<br />
start = 0<br />
max = 10<br />
&nbsp; <br />
# see http://dev.ctor.org/soap4r/browser/trunk/sample/wsdl/googleSearch/wsdlDriver.rb<br />
@results = driver.doGoogleSearch( key, query, start, max, true, &quot;&quot;, true, 'lang_en', '','')<br />
snippets = @results.resultElements.collect { |r| r.snippet } # you can get all kinds'a' info here<br />
self.update_attribute(:html, snippets.join(&quot;\n&quot;)) # or whatever<br />
<br />
===================================<br />
def search<br />
&nbsp;require 'soap/wsdlDriver'<br />
&nbsp;@title = 'Search Results'<br />
&nbsp;key = 'YOUR GOOGLE API KEY HERE'<br />
&nbsp;yoursite = 'YOUR SITE ADDRESS HERE'<br />
&nbsp;driver = SOAP::WSDLDriverFactory.new(&quot;http://api.google.com/GoogleSearch.wsdl&quot;).createDriver<br />
&nbsp;@results = driver.doGoogleSearch(key, @params['term']+&quot; site:#{yoursite}&quot;, 0, 10, true, &quot; &quot;, false, &quot; &quot;, &quot; &quot;, &quot; &quot;)<br />
end<br />
<br />
<br />
&lt;% for result in @results.resultElements %&gt;<br />
&nbsp;&lt;h2&gt;&lt;%= result.title %&gt;&lt;/h2&gt;<br />
&nbsp;&lt;p&gt;&lt;%= result.snippet %&gt;&lt;/p&gt;<br />
&nbsp;&lt;p&gt;&lt;a href=&quot;&lt;%= result.URL %&gt;&quot;&gt;&lt;%= result.URL %&gt;&lt;/a&gt;&lt;/p&gt;<br />
&lt;% end %&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>其实很早前我就用过这个，貌似还是在读书的时候吧，现在技能云上我突然感觉这个相当不错的一个功能，可惜的是，在其站上发现，已经不在提供了，看到其公告如下：<br />
<font color="#ffcc00" style="background-color: rgb(255, 255, 153);">&ldquo;<br />
f December 5, 2006, we are no longer issuing new API keys for the SOAP Search API. Developers with existing SOAP Search API keys will not be affected.<br />
</font></p>
<p style="background-color: rgb(255, 255, 153);"><font color="#ffcc00">Depending on your application, the <a href="http://code.google.com/apis/ajaxsearch/">AJAX Search API</a>       may be a better choice for you instead.  It tends to be better suited for search-based       web applications and supports additional features like Video, News, Maps, and Blog        search results.</font></p>
<p style="background-color: rgb(255, 255, 153);"><font color="#ffcc00">For developers who are already using the SOAP Search API, we've kept the documentation live       on this site.</font></p>
<p><font color="#ffcc00" style="background-color: rgb(255, 255, 153);">&rdquo;</font></p>
<p>唉，按照其意思是推荐大家使用更强大的AJAX Search API，但是我不觉得其好用，也不符合我的需要，可惜了哦。<br />
还是贴一段代码吧，如下：<br />
require 'soap/wsdlDriver'<br />
$KCODE = &quot;UTF8&quot;<br />
key = 'LVJnAm5QFHblahblahblah your key here'<br />
<br />
#create driver<br />
wsdl = &quot;http://api.google.com/GoogleSearch.wsdl&quot;<br />
driver = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver<br />
query = &quot;your query string here&quot;<br />
start = 0<br />
max = 10<br />
&nbsp; <br />
# see http://dev.ctor.org/soap4r/browser/trunk/sample/wsdl/googleSearch/wsdlDriver.rb<br />
@results = driver.doGoogleSearch( key, query, start, max, true, &quot;&quot;, true, 'lang_en', '','')<br />
snippets = @results.resultElements.collect { |r| r.snippet } # you can get all kinds'a' info here<br />
self.update_attribute(:html, snippets.join(&quot;\n&quot;)) # or whatever<br />
<br />
===================================<br />
def search<br />
&nbsp;require 'soap/wsdlDriver'<br />
&nbsp;@title = 'Search Results'<br />
&nbsp;key = 'YOUR GOOGLE API KEY HERE'<br />
&nbsp;yoursite = 'YOUR SITE ADDRESS HERE'<br />
&nbsp;driver = SOAP::WSDLDriverFactory.new(&quot;http://api.google.com/GoogleSearch.wsdl&quot;).createDriver<br />
&nbsp;@results = driver.doGoogleSearch(key, @params['term']+&quot; site:#{yoursite}&quot;, 0, 10, true, &quot; &quot;, false, &quot; &quot;, &quot; &quot;, &quot; &quot;)<br />
end<br />
<br />
<br />
&lt;% for result in @results.resultElements %&gt;<br />
&nbsp;&lt;h2&gt;&lt;%= result.title %&gt;&lt;/h2&gt;<br />
&nbsp;&lt;p&gt;&lt;%= result.snippet %&gt;&lt;/p&gt;<br />
&nbsp;&lt;p&gt;&lt;a href=&quot;&lt;%= result.URL %&gt;&quot;&gt;&lt;%= result.URL %&gt;&lt;/a&gt;&lt;/p&gt;<br />
&lt;% end %&gt;</p>]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2008-01-03 23:58:04</wp:post_date>
		<wp:post_date_gmt>2008-01-03 23:58:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-soap-search-api%e4%b8%8d%e5%9c%a8%e6%8f%90%e4%be%9b%e6%9c%8d%e5%8a%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>测试ruby中的gsub和scan等找到需要的字符串</title>
		<link>http://www.iceskysl.com/?p=184</link>
		<pubDate>Mon, 07 Jan 2008 10:38:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[<p>测试一些ruby中的字符匹配方法，如下是源代码。</p>
<p>&lt;code class=java&gt;</p>
<p>&nbsp;</p>
<p>puts &quot;----1、 使用gsub找到需要的字符串 存在$1中-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\bencoding=&quot;(.*)&quot;/,&quot;---&quot;)}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\bencoding=&quot;(.*)&quot;/,&quot;---&quot;)<br />
puts $1<br />
<br />
puts &quot;---------------------------&quot;<br />
<br />
puts &quot;----2、在gsub里面可以使用区块？-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\b(encoding=&quot;(.*)&quot;)/){|c| c.upcase}}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\b(encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
puts $1<br />
puts $2<br />
<br />
puts &quot;---------------------------&quot;<br />
<br />
puts &quot;----3、看看匹配到的是什么？-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub(/\b(encoding=&quot;(.*)&quot;)/,'\2')}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub(/\b(encoding=&quot;(.*)&quot;)/,'\2')<br />
puts $1<br />
puts $2<br />
<br />
puts &quot;---------------------------&quot;<br />
puts &quot;----4、使用scan来扫描符合正则的字符串-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(/\bencoding=&quot;(.*)&quot;/).first.first}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(/\bencoding=&quot;(.*)&quot;/).first.first<br />
puts $1<br />
&lt;/code&gt;</p>
<p><br />
输出结果：<br />
E:\Ysl\Test&gt;ruby encoding.rb<br />
&lt;?xml version=&quot;1.0&quot; --- fff?&gt;<br />
gbk<br />
---------------------------<br />
----2、在gsub里面可以使用区块？-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub((encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
&lt;?xml version=&quot;1.0&quot; ENCODING=&quot;GBK&quot; fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
----3、看看匹配到的是什么？-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub((encoding=&quot;(.*)&quot;)/,'')<br />
&lt;?xml version=&quot;1.0&quot; gbk fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
----4、使用scan来扫描符合正则的字符串-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(encoding=&quot;(.*)&quot;/).first.first<br />
gbk<br />
gbk<br />
<br />
E:\Ysl\Test&gt;ruby encoding.rb<br />
----1、 使用gsub找到需要的字符串 存在$1中-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(encoding=&quot;(.*)&quot;/,&quot;---&quot;)<br />
&lt;?xml version=&quot;1.0&quot; --- fff?&gt;<br />
gbk<br />
---------------------------<br />
----2、在gsub里面可以使用区块？-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub((encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
&lt;?xml version=&quot;1.0&quot; ENCODING=&quot;GBK&quot; fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
---------------------------<br />
----3、看看匹配到的是什么？-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub((encoding=&quot;(.*)&quot;)/,'')<br />
&lt;?xml version=&quot;1.0&quot; gbk fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
---------------------------<br />
----4、使用scan来扫描符合正则的字符串-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(encoding=&quot;(.*)&quot;/).first.first<br />
gbk<br />
gbk</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>测试一些ruby中的字符匹配方法，如下是源代码。</p>
<p>&lt;code class=java&gt;</p>
<p>&nbsp;</p>
<p>puts &quot;----1、 使用gsub找到需要的字符串 存在$1中-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\bencoding=&quot;(.*)&quot;/,&quot;---&quot;)}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\bencoding=&quot;(.*)&quot;/,&quot;---&quot;)<br />
puts $1<br />
<br />
puts &quot;---------------------------&quot;<br />
<br />
puts &quot;----2、在gsub里面可以使用区块？-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\b(encoding=&quot;(.*)&quot;)/){|c| c.upcase}}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(/\b(encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
puts $1<br />
puts $2<br />
<br />
puts &quot;---------------------------&quot;<br />
<br />
puts &quot;----3、看看匹配到的是什么？-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub(/\b(encoding=&quot;(.*)&quot;)/,'\2')}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub(/\b(encoding=&quot;(.*)&quot;)/,'\2')<br />
puts $1<br />
puts $2<br />
<br />
puts &quot;---------------------------&quot;<br />
puts &quot;----4、使用scan来扫描符合正则的字符串-----------------------&quot;<br />
puts %Q{puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(/\bencoding=&quot;(.*)&quot;/).first.first}<br />
<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(/\bencoding=&quot;(.*)&quot;/).first.first<br />
puts $1<br />
&lt;/code&gt;</p>
<p><br />
输出结果：<br />
E:\Ysl\Test&gt;ruby encoding.rb<br />
&lt;?xml version=&quot;1.0&quot; --- fff?&gt;<br />
gbk<br />
---------------------------<br />
----2、在gsub里面可以使用区块？-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub((encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
&lt;?xml version=&quot;1.0&quot; ENCODING=&quot;GBK&quot; fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
----3、看看匹配到的是什么？-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub((encoding=&quot;(.*)&quot;)/,'')<br />
&lt;?xml version=&quot;1.0&quot; gbk fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
----4、使用scan来扫描符合正则的字符串-----------------------<br />
'&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(encoding=&quot;(.*)&quot;/).first.first<br />
gbk<br />
gbk<br />
<br />
E:\Ysl\Test&gt;ruby encoding.rb<br />
----1、 使用gsub找到需要的字符串 存在$1中-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub(encoding=&quot;(.*)&quot;/,&quot;---&quot;)<br />
&lt;?xml version=&quot;1.0&quot; --- fff?&gt;<br />
gbk<br />
---------------------------<br />
----2、在gsub里面可以使用区块？-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.gsub((encoding=&quot;(.*)&quot;)/){|c| c.upcase}<br />
&lt;?xml version=&quot;1.0&quot; ENCODING=&quot;GBK&quot; fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
---------------------------<br />
----3、看看匹配到的是什么？-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.sub((encoding=&quot;(.*)&quot;)/,'')<br />
&lt;?xml version=&quot;1.0&quot; gbk fff?&gt;<br />
encoding=&quot;gbk&quot;<br />
gbk<br />
---------------------------<br />
----4、使用scan来扫描符合正则的字符串-----------------------<br />
puts&nbsp; '&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot; fff?&gt; '.scan(encoding=&quot;(.*)&quot;/).first.first<br />
gbk<br />
gbk</p>]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2008-01-07 10:38:25</wp:post_date>
		<wp:post_date_gmt>2008-01-07 10:38:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b5%8b%e8%af%95ruby%e4%b8%ad%e7%9a%84gsub%e5%92%8cscan%e7%ad%89%e6%89%be%e5%88%b0%e9%9c%80%e8%a6%81%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.131.229.171</wp:comment_author_IP>
			<wp:comment_date>2008-01-07 20:48:54</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[学习了!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[sdgj]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://SHDKBJGS@163.COM</wp:comment_author_url>
			<wp:comment_author_IP>116.235.14.3</wp:comment_author_IP>
			<wp:comment_date>2008-11-17 18:45:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗服务</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁服务</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洗公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海沙发清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海大理石翻新</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海外墙清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗服务</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁服务</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洗</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洗公司</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洁</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海地毯清洁服务</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海大理石翻新</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海保洁网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洗网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海清洁网</a>
<a href=\"http://www.shdkbj.com\" rel="nofollow">上海外墙清洗</a><br>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[01yq]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://SHDKBJGS@163.COM</wp:comment_author_url>
			<wp:comment_author_IP>116.235.14.3</wp:comment_author_IP>
			<wp:comment_date>2008-11-17 18:46:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[url=http://www.shdkbj.com]上海清洗[/url]
[url=http://www.shdkbj.com]上海清洗公司[/url]
[url=http://www.shdkbj.com]上海清洗服务[/url]
[url=http://www.shdkbj.com]上海清洗网[/url]
[url=http://www.shdkbj.com]上海保洁[/url]
[url=http://www.shdkbj.com]上海保洁公司[/url]
[url=http://www.shdkbj.com]上海保洁服务[/url]
[url=http://www.shdkbj.com]上海保洁网[/url]
[url=http://www.shdkbj.com]上海清洁[/url]
[url=http://www.shdkbj.com]上海清洁公司[/url]
[url=http://www.shdkbj.com]上海清洁服务[/url]
[url=http://www.shdkbj.com]上海清洁网[/url]
[url=http://www.shdkbj.com]上海清洗保洁[/url]
[url=http://www.shdkbj.com]上海地毯清洗[/url]
[url=http://www.shdkbj.com]上海地毯清洗公司[/url]
[url=http://www.shdkbj.com]上海地毯保洁[/url]
[url=http://www.shdkbj.com]上海沙发清洗[/url]
[url=http://www.shdkbj.com]上海大理石翻新[/url]
[url=http://www.shdkbj.com]上海外墙清洗[/url]
[url=http://www.shdkbj.com]外墙清洗[/url]
[url=http://www.shdkbj.com]上海外墙保洁[/url] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>如何完成非utf8格式的RSS转换</title>
		<link>http://www.iceskysl.com/?p=185</link>
		<pubDate>Mon, 07 Jan 2008 10:46:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=185</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在<strong>技能云</strong>的开发过程中，由于提供了抓取用户提交的Feed上的文章的功能，于是乎，遭受到编码问题的困扰，按照一般的规范，RSS或者ATOM都应该使用UTF-8的编码吧，无奈的是总有些人不遵守，比较<em>baid空间</em>的RSS就是gb2312编码的。<br />
<br />
没办法，竟然用户提出来，我也只能想办法搞定它了。其实原理也很简单，读取该feed的编码，然后在入库前先做此编码转换。<br />
至于如何取得该feed的编码，可以参考我前面写的这篇文章（http://iceskysl.1sters.com/?action=show&amp;id=184）。</p>
<p>PS：新版本的firefox3b2对我这个blog的编辑器支持不是很好，无法弹出加链接等等的框，比较不爽。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在<strong>技能云</strong>的开发过程中，由于提供了抓取用户提交的Feed上的文章的功能，于是乎，遭受到编码问题的困扰，按照一般的规范，RSS或者ATOM都应该使用UTF-8的编码吧，无奈的是总有些人不遵守，比较<em>baid空间</em>的RSS就是gb2312编码的。<br />
<br />
没办法，竟然用户提出来，我也只能想办法搞定它了。其实原理也很简单，读取该feed的编码，然后在入库前先做此编码转换。<br />
至于如何取得该feed的编码，可以参考我前面写的这篇文章（http://iceskysl.1sters.com/?action=show&amp;id=184）。</p>
<p>PS：新版本的firefox3b2对我这个blog的编辑器支持不是很好，无法弹出加链接等等的框，比较不爽。。</p>]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2008-01-07 10:46:35</wp:post_date>
		<wp:post_date_gmt>2008-01-07 10:46:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e5%ae%8c%e6%88%90%e9%9d%9eutf8%e6%a0%bc%e5%bc%8f%e7%9a%84rss%e8%bd%ac%e6%8d%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>iTechTag增加圈子编辑和其分类添加编辑功能</title>
		<link>http://www.iceskysl.com/?p=186</link>
		<pubDate>Wed, 09 Jan 2008 00:42:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[<p>给<a href="http://www.itechtag.com/">技能云</a> 添加<a href="http://www.itechtag.com/about/plan">新功能</a> 和完善以前的功能，已经成为习惯了，每天每天没事的时候就想想哪些地方需要改进？哪些地方还需要加强等.</p>
<p>现在是凌晨<strong>0:30</strong>分，我把刚才完成的新功能升级上去了，虽然是轻车熟路，不免还是心潮澎湃，看着<a href="http://www.itechtag.com/">技能云</a> 一天天的成长，是我最欣慰的事情。</p>
<p>今天添加功能有：</p>
<ol>
    <li><a href="http://www.itechtag.com/groups/1/">圈子</a> 的编辑功能，开通圈子的人默认为其管理者，可以修改完善圈子的名字、描述和规则;</li>
    <li>另外，还可以针对自己的圈子添加适当的分类以更好的将话题分类，以方便浏览。</li>
    <li>按照分类来浏览其Group中的话题。</li>
</ol>
<p>以上功能你在浏览社区的时候应该都可以看到，我就不截图了。。</p>
<p>如有建议和意见，欢迎联系我。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>给<a href="http://www.itechtag.com/">技能云</a> 添加<a href="http://www.itechtag.com/about/plan">新功能</a> 和完善以前的功能，已经成为习惯了，每天每天没事的时候就想想哪些地方需要改进？哪些地方还需要加强等.</p>
<p>现在是凌晨<strong>0:30</strong>分，我把刚才完成的新功能升级上去了，虽然是轻车熟路，不免还是心潮澎湃，看着<a href="http://www.itechtag.com/">技能云</a> 一天天的成长，是我最欣慰的事情。</p>
<p>今天添加功能有：</p>
<ol>
    <li><a href="http://www.itechtag.com/groups/1/">圈子</a> 的编辑功能，开通圈子的人默认为其管理者，可以修改完善圈子的名字、描述和规则;</li>
    <li>另外，还可以针对自己的圈子添加适当的分类以更好的将话题分类，以方便浏览。</li>
    <li>按照分类来浏览其Group中的话题。</li>
</ol>
<p>以上功能你在浏览社区的时候应该都可以看到，我就不截图了。。</p>
<p>如有建议和意见，欢迎联系我。</p>]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2008-01-09 00:42:21</wp:post_date>
		<wp:post_date_gmt>2008-01-09 00:42:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>itechtag%e5%a2%9e%e5%8a%a0%e5%9c%88%e5%ad%90%e7%bc%96%e8%be%91%e5%92%8c%e5%85%b6%e5%88%86%e7%b1%bb%e6%b7%bb%e5%8a%a0%e7%bc%96%e8%be%91%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Proc.new vs Lambda in Ruby</title>
		<link>http://www.iceskysl.com/?p=187</link>
		<pubDate>Wed, 09 Jan 2008 12:37:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一直都不是很能把ruby的Proc运用自由，今天看一个gem的时候，又发现另外一个比较让我迷惑的东西Lambda ，好读书不求甚解，先找到一篇相关的文章，如下：</p>
<p>http://samdanielson.com/2007/3/19/proc-new-vs-lambda-in-ruby</p>
<p>原作者是这么说的：</p>
<blockquote>
<p>I found the following lines of code on Wikipedia today. It&rsquo;s a very succinct description of one important difference between a lambda and a Proc. Try printing the return value of f.call for more insight.</p>
</blockquote>
<p>摘录部分内容如下：</p>
<pre><code class="ruby"><br /><span class="keywords">def</span> foo<br />  f = <span class="constants">Proc</span><span class="method">.new</span> <span class="brackets">{</span> return <span class="string">&quot;return from foo from inside proc&quot;</span> <span class="brackets">}</span><br />  f<span class="method">.call</span> <span class="comment"># control leaves foo here</span><br />  return <span class="string">&quot;return from foo&quot;</span> <br /><span class="keywords">end</span><br /><br /><span class="keywords">def</span> bar<br />  f = lambda <span class="brackets">{</span> return <span class="string">&quot;return from lambda&quot;</span> <span class="brackets">}</span><br />  f<span class="method">.call</span> <span class="comment"># control does not leave bar here</span><br />  return <span class="string">&quot;return from bar&quot;</span> <br /><span class="keywords">end</span><br /><br />puts foo <span class="comment"># prints &quot;return from foo from inside proc&quot; </span><br />puts bar <span class="comment"># prints &quot;return from bar&quot; </span><br /><br />在wiki上也有，地址如下：http://en.wikipedia.org/wiki/Closure_(computer_science)</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一直都不是很能把ruby的Proc运用自由，今天看一个gem的时候，又发现另外一个比较让我迷惑的东西Lambda ，好读书不求甚解，先找到一篇相关的文章，如下：</p>
<p>http://samdanielson.com/2007/3/19/proc-new-vs-lambda-in-ruby</p>
<p>原作者是这么说的：</p>
<blockquote>
<p>I found the following lines of code on Wikipedia today. It&rsquo;s a very succinct description of one important difference between a lambda and a Proc. Try printing the return value of f.call for more insight.</p>
</blockquote>
<p>摘录部分内容如下：</p>
<pre><code class="ruby"><br /><span class="keywords">def</span> foo<br />  f = <span class="constants">Proc</span><span class="method">.new</span> <span class="brackets">{</span> return <span class="string">&quot;return from foo from inside proc&quot;</span> <span class="brackets">}</span><br />  f<span class="method">.call</span> <span class="comment"># control leaves foo here</span><br />  return <span class="string">&quot;return from foo&quot;</span> <br /><span class="keywords">end</span><br /><br /><span class="keywords">def</span> bar<br />  f = lambda <span class="brackets">{</span> return <span class="string">&quot;return from lambda&quot;</span> <span class="brackets">}</span><br />  f<span class="method">.call</span> <span class="comment"># control does not leave bar here</span><br />  return <span class="string">&quot;return from bar&quot;</span> <br /><span class="keywords">end</span><br /><br />puts foo <span class="comment"># prints &quot;return from foo from inside proc&quot; </span><br />puts bar <span class="comment"># prints &quot;return from bar&quot; </span><br /><br />在wiki上也有，地址如下：http://en.wikipedia.org/wiki/Closure_(computer_science)</code></pre>]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2008-01-09 12:37:23</wp:post_date>
		<wp:post_date_gmt>2008-01-09 12:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>proc-new-vs-lambda-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>RubyOnRails + S3 + EC2 = ?</title>
		<link>http://www.iceskysl.com/?p=188</link>
		<pubDate>Thu, 10 Jan 2008 16:58:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近关注了下<strong>Amazon </strong>的<strong>S3</strong>和<strong>EC2</strong>，加上一直比较看好的Rails，联系在一起想想，真是前景无限呀。<br />
S3提供了海量存储和安全备份，我们再不需要为机器故障、硬盘坏道等担忧了，我也也不需要去买服务器，定时备份了，因为使用S3的海量存储，数据是安全的，容量是无限的，而且价格也是低廉的；<br />
ok？相当好，不是么？<br />
别急，还有更好的，EC2这种解决方案更加让人兴奋，看其名字<code>Elastic Computer Cloud </code>就可以就让人无限联想了，不是么？Cloud。。。<br />
EC2是一种基于Xen的虚拟单元，可以自己按照需要购买适当的配置，支持无限扩展，而且价格也比较合理，其他的自己去<strong>Amazon </strong>看，我就不罗嗦了。<br />
加上一直很火的RubyOnRails，真的很难想象，以后的互联网会是怎么样的，有时间我写篇文章，幻想一下。<br />
<br />
但是在EC2上跑Rails，操作起来，不是很方便，所以有些插件就出来了。如下收集一些比较不错的资源，有兴趣的朋友自行研究。<br />
<strong>体验Amazon EC2:（目前为止看到的唯一一篇中文介绍）</strong><br />
http://cookoo.javaeye.com/blog/105510<br />
<strong>EC2 on Rails:(插件）</strong><br />
http://ec2onrails.rubyforge.org/<br />
<strong>Deploying Rails App On Ec2：（slideshare上的一个PPT，写的相当好）</strong><br />
http://static.slideshare.net/bansalakhil/deploying-rails-app-on-ec2/<br />
<strong>Amazon S3 Firefox Organizer(S3Fox)（火狐的一个用于S3传输的插件，cool）</strong><br />
https://addons.mozilla.org/en-US/firefox/addon/3247<br />
<strong>Utilizing Amazon S3 and EC2 in Rails（说了常见的几个问题）</strong><br />
http://blog.centopeia.com/railsconf-europe-2007-notes/utilizing-amazon-s3-and-ec2-in-rails/<br />
<strong>Deploying Rails on EC2</strong><br />
http://railspikes.com/2007/4/5/rails-on-ec2<br />
<br />
我已经使用S3了，有机会试试EC2...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近关注了下<strong>Amazon </strong>的<strong>S3</strong>和<strong>EC2</strong>，加上一直比较看好的Rails，联系在一起想想，真是前景无限呀。<br />
S3提供了海量存储和安全备份，我们再不需要为机器故障、硬盘坏道等担忧了，我也也不需要去买服务器，定时备份了，因为使用S3的海量存储，数据是安全的，容量是无限的，而且价格也是低廉的；<br />
ok？相当好，不是么？<br />
别急，还有更好的，EC2这种解决方案更加让人兴奋，看其名字<code>Elastic Computer Cloud </code>就可以就让人无限联想了，不是么？Cloud。。。<br />
EC2是一种基于Xen的虚拟单元，可以自己按照需要购买适当的配置，支持无限扩展，而且价格也比较合理，其他的自己去<strong>Amazon </strong>看，我就不罗嗦了。<br />
加上一直很火的RubyOnRails，真的很难想象，以后的互联网会是怎么样的，有时间我写篇文章，幻想一下。<br />
<br />
但是在EC2上跑Rails，操作起来，不是很方便，所以有些插件就出来了。如下收集一些比较不错的资源，有兴趣的朋友自行研究。<br />
<strong>体验Amazon EC2:（目前为止看到的唯一一篇中文介绍）</strong><br />
http://cookoo.javaeye.com/blog/105510<br />
<strong>EC2 on Rails:(插件）</strong><br />
http://ec2onrails.rubyforge.org/<br />
<strong>Deploying Rails App On Ec2：（slideshare上的一个PPT，写的相当好）</strong><br />
http://static.slideshare.net/bansalakhil/deploying-rails-app-on-ec2/<br />
<strong>Amazon S3 Firefox Organizer(S3Fox)（火狐的一个用于S3传输的插件，cool）</strong><br />
https://addons.mozilla.org/en-US/firefox/addon/3247<br />
<strong>Utilizing Amazon S3 and EC2 in Rails（说了常见的几个问题）</strong><br />
http://blog.centopeia.com/railsconf-europe-2007-notes/utilizing-amazon-s3-and-ec2-in-rails/<br />
<strong>Deploying Rails on EC2</strong><br />
http://railspikes.com/2007/4/5/rails-on-ec2<br />
<br />
我已经使用S3了，有机会试试EC2...</p>]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2008-01-10 16:58:56</wp:post_date>
		<wp:post_date_gmt>2008-01-10 16:58:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubyonrails-s3-ec2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[1ster]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 21:46:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dynamic DNS with EC2 and ZoneEdit:http://www.ioncannon.net/system-administration/120/dynamic-dns-with-ec2-and-zoneedit/

Deploying Rails on EC2
http://railspikes.com/2007/4/5/rails-on-ec2

How Did I Miss Amazon EC2?
http://www.kf6nvr.net/blog/archives/000772.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 21:48:27</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dynamic DNS with EC2 and ZoneEdit:http://www.ioncannon.net/system-administration/120/dynamic-dns-with-ec2-and-zoneedit/

Deploying Rails on EC2
http://railspikes.com/2007/4/5/rails-on-ec2

How Did I Miss Amazon EC2?
http://www.kf6nvr.net/blog/archives/000772.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 22:10:48</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amazon S3介绍及应用
http://www.haokanbu.com/story/5806/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 22:21:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一个Ruby插件
An interface library that allows Ruby or Ruby on Rails applications to easily connect to the HTTP 'Query API' for the Amazon Web Services Elastic Compute Cloud (EC2) and manipulate server instances.
http://rubyforge.org/projects/amazon-ec2/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 22:43:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最新的比较，以VPS为主
Where I host my Rails applications
http://www.softiesonrails.com/2008/2/22/where-i-host-my-rails-applications]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.72.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-01 22:45:40</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[其他的一些服务器：
http://www.hostdisciple.com/2008/01/13/web-hosting-for-your-next-web-20-site/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.82.240</wp:comment_author_IP>
			<wp:comment_date>2008-03-16 00:37:15</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这些资料挺好
http://ec2onrails.rubyforge.org/
http://www.amazon.com/b/ref=sc_fe_l_2/102-6342260-7987311?ie=UTF8&node=201590011&no=3435361
http://pauldowman.com/projects/ruby-on-rails-ec2/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>刚刚注册完域名OriginalCopyright.com</title>
		<link>http://www.iceskysl.com/?p=189</link>
		<pubDate>Fri, 11 Jan 2008 00:31:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[<p>经过一番的思考和推敲，最终选定了<a href="http://www.originalcopyright.com/">http://www.originalcopyright.com/</a> 这个域名; 尽管长了点，但是容易记，且意思很丰富，不是么？</p>
<p>刚刚开始这个Idea，希望大家多多支持..</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经过一番的思考和推敲，最终选定了<a href="http://www.originalcopyright.com/">http://www.originalcopyright.com/</a> 这个域名; 尽管长了点，但是容易记，且意思很丰富，不是么？</p>
<p>刚刚开始这个Idea，希望大家多多支持..</p>]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2008-01-11 00:31:04</wp:post_date>
		<wp:post_date_gmt>2008-01-11 00:31:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%9a%e5%88%9a%e6%b3%a8%e5%86%8c%e5%ae%8c%e5%9f%9f%e5%90%8doriginalcopyright-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>一个很不错的在线分析网站Clicky</title>
		<link>http://www.iceskysl.com/?p=190</link>
		<pubDate>Fri, 11 Jan 2008 00:37:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a title="Clicky Web Analytics" href="http://getclicky.com/22626"><img border="0" alt="Clicky Web Analytics" src="http://static.getclicky.com/media/links/clicky-125.gif" /></a><br />
一个很不错的在线分析网站，</p>
<p>功能相当强大，需要的朋友可以试试看，比我以前是的GA要好很多。。比51.la和51yes都好用。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a title="Clicky Web Analytics" href="http://getclicky.com/22626"><img border="0" alt="Clicky Web Analytics" src="http://static.getclicky.com/media/links/clicky-125.gif" /></a><br />
一个很不错的在线分析网站，</p>
<p>功能相当强大，需要的朋友可以试试看，比我以前是的GA要好很多。。比51.la和51yes都好用。。</p>]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2008-01-11 00:37:24</wp:post_date>
		<wp:post_date_gmt>2008-01-11 00:37:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e4%b8%aa%e5%be%88%e4%b8%8d%e9%94%99%e7%9a%84%e5%9c%a8%e7%ba%bf%e5%88%86%e6%9e%90%e7%bd%91%e7%ab%99clicky</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>vsftpd下显示的时间与系统时间不一致问题</title>
		<link>http://www.iceskysl.com/?p=191</link>
		<pubDate>Tue, 15 Jan 2008 12:35:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近老是遇到FTP上去看到的文件时间和实际登录上去查看得到的文件生成时间不一致的现象，找了下原因，是因为默认情况下，vsftpd&nbsp;是用<strong>gmt</strong>做为它的时间的，所以和系统的时间可能会不一致，修改也很简单：<br />
<br />
<strong>vi&nbsp;/etc/vsftpd/vsftpd.conf </strong></p>
<p>在最后加入一行：</p>
<p><u>use_localtime=yes </u></p>
<p>存盘后，重启vsftpd即可:</p>
<p><strong>service&nbsp;vsftpd&nbsp;restart </strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近老是遇到FTP上去看到的文件时间和实际登录上去查看得到的文件生成时间不一致的现象，找了下原因，是因为默认情况下，vsftpd&nbsp;是用<strong>gmt</strong>做为它的时间的，所以和系统的时间可能会不一致，修改也很简单：<br />
<br />
<strong>vi&nbsp;/etc/vsftpd/vsftpd.conf </strong></p>
<p>在最后加入一行：</p>
<p><u>use_localtime=yes </u></p>
<p>存盘后，重启vsftpd即可:</p>
<p><strong>service&nbsp;vsftpd&nbsp;restart </strong></p>]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2008-01-15 12:35:19</wp:post_date>
		<wp:post_date_gmt>2008-01-15 12:35:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vsftpd%e4%b8%8b%e6%98%be%e7%a4%ba%e7%9a%84%e6%97%b6%e9%97%b4%e4%b8%8e%e7%b3%bb%e7%bb%9f%e6%97%b6%e9%97%b4%e4%b8%8d%e4%b8%80%e8%87%b4%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>关于Mysql的连接数问题始末</title>
		<link>http://www.iceskysl.com/?p=192</link>
		<pubDate>Tue, 15 Jan 2008 12:40:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[<p>看到&ldquo;海阳&rdquo;在chinaonrails上问一个关于在Rails的线程中使用mysql链接的问题（http://chinaonrails.com/topic/view/1201/1.html#replyForm），老是出现异常：</p>
<p><em>ActiveRecord::StatementInvalid (Mysql::Error: Lost connection to MySQL server during query: </em></p>
<p>我以前在写技能云的时候，在后台定时跑的一个并发job的时候，也遇到过类似的问题，个人感觉是线程数的问题，找到几篇资料，证明我的猜测，如下：</p>
<p>MySQL最大连接数设置：http://spaces.huash.com/86932/viewspace-223435.html</p>
<p>MySQL服务维护笔记 ：http://www.chedong.com/tech/mysql.html</p>
<p>加大mysql的最大连接数：http://www.21ds.net/article/56/547</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>看到&ldquo;海阳&rdquo;在chinaonrails上问一个关于在Rails的线程中使用mysql链接的问题（http://chinaonrails.com/topic/view/1201/1.html#replyForm），老是出现异常：</p>
<p><em>ActiveRecord::StatementInvalid (Mysql::Error: Lost connection to MySQL server during query: </em></p>
<p>我以前在写技能云的时候，在后台定时跑的一个并发job的时候，也遇到过类似的问题，个人感觉是线程数的问题，找到几篇资料，证明我的猜测，如下：</p>
<p>MySQL最大连接数设置：http://spaces.huash.com/86932/viewspace-223435.html</p>
<p>MySQL服务维护笔记 ：http://www.chedong.com/tech/mysql.html</p>
<p>加大mysql的最大连接数：http://www.21ds.net/article/56/547</p>]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2008-01-15 12:40:55</wp:post_date>
		<wp:post_date_gmt>2008-01-15 12:40:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8emysql%e7%9a%84%e8%bf%9e%e6%8e%a5%e6%95%b0%e9%97%ae%e9%a2%98%e5%a7%8b%e6%9c%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中使用消息队列的策略</title>
		<link>http://www.iceskysl.com/?p=193</link>
		<pubDate>Fri, 18 Jan 2008 14:48:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[<p>开始的时候，有人说Rails没有队列机制，无法达到企业级的需求，时间没多久，现在再来看看Rails有没有队列机制吧。</p>
<p><img alt="" src="http://nubyonrails.com/system/uploads/2007/q-summary.png" /></p>
<p>别看一组可行的列表，如下：</p>
<p><a href="http://xph.us/software/beanstalkd/"><strong>beanstalkd</strong></a></p>
<p>Fast, simple, designed to mirror the style of memcached. Rails plugin available, or usable with a simple Ruby-based <span class="caps">API</span>. Server written in C, but is very easy to install. Memory only&hellip;jobs are not persistent. New, so the internal protocol may change. Workers may be difficult to manage.</p>
<p><a href="http://rubyforge.org/forum/forum.php?forum_id=19781"><strong>bj</strong></a></p>
<p>Rails plugin. Self-spawning. Can only send shell commands. Jobs start a full copy of your Rails app on every execution.</p>
<p><a href="http://backgroundrb.rubyforge.org/"><strong>BackgroundRB</strong></a></p>
<p>Ruby-based. Can be polled for incremental feedback on the progress of a job. Recently rewritten.</p>
<p><a href="http://www.amazon.com/Simple-Queue-Service-home-page/b?ie=UTF8&amp;node=13584001"><strong>Amazon <span class="caps">SQS</span></strong></a></p>
<p>Runs on Amazon&rsquo;s cluster, so it can handle a ton of traffic.  Operated by Amazon, so it doesn&rsquo;t run locally. Not open source.</p>
<p><a href="http://activemq.apache.org/"><strong>Apache ActiveMQ</strong></a></p>
<p>Well-known. Persistent. Requires several installation steps and database tables.</p>
<p><a href="http://code.google.com/p/activemessaging*/wiki/ActiveMessaging"><strong>ActiveMessaging</strong></a></p>
<p>Rails plugin. Works with ActiveMQ and others. Requires external job server.</p>
<p><a href="http://pastie.textmate.org/private/vxqxcvv40omkrhvnzp6a"><strong><span class="caps">BBQ</span></strong></a></p>
<p>Nothing to install&hellip;involves only a single line of code! Doesn&rsquo;t work on Windows <span class="caps">NT4</span>.</p>
<p>如下是几篇介绍的文章：</p>
<p><a href="http://www.thewebfellas.com/blog/2008/1/17/queues">http://www.thewebfellas.com/blog/2008/1/17/queues</a></p>
<p><a href="http://nubyonrails.com/articles/about-this-blog-beanstalk-messaging-queue">http://nubyonrails.com/articles/about-this-blog-beanstalk-messaging-queue</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>开始的时候，有人说Rails没有队列机制，无法达到企业级的需求，时间没多久，现在再来看看Rails有没有队列机制吧。</p>
<p><img alt="" src="http://nubyonrails.com/system/uploads/2007/q-summary.png" /></p>
<p>别看一组可行的列表，如下：</p>
<p><a href="http://xph.us/software/beanstalkd/"><strong>beanstalkd</strong></a></p>
<p>Fast, simple, designed to mirror the style of memcached. Rails plugin available, or usable with a simple Ruby-based <span class="caps">API</span>. Server written in C, but is very easy to install. Memory only&hellip;jobs are not persistent. New, so the internal protocol may change. Workers may be difficult to manage.</p>
<p><a href="http://rubyforge.org/forum/forum.php?forum_id=19781"><strong>bj</strong></a></p>
<p>Rails plugin. Self-spawning. Can only send shell commands. Jobs start a full copy of your Rails app on every execution.</p>
<p><a href="http://backgroundrb.rubyforge.org/"><strong>BackgroundRB</strong></a></p>
<p>Ruby-based. Can be polled for incremental feedback on the progress of a job. Recently rewritten.</p>
<p><a href="http://www.amazon.com/Simple-Queue-Service-home-page/b?ie=UTF8&amp;node=13584001"><strong>Amazon <span class="caps">SQS</span></strong></a></p>
<p>Runs on Amazon&rsquo;s cluster, so it can handle a ton of traffic.  Operated by Amazon, so it doesn&rsquo;t run locally. Not open source.</p>
<p><a href="http://activemq.apache.org/"><strong>Apache ActiveMQ</strong></a></p>
<p>Well-known. Persistent. Requires several installation steps and database tables.</p>
<p><a href="http://code.google.com/p/activemessaging*/wiki/ActiveMessaging"><strong>ActiveMessaging</strong></a></p>
<p>Rails plugin. Works with ActiveMQ and others. Requires external job server.</p>
<p><a href="http://pastie.textmate.org/private/vxqxcvv40omkrhvnzp6a"><strong><span class="caps">BBQ</span></strong></a></p>
<p>Nothing to install&hellip;involves only a single line of code! Doesn&rsquo;t work on Windows <span class="caps">NT4</span>.</p>
<p>如下是几篇介绍的文章：</p>
<p><a href="http://www.thewebfellas.com/blog/2008/1/17/queues">http://www.thewebfellas.com/blog/2008/1/17/queues</a></p>
<p><a href="http://nubyonrails.com/articles/about-this-blog-beanstalk-messaging-queue">http://nubyonrails.com/articles/about-this-blog-beanstalk-messaging-queue</a></p>]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2008-01-18 14:48:07</wp:post_date>
		<wp:post_date_gmt>2008-01-18 14:48:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e7%9a%84%e7%ad%96%e7%95%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中使用backgroundrb任务队列</title>
		<link>http://www.iceskysl.com/?p=194</link>
		<pubDate>Sun, 20 Jan 2008 16:20:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[<p>svn co&nbsp; &nbsp;&nbsp;&nbsp; http://svn.devjavu.com/backgroundrb/trunk&nbsp; &nbsp;&nbsp;&nbsp; backgroundrb <br />
rake backgroundrb:setup<br />
或者：script/plugin install svn://rubyforge.org//var/svn/backgroundrb</p>
<p><strong>可用资源：</strong><br />
http://www.infoq.com/cn/articles/BackgrounDRb<br />
http://backgroundrb.rubyforge.org/<br />
http://warpspire.com/tipsresources/programming/long-running-tasks-in-rails-backgroundrb/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>svn co&nbsp; &nbsp;&nbsp;&nbsp; http://svn.devjavu.com/backgroundrb/trunk&nbsp; &nbsp;&nbsp;&nbsp; backgroundrb <br />
rake backgroundrb:setup<br />
或者：script/plugin install svn://rubyforge.org//var/svn/backgroundrb</p>
<p><strong>可用资源：</strong><br />
http://www.infoq.com/cn/articles/BackgrounDRb<br />
http://backgroundrb.rubyforge.org/<br />
http://warpspire.com/tipsresources/programming/long-running-tasks-in-rails-backgroundrb/</p>]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2008-01-20 16:20:13</wp:post_date>
		<wp:post_date_gmt>2008-01-20 16:20:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8backgroundrb%e4%bb%bb%e5%8a%a1%e9%98%9f%e5%88%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_076ba6df7afc4a23e98d27e80dffa103</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.212.84</wp:comment_author_IP>
			<wp:comment_date>2008-01-20 16:33:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[奇怪的是：
MiddleMan.ask_work(:worker => :feed_async_worker, :worker_method => :add_feed, :data => @feed)
我这样在C中调用就是不成功,相当奇怪..

有晓得的麻烦告诉下。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>如何把用到的gems附到verdor中</title>
		<link>http://www.iceskysl.com/?p=195</link>
		<pubDate>Mon, 21 Jan 2008 16:46:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在本地装多少gems都无所谓，但是当在服务器上或者是 share host的时候，有的时候并不是您需要的gems都有安装的，这个时候，我们在想最好是在本地把需要的gems打包到vendor里面去，这样怎么迁移都不怕了。</p>
<p>于是google了一番，发现老外们已经实践过了，方法其实也不难，主要是要区分一些gems是无法做大的，但是其他的貌似都是可以的。</p>
<p>具体做法请参考如下这几个文章：</p>
<p>1、http://hideto.javaeye.com/blog/82235（中文介绍的，比较简短）</p>
<p><strong>2、http://rubygems.org/read/chapter/10（介绍gem命令的）</strong></p>
<p><strong>3、http://errtheblog.com/posts/50-vendor-everything（具体实现的）</strong></p>
<p>如上三篇文章。用到的命令主要就是gem，所以附带了上面那篇gem的参考：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>E:\Ysl\dev\1ster\vendor\gems&gt;gem&nbsp;unpack&nbsp;uuidtools&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Unpacked&nbsp;gem:&nbsp;<span class="string">'uuidtools-1.0.1'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>E:\Ysl\dev\1ster\vendor\gems&gt;gem&nbsp;unpack&nbsp;rio&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Unpacked&nbsp;gem:&nbsp;<span class="string">'rio-0.4.1'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>E:\Ysl\dev\1ster\vendor\gems&gt;ls&nbsp;&nbsp;</span></li>
    <li class=""><span>rio-0.4.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uuidtools-1.0.1&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>E:\Ysl\dev\1ster\vendor\gems&gt;&nbsp; <br />
    </span></li>
</ol>
</div>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在本地装多少gems都无所谓，但是当在服务器上或者是 share host的时候，有的时候并不是您需要的gems都有安装的，这个时候，我们在想最好是在本地把需要的gems打包到vendor里面去，这样怎么迁移都不怕了。</p>
<p>于是google了一番，发现老外们已经实践过了，方法其实也不难，主要是要区分一些gems是无法做大的，但是其他的貌似都是可以的。</p>
<p>具体做法请参考如下这几个文章：</p>
<p>1、http://hideto.javaeye.com/blog/82235（中文介绍的，比较简短）</p>
<p><strong>2、http://rubygems.org/read/chapter/10（介绍gem命令的）</strong></p>
<p><strong>3、http://errtheblog.com/posts/50-vendor-everything（具体实现的）</strong></p>
<p>如上三篇文章。用到的命令主要就是gem，所以附带了上面那篇gem的参考：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>E:\Ysl\dev\1ster\vendor\gems&gt;gem&nbsp;unpack&nbsp;uuidtools&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Unpacked&nbsp;gem:&nbsp;<span class="string">'uuidtools-1.0.1'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>E:\Ysl\dev\1ster\vendor\gems&gt;gem&nbsp;unpack&nbsp;rio&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Unpacked&nbsp;gem:&nbsp;<span class="string">'rio-0.4.1'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>E:\Ysl\dev\1ster\vendor\gems&gt;ls&nbsp;&nbsp;</span></li>
    <li class=""><span>rio-0.4.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uuidtools-1.0.1&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>E:\Ysl\dev\1ster\vendor\gems&gt;&nbsp; <br />
    </span></li>
</ol>
</div>]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2008-01-21 16:46:15</wp:post_date>
		<wp:post_date_gmt>2008-01-21 16:46:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e6%8a%8a%e7%94%a8%e5%88%b0%e7%9a%84gems%e9%99%84%e5%88%b0verdor%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.227.118</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 13:07:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[rake rails:freeze:gems表示把当前Gems安装的Rails Unpack到vendor/rails
rake rails:unfreeze则表示删除vendor/rails]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.227.118</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 13:07:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[第三方Rails插件我们可以用ruby script\\plugin install name来安装]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.227.118</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 13:07:53</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对于非Ruby的第三方库，只要是符合Rails插件格式的，如BlueCloth，我们可以在vendor/plugins下面运行gem unpack BlueCloth即可]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Open Flash Chart Plugin for Ruby on Rails - Graphs</title>
		<link>http://www.iceskysl.com/?p=196</link>
		<pubDate>Thu, 24 Jan 2008 10:54:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[<p>刚刚写完上一篇文章<a href="http://www.itechtag.com/groups/32/posts/104">Open flash chart 生成动态有一些交互效果的图表</a> ,因为其实用PHP做为例子来演示的，偶还想用RubyOnRails来改写一把，down下他的zip包，发现有两个ruby的类库，一个是作者自己写的，比较简陋；而另外一个是<a href="http://pullmonkey.com/">pullmonkey</a> 写的，看了下代码和readme，发现他已经用RoR实现了。 去他的网站上看看，果然又有更新，看下其效果，相当不错。 <img alt="" src="http://lh3.google.com/iceskysl/R5f5pShC_dI/AAAAAAAABPo/sQlP8UpCwxk/chart.png" /></p>
<p><img alt="" src="http://lh4.google.com/iceskysl/R5f5pihC_eI/AAAAAAAABPw/hCjTNlrOBeI/chart2.png" /></p>
<p><img alt="" src="http://lh4.google.com/iceskysl/R5f6SihC_fI/AAAAAAAABP4/oJBjhWFnXvY/chart3.png" /></p>
<blockquote>
<p>I ported the php code for open flash chart to ruby and so far it has worked quite well with Rails. Just ported the latest 1.9.6 version &ndash; see the many graph examples below. To install and use the open flash chart plugin for Rails do the following:</p>
</blockquote>
<ol>
    <li>script/plugin install <a href="http://svn.pullmonkey.com/plugins/trunk/open_flash_chart/">http://svn.pullmonkey.com/plugins/trunk/open_flash_chart/</a></li>
    <li>Move the open_flash_chart.swf file into your <span class="caps">RAILS</span>_ROOT/public directory</li>
    <li>Create a controller and a view as in my examples below.</li>
</ol>
<p>可以在<a href="http://pullmonkey.com/projects/open_flash_chart">http://pullmonkey.com/projects/open_flash_chart</a>  查看详细的代码和示例。</p>
<p>看一段3D bar的代码，如下：<code><br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;view&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="variable">@graph</span><span>&nbsp;=&nbsp;open_flash_chart_object(500,250,&nbsp;</span><span class="string">'/projects/open_flash_chart/bar_3d'</span><span>,&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">'/projects/'</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;bar_3d&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red&nbsp;=&nbsp;Bar3d.<span class="keyword">new</span><span>(75,&nbsp;</span><span class="string">'#D54C78'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red.key(<span class="string">'2006'</span><span>,&nbsp;10)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue&nbsp;=&nbsp;Bar3d.<span class="keyword">new</span><span>(75,&nbsp;</span><span class="string">'#3334AD'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue.key(<span class="string">'2007'</span><span>,&nbsp;10)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.times&nbsp;<span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red.data&nbsp;&lt;&lt;&nbsp;rand(3)&nbsp;+&nbsp;2&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue.data&nbsp;&lt;&lt;&nbsp;rand(4)&nbsp;+&nbsp;5&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;Graph.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.title(<span class="string">&quot;3D&nbsp;Bar&nbsp;Chart&quot;</span><span>,&nbsp;</span><span class="string">&quot;{font-size:20px;&nbsp;color:&nbsp;#FFFFFF;&nbsp;margin:&nbsp;5px;background-color:&nbsp;#505050;&nbsp;padding:5px;&nbsp;padding-left:&nbsp;20px;&nbsp;padding-right:&nbsp;20px;}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.data_sets&nbsp;&lt;&lt;&nbsp;bar_red&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.data_sets&nbsp;&lt;&lt;&nbsp;bar_blue&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_axis_3d(12)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_axis_color(<span class="string">'#ffffff'</span><span>,&nbsp;</span><span class="string">'#fDB5C7'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_axis_color(<span class="string">'#ffffff'</span><span>,&nbsp;</span><span class="string">'#fDB5C7'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_labels(%w(Jan&nbsp;Feb&nbsp;Mar&nbsp;Apr&nbsp;May&nbsp;Jun&nbsp;Jul&nbsp;Aug&nbsp;Sep&nbsp;Oct))&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_max(10)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_label_steps(5)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_legend(<span class="string">&quot;OPEN&nbsp;FLASH&nbsp;CHART&quot;</span><span>,&nbsp;12,&nbsp;</span><span class="string">&quot;#736AFF&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render&nbsp;<span class="symbol">:text</span><span>&nbsp;=&gt;&nbsp;g.render&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</code></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>刚刚写完上一篇文章<a href="http://www.itechtag.com/groups/32/posts/104">Open flash chart 生成动态有一些交互效果的图表</a> ,因为其实用PHP做为例子来演示的，偶还想用RubyOnRails来改写一把，down下他的zip包，发现有两个ruby的类库，一个是作者自己写的，比较简陋；而另外一个是<a href="http://pullmonkey.com/">pullmonkey</a> 写的，看了下代码和readme，发现他已经用RoR实现了。 去他的网站上看看，果然又有更新，看下其效果，相当不错。 <img alt="" src="http://lh3.google.com/iceskysl/R5f5pShC_dI/AAAAAAAABPo/sQlP8UpCwxk/chart.png" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<ol>
    <li>script/plugin install <a href="http://svn.pullmonkey.com/plugins/trunk/open_flash_chart/">http://svn.pullmonkey.com/plugins/trunk/open_flash_chart/</a></li>
    <li>Move the open_flash_chart.swf file into your <span class="caps">RAILS</span>_ROOT/public directory</li>
    <li>Create a controller and a view as in my examples below.</li>
</ol>
<p>可以在<a href="http://pullmonkey.com/projects/open_flash_chart">http://pullmonkey.com/projects/open_flash_chart</a>  查看详细的代码和示例。</p>
<p>看一段3D bar的代码，如下：<code><br />
</code></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;view&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="variable">@graph</span><span>&nbsp;=&nbsp;open_flash_chart_object(500,250,&nbsp;</span><span class="string">'/projects/open_flash_chart/bar_3d'</span><span>,&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="string">'/projects/'</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;bar_3d&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red&nbsp;=&nbsp;Bar3d.<span class="keyword">new</span><span>(75,&nbsp;</span><span class="string">'#D54C78'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red.key(<span class="string">'2006'</span><span>,&nbsp;10)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue&nbsp;=&nbsp;Bar3d.<span class="keyword">new</span><span>(75,&nbsp;</span><span class="string">'#3334AD'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue.key(<span class="string">'2007'</span><span>,&nbsp;10)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.times&nbsp;<span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_red.data&nbsp;&lt;&lt;&nbsp;rand(3)&nbsp;+&nbsp;2&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar_blue.data&nbsp;&lt;&lt;&nbsp;rand(4)&nbsp;+&nbsp;5&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;Graph.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.title(<span class="string">&quot;3D&nbsp;Bar&nbsp;Chart&quot;</span><span>,&nbsp;</span><span class="string">&quot;{font-size:20px;&nbsp;color:&nbsp;#FFFFFF;&nbsp;margin:&nbsp;5px;background-color:&nbsp;#505050;&nbsp;padding:5px;&nbsp;padding-left:&nbsp;20px;&nbsp;padding-right:&nbsp;20px;}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.data_sets&nbsp;&lt;&lt;&nbsp;bar_red&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.data_sets&nbsp;&lt;&lt;&nbsp;bar_blue&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_axis_3d(12)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_axis_color(<span class="string">'#ffffff'</span><span>,&nbsp;</span><span class="string">'#fDB5C7'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_axis_color(<span class="string">'#ffffff'</span><span>,&nbsp;</span><span class="string">'#fDB5C7'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_x_labels(%w(Jan&nbsp;Feb&nbsp;Mar&nbsp;Apr&nbsp;May&nbsp;Jun&nbsp;Jul&nbsp;Aug&nbsp;Sep&nbsp;Oct))&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_max(10)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_label_steps(5)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g.set_y_legend(<span class="string">&quot;OPEN&nbsp;FLASH&nbsp;CHART&quot;</span><span>,&nbsp;12,&nbsp;</span><span class="string">&quot;#736AFF&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render&nbsp;<span class="symbol">:text</span><span>&nbsp;=&gt;&nbsp;g.render&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2008-01-24 10:54:00</wp:post_date>
		<wp:post_date_gmt>2008-01-24 10:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>open-flash-chart-plugin-for-ruby-on-rails-graphs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>突然感觉到picasaweb的速度好快！</title>
		<link>http://www.iceskysl.com/?p=197</link>
		<pubDate>Thu, 24 Jan 2008 11:16:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[<p>我很早前就开始使用<a href="http://picasaweb.google.com/home">picasaweb，</a>但是以前老觉得速度慢，加上上传速度都比较一般，所以用的时间不是很多。</p>
<p>但是最近发现（特别是今天），上传的时候相当快，而且在其他页面引用显示的时候也相当快的，前些时间，看到很多人说google日历、gmail都加速了，加上现在我感觉的picasaweb的加速，google又要有所大的举动了，难道。。</p>
<p>加速当然是好事，以后我在<a href="http://www.itechtag.com/">技能云</a>上<a href="http://www.itechtag.com/forums">发文章</a>的时候，都是把需要的图片upload到picasaweb上，再引用的，这样很好。</p>
<p>一来可以保存自我图片到google，比较安全；</p>
<p>二来不用在技能云上传图片啥的，节省空间不说，也减少维护的繁琐。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>我很早前就开始使用<a href="http://picasaweb.google.com/home">picasaweb，</a>但是以前老觉得速度慢，加上上传速度都比较一般，所以用的时间不是很多。</p>
<p>但是最近发现（特别是今天），上传的时候相当快，而且在其他页面引用显示的时候也相当快的，前些时间，看到很多人说google日历、gmail都加速了，加上现在我感觉的picasaweb的加速，google又要有所大的举动了，难道。。</p>
<p>加速当然是好事，以后我在<a href="http://www.itechtag.com/">技能云</a>上<a href="http://www.itechtag.com/forums">发文章</a>的时候，都是把需要的图片upload到picasaweb上，再引用的，这样很好。</p>
<p>一来可以保存自我图片到google，比较安全；</p>
<p>二来不用在技能云上传图片啥的，节省空间不说，也减少维护的繁琐。</p>]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date>2008-01-24 11:16:43</wp:post_date>
		<wp:post_date_gmt>2008-01-24 11:16:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%aa%81%e7%84%b6%e6%84%9f%e8%a7%89%e5%88%b0picasaweb%e7%9a%84%e9%80%9f%e5%ba%a6%e5%a5%bd%e5%bf%ab%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>遇到一个很奇怪Rails logger的问题～</title>
		<link>http://www.iceskysl.com/?p=198</link>
		<pubDate>Fri, 25 Jan 2008 10:19:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近<a href="http://www.itechtag.com/">技能云</a>遇到一个很奇怪的问题，每天凌晨的时候，转换日志的时候都会出现一些问题，导致应用程序无法访问，每次都是重启后才能恢复，相当怪异。</p>
<p>理了下，应该是从我使用backgroundrb任务队列以后开始的，原来是没有问题的，每天凌晨的时候会自动切换日志文件名称。</p>
<p>而我在<a href="http://iceskysl.1sters.com/?action=show&amp;id=194">backgroundrb</a>里面是定时的同步用户的Feeds用的，会调用相关的model中的方法解析RSS，入库等操作，自然这个过程中也是有日志的。</p>
<p>看到报的错误如下：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span><strong>Logger::ShiftingError&nbsp;(Shifting&nbsp;failed.&nbsp;</strong>'/home/iceskysl/itechtag/config/../log/sql/production_2008-01-24.log.20080124'&nbsp;already&nbsp;exists.):&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:501:in&nbsp;`write'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/monitor.rb:238:in&nbsp;`synchronize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:496:in&nbsp;`write'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:326:in&nbsp;`add'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:348:in&nbsp;`debug'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract_adapter.rb:134:in&nbsp;`log_info'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract_adapter.rb:127:in&nbsp;`log'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/mysql_adapter.rb:243:in&nbsp;`execute'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/mysql_adapter.rb:399:in&nbsp;`select'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in&nbsp;`select_one'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in&nbsp;`select_value'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:212:in&nbsp;`execute_simple_calculation'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:121:in&nbsp;`calculate'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:117:in&nbsp;`catch'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:117:in&nbsp;`calculate'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:45:in&nbsp;`count'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/models/motto.rb:9:in&nbsp;`get_rand'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/application.rb:35:in&nbsp;`get_rand_motto'&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>看到的提示是<strong>&ldquo;Logger::ShiftingError (Shifting failed. '/home/iceskysl/itechtag</strong></p>
<p>&nbsp;</p>
<div id="1es3" class="ArwC7c ckChnd"><wbr></wbr><strong>/config/../log/sql/production</strong><wbr></wbr><strong>_2008-01-24.log.20080124' already exists.):&rdquo;<br />
</strong>看上去感觉是在1.25号凌晨的时候，将原来的日志改名为production_2008-01-24.log.20080124，而此时已经存在名字为&ldquo;production_2008-01-24.log.20080124&rdquo;的文件，导致改名失败的。<br />
但是这个&ldquo;production_2008-01-24.log.20080124&rdquo;是哪里来的呢？backgroundrb应该是没有进行改名操作的。<br />
<br />
于是乎开始google，找到有类似问题的文章如下：<br />
1、<a href="http://blog.zmok.net/articles/2007/02/14/rails-application-does-not-working-no-error-displayed-just-error-code-500">Rails application not working, no error displayed, just error code 500</a><br />
错误基本上是一样的，但是这个文章没有仔细说是什么原因，只说了：<br />
<blockquote>  And the problem was almost solved - problem with log rotation.  <br />
So, if you face the same problem, try to perform few operations in your rails console... and if you are lucky, you will find the bug.<br />
</blockquote>也就是说是日志rotation的时候的问题。<br />
2、<a href="http://maintainable.com/articles/rails_logging_tips">Rails Logging Tips</a><br />
这篇文章说了一些Rails中使用logger的技巧，没有说到这个问题，只是让我更清楚logg的机制。<br />
3、<a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/147782">Strange logger rotation failure</a><br />
这个邮件列表说了基本上类似的问题，他的原因是由于配置了多个cronb，而导致的，说的比较详细。<br />
<br />
以上只是我的分析过程，而我遇到的这个问题，还有待进一步的分析和排查，有后续进展再补充。<br />
如果有遇到类似问题的朋友，还请指教一二，别让我重复造轮子，谢谢！</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近<a href="http://www.itechtag.com/">技能云</a>遇到一个很奇怪的问题，每天凌晨的时候，转换日志的时候都会出现一些问题，导致应用程序无法访问，每次都是重启后才能恢复，相当怪异。</p>
<p>理了下，应该是从我使用backgroundrb任务队列以后开始的，原来是没有问题的，每天凌晨的时候会自动切换日志文件名称。</p>
<p>而我在<a href="../../../?action=show&amp;id=194">backgroundrb</a>里面是定时的同步用户的Feeds用的，会调用相关的model中的方法解析RSS，入库等操作，自然这个过程中也是有日志的。</p>
<p>看到报的错误如下：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span><strong>Logger::ShiftingError&nbsp;(Shifting&nbsp;failed.&nbsp;</strong>'/home/iceskysl/itechtag/config/../log/sql/production_2008-01-24.log.20080124'&nbsp;already&nbsp;exists.):&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:501:in&nbsp;`write'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/monitor.rb:238:in&nbsp;`synchronize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:496:in&nbsp;`write'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:326:in&nbsp;`add'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/1.8/logger.rb:348:in&nbsp;`debug'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract_adapter.rb:134:in&nbsp;`log_info'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract_adapter.rb:127:in&nbsp;`log'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/mysql_adapter.rb:243:in&nbsp;`execute'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/mysql_adapter.rb:399:in&nbsp;`select'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract/database_statements.rb:13:in&nbsp;`select_one'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/connection_adapters/abstract/database_statements.rb:19:in&nbsp;`select_value'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:212:in&nbsp;`execute_simple_calculation'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:121:in&nbsp;`calculate'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:117:in&nbsp;`catch'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:117:in&nbsp;`calculate'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/ruby/gems/1.8/gems/activerecord-1.15.3/lib/active_record/calculations.rb:45:in&nbsp;`count'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/models/motto.rb:9:in&nbsp;`get_rand'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;/app/controllers/application.rb:35:in&nbsp;`get_rand_motto'&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>看到的提示是<strong>&ldquo;Logger::ShiftingError (Shifting failed. '/home/iceskysl/itechtag</strong></p>
<div id="1es3" class="ArwC7c ckChnd"><wbr></wbr><strong>/config/../log/sql/production</strong><wbr></wbr><strong>_2008-01-24.log.20080124' already exists.):&rdquo;<br />
</strong>看上去感觉是在1.25号凌晨的时候，将原来的日志改名为production_2008-01-24.log.20080124，而此时已经存在名字为&ldquo;production_2008-01-24.log.20080124&rdquo;的文件，导致改名失败的。<br />
但是这个&ldquo;production_2008-01-24.log.20080124&rdquo;是哪里来的呢？backgroundrb应该是没有进行改名操作的。<br />
<br />
于是乎开始google，找到有类似问题的文章如下：<br />
1、<a href="http://blog.zmok.net/articles/2007/02/14/rails-application-does-not-working-no-error-displayed-just-error-code-500">Rails application not working, no error displayed, just error code 500</a><br />
错误基本上是一样的，但是这个文章没有仔细说是什么原因，只说了：<br />
<blockquote>  And the problem was almost solved - problem with log rotation.    <br />
So, if you face the same problem, try to perform few operations in your rails console... and if you are lucky, you will find the bug.<br />
</blockquote> 也就是说是日志rotation的时候的问题。<br />
2、<a href="http://maintainable.com/articles/rails_logging_tips">Rails Logging Tips</a><br />
这篇文章说了一些Rails中使用logger的技巧，没有说到这个问题，只是让我更清楚logg的机制。<br />
3、<a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/147782">Strange logger rotation failure</a><br />
这个邮件列表说了基本上类似的问题，他的原因是由于配置了多个cronb，而导致的，说的比较详细。<br />
<br />
以上只是我的分析过程，而我遇到的这个问题，还有待进一步的分析和排查，有后续进展再补充。<br />
如果有遇到类似问题的朋友，还请指教一二，别让我重复造轮子，谢谢！</div>]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2008-01-25 10:19:06</wp:post_date>
		<wp:post_date_gmt>2008-01-25 10:19:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%81%87%e5%88%b0%e4%b8%80%e4%b8%aa%e5%be%88%e5%a5%87%e6%80%aarails-logger%e7%9a%84%e9%97%ae%e9%a2%98%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[QQ空间代码]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.qqwaa.com</wp:comment_author_url>
			<wp:comment_author_IP>61.150.16.221</wp:comment_author_IP>
			<wp:comment_date>2008-04-03 15:41:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.212.153</wp:comment_author_IP>
			<wp:comment_date>2008-11-27 10:45:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[begin
      UPLOAD_FILE_LOGGER.info(args.join('|'))
    rescue Exception
    end
-可以这样捕获下异常，忽略掉。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.212.153</wp:comment_author_IP>
			<wp:comment_date>2008-11-27 10:46:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[其原因是：
One dispatcher rotates the log file and opens a new one, but the
other dispatchers still have the original file open. When requests
arrive at the other dispatchers, they try to rotate the file and fail
because it's already been done.
--也就是你开了多个rails实例的时候，很容易遇到。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>升级本地Rails到2.02版本</title>
		<link>http://www.iceskysl.com/?p=199</link>
		<pubDate>Sat, 26 Jan 2008 20:13:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Rails2版本出来已经有一段时间了，一直没来得及细看，也没有时间把以前写的几个APP升级到Rails2,今天突然心血来潮，就把本地的Rails升级到Rails2.02版本了。</p>
<p>并最先把<a href="http://www.1sters.net/">1.s.t</a>的系统升级调试过了，途中遇到几个小问题，记录如下：</p>
<p><strong>1、升级Rails2.02的时候遇到的</strong></p>
<p>升级前，版本如下：</p>
<blockquote><font face="Courier New">iceskysl@IceskYsl:~$ gem -v</font><br />
<font face="Courier New">0.93</font><br />
<font face="Courier New">iceskysl@IceskYsl:~$ rails -v</font><br />
<font face="Courier New">Rails 1.2.5</font><br />
<font face="Courier New">iceskysl@IceskYsl:~$ ruby -v</font><br />
<font face="Courier New">ruby 1.8.6 (2007-03-13 patchlevel 0) [i686-linux]</font><br />
</blockquote>
<p>升级命令如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>iceskysl</span><span class="variable">@IceskYsl</span><span>:~$&nbsp;gem&nbsp;update&nbsp;--system&nbsp;&nbsp;</span></span></li>
    <li class=""><span>iceskysl<span class="variable">@IceskYsl</span><span>:~$&nbsp;gem&nbsp;update&nbsp;rails&nbsp;--include-dependencies&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
升级完，看下版本<br />
<font face="Courier New">iceskysl@IceskYsl:~$ </font>gem -v: 1.0.1<br />
<font face="Courier New">iceskysl@IceskYsl:~$ </font><font face="Courier New">rails -v</font></p>
<p><font face="Courier New">出现rubygems.rb:379:in `report_activate_error': RubyG<br />
em version error: activesupport(1.4.2 not = 2.0.2) (Gem::LoadError)错误，看来有点问题。</font></p>
<p><font face="Courier New">紧接着执行：</font><font face="Courier New">gem update activesupport即可。</font></p>
<p><strong><font face="Courier New">2、出现View的问题</font></strong></p>
<p><font face="Courier New">
<div class="codeText">
<div class="codeHead"><font>XML/RHTML代码</font></div>
<ol start="1" class="dp-xml"><font>
    <li class="alt"><span><span class="tag">&lt;</span><span>%=link_to&nbsp;h(@topic.title),group_topic_path(</span><span class="attribute">:group_id</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;@topic.group,&nbsp;</span><span class="attribute">:id</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;@topic),{</span><span class="attribute">:class</span><span>=</span><span class="tag">&gt;</span><span>&quot;notify_title&quot;}%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    </font></ol>
    </div>
    必须是</font><font face="Courier New"><font><span><span>group_topic_path这样的，不能象Rails1.2.5时候</span></span></font></font><font face="Courier New"><font><span><span>topic_path这样的，其他类似。</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>3、插件问题</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>类似auto_complete_for这个不在包含在Rails核心中，而是以插件的发布，需要安装一下，如下：</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>
    <div class="codeText">
    <div class="codeHead">SHELL代码</div>
    <ol start="1" class="dp-xml">
        <li class="alt"><span><span>iceskysl@IceskYsl:/opt/devroot/1sters.net$&nbsp;./script/plugin&nbsp;&nbsp;install&nbsp;http://dev.rubyonrails.org/svn/rails/plugins/auto_complete/&nbsp;&nbsp;</span></span></li>
    </ol>
    </div>
    还没发现其他问题，貌似没想像的那么多问题，可能是我代码写的比较好吧,:)<br />
    </span></span></font></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails2版本出来已经有一段时间了，一直没来得及细看，也没有时间把以前写的几个APP升级到Rails2,今天突然心血来潮，就把本地的Rails升级到Rails2.02版本了。</p>
<p>并最先把<a href="http://www.1sters.net/">1.s.t</a>的系统升级调试过了，途中遇到几个小问题，记录如下：</p>
<p><strong>1、升级Rails2.02的时候遇到的</strong></p>
<p>升级前，版本如下：</p>
<blockquote><font face="Courier New">iceskysl@IceskYsl:~$ gem -v</font><br />
<font face="Courier New">0.93</font><br />
<font face="Courier New">iceskysl@IceskYsl:~$ rails -v</font><br />
<font face="Courier New">Rails 1.2.5</font><br />
<font face="Courier New">iceskysl@IceskYsl:~$ ruby -v</font><br />
<font face="Courier New">ruby 1.8.6 (2007-03-13 patchlevel 0) [i686-linux]</font><br />
</blockquote>
<p>升级命令如下：</p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>iceskysl</span><span class="variable">@IceskYsl</span><span>:~$&nbsp;gem&nbsp;update&nbsp;--system&nbsp;&nbsp;</span></span></li>
    <li class=""><span>iceskysl<span class="variable">@IceskYsl</span><span>:~$&nbsp;gem&nbsp;update&nbsp;rails&nbsp;--include-dependencies&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>升级完，看下版本<br />
<font face="Courier New">iceskysl@IceskYsl:~$ </font>gem -v: 1.0.1<br />
<font face="Courier New">iceskysl@IceskYsl:~$ </font><font face="Courier New">rails -v</font></p>
<p><font face="Courier New">出现rubygems.rb:379:in `report_activate_error': RubyG<br />
em version error: activesupport(1.4.2 not = 2.0.2) (Gem::LoadError)错误，看来有点问题。</font></p>
<p><font face="Courier New">紧接着执行：</font><font face="Courier New">gem update activesupport即可。</font></p>
<p><strong><font face="Courier New">2、出现View的问题</font></strong></p>
<p><font face="Courier New">
<div class="codeText">
<div class="codeHead"><font>XML/RHTML代码</font></div>
<ol start="1" class="dp-xml"><font>
    <li class="alt"><span><span class="tag">&lt;</span><span>%=link_to&nbsp;h(@topic.title),group_topic_path(</span><span class="attribute">:group_id</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;@topic.group,&nbsp;</span><span class="attribute">:id</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;@topic),{</span><span class="attribute">:class</span><span>=</span><span class="tag">&gt;</span><span>&quot;notify_title&quot;}%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    </font></ol>
    </div>
    必须是</font><font face="Courier New"><font><span><span>group_topic_path这样的，不能象Rails1.2.5时候</span></span></font></font><font face="Courier New"><font><span><span>topic_path这样的，其他类似。</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>3、插件问题</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>类似auto_complete_for这个不在包含在Rails核心中，而是以插件的发布，需要安装一下，如下：</span></span></font></font></p>
    <p><font face="Courier New"><font><span><span>
    <div class="codeText">
    <div class="codeHead">SHELL代码</div>
    <ol start="1" class="dp-xml">
        <li class="alt"><span><span>iceskysl@IceskYsl:/opt/devroot/1sters.net$&nbsp;./script/plugin&nbsp;&nbsp;install&nbsp;http://dev.rubyonrails.org/svn/rails/plugins/auto_complete/&nbsp;&nbsp;</span></span></li>
    </ol>
    </div>
    还没发现其他问题，貌似没想像的那么多问题，可能是我代码写的比较好吧,:)</span></span></font></font></p>]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2008-01-26 20:13:28</wp:post_date>
		<wp:post_date_gmt>2008-01-26 20:13:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%87%e7%ba%a7%e6%9c%ac%e5%9c%b0rails%e5%88%b02-02%e7%89%88%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.40.126</wp:comment_author_IP>
			<wp:comment_date>2008-01-26 20:14:30</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里有一篇日文的PPT：
http://www.slideshare.net/xibbar/rails2-pr]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.40.126</wp:comment_author_IP>
			<wp:comment_date>2008-01-26 20:51:59</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[robbin 写了一篇，挺不错的。http://robbin.javaeye.com/blog/147397]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[ash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>125.118.128.99</wp:comment_author_IP>
			<wp:comment_date>2008-01-26 22:22:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[代码好，或者1.0后被慢慢废掉的东西用得不多，呵。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.137</wp:comment_author_IP>
			<wp:comment_date>2008-01-27 09:07:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[因为老早就关注Rails2,以及平时写的时候，做过一些注意，把一些废弃的都替换了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.137</wp:comment_author_IP>
			<wp:comment_date>2008-01-27 09:51:44</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一些需要注意的地方：
http://www.javaeye.com/topic/147789]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.137</wp:comment_author_IP>
			<wp:comment_date>2008-01-27 09:52:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rails2.0的官方plugins列表--从1.2中分离出来的一些功能
http://www.ruby-lang.org.cn/forums/thread-2829-1-1.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.137</wp:comment_author_IP>
			<wp:comment_date>2008-01-27 09:53:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://dev.rubyonrails.org/browser/plugins]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MySQL设置编码</title>
		<link>http://www.iceskysl.com/?p=200</link>
		<pubDate>Sun, 27 Jan 2008 21:17:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong><span class="postbody">1、在my.ini文件的</span><span class="postbody">中设置所有数据库编码</span></strong><span class="postbody"><br />
default-character-set=utf8<br />
<br />
<strong> 2、</strong></span><span class="postbody"><strong>单独设置某个数据库： <br />
</strong> alter database testdb character set utf8; <br />
</span></p>
<p><span class="postbody">
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>mysql&gt;&nbsp;alter&nbsp;database&nbsp;impsp&nbsp;character&nbsp;set&nbsp;utf8;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Query&nbsp;OK,&nbsp;1&nbsp;row&nbsp;affected&nbsp;(0.00&nbsp;sec)&nbsp; <br />
    </span></li>
</ol>
</div>
</span></p>
<p><span class="postbody"> </span><span class="postbody"><strong>3、查看<span class="hilite1">mysql</span>支持的编码： </strong><br />
show character set; </span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong><span class="postbody">1、在my.ini文件的</span><span class="postbody">中设置所有数据库编码</span></strong><span class="postbody"><br />
default-character-set=utf8<br />
<br />
<strong> 2、</strong></span><span class="postbody"><strong>单独设置某个数据库： <br />
</strong> alter database testdb character set utf8; <br />
</span></p>
<p><span class="postbody">
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>mysql&gt;&nbsp;alter&nbsp;database&nbsp;impsp&nbsp;character&nbsp;set&nbsp;utf8;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Query&nbsp;OK,&nbsp;1&nbsp;row&nbsp;affected&nbsp;(0.00&nbsp;sec)&nbsp; <br />
    </span></li>
</ol>
</div>
</span></p>
<p><span class="postbody"> </span><span class="postbody"><strong>3、查看<span class="hilite1">mysql</span>支持的编码： </strong><br />
show character set; </span></p>]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2008-01-27 21:17:33</wp:post_date>
		<wp:post_date_gmt>2008-01-27 21:17:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e8%ae%be%e7%bd%ae%e7%bc%96%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Upgrading your views to Rails 2.0</title>
		<link>http://www.iceskysl.com/?p=201</link>
		<pubDate>Mon, 28 Jan 2008 20:57:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[<p>升级后VIEW的后缀有改变，可以使用如下命令改.</p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">for</span><span>&nbsp;old&nbsp;</span><span class="keyword">in</span><span>&nbsp;`find&nbsp;app/views&nbsp;-name&nbsp;*.rhtml`;&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;svn&nbsp;mv&nbsp;<span class="variable">$old</span><span>&nbsp;`dirname&nbsp;</span><span class="variable">$old</span><span>`/`basename&nbsp;</span><span class="variable">$old</span><span>&nbsp;.rhtml`.html.erb;&nbsp;done&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>http://softiesonrails.com/2007/7/11/upgrading-your-views-to-rails-2-0</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>升级后VIEW的后缀有改变，可以使用如下命令改.</p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">for</span><span>&nbsp;old&nbsp;</span><span class="keyword">in</span><span>&nbsp;`find&nbsp;app/views&nbsp;-name&nbsp;*.rhtml`;&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;svn&nbsp;mv&nbsp;<span class="variable">$old</span><span>&nbsp;`dirname&nbsp;</span><span class="variable">$old</span><span>`/`basename&nbsp;</span><span class="variable">$old</span><span>&nbsp;.rhtml`.html.erb;&nbsp;done&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>http://softiesonrails.com/2007/7/11/upgrading-your-views-to-rails-2-0</p>]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2008-01-28 20:57:10</wp:post_date>
		<wp:post_date_gmt>2008-01-28 20:57:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-your-views-to-rails-2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>attachment_fu中callbacks_for方法出错解决！</title>
		<link>http://www.iceskysl.com/?p=202</link>
		<pubDate>Wed, 30 Jan 2008 13:34:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前天晚上，把&lsquo;<a href="http://www.itechtag.com/">技能云</a>&rsquo;升级到<a href="http://iceskysl.1sters.com/?action=show&amp;id=201">Rails2.02</a>版本后，只是大概的测试了下功能，把发现的问题予以修复，但是由于时间比肩紧急，没能全部覆盖到，昨天发现了不少<a href="http://code.google.com/p/itechtag/issues/list?can=1&amp;q=&amp;colspec=ID+Type+Status+Priority+Milestone+Owner+Summary&amp;cells=tiles">遗留问题</a>，都陆续的解决了，只有一个使用attachment_fu上传用户头像的地方还有些问题，下面是具体的分析和过程。</p>
<p>
<div class="codeText">
<div class="codeHead">错误日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Parameters:&nbsp;{&quot;commit&quot;=</span><span class="tag">&gt;</span><span>&quot;涓婁紶..&quot;,&nbsp;&quot;action&quot;=</span><span class="tag">&gt;</span><span>&quot;upload_user_pic&quot;,&nbsp;&quot;controller&quot;=</span><span class="tag">&gt;</span><span>&quot;user&quot;,&nbsp;&quot;asset&quot;=</span><span class="tag">&gt;</span><span>{&quot;uploaded_data&quot;=</span><span class="tag">&gt;</span><span>#</span><span class="tag">&lt;</span><span class="tag-name">ActionController::UploadedStringIO:0xb6435ee8</span><span class="tag">&gt;</span><span>,&nbsp;&quot;user_id&quot;=</span><span class="tag">&gt;</span><span>&quot;1&quot;}}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Error:undefined&nbsp;method&nbsp;`callbacks_for'&nbsp;for&nbsp;#<span class="tag">&lt;</span><span class="tag-name">Asset:0xb643149c</span><span class="tag">&gt;</span><span>銆傘&euro;?&nbsp;&nbsp;</span></span></li>
</ol>
</div>
从上面的作物日志可以看到，是调用<span>callbacks_for的时候出的问题，而我当时使用的</span>attachment_fu是比较老的版本，作者在后面更新过一次，于是：</p>
<p>1、首先更新版本，发现依然无法使用，还是类似的错误</p>
<p>2、在COR上<a href="http://chinaonrails.com/topic/view/1268.html">发个帖子</a>，大家都说自己的rmagick没有问题，奇怪的很。</p>
<p>3、Google下，找到有人遇到类似问题，如下：</p>
<ul>
    <li><a href="http://www.railsforum.com/viewtopic.php?pid=51607">attachment_fu: undefined method 'callbacks_for': updated</a></li>
    <li><a href="http://www.railsforum.ru/showthread.php?p=25">Побился attachment_fu</a></li>
</ul>
<p>而上面两个地址都给了另外一个页面的链接地址<a href="http://blog.methodmissing.com/2008/1/19/edge-callback-refactorings-attachment_fu/">&ldquo;Edge callback refactorings &amp;&amp; attachment_fu&quot;</a> ,看来找到问题了，在其页面上说到：
<div class="codeText">
<div class="codeHead">引用</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Edge&nbsp;changeset&nbsp;8664&nbsp;introduces&nbsp;ActiveSupport::Callbacks.&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>This&nbsp;currently&nbsp;breaks&nbsp;attachment_fu's&nbsp;callback&nbsp;internals&nbsp;and&nbsp;may&nbsp;affect&nbsp;other&nbsp;plugins&nbsp;as&nbsp;well&nbsp;...&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>哦，原来是Rails中的改动影响了这个插件，
<div class="codeText">
<div class="codeHead">改动message说明</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Extract&nbsp;ActiveSupport::Callbacks&nbsp;from&nbsp;Active&nbsp;Record,&nbsp;test&nbsp;case&nbsp;setup&nbsp;and&nbsp;teardown,&nbsp;and&nbsp;ActionController::Dispatcher.&nbsp;Closes&nbsp;#10727.&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>详细的你可以参考<a href="http://dev.rubyonrails.org/changeset/8664">这个页面</a>，我就不多说了，下面主要说说怎么解决。</p>
<p>按照上面给出的俄那个页面上的方法，做如下处理，将下面这段代码中的三个方法copy到attachment_fu中的attachment_fu.rb 中，覆盖其原来的<span><span>callback_with_args方法。</span></span></p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Technoweenie&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">module</span><span>&nbsp;AttachmentFu&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">module</span><span>&nbsp;InstanceMethods&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.included(&nbsp;base&nbsp;)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.define_callbacks&nbsp;*[<span class="symbol">:after_resize</span><span>,&nbsp;</span><span class="symbol">:after_attachment_saved</span><span>,&nbsp;</span><span class="symbol">:before_thumbnail_saved</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;callback_with_args(method,&nbsp;arg&nbsp;=&nbsp;</span><span class="keyword">self</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;notify(method)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;run_callbacks(method,&nbsp;{&nbsp;<span class="symbol">:object</span><span>&nbsp;=&gt;&nbsp;arg&nbsp;})&nbsp;{&nbsp;|result,&nbsp;object|&nbsp;result&nbsp;==&nbsp;</span><span class="keyword">false</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;result&nbsp;!=&nbsp;</span><span class="keyword">false</span><span>&nbsp;&amp;&amp;&nbsp;respond_to_without_attributes?(method)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;send(method)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;result&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;run_callbacks(kind,&nbsp;options&nbsp;=&nbsp;{},&nbsp;&amp;block)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.reverse_merge!(&nbsp;<span class="symbol">:object</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">self</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::ActiveSupport::Callbacks::Callback.run(<span class="keyword">self</span><span>.</span><span class="keyword">class</span><span>.send(</span><span class="string">&quot;#{kind}_callback_chain&quot;</span><span>),&nbsp;options[</span><span class="symbol">:object</span><span>],&nbsp;options,&nbsp;&amp;block)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
而后，需要确认下您的图片存放目录是可读写的，且其attachment_fu的申明需要指明图片处理器的名字，如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>has_attachment&nbsp;&nbsp;</span><span class="symbol">:storage</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:file_system</span><span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:max_size</span><span>&nbsp;=&gt;&nbsp;1.megabytes,&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:size</span><span>&nbsp;=&gt;&nbsp;1..1.megabyte,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:content_type</span><span>&nbsp;=&gt;&nbsp;&nbsp;</span><span class="symbol">:image</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:processor</span><span>&nbsp;=&gt;&nbsp;:MiniMagick,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:thumbnails</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:main</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'100x100&gt;'</span><span>,&nbsp;</span><span class="symbol">:thumb</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'60x60&gt;'</span><span>,&nbsp;</span><span class="symbol">:tiny</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'40x40&gt;'</span><span>&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:path_prefix</span><span>=&gt;</span><span class="string">'public/upload/user_pics'</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>其他应该就没什么问题了，到此完毕。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前天晚上，把&lsquo;<a href="http://www.itechtag.com/">技能云</a>&rsquo;升级到<a href="../../../?action=show&amp;id=201">Rails2.02</a>版本后，只是大概的测试了下功能，把发现的问题予以修复，但是由于时间比肩紧急，没能全部覆盖到，昨天发现了不少<a href="http://code.google.com/p/itechtag/issues/list?can=1&amp;q=&amp;colspec=ID+Type+Status+Priority+Milestone+Owner+Summary&amp;cells=tiles">遗留问题</a>，都陆续的解决了，只有一个使用attachment_fu上传用户头像的地方还有些问题，下面是具体的分析和过程。</p>
<div class="codeText">
<div class="codeHead">错误日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Parameters:&nbsp;{&quot;commit&quot;=</span><span class="tag">&gt;</span><span>&quot;涓婁紶..&quot;,&nbsp;&quot;action&quot;=</span><span class="tag">&gt;</span><span>&quot;upload_user_pic&quot;,&nbsp;&quot;controller&quot;=</span><span class="tag">&gt;</span><span>&quot;user&quot;,&nbsp;&quot;asset&quot;=</span><span class="tag">&gt;</span><span>{&quot;uploaded_data&quot;=</span><span class="tag">&gt;</span><span>#</span><span class="tag">&lt;</span><span class="tag-name">ActionController::UploadedStringIO:0xb6435ee8</span><span class="tag">&gt;</span><span>,&nbsp;&quot;user_id&quot;=</span><span class="tag">&gt;</span><span>&quot;1&quot;}}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Error:undefined&nbsp;method&nbsp;`callbacks_for'&nbsp;for&nbsp;#<span class="tag">&lt;</span><span class="tag-name">Asset:0xb643149c</span><span class="tag">&gt;</span><span>銆傘&euro;?&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>从上面的作物日志可以看到，是调用<span>callbacks_for的时候出的问题，而我当时使用的</span>attachment_fu是比较老的版本，作者在后面更新过一次，于是：</p>
<p>1、首先更新版本，发现依然无法使用，还是类似的错误</p>
<p>2、在COR上<a href="http://chinaonrails.com/topic/view/1268.html">发个帖子</a>，大家都说自己的rmagick没有问题，奇怪的很。</p>
<p>3、Google下，找到有人遇到类似问题，如下：</p>
<ul>
    <li><a href="http://www.railsforum.com/viewtopic.php?pid=51607">attachment_fu: undefined method 'callbacks_for': updated</a></li>
    <li><a href="http://www.railsforum.ru/showthread.php?p=25">Побился attachment_fu</a></li>
</ul>
<p>而上面两个地址都给了另外一个页面的链接地址<a href="http://blog.methodmissing.com/2008/1/19/edge-callback-refactorings-attachment_fu/">&ldquo;Edge callback refactorings &amp;&amp; attachment_fu&quot;</a> ,看来找到问题了，在其页面上说到：</p>
<div class="codeText">
<div class="codeHead">引用</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Edge&nbsp;changeset&nbsp;8664&nbsp;introduces&nbsp;ActiveSupport::Callbacks.&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>This&nbsp;currently&nbsp;breaks&nbsp;attachment_fu's&nbsp;callback&nbsp;internals&nbsp;and&nbsp;may&nbsp;affect&nbsp;other&nbsp;plugins&nbsp;as&nbsp;well&nbsp;...&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>哦，原来是Rails中的改动影响了这个插件，</p>
<div class="codeText">
<div class="codeHead">改动message说明</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Extract&nbsp;ActiveSupport::Callbacks&nbsp;from&nbsp;Active&nbsp;Record,&nbsp;test&nbsp;case&nbsp;setup&nbsp;and&nbsp;teardown,&nbsp;and&nbsp;ActionController::Dispatcher.&nbsp;Closes&nbsp;#10727.&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>详细的你可以参考<a href="http://dev.rubyonrails.org/changeset/8664">这个页面</a>，我就不多说了，下面主要说说怎么解决。</p>
<p>按照上面给出的俄那个页面上的方法，做如下处理，将下面这段代码中的三个方法copy到attachment_fu中的attachment_fu.rb 中，覆盖其原来的<span><span>callback_with_args方法。</span></span></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Technoweenie&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">module</span><span>&nbsp;AttachmentFu&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">module</span><span>&nbsp;InstanceMethods&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.included(&nbsp;base&nbsp;)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.define_callbacks&nbsp;*[<span class="symbol">:after_resize</span><span>,&nbsp;</span><span class="symbol">:after_attachment_saved</span><span>,&nbsp;</span><span class="symbol">:before_thumbnail_saved</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;callback_with_args(method,&nbsp;arg&nbsp;=&nbsp;</span><span class="keyword">self</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;notify(method)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;run_callbacks(method,&nbsp;{&nbsp;<span class="symbol">:object</span><span>&nbsp;=&gt;&nbsp;arg&nbsp;})&nbsp;{&nbsp;|result,&nbsp;object|&nbsp;result&nbsp;==&nbsp;</span><span class="keyword">false</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;result&nbsp;!=&nbsp;</span><span class="keyword">false</span><span>&nbsp;&amp;&amp;&nbsp;respond_to_without_attributes?(method)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;send(method)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;result&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;run_callbacks(kind,&nbsp;options&nbsp;=&nbsp;{},&nbsp;&amp;block)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.reverse_merge!(&nbsp;<span class="symbol">:object</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">self</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::ActiveSupport::Callbacks::Callback.run(<span class="keyword">self</span><span>.</span><span class="keyword">class</span><span>.send(</span><span class="string">&quot;#{kind}_callback_chain&quot;</span><span>),&nbsp;options[</span><span class="symbol">:object</span><span>],&nbsp;options,&nbsp;&amp;block)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>而后，需要确认下您的图片存放目录是可读写的，且其attachment_fu的申明需要指明图片处理器的名字，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>has_attachment&nbsp;&nbsp;</span><span class="symbol">:storage</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:file_system</span><span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:max_size</span><span>&nbsp;=&gt;&nbsp;1.megabytes,&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:size</span><span>&nbsp;=&gt;&nbsp;1..1.megabyte,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:content_type</span><span>&nbsp;=&gt;&nbsp;&nbsp;</span><span class="symbol">:image</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:processor</span><span>&nbsp;=&gt;&nbsp;:MiniMagick,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:thumbnails</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:main</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'100x100&gt;'</span><span>,&nbsp;</span><span class="symbol">:thumb</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'60x60&gt;'</span><span>,&nbsp;</span><span class="symbol">:tiny</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'40x40&gt;'</span><span>&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:path_prefix</span><span>=&gt;</span><span class="string">'public/upload/user_pics'</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>其他应该就没什么问题了，到此完毕。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2008-01-30 13:34:50</wp:post_date>
		<wp:post_date_gmt>2008-01-30 13:34:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>attachment_fu%e4%b8%adcallbacks_for%e6%96%b9%e6%b3%95%e5%87%ba%e9%94%99%e8%a7%a3%e5%86%b3%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>link_to中的小甜点</title>
		<link>http://www.iceskysl.com/?p=203</link>
		<pubDate>Wed, 30 Jan 2008 14:56:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[<p>升级後技能云的<a href="http://www.itechtag.com/companies">公司展示页面</a>出现一个<a href="http://code.google.com/p/itechtag/issues/detail?id=49">很奇怪的问题</a>，一直报告说：</p>
<pre>ActionView::TemplateError (undefined method `[]' for nil:NilClass)<br />on line #57 of companies/_cannot_edit_item.rhtml:<br />而这行却是没有代码的，真的奇怪的很。翻遍这个文件也没有发现什么可疑的地方，最后<br />没有办法就挨个的测试，发现有的公司展示页面是可以的，进数据库比较不同，发现有些<br />字段是没有值的，难道这个问题，于是挨个的加上值，测试，果然通过，后来再仔细看看<br />错误信息：<div class="codeText"><div class="codeHead">错误日志</div><ol start="1" class="dp-xml"><li class="alt"><span><span>vendor/rails/actionpack/lib/action_controller/url_rewriter.rb:96:in&nbsp;`rewrite_url'&nbsp;&nbsp;</span></span></li><li class=""><span>vendor/rails/actionpack/lib/action_controller/url_rewriter.rb:82:in&nbsp;`rewrite'&nbsp;&nbsp;</span></li><li class="alt"><span>vendor/rails/actionpack/lib/action_controller/base.rb:620:in&nbsp;`url_for'&nbsp;&nbsp;</span></li><li class=""><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:76:in&nbsp;`send'&nbsp;&nbsp;</span></li><li class="alt"><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:76:in&nbsp;`url_for'&nbsp;&nbsp;</span></li><li class=""><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:144:in&nbsp;`link_to'&nbsp;&nbsp;</span></li><li class="alt"><span>app/views/companies/_cannot_edit_item.rhtml:57:in&nbsp;&nbsp;</span></li><li class=""><span>n_erb_47app47views47companies47_cannot_edit_item46rhtml'&nbsp;&nbsp;</span></li></ol></div>看到<strong><span>url_for</span></strong>的身影，突然感觉到是那个公司地址的问题，再测，果然，如此，看看我的代码是这么写的》<br /><div class="codeText"><div class="codeHead">XML/HTML代码</div><ol start="1" class="dp-xml"><li class="alt"><span><span class="tag">&lt;</span><span>%=&nbsp;link_to&nbsp;website.link_url,&nbsp;website.link_url&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol></div>也就是，生成链接地址，但是当遇到这个字段为空的时候，就挂了，也就是上面这个错误的原因了。<br /><br />查看了下<strong>link_to </strong>的源代码，如下：<br /><div class="codeText"><div class="codeHead">link_to代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword">def</span><span>&nbsp;link_to(name,&nbsp;options&nbsp;=&nbsp;{},&nbsp;html_options&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;<span class="keyword">case</span><span>&nbsp;options&nbsp;&nbsp;</span></span></li><li class="alt"><span>139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">String</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options&nbsp;&nbsp;</span></li><li class="alt"><span>141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="symbol">:back</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@controller</span><span>.request.env[</span><span class="string">&quot;HTTP_REFERER&quot;</span><span>]&nbsp;||&nbsp;</span><span class="string">'javascript:history.back()'</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.<font color="#ff0000">url_for</font>(options)&nbsp;&nbsp;</span></span></li><li class="alt"><span>145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>146&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>147&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;html_options&nbsp;&nbsp;</span></span></li><li class=""><span>148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html_options&nbsp;=&nbsp;html_options.stringify_keys&nbsp;&nbsp;</span></li><li class="alt"><span>149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href&nbsp;=&nbsp;html_options[<span class="string">'href'</span><span>]&nbsp;&nbsp;</span></span></li><li class=""><span>150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convert_options_to_javascript!(html_options,&nbsp;url)&nbsp;&nbsp;</span></li><li class="alt"><span>151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag_options&nbsp;=&nbsp;tag_options(html_options)&nbsp;&nbsp;</span></li><li class=""><span>152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>153&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag_options&nbsp;=&nbsp;<span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>154&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>155&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href_attr&nbsp;=&nbsp;<span class="string">&quot;href=\&quot;#{url}\&quot;&quot;</span><span>&nbsp;</span><span class="keyword">unless</span><span>&nbsp;href&nbsp;&nbsp;</span></span></li><li class="alt"><span>157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;&lt;a&nbsp;#{href_attr}#{tag_options}&gt;#{name&nbsp;||&nbsp;url}&lt;/a&gt;&quot;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div>接着跟，如下：<div class="codeText"><div class="codeHead">url_for代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>65&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword">def</span><span>&nbsp;url_for(options&nbsp;=&nbsp;{})&nbsp;&nbsp;</span></span></li><li class=""><span>66&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;options&nbsp;&nbsp;</span></span></li><li class="alt"><span>67&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">Hash</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>68&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show_path&nbsp;=&nbsp;&nbsp;options[<span class="symbol">:host</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;?&nbsp;</span><span class="keyword">true</span><span>&nbsp;:&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>69&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options&nbsp;=&nbsp;{&nbsp;<span class="symbol">:only_path</span><span>&nbsp;=&gt;&nbsp;show_path&nbsp;}.update(options.symbolize_keys)&nbsp;&nbsp;</span></span></li><li class=""><span>70&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;&nbsp;=&nbsp;options.key?(<span class="symbol">:escape</span><span>)&nbsp;?&nbsp;options.delete(</span><span class="symbol">:escape</span><span>)&nbsp;:&nbsp;</span><span class="keyword">true</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>71&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span class="variable">@controller</span><span>.send(</span><span class="symbol">:url_for</span><span>,&nbsp;options)&nbsp;&nbsp;</span></span></

li><li class=""><span>72&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">String</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>73&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;=&nbsp;<span class="keyword">true</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>74&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;options&nbsp;&nbsp;</span></li><li class="alt"><span>75&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">NilClass</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>76&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;<span class="variable">@controller</span><span>.send(</span><span class="symbol">:url_for</span><span>,&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>78&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;=&nbsp;<span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>79&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;polymorphic_path(options)&nbsp;&nbsp;</span></li><li class=""><span>80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>81&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>82&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;?&nbsp;escape_once(url)&nbsp;:&nbsp;url&nbsp;&nbsp;</span></li><li class="alt"><span>83&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div>原来如此，豁然开朗。另外还看到:back这样的link_to用法，:)</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>升级後技能云的<a href="http://www.itechtag.com/companies">公司展示页面</a>出现一个<a href="http://code.google.com/p/itechtag/issues/detail?id=49">很奇怪的问题</a>，一直报告说：</p>
<pre>ActionView::TemplateError (undefined method `[]' for nil:NilClass)<br />on line #57 of companies/_cannot_edit_item.rhtml:<br />而这行却是没有代码的，真的奇怪的很。翻遍这个文件也没有发现什么可疑的地方，最后<br />没有办法就挨个的测试，发现有的公司展示页面是可以的，进数据库比较不同，发现有些<br />字段是没有值的，难道这个问题，于是挨个的加上值，测试，果然通过，后来再仔细看看<br />错误信息：<div class="codeText"><div class="codeHead">错误日志</div><ol start="1" class="dp-xml"><li class="alt"><span><span>vendor/rails/actionpack/lib/action_controller/url_rewriter.rb:96:in&nbsp;`rewrite_url'&nbsp;&nbsp;</span></span></li><li class=""><span>vendor/rails/actionpack/lib/action_controller/url_rewriter.rb:82:in&nbsp;`rewrite'&nbsp;&nbsp;</span></li><li class="alt"><span>vendor/rails/actionpack/lib/action_controller/base.rb:620:in&nbsp;`url_for'&nbsp;&nbsp;</span></li><li class=""><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:76:in&nbsp;`send'&nbsp;&nbsp;</span></li><li class="alt"><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:76:in&nbsp;`url_for'&nbsp;&nbsp;</span></li><li class=""><span>vendor/rails/actionpack/lib/action_view/helpers/url_helper.rb:144:in&nbsp;`link_to'&nbsp;&nbsp;</span></li><li class="alt"><span>app/views/companies/_cannot_edit_item.rhtml:57:in&nbsp;&nbsp;</span></li><li class=""><span>n_erb_47app47views47companies47_cannot_edit_item46rhtml'&nbsp;&nbsp;</span></li></ol></div>看到<strong><span>url_for</span></strong>的身影，突然感觉到是那个公司地址的问题，再测，果然，如此，看看我的代码是这么写的》<br /><div class="codeText"><div class="codeHead">XML/HTML代码</div><ol start="1" class="dp-xml"><li class="alt"><span><span class="tag">&lt;</span><span>%=&nbsp;link_to&nbsp;website.link_url,&nbsp;website.link_url&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol></div>也就是，生成链接地址，但是当遇到这个字段为空的时候，就挂了，也就是上面这个错误的原因了。<br /><br />查看了下<strong>link_to </strong>的源代码，如下：<br /><div class="codeText"><div class="codeHead">link_to代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword">def</span><span>&nbsp;link_to(name,&nbsp;options&nbsp;=&nbsp;{},&nbsp;html_options&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;<span class="keyword">case</span><span>&nbsp;options&nbsp;&nbsp;</span></span></li><li class="alt"><span>139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">String</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options&nbsp;&nbsp;</span></li><li class="alt"><span>141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="symbol">:back</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@controller</span><span>.request.env[</span><span class="string">&quot;HTTP_REFERER&quot;</span><span>]&nbsp;||&nbsp;</span><span class="string">'javascript:history.back()'</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.<font color="#ff0000">url_for</font>(options)&nbsp;&nbsp;</span></span></li><li class="alt"><span>145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>146&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>147&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;html_options&nbsp;&nbsp;</span></span></li><li class=""><span>148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html_options&nbsp;=&nbsp;html_options.stringify_keys&nbsp;&nbsp;</span></li><li class="alt"><span>149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href&nbsp;=&nbsp;html_options[<span class="string">'href'</span><span>]&nbsp;&nbsp;</span></span></li><li class=""><span>150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convert_options_to_javascript!(html_options,&nbsp;url)&nbsp;&nbsp;</span></li><li class="alt"><span>151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag_options&nbsp;=&nbsp;tag_options(html_options)&nbsp;&nbsp;</span></li><li class=""><span>152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>153&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag_options&nbsp;=&nbsp;<span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>154&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>155&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;href_attr&nbsp;=&nbsp;<span class="string">&quot;href=\&quot;#{url}\&quot;&quot;</span><span>&nbsp;</span><span class="keyword">unless</span><span>&nbsp;href&nbsp;&nbsp;</span></span></li><li class="alt"><span>157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;&lt;a&nbsp;#{href_attr}#{tag_options}&gt;#{name&nbsp;||&nbsp;url}&lt;/a&gt;&quot;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div>接着跟，如下：<br /><div class="codeText"><div class="codeHead">url_for代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>65&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword">def</span><span>&nbsp;url_for(options&nbsp;=&nbsp;{})&nbsp;&nbsp;</span></span></li><li class=""><span>66&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;options&nbsp;&nbsp;</span></span></li><li class="alt"><span>67&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">Hash</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>68&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show_path&nbsp;=&nbsp;&nbsp;options[<span class="symbol">:host</span><span>].</span><span class="keyword">nil</span><span>?&nbsp;?&nbsp;</span><span class="keyword">true</span><span>&nbsp;:&nbsp;</span><span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>69&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options&nbsp;=&nbsp;{&nbsp;<span class="symbol">:only_path</span><span>&nbsp;=&gt;&nbsp;show_path&nbsp;}.update(options.symbolize_keys)&nbsp;&nbsp;</span></span></li><li class=""><span>70&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;&nbsp;=&nbsp;options.key?(<span class="symbol">:escape</span><span>)&nbsp;?&nbsp;options.delete(</span><span class="symbol">:escape</span><span>)&nbsp;:&nbsp;</span><span class="keyword">true</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>71&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span class="variable">@controller</span><span>.send(</span><span class="symbol">:url_for</span><span>,&nbsp;options)&nbsp;&nbsp;</span></s

pan></li><li class=""><span>72&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">String</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>73&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;=&nbsp;<span class="keyword">true</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>74&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;options&nbsp;&nbsp;</span></li><li class="alt"><span>75&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;</span><span class="builtin">NilClass</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>76&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;=&nbsp;<span class="variable">@controller</span><span>.send(</span><span class="symbol">:url_for</span><span>,&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>78&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;=&nbsp;<span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>79&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;polymorphic_path(options)&nbsp;&nbsp;</span></li><li class=""><span>80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>81&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>82&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escape&nbsp;?&nbsp;escape_once(url)&nbsp;:&nbsp;url&nbsp;&nbsp;</span></li><li class="alt"><span>83&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div>原来如此，豁然开朗。另外还看到:back这样的link_to用法，:)</pre>]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2008-01-30 14:56:27</wp:post_date>
		<wp:post_date_gmt>2008-01-30 14:56:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>link_to%e4%b8%ad%e7%9a%84%e5%b0%8f%e7%94%9c%e7%82%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>使用XMPP4r在RubyOnRails中集成IM功能</title>
		<link>http://www.iceskysl.com/?p=204</link>
		<pubDate>Thu, 31 Jan 2008 10:53:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[<p>受到<a title="Frank" target="_blank" href="http://www.rubyfleebie.com/" id="hbsm">Frank</a>文章的感染，决定把我使用XMPP4r在RubyOnRails中集成IM的过程按照其写的两篇文章的流程整理、分享给大家，谢谢Frank。</p>
<p>本文根据Frank的风格，结合我在&ldquo;技能云&rdquo;中使用的实际过程写的，分成如下几个大的章节：</p>
<p>一、XMPP概念以及原理简介<br />
二、实现方法篇<br />
三、结合&ldquo;技能云&rdquo;演示</p>
<p>本文采用Google在线文档编写、发布的，格式比较简洁，且能随时更新和完善，就不在重复贴在这里了，文章地址如下，请自行查看：</p>
<p>&nbsp;<a href="https://docs.google.com/Doc?id=dhf86kr9_188gmpnw5hf" target="_blank">使用XMPP4r在RubyOnRails中集成IM功能</a></p>
<p>如果对文章有疑问或者有错误的地方，请在这里回复指出，我将尽快给予回复和完善，谢谢！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>受到<a title="Frank" target="_blank" href="http://www.rubyfleebie.com/" id="hbsm">Frank</a>文章的感染，决定把我使用XMPP4r在RubyOnRails中集成IM的过程按照其写的两篇文章的流程整理、分享给大家，谢谢Frank。</p>
<p>本文根据Frank的风格，结合我在&ldquo;技能云&rdquo;中使用的实际过程写的，分成如下几个大的章节：</p>
<p>一、XMPP概念以及原理简介<br />
二、实现方法篇<br />
三、结合&ldquo;技能云&rdquo;演示</p>
<p>本文采用Google在线文档编写、发布的，格式比较简洁，且能随时更新和完善，就不在重复贴在这里了，文章地址如下，请自行查看：</p>
<p>&nbsp;<a href="https://docs.google.com/Doc?id=dhf86kr9_188gmpnw5hf" target="_blank">使用XMPP4r在RubyOnRails中集成IM功能</a></p>
<p>如果对文章有疑问或者有错误的地方，请在这里回复指出，我将尽快给予回复和完善，谢谢！</p>]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2008-01-31 10:53:08</wp:post_date>
		<wp:post_date_gmt>2008-01-31 10:53:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8xmpp4r%e5%9c%a8rubyonrails%e4%b8%ad%e9%9b%86%e6%88%90im%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[xhan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xhan87@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>222.240.106.169</wp:comment_author_IP>
			<wp:comment_date>2008-09-03 22:12:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似打不开您的DOC
可以把内容转发我email不，谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[suke]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://shilailin@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>61.128.234.228</wp:comment_author_IP>
			<wp:comment_date>2008-09-10 14:52:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[打不开啊，能发到我邮箱不？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>下午开始尝试回长沙的可能性！</title>
		<link>http://www.iceskysl.com/?p=205</link>
		<pubDate>Sat, 02 Feb 2008 10:15:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[<div><font face="Verdana"><font size="2">下午我将去深圳火车站挤火车，如果形式良好，挤上火车，将离开深圳一段时间，到重灾区&ldquo;长沙&rdquo;慰问考察，指导工作。。</font></font></div>
<div>&nbsp;</div>
<div><font face="Verdana"><font size="2">期间水、电得不到保障，更没法连到互联网。。</font></font><font face="Verdana"><font size="2">会尽量带上手机和充电器，</font></font><font face="Verdana"><font size="2">抓住可能存在的机会充电，</font></font></div>
<div><font face="Verdana"><font size="2">在 移动信号 不中断的情况下，可以保持手机联通，</font></font><font face="Verdana"><font size="2">如果有我可以效劳的，还请酌情搔扰，多谢合作！</font></font></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<div><font face="Verdana"><font size="2">下午我将去深圳火车站挤火车，如果形式良好，挤上火车，将离开深圳一段时间，到重灾区&ldquo;长沙&rdquo;慰问考察，指导工作。。</font></font></div>
<div>&nbsp;</div>
<div><font face="Verdana"><font size="2">期间水、电得不到保障，更没法连到互联网。。</font></font><font face="Verdana"><font size="2">会尽量带上手机和充电器，</font></font><font face="Verdana"><font size="2">抓住可能存在的机会充电，</font></font></div>
<div><font face="Verdana"><font size="2">在 移动信号 不中断的情况下，可以保持手机联通，</font></font><font face="Verdana"><font size="2">如果有我可以效劳的，还请酌情搔扰，多谢合作！</font></font></div>]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2008-02-02 10:15:10</wp:post_date>
		<wp:post_date_gmt>2008-02-02 10:15:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8b%e5%8d%88%e5%bc%80%e5%a7%8b%e5%b0%9d%e8%af%95%e5%9b%9e%e9%95%bf%e6%b2%99%e7%9a%84%e5%8f%af%e8%83%bd%e6%80%a7%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[leonardleonard]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.person168.com</wp:comment_author_url>
			<wp:comment_author_IP>58.247.247.113</wp:comment_author_IP>
			<wp:comment_date>2008-02-02 13:29:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恩，祝一路顺风]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.61.186.74</wp:comment_author_IP>
			<wp:comment_date>2008-02-02 16:30:37</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[期间没法上网，如果技能云 不幸挂掉的话，请给我留言，谢谢。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>离开这几天？我是怎么度过的？</title>
		<link>http://www.iceskysl.com/?p=206</link>
		<pubDate>Mon, 11 Feb 2008 21:26:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[<p>本来没有打算回老家过年的，拿着<strong>1.31</strong>号的车票抱着试试看得心态<strong>2.2</strong>号去深圳火车站赶到长沙的火车，在地铁上，就想着肯定上不了车，这样赶去试试，如果人太多就退票留深圳过年了，甚至和<u>Shine</u>计划着以后几天在深圳的行程和安排，什么巴西烤肉啦，电影啦，花展啦啥的。</p>
<p>可是，不幸的是我们竟然一路狂奔过去，竟然恰巧赶上火车，于是踏上回长沙的旅程，看着窗外皑皑白雪，火车摇摇晃晃，跑了<strong>15</strong>个小时终于到站：长沙。</p>
<p>在长沙呆了一天，逛步行街的时候，不幸的事情发生了，买了不久的手机被小贼扒去了，虽然及时冻结了手机号码，无奈的是手机上的通讯录和拍的照片啥的全部丢失，可恶的小贼。（<font color="#ff0000">请各位朋友注意，以防欺骗！</font>）</p>
<p><em>（目前，挂失的号码，已经重新开通，号码不变，正在物色新的手机,希望我的朋友们把自己的号码发到我邮箱吧 iceskysl@gmail.com）</em></p>
<p>2.5号赶上长沙会合肥的飞机，第一次坐飞机，好小的的飞机哦，呵呵，天上飞的果然比地上跑的快，1个小时10分钟就降落在合肥机场，快！</p>
<p>在合肥找到前天晚上到合肥的哥哥，坐上比平时价格<font color="#ff0000"><strong>翻了三倍</strong></font>的汽车，<strong>2.5</strong>号下午<strong>6.30</strong>分终于到家了。</p>
<p>家里都还挺好，新盖的房子也挺好的，希望父母能住着舒服安心，我也可以安心了。</p>
<p>好心的同时帮我预定了<strong>2.10</strong>号合肥到深圳的机票，一大早从家里出发，赶车到合肥，走的比较快，遭到了3个小时，竟然不能提前办理登机手续，又没吃饭，可恶的机场里面一盒大饼都要25元，真是强盗。寄存了行李，坐上一块钱的公交回合肥市找东西吃，路上遇到一个超市，下车买了填肚子的东西，真便宜，再BS下机场里面卖东西的。</p>
<p>2.10下午5点抵达深圳机场，这次飞机好大，大的有点恐怖，呵呵。。</p>
<p>我终于回来了，尽管背了本本，无奈没有网络，只能处于离网状态，回来后，一切恢复，新年新气象，本命年的我，今年要实现哪些目标呢？</p>
<p>嘻嘻～流水帐～～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本来没有打算回老家过年的，拿着<strong>1.31</strong>号的车票抱着试试看得心态<strong>2.2</strong>号去深圳火车站赶到长沙的火车，在地铁上，就想着肯定上不了车，这样赶去试试，如果人太多就退票留深圳过年了，甚至和<u>Shine</u>计划着以后几天在深圳的行程和安排，什么巴西烤肉啦，电影啦，花展啦啥的。</p>
<p>可是，不幸的是我们竟然一路狂奔过去，竟然恰巧赶上火车，于是踏上回长沙的旅程，看着窗外皑皑白雪，火车摇摇晃晃，跑了<strong>15</strong>个小时终于到站：长沙。</p>
<p>在长沙呆了一天，逛步行街的时候，不幸的事情发生了，买了不久的手机被小贼扒去了，虽然及时冻结了手机号码，无奈的是手机上的通讯录和拍的照片啥的全部丢失，可恶的小贼。（<font color="#ff0000">请各位朋友注意，以防欺骗！</font>）</p>
<p><em>（目前，挂失的号码，已经重新开通，号码不变，正在物色新的手机,希望我的朋友们把自己的号码发到我邮箱吧 iceskysl@gmail.com）</em></p>
<p>2.5号赶上长沙会合肥的飞机，第一次坐飞机，好小的的飞机哦，呵呵，天上飞的果然比地上跑的快，1个小时10分钟就降落在合肥机场，快！</p>
<p>在合肥找到前天晚上到合肥的哥哥，坐上比平时价格<font color="#ff0000"><strong>翻了三倍</strong></font>的汽车，<strong>2.5</strong>号下午<strong>6.30</strong>分终于到家了。</p>
<p>家里都还挺好，新盖的房子也挺好的，希望父母能住着舒服安心，我也可以安心了。</p>
<p>好心的同时帮我预定了<strong>2.10</strong>号合肥到深圳的机票，一大早从家里出发，赶车到合肥，走的比较快，遭到了3个小时，竟然不能提前办理登 机手续，又没吃饭，可恶的机场里面一盒大饼都要25元，真是强盗。寄存了行李，坐上一块钱的公交回合肥市找东西吃，路上遇到一个超市，下车买了填肚子的东 西，真便宜，再BS下机场里面卖东西的。</p>
<p>2.10下午5点抵达深圳机场，这次飞机好大，大的有点恐怖，呵呵。。</p>
<p>我终于回来了，尽管背了本本，无奈没有网络，只能处于离网状态，回来后，一切恢复，新年新气象，本命年的我，今年要实现哪些目标呢？</p>
<p>嘻嘻～流水帐～～</p>]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2008-02-11 21:26:36</wp:post_date>
		<wp:post_date_gmt>2008-02-11 21:26:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%a6%bb%e5%bc%80%e8%bf%99%e5%87%a0%e5%a4%a9%ef%bc%9f%e6%88%91%e6%98%af%e6%80%8e%e4%b9%88%e5%ba%a6%e8%bf%87%e7%9a%84%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[a4oft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.235.31</wp:comment_author_IP>
			<wp:comment_date>2008-02-12 23:56:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[同情你ING~~~
太可怜了~~~~~~
新年快乐~
别被不顺心的事情干扰了美好的心境~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[A4oft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.178.38</wp:comment_author_IP>
			<wp:comment_date>2008-02-13 19:46:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[个人推荐9@9r
philip的
比较不错~比较适合稍微懒点的人~
- -#
我下个机器就准备换他，样子挺酷~功能一般，不是智能机
不过手机智能貌似没什么用，都用电脑额~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.61.187.107</wp:comment_author_IP>
			<wp:comment_date>2008-02-13 23:25:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[拼写错误哦。。。

那个样子比较丑把？ 貌似待机很牛。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[a4oft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.77.214</wp:comment_author_IP>
			<wp:comment_date>2008-02-14 20:33:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这么帅的手机你居然说丑，无语一下~
反正我就喜欢这个类型的~~...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.8.35</wp:comment_author_IP>
			<wp:comment_date>2008-02-17 22:09:40</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[怪不得没收到俺信息
同情ING~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>xfce4面板丢失问题的解决</title>
		<link>http://www.iceskysl.com/?p=207</link>
		<pubDate>Tue, 12 Feb 2008 00:17:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[<p>本本上的Ubuntu一直都是使用的xfce桌面系统，突然发现面板不见了，赶紧找时间找找原因，找到相关的文章，其解决的方法是：</p>
<p>
<div class="codeText">
<div class="codeHead">引用</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>由于Xfce是模块化的，所以所有的元素都有独立的进程。你只需重启那些进程即可。如果你想确认他们会在下次登录是自行启动的话，检查注销对话框中的&rdquo;为下次登录保存会话&rdquo;选项有无选中。&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Panel&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xfce4-panel&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Taskbar&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xftaskbar4&nbsp;(Xfce&nbsp;4.2&nbsp;only)&nbsp;&nbsp;</span></li>
    <li class=""><span>Window&nbsp;Manager&mdash;&mdash;&mdash;xfwm4&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Desktop&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xfdesktop&nbsp;(can&nbsp;depend&nbsp;on&nbsp;the&nbsp;dbus&nbsp;service,&nbsp;Xfce&nbsp;4.4&nbsp;only)&nbsp;&nbsp;</span></li>
    <li class=""><span>Desktop&nbsp;menus&mdash;&mdash;&mdash;&mdash;xfdesktop&nbsp;&nbsp;</span></li>
</ol>
</div>
<font color="#ff0000"><strong>xfce4-panel&amp;</strong></font></p>
<p>1、http://www.linuxfans.org/bbs/viewthread.php?tid=93633</p>
<p>2、http://forum.ubuntu.org.cn/viewtopic.php?t=57203&amp;sid=e4c2459767a54961ee8c7e142e043da7</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本本上的Ubuntu一直都是使用的xfce桌面系统，突然发现面板不见了，赶紧找时间找找原因，找到相关的文章，其解决的方法是：</p>
<div class="codeText">
<div class="codeHead">引用</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>由于Xfce是模块化的，所以所有的元素都有独立的进程。你只需重启那些进程即可。如果你想确认他们会在下次登录是自行启动的话，检查注销对话框中的&rdquo;为下次登录保存会话&rdquo;选项有无选中。&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Panel&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xfce4-panel&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Taskbar&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xftaskbar4&nbsp;(Xfce&nbsp;4.2&nbsp;only)&nbsp;&nbsp;</span></li>
    <li class=""><span>Window&nbsp;Manager&mdash;&mdash;&mdash;xfwm4&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Desktop&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;xfdesktop&nbsp;(can&nbsp;depend&nbsp;on&nbsp;the&nbsp;dbus&nbsp;service,&nbsp;Xfce&nbsp;4.4&nbsp;only)&nbsp;&nbsp;</span></li>
    <li class=""><span>Desktop&nbsp;menus&mdash;&mdash;&mdash;&mdash;xfdesktop&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><font color="#ff0000"><strong>xfce4-panel&amp;</strong></font></p>
<p>1、http://www.linuxfans.org/bbs/viewthread.php?tid=93633</p>
<p>2、http://forum.ubuntu.org.cn/viewtopic.php?t=57203&amp;sid=e4c2459767a54961ee8c7e142e043da7</p>]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2008-02-12 00:17:13</wp:post_date>
		<wp:post_date_gmt>2008-02-12 00:17:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xfce4%e9%9d%a2%e6%9d%bf%e4%b8%a2%e5%a4%b1%e9%97%ae%e9%a2%98%e7%9a%84%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>手机掉了,选购中...</title>
		<link>http://www.iceskysl.com/?p=208</link>
		<pubDate>Wed, 13 Feb 2008 11:39:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=208</guid>
		<description></description>
		<content:encoded><![CDATA[<p>春节回家时，在逛街的时候，才买了4个月的手机丢了（<strong>联想i908</strong>），回来后第一件事情就是再选一款<strong>合适</strong>的手机，说实在的，选手机我真不是行家，上次买<strong>i908</strong>的时候就选了好久，最后还是买贵了不少，呵呵。这次按照我的需要关注了如下几个手机。</p>
<p><strong>一、个人需求</strong></p>
<p>个人对手机的需求不是很赶&ldquo;潮流&rdquo;，认为够用就可以了，价格自然是越低越好，第一次用的是联想的<strong>i716</strong>，折叠的，而后就是丢掉的<strong>i908</strong>，直板的。目前认为直板的比较方便，不喜欢滑盖的。喜欢<strong>简约大气</strong>的类型，不喜欢花里胡哨的。</p>
<p>个人喜欢在坐公交车的时候看<strong>看电子书</strong>（以前就是把PDF转成TXT直接看了不少技术文档）或者做些<strong>行程规划</strong>、<strong>事务处理</strong>（最好是联网的，以前手机不支持，非常喜欢这个功能），处理电子邮件（用的是<strong>Gmail，</strong>需要只是<strong>SSL</strong>和<strong>XHTML</strong>，以前的i908就不支持）。最好是有个拍照功能，喜欢随手拍些东西。最好有音乐功能（这两个貌似一般手机都支持了）。</p>
<p>我还是比较看重手机品牌的，联想的我用过两个，质量还行，诺基亚的市场份额说明其质量不错。</p>
<p><strong>二、筛选过程</strong></p>
<p><strong>1、联想i908</strong></p>
<p>&nbsp;</p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/14_280x210/857/ceClne0Kw7wsY.jpg" /></p>
<p>最先看的是丢掉的那款，联想i908，我买的时候是1500多，现在商场报价大概在1100左右，网络报价有的只有900的样子，价格降了不少。加上我还剩余其配件（电板一块，耳机，充电器啥的都还在），选择这款的原因是这些配件不会浪费掉（因为都还比较新，浪费了实在可惜）。</p>
<p><strong>2、诺基亚N70</strong></p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/14_280x210/345/ce310eIMdcjTM.jpg" /></p>
<p>这款机子我哥哥在用，试了下还是不错的，布局和功能都基本符合我的需求，且是一款智能手机（虽然不晓得用到的有多少，有朋友说 智能只是玩具，呵呵），价格大概在1700的样子，性价比还是挺不错的，</p>
<p><strong>3、诺基亚N73</strong></p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/4_280x210/469/cesvHES4PJf2.jpg" /></p>
<p>这款机子应该是很经典的啦，号称街机王，目前报价应该是2K以上，功能相当强大，也是一款智能手机。虽然上市有一段时间了，但是依然相当火爆。</p>
<p><strong>4、诺基亚 5310 XpressMusic</strong></p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/14_280x210/585/cepj007fjIEGs.jpg" /></p>
<p>这个手机我昨天在卖场看了下，商场给的价格还是2K以上，不过网上已经给出1900的价格，可是感觉太薄了，容易丢失。</p>
<p><strong>5、联想i909</strong></p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/14_280x210/375/ceVYdyCKDlvig.jpg" /></p>
<p>这个和i908差不多，估计原来的电池啥的还可以使用，屏幕大小也差不多，但是其定位是在&ldquo;游戏手机&rdquo;，我玩的不多。</p>
<p><strong>6、联想i968</strong></p>
<p><img alt="" src="http://imgm.cnmo.com/cnmo_product/14_280x210/324/cefElz0WkXgIs.jpg" /></p>
<p>号称可以和N73相抗衡的手机，但是那个 蓝色的颜色我不是很喜欢。</p>
<p><strong>7、iphone</strong></p>
<p><img alt="" src="http://img2.zol.com.cn/product/9_280x210/826/ceTJC3aB38Hig.jpg" /></p>
<p>这个只有看看的份，比较贵，且对其中文支持不放心，我不是mac迷，呵呵。</p>
<p>其他的都还没来得及看，也没没有最终确定，有谁使用过如上手机的，说说感受哈，也希望能有人推荐其他的哈。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>春节回家时，在逛街的时候，才买了4个月的手机丢了（<strong>联想i908</strong>），回来后第一件事情就是再选一款<strong>合适</strong>的手机，说实在的，选手机我真不是行家，上次买<strong>i908</strong>的时候就选了好久，最后还是买贵了不少，呵呵。这次按照我的需要关注了如下几个手机。</p>
<p><strong>一、个人需求</strong></p>
<p>个人对手机的需求不是很赶&ldquo;潮流&rdquo;，认为够用就可以了，价格自然是越低越好，第一次用的是联想的<strong>i716</strong>，折叠的，而后就是丢掉的<strong>i908</strong>，直板的。目前认为直板的比较方便，不喜欢滑盖的。喜欢<strong>简约大气</strong>的类型，不喜欢花里胡哨的。</p>
<p>个人喜欢在坐公交车的时候看<strong>看电子书</strong>（以前就是把PDF转成TXT直接看了不少技术文档）或者做些<strong>行程规划</strong>、<strong>事务处理</strong>（最好是联网的，以前手机不支持，非常喜欢这个功能），处理电子邮件（用的是<strong>Gmail，</strong>需要只是<strong>SSL</strong>和<strong>XHTML</strong>，以前的i908就不支持）。最好是有个拍照功能，喜欢随手拍些东西。最好有音乐功能（这两个貌似一般手机都支持了）。</p>
<p>我还是比较看重手机品牌的，联想的我用过两个，质量还行，诺基亚的市场份额说明其质量不错。</p>
<p><strong>二、筛选过程</strong></p>
<p><strong>1、联想i908</strong></p>
<p>最先看的是丢掉的那款，联想i908，我买的时候是1500多，现在商场报价大概在1100左右，网络报价有的只有900的样子，价格降了不少。加 上我还剩余其配件（电板一块，耳机，充电器啥的都还在），选择这款的原因是这些配件不会浪费掉（因为都还比较新，浪费了实在可惜）。</p>
<p><strong>2、诺基亚N70</strong><br />
这款机子我哥哥在用，试了下还是不错的，布局和功能都基本符合我的需求，且是一款智能手机（虽然不晓得用到的有多少，有朋友说 智能只是玩具，呵呵），价格大概在1700的样子，性价比还是挺不错的，</p>
<p><strong>3、诺基亚N73</strong><br />
这款机子应该是很经典的啦，号称街机王，目前报价应该是2K以上，功能相当强大，也是一款智能手机。虽然上市有一段时间了，但是依然相当火爆。</p>
<p><strong>4、诺基亚 5310 XpressMusic</strong><br />
这个手机我昨天在卖场看了下，商场给的价格还是2K以上，不过网上已经给出1900的价格，可是感觉太薄了，容易丢失。</p>
<p><strong>5、联想i909</strong><br />
这个和i908差不多，估计原来的电池啥的还可以使用，屏幕大小也差不多，但是其定位是在&ldquo;游戏手机&rdquo;，我玩的不多。</p>
<p><strong>6、联想i968</strong><br />
号称可以和N73相抗衡的手机，但是那个 蓝色的颜色我不是很喜欢。</p>
<p><strong>7、iphone</strong><br />
这个只有看看的份，比较贵，且对其中文支持不放心，我不是mac迷，呵呵。</p>
<p>其他的都还没来得及看，也没没有最终确定，有谁使用过如上手机的，说说感受哈，也希望能有人推荐其他的哈。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2008-02-13 11:39:12</wp:post_date>
		<wp:post_date_gmt>2008-02-13 11:39:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%89%8b%e6%9c%ba%e6%8e%89%e4%ba%86%e9%80%89%e8%b4%ad%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.8.35</wp:comment_author_IP>
			<wp:comment_date>2008-02-17 22:03:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[推荐诺基亚N73
在淘宝买1930左右。
我用的机子是6630也是S60系统。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.8.35</wp:comment_author_IP>
			<wp:comment_date>2008-02-17 22:04:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在网上pcpop it168 太平洋 查下经销商电话，深圳肯定会比较便宜，如果兄弟不喜欢网购的话]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>增加iTechTag的XSS防护功能</title>
		<link>http://www.iceskysl.com/?p=209</link>
		<pubDate>Wed, 13 Feb 2008 23:23:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[<p>XSS目前越来越疯狂，虽然Rails提供了<strong>h()</strong>辅助方法用来防护，但是万一忘记了，就有可能被XSS了，技能云开发的时间比较零碎，没有全部考虑、过滤，比较危险，今天采用xss_terminate用来搞定。</p>
<p>安装方法：<br />
script/plugin install http://xssterminate.googlecode.com/svn/trunk/xss_terminate</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>XSS目前越来越疯狂，虽然Rails提供了<strong>h()</strong>辅助方法用来防护，但是万一忘记了，就有可能被XSS了，技能云开发的时间比较零碎，没有全部考虑、过滤，比较危险，今天采用xss_terminate用来搞定。</p>
<p>安装方法：<br />
script/plugin install http://xssterminate.googlecode.com/svn/trunk/xss_terminate</p>]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2008-02-13 23:23:10</wp:post_date>
		<wp:post_date_gmt>2008-02-13 23:23:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a2%9e%e5%8a%a0itechtag%e7%9a%84xss%e9%98%b2%e6%8a%a4%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在RubyOnRails中实现syntax highlighter</title>
		<link>http://www.iceskysl.com/?p=210</link>
		<pubDate>Fri, 15 Feb 2008 10:48:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在我们平时开发基于WEB的系统时，有的时候需要对需要展示的源代码做些格式化、语法分析和高亮着色，比如在blog程序中贴技术文章时，在论坛中 讨论问 题的时候，不可避免的会贴出一些代码加以辅助说明，而如果能对该代码段进行语法分析和着色，效果会更加一目了然；Rails世界向来以选择的多样性著称， 如下列举几个可行的syntax highlighter，希望对您有所帮助。</p>
<p><a id="dd8i" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFSyntax_highlighting" title="一、什么是Syntax_highlighting">一、什么是Syntax_highlighting</a> <br />
<a id="ujrc" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%BA%8C%E3%80%81Syntax_highlighting%E7%9A%84%E5%8E%9F%E7%90%86" title="二、Syntax_highlighting的原理">二、Syntax_highlighting的原理</a> <br />
<a id="r26h" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%B8%89%E3%80%81%E5%87%A0%E4%B8%AA%E5%8F%AF%E7%94%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95" title="三、几个可用的实现方法">三、几个可用的实现方法</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="ytf3" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#1%E3%80%81GeSHi" title="1、GeSHi">1、GeSHi</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="r.z3" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#2%E3%80%81Syntax_Highlighter" title="2、Syntax_Highlighter">2、Syntax_Highlighter</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="lsmy" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#3%E3%80%81Highlight.js" title="3、Highlight.js">3、Highlight.js</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="rhlp" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#4%E3%80%81Ultraviolet" title="4、Ultraviolet">4、Ultraviolet</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="tpwg" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#5%E3%80%81ColourCode" title="5、ColourCode">5、ColourCode</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="jm_i" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#6%E3%80%81CodeRay" title="6、CodeRay">6、CodeRay</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="o.fg" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#7%E3%80%81SHJS" title="7、SHJS">7、SHJS</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="g4e2" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#8%E3%80%81google-code-prettify" title="8、google-code-prettify">8、google-code-prettify</a> <br />
<a id="an5t" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93" title="四、总结">四、总结</a></p>
<p>本文采用Google在线文档编写、发布的，格式比较简洁，且能随时更新和完善，就不在重复贴在这里了，文章地址如下，请自行查看：</p>
<p><a target="_blank" href="http://docs.google.com/Doc?id=dhf86kr9_229g86m7ndg">&nbsp;在RubyOnRails中实现syntax highlighter</a></p>
<p>如果对文章有疑问或者有错误的地方，请在这里回复指出，我将尽快给予回复和完善，谢谢！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在我们平时开发基于WEB的系统时，有的时候需要对需要展示的源代码做些格式化、语法分析和高亮着色，比如在blog程序中贴技术文章时，在论坛中 讨论问 题的时候，不可避免的会贴出一些代码加以辅助说明，而如果能对该代码段进行语法分析和着色，效果会更加一目了然；Rails世界向来以选择的多样性著称， 如下列举几个可行的syntax highlighter，希望对您有所帮助。</p>
<p><a id="dd8i" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFSyntax_highlighting" title="一、什么是Syntax_highlighting">一、什么是Syntax_highlighting</a> <br />
<a id="ujrc" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%BA%8C%E3%80%81Syntax_highlighting%E7%9A%84%E5%8E%9F%E7%90%86" title="二、Syntax_highlighting的原理">二、Syntax_highlighting的原理</a> <br />
<a id="r26h" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E4%B8%89%E3%80%81%E5%87%A0%E4%B8%AA%E5%8F%AF%E7%94%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95" title="三、几个可用的实现方法">三、几个可用的实现方法</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="ytf3" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#1%E3%80%81GeSHi" title="1、GeSHi">1、GeSHi</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="r.z3" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#2%E3%80%81Syntax_Highlighter" title="2、Syntax_Highlighter">2、Syntax_Highlighter</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="lsmy" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#3%E3%80%81Highlight.js" title="3、Highlight.js">3、Highlight.js</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="rhlp" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#4%E3%80%81Ultraviolet" title="4、Ultraviolet">4、Ultraviolet</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="tpwg" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#5%E3%80%81ColourCode" title="5、ColourCode">5、ColourCode</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="jm_i" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#6%E3%80%81CodeRay" title="6、CodeRay">6、CodeRay</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="o.fg" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#7%E3%80%81SHJS" title="7、SHJS">7、SHJS</a> <br />
&nbsp;&nbsp;&nbsp;&nbsp;<a id="g4e2" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#8%E3%80%81google-code-prettify" title="8、google-code-prettify">8、google-code-prettify</a> <br />
<a id="an5t" href="https://docs.google.com/RawDocContents?docID=dhf86kr9_229g86m7ndg&amp;justBody=false&amp;revision=_latest&amp;timestamp=1203043407026&amp;editMode=true&amp;strip=true#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93" title="四、总结">四、总结</a></p>
<p>本文采用Google在线文档编写、发布的，格式比较简洁，且能随时更新和完善，就不在重复贴在这里了，文章地址如下，请自行查看：</p>
<p><a target="_blank" href="http://docs.google.com/Doc?id=dhf86kr9_229g86m7ndg">&nbsp;在RubyOnRails中实现syntax highlighter</a></p>
<p>如果对文章有疑问或者有错误的地方，请在这里回复指出，我将尽快给予回复和完善，谢谢！</p>]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2008-02-15 10:48:30</wp:post_date>
		<wp:post_date_gmt>2008-02-15 10:48:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rubyonrails%e4%b8%ad%e5%ae%9e%e7%8e%b0syntax-highlighter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Five Balls of Life</title>
		<link>http://www.iceskysl.com/?p=211</link>
		<pubDate>Mon, 18 Feb 2008 10:34:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[<p>偶然看到几个图片，虽然映像中以前见过，但是当再一次仔细的看的时候，我还是有些感慨，记录下来，希望看到此文的朋友，都能注意，共勉。</p>
<p>最开始是一张做的很难看，但是说的很对的PPT图片</p>
<p>&nbsp;</p>
<p><img src="http://lh5.google.com/iceskysl/R7js2Go4s9I/AAAAAAAAB7g/yjws2eHa3H0/116f4050823.jpg" alt="" /></p>
<p>&nbsp;</p>
<p><br />
然后找找来源，很快找到两张相关的图片，如下：<br />
<img src="http://lh4.google.com/iceskysl/R7js12o4s8I/AAAAAAAAB7Y/PssO0ZzP9YI/116f405524d.jpg" alt="" /></p>
<p>&nbsp;</p>
<p><img src="http://lh3.google.com/iceskysl/R7js1mo4s7I/AAAAAAAAB7Q/7k0kGRqqiOk/116f3f9b667.jpg" alt="" /></p>
<p>几年前，在一所大学的开幕典礼中,可口可乐的首席执行官布<strong>赖恩&middot;戴森</strong>讲到工作与其他义务的关系：</p>
<p align="left">想象生命是一场不停丢掷五个球于空中的游戏。这五个球分别为<strong>工作</strong>、<strong>家庭</strong>、<strong>健康</strong>、<strong>朋友</strong>和<strong>心灵</strong>，而且你很努力地掷着这五个球，不让它们落地。很快地你会了解工作是一个<u>橡皮</u>球。如果你不幸失手落下它，它还是会弹回来。</p>
<p>但是家庭、健康、朋友和心灵这四个球是用<u>玻璃</u>做成的。一旦你失手落下，它们可能会少了一角，留下无法挽回的记号、刻痕、损坏甚至碎落一地。它们将永远不会跟以前一样。你必须了解这个道理，并且为平衡你的生命而努力。但要怎么才做得到呢？</p>
<p>别拿自己和他人比较，这只会降低了你原有的价值。因为我们都是独一无二的，因为我们每一个人都很特别。</p>
<p><font color="#ff0000">别人认为重要的事不一定是你的目标，只有你才知道什么最适合你。</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>偶然看到几个图片，虽然映像中以前见过，但是当再一次仔细的看的时候，我还是有些感慨，记录下来，希望看到此文的朋友，都能注意，共勉。</p>
<p>最开始是一张做的很难看，但是说的很对的PPT图片</p>
<p>&nbsp;</p>
<p><img src="http://lh5.google.com/iceskysl/R7js2Go4s9I/AAAAAAAAB7g/yjws2eHa3H0/116f4050823.jpg" alt="" /></p>
<p>&nbsp;</p>
<p><br />
然后找找来源，很快找到两张相关的图片，如下：<br />
<img src="http://lh4.google.com/iceskysl/R7js12o4s8I/AAAAAAAAB7Y/PssO0ZzP9YI/116f405524d.jpg" alt="" /></p>
<p>&nbsp;</p>
<p><img src="http://lh3.google.com/iceskysl/R7js1mo4s7I/AAAAAAAAB7Q/7k0kGRqqiOk/116f3f9b667.jpg" alt="" /></p>
<p>几年前，在一所大学的开幕典礼中,可口可乐的首席执行官布<strong>赖恩&middot;戴森</strong>讲到工作与其他义务的关系：</p>
<p align="left">想象生命是一场不停丢掷五个球于空中的游戏。这五个球分别为<strong>工作</strong>、<strong>家庭</strong>、<strong>健康</strong>、<strong>朋友</strong>和<strong>心灵</strong>，而且你很努力地掷着这五个球，不让它们落地。很快地你会了解工作是一个<u>橡皮</u>球。如果你不幸失手落下它，它还是会弹回来。</p>
<p>但是家庭、健康、朋友和心灵这四个球是用<u>玻璃</u>做成的。一旦你失手落下，它们可能会少了一角，留下无法挽回的记号、刻痕、损坏甚至碎落一地。它们将永远不会跟以前一样。你必须了解这个道理，并且为平衡你的生命而努力。但要怎么才做得到呢？</p>
<p>别拿自己和他人比较，这只会降低了你原有的价值。因为我们都是独一无二的，因为我们每一个人都很特别。</p>
<p><font color="#ff0000">别人认为重要的事不一定是你的目标，只有你才知道什么最适合你。</font></p>]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2008-02-18 10:34:33</wp:post_date>
		<wp:post_date_gmt>2008-02-18 10:34:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>five-balls-of-life</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.131.229.74</wp:comment_author_IP>
			<wp:comment_date>2008-02-18 22:22:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很认同，稻盛和夫说要敬天爱人就是这个道理，应该珍惜爱你和所爱的人在一起的美好时光。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>linux之rm命令详解</title>
		<link>http://www.iceskysl.com/?p=212</link>
		<pubDate>Wed, 20 Feb 2008 09:28:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=212</guid>
		<description></description>
		<content:encoded><![CDATA[<p>[1sters@ iceskysl]$ rm --help<br />
<strong>用法：</strong>rm [选项]... 目录...<br />
删除指定的&lt;文件&gt;(即解除链接)。<br />
<br />
&nbsp; -d, --directory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 删除可能仍有数据的目录 (只限超级用户)<br />
&nbsp; -f, --force&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 略过不存在的文件，不显示任何信息<br />
&nbsp; -i, --interactive&nbsp;&nbsp;&nbsp;&nbsp; 进行任何删除操作前必须先确认<br />
&nbsp; -r, -R, --recursive&nbsp;&nbsp; 同时删除该目录下的所有目录层<br />
<strong>&nbsp; -v, --verbose&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 详细显示进行的步骤</strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --help&nbsp;&nbsp;&nbsp;&nbsp; 显示此帮助信息并离开<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --version&nbsp; 显示版本信息并离开<br />
<br />
要删除第一个字符为&lsquo;-&rsquo;的文件 (例如&lsquo;-foo&rsquo;)，请使用以下其中一种方法：<br />
&nbsp; rm -- -foo<br />
<br />
&nbsp; rm ./-foo<br />
<br />
请注意，如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。如果想保证<br />
该文件的内容无法还原，请考虑使用 shred。</p>
<p><strong>范例：</strong></p>
<p>删除所有rb语言程序档；删除前逐一询问确认 :<br />
rm -i *.rb<br />
<br />
将 Finished 子目录及子目录中所有档案删除 :<br />
rm -r Finished</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>[1sters@ iceskysl]$ rm --help<br />
<strong>用法：</strong>rm [选项]... 目录...<br />
删除指定的&lt;文件&gt;(即解除链接)。<br />
<br />
&nbsp; -d, --directory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 删除可能仍有数据的目录 (只限超级用户)<br />
&nbsp; -f, --force&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 略过不存在的文件，不显示任何信息<br />
&nbsp; -i, --interactive&nbsp;&nbsp;&nbsp;&nbsp; 进行任何删除操作前必须先确认<br />
&nbsp; -r, -R, --recursive&nbsp;&nbsp; 同时删除该目录下的所有目录层<br />
<strong>&nbsp; -v, --verbose&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 详细显示进行的步骤</strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --help&nbsp;&nbsp;&nbsp;&nbsp; 显示此帮助信息并离开<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --version&nbsp; 显示版本信息并离开<br />
<br />
要删除第一个字符为&lsquo;-&rsquo;的文件 (例如&lsquo;-foo&rsquo;)，请使用以下其中一种方法：<br />
&nbsp; rm -- -foo<br />
<br />
&nbsp; rm ./-foo<br />
<br />
请注意，如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。如果想保证<br />
该文件的内容无法还原，请考虑使用 shred。</p>
<p><strong>范例：</strong></p>
<p>删除所有rb语言程序档；删除前逐一询问确认 :<br />
rm -i *.rb<br />
<br />
将 Finished 子目录及子目录中所有档案删除 :<br />
rm -r Finished</p>]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2008-02-20 09:28:55</wp:post_date>
		<wp:post_date_gmt>2008-02-20 09:28:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e4%b9%8brm%e5%91%bd%e4%bb%a4%e8%af%a6%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[uplue]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.249.99.34</wp:comment_author_IP>
			<wp:comment_date>2008-03-04 15:42:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对于find ... | xargs rm -rf，好像有时find命令也会导致参数列表过长，如 find /home/mine/test/ -name *.txt]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[youke]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://liliangjava@126.com</wp:comment_author_url>
			<wp:comment_author_IP>221.200.131.58</wp:comment_author_IP>
			<wp:comment_date>2008-03-29 13:21:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我有个目录，下面大概有10左右个文件
用 find ... | xargs rm -rf 这种方式可以吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[youke]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://liliangjava@126.com</wp:comment_author_url>
			<wp:comment_author_IP>221.200.131.58</wp:comment_author_IP>
			<wp:comment_date>2008-03-29 13:22:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是10万个左右的文件]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.46.179</wp:comment_author_IP>
			<wp:comment_date>2008-03-29 18:07:20</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to youke:
毫无疑问，是可以的，而且速度很快。。
Good Luck。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>保持SSH客户端不掉线</title>
		<link>http://www.iceskysl.com/?p=213</link>
		<pubDate>Thu, 21 Feb 2008 11:16:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[<p>不管我是使用linux的的SSH还是windows下的putty、SecureCRT还是AbsoluteTelnet，当我连接到服务器端 后，离开一会或者做点其他的事情，再回到SSH的时候，常常发现客户端自动掉出来了；有的时候甚至跑一个需要时间比较长的JOB的时候，还没跑完就掉出来 了，导致JOB跑了一半，等等。。</p>
<p>所以一直在找解决这个问题的办法，今天在googleReader上找到了一个<a href="http://fosswire.com/2008/02/19/keep-your-ssh-connection-open/">解决办法</a>，如下：</p>
<div class="post-entry">
<p dragover="true">Do you get annoyed when you have a SSH session open, visit your browser for a while, and then return only to find you were disconnected? Most home NAT routers are the cause of this. If your router doesn&rsquo;t offer an option to not shut off idle connections, you are probably better off by setting a keep-alive setting.</p>
<p>To do this, just open <strong>/etc/ssh/ssh_config</strong> on your home (client) computer. Add the following line:</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">配置代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>ServerAliveInterval&nbsp;180&nbsp;&nbsp;</span></span></li>
</ol>
</div>
There you have it! Just remember now, if you leave SSH open accidentally, anyone else can get on it. Remember to close your session when finished.PS：If you&rsquo;re using AbsoluteTelnet (for Windows), you can do this from the Options-&gt;Properties-&gt;Connection page. There is an option there to enable keepalives and you can specify the duration between them.</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>不管我是使用linux的的SSH还是windows下的putty、SecureCRT还是AbsoluteTelnet，当我连接到服务器端后，离开一会或者做点其他的事情，再回到SSH的时候，常常发现客户端自动掉出来了；有的时候甚至跑一个需要时间比较长的JOB的时候，还没跑完就掉出来了，导致JOB跑了一半，等等。。</p>
<p>所以一直在找解决这个问题的办法，今天在googleReader上找到了一个<a href="http://fosswire.com/2008/02/19/keep-your-ssh-connection-open/">解决办法</a>，如下：</p>
<div class="post-entry">
<p dragover="true">Do you get annoyed when you have a SSH session open, visit your browser for a while, and then return only to find you were disconnected? Most home NAT routers are the cause of this. If your router doesn&rsquo;t offer an option to not shut off idle connections, you are probably better off by setting a keep-alive setting.</p>
<p>To do this, just open <strong>/etc/ssh/ssh_config</strong> on your home (client) computer. Add the following line:</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">配置代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>ServerAliveInterval&nbsp;180&nbsp;&nbsp;</span></span></li>
</ol>
</div>
There you have it! Just remember now, if you leave SSH open accidentally, anyone else can get on it. Remember to close your session when finished.PS：If you&rsquo;re using AbsoluteTelnet (for Windows), you can do this from the Options-&gt;Properties-&gt;Connection page. There is an option there to enable keepalives and you can specify the duration between them.</div>]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2008-02-21 11:16:17</wp:post_date>
		<wp:post_date_gmt>2008-02-21 11:16:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bf%9d%e6%8c%81ssh%e5%ae%a2%e6%88%b7%e7%ab%af%e4%b8%8d%e6%8e%89%e7%ba%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>这会是Gphone？</title>
		<link>http://www.iceskysl.com/?p=214</link>
		<pubDate>Thu, 21 Feb 2008 21:55:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天在GSeeker上看到一篇文章说三星可能会和Google合作在今年推出Gphone，还给了一个&ldquo;假想图&rdquo;，如下：</p>
<p><img src="http://www.gseeker.com/50226711/gphone-samsung-1.jpg" alt="" /></p>
<p>据engadget的<a target="_blank" href="http://www.engadget.com/2008/02/19/samsung-built-google-branded-android-phones-due-later-this-year/">报道</a>， 小道消息称三星在今年内将推出两款Google Phone，并且是打上Google品牌的，而不是三星自家品牌。该消息指三星将首先在9月份发布第一款Google Phone，然后在圣诞节期间再发布第二款。其中9月份所发布的Google Phone将会是高端产品，同时具备触控屏及全键盘，外型和黑莓相似（详见文章开头的假想图）。而圣诞节所发布的Google Phone则属于低价版（低于100美元）。</p>
<p>不过我倒觉得这个Google的风格，qwerty风格的键盘我实在不觉得方便，偶觉得Google肯定不会这样滴，因为我不喜欢，呵呵。。 :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天在GSeeker上看到一篇文章说三星可能会和Google合作在今年推出Gphone，还给了一个&ldquo;假想图&rdquo;，如下：</p>
<p><img src="http://www.gseeker.com/50226711/gphone-samsung-1.jpg" alt="" /></p>
<p>据engadget的<a target="_blank" href="http://www.engadget.com/2008/02/19/samsung-built-google-branded-android-phones-due-later-this-year/">报道</a>， 小道消息称三星在今年内将推出两款Google Phone，并且是打上Google品牌的，而不是三星自家品牌。该消息指三星将首先在9月份发布第一款Google Phone，然后在圣诞节期间再发布第二款。其中9月份所发布的Google Phone将会是高端产品，同时具备触控屏及全键盘，外型和黑莓相似（详见文章开头的假想图）。而圣诞节所发布的Google Phone则属于低价版（低于100美元）。</p>
<p>不过我倒觉得这个Google的风格，qwerty风格的键盘我实在不觉得方便，偶觉得Google肯定不会这样滴，因为我不喜欢，呵呵。。 :)</p>]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2008-02-21 21:55:18</wp:post_date>
		<wp:post_date_gmt>2008-02-21 21:55:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bf%99%e4%bc%9a%e6%98%afgphone%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>iTechTag &amp;&amp; Ohloh</title>
		<link>http://www.iceskysl.com/?p=215</link>
		<pubDate>Thu, 21 Feb 2008 22:03:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=215</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天无意在Google订阅里面看到了人评价说&ldquo;<font size="-1"><strong>itechtag</strong> 纯粹靠自我声明或者相互吹捧的是没有办法 建立creditibility（可信度） 如果像ohloh.net那种有真凭实据的还差不多&rdquo;。</font></p>
<p><font size="-1">哦，有人这样评价技能云，还提到了</font><font size="-1"><a href="http://www.ohloh.net/">ohloh.net</a>，这个是什么网站呢？赶紧瞧瞧去。</font></p>
<p>Ohloh is an <strong>open source</strong> network that <strong>connects</strong> people through the <strong>software</strong> they create and use.</p>
<p>&nbsp;</p>
<p>wowo，和我们的技能云的定位有些神似呀，有时间好好研究下:(</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天无意在Google订阅里面看到了人评价说&ldquo;<font size="-1"><strong>itechtag</strong> 纯粹靠自我声明或者相互吹捧的是没有办法 建立creditibility（可信度） 如果像ohloh.net那种有真凭实据的还差不多&rdquo;。</font></p>
<p><font size="-1">哦，有人这样评价技能云，还提到了</font><font size="-1"><a href="http://www.ohloh.net/">ohloh.net</a>，这个是什么网站呢？赶紧瞧瞧去。</font></p>
<p>Ohloh is an <strong>open source</strong> network that <strong>connects</strong> people through the <strong>software</strong> they create and use.</p>
<p>&nbsp;</p>
<p>wowo，和我们的技能云的定位有些神似呀，有时间好好研究下:(</p>]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2008-02-21 22:03:01</wp:post_date>
		<wp:post_date_gmt>2008-02-21 22:03:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>itechtag-ohloh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>增加通过IM（GoogleTalk）更新ING功能</title>
		<link>http://www.iceskysl.com/?p=216</link>
		<pubDate>Sat, 23 Feb 2008 14:34:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[<p>刚刚吃完泡面，接着上午的工作，一鼓作气完成通过IM（googletalk）发布自己的ING的功能，如下： <br />
<img src="http://lh6.google.com/iceskysl/R7-7omo4tHI/AAAAAAAAB8w/w4RIWKMCVzs/2008-02-23-142154_825x364_scrot.png" alt="" /></p>
<p>&nbsp;</p>
<p>使用方法是： <br />
1、添加&rdquo;itechtag@gmail.com&rdquo;为自己GoogleTalk的好友; <br />
2、发送&rdquo;h&rdquo;到&rdquo;itechtag@gmail.com&rdquo;查看帮助信息; <br />
3、输入&rdquo;who&rdquo;查看自己googletalk绑定的账户; <br />
4、输入&rdquo;link email:password&rdquo;绑定当前GoogleTalk至您指定的账号; <br />
5、输入&rdquo;@Ing内容&rdquo;添加ING内容到自己的ing.</p>
<p>&nbsp;</p>
<p>其他内容，请添加&rdquo;itechtag@gmail.com&rdquo;为自己GoogleTalk的好友后，输入h查看帮助信息。</p>
<p>&nbsp;</p>
<p>该机器人还在不断的完善中，如果遇到什么问题，请及时通知我;如果您有更好的建议，还请告诉我。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>刚刚吃完泡面，接着上午的工作，一鼓作气完成通过IM（googletalk）发布自己的ING的功能，如下： <br />
<img src="http://lh6.google.com/iceskysl/R7-7omo4tHI/AAAAAAAAB8w/w4RIWKMCVzs/2008-02-23-142154_825x364_scrot.png" alt="" /></p>
<p>&nbsp;<br />
使用方法是： <br />
1、添加&rdquo;itechtag@gmail.com&rdquo;为自己GoogleTalk的好友; <br />
2、发送&rdquo;h&rdquo;到&rdquo;itechtag@gmail.com&rdquo;查看帮助信息; <br />
3、输入&rdquo;who&rdquo;查看自己googletalk绑定的账户; <br />
4、输入&rdquo;link email:password&rdquo;绑定当前GoogleTalk至您指定的账号; <br />
5、输入&rdquo;@Ing内容&rdquo;添加ING内容到自己的ing.</p>
<p>&nbsp;</p>
<p>其他内容，请添加&rdquo;itechtag@gmail.com&rdquo;为自己GoogleTalk的好友后，输入h查看帮助信息。</p>
<p>&nbsp;</p>
<p>该机器人还在不断的完善中，如果遇到什么问题，请及时通知我;如果您有更好的建议，还请告诉我。</p>]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2008-02-23 14:34:00</wp:post_date>
		<wp:post_date_gmt>2008-02-23 14:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a2%9e%e5%8a%a0%e9%80%9a%e8%bf%87im%ef%bc%88googletalk%ef%bc%89%e6%9b%b4%e6%96%b0ing%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>键盘快速启动工具 ：Launchy</title>
		<link>http://www.iceskysl.com/?p=217</link>
		<pubDate>Mon, 25 Feb 2008 10:02:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=217</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于逐渐习惯了linux下的操作方式和基于命令的使用习惯，在windows上的时候，我也越来越觉得不习惯了，一直想找一个类似MAC下的<a title="QuickSilver" href="http://quicksilver.blacktree.com/">QuickSilver</a>的可以快速找到我需要的东西，进而启动的小工具。</p>
<p>今天找到了，其就是<a href="http://www.launchy.net/">Launchy</a>，安装后，每次启动都驻留后台运行，按 ALT+空格可以跳出输入框，输入需要用到的程序名称（支持模糊匹配，显示个数等可以配置），还可以打开其他的东西，可以参考其安装目录下的Readme.pdf。</p>
<p><img src="http://lh3.google.com/iceskysl/R8IgtGo4tII/AAAAAAAAB84/PZEND_N8kMU/2008-02-25_095201.png?imgmax=512" alt="" /></p>
<p>另外，看到另外一款类似的程序 <a href="http://www.galanc.com/">TypeAndRun</a>，可以参考如下链接，选择自己需要的。</p>
<p>【1】http://calon.weblogs.us/duibi_launchy_he_tar/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于逐渐习惯了linux下的操作方式和基于命令的使用习惯，在windows上的时候，我也越来越觉得不习惯了，一直想找一个类似MAC下的<a title="QuickSilver" href="http://quicksilver.blacktree.com/">QuickSilver</a>的可以快速找到我需要的东西，进而启动的小工具。</p>
<p>今天找到了，其就是<a href="http://www.launchy.net/">Launchy</a>，安装后，每次启动都驻留后台运行，按 ALT+空格可以跳出输入框，输入需要用到的程序名称（支持模糊匹配，显示个数等可以配置），还可以打开其他的东西，可以参考其安装目录下的Readme.pdf。</p>
<p><img src="http://lh3.google.com/iceskysl/R8IgtGo4tII/AAAAAAAAB84/PZEND_N8kMU/2008-02-25_095201.png?imgmax=512" alt="" /></p>
<p>另外，看到另外一款类似的程序 <a href="http://www.galanc.com/">TypeAndRun</a>，可以参考如下链接，选择自己需要的。</p>
<p>【1】http://calon.weblogs.us/duibi_launchy_he_tar/</p>]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2008-02-25 10:02:45</wp:post_date>
		<wp:post_date_gmt>2008-02-25 10:02:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%94%ae%e7%9b%98%e5%bf%ab%e9%80%9f%e5%90%af%e5%8a%a8%e5%b7%a5%e5%85%b7-%ef%bc%9alaunchy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>制作视频教程的工具</title>
		<link>http://www.iceskysl.com/?p=218</link>
		<pubDate>Mon, 25 Feb 2008 10:18:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[<p>经常看一些视频教程，觉得视频教程简单易懂，相当不错，如下两个文章列了一些制作视频教程的工具，被点名的有：</p>
<p><a href="http://www.bobyte.com/">AviScreen</a> - As the name would imply, this capture program records the video into AVI files, but can also do BMP photos. It&rsquo;s Windows only and does not record audio.</p>
<p><a href="http://camstudio.org/">CamStudio.org</a> - An open source program for capturing your on-screen video and audio as AVI files. Windows only, and absolutely free.</p>
<p><a href="http://danicsoft.com/projects/copernicus/">Copernicus</a> - A free program for Macs that focuses heavily on making quick and speedy films by recording the video to your RAM for quicker access. Does not include any support for audio.</p>
<p><a href="http://www.jingproject.com/">JingProject.com</a> - Beyond recording video, Jing allows you to take a picture of any portion fo your desktop, draw on it, add a message, and immediately upload your media to a free hosting account. You are then given a small URL that you can give to whomever needs to see the image or video. Works with Macs and Windows machines.</p>
<p><a href="http://www.screencast-o-matic.com/">Screencast-O-Matic.com</a> - A Java-based screencasting tool that requires no downloads and will allow you to automatically upload to hosting. According to their site it works well with Macs and Windows machines, but does have some issues with Linux.</p>
<p><a href="http://www.debugmode.com/wink/">Wink</a> - Screencasting software that focuses on making tutorials with audio and text annotation abilities. Outputs to Flash, PDF, HTML, EXE files and more.<br />
<br />
以及在ubuntu下的<a href="http://xvidcap.sourceforge.net/">xvidcap</a>。</p>
<p>【1】http://www.freecharity.org.uk/2007/04/12/the-secret-to-screencasting-with-ubuntu-and-free-software/<br />
【2】http://mashable.com/2008/02/21/screencasting-video-tutorials/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经常看一些视频教程，觉得视频教程简单易懂，相当不错，如下两个文章列了一些制作视频教程的工具，被点名的有：</p>
<p><a href="http://www.bobyte.com/">AviScreen</a> - As the name would imply, this capture program records the video into AVI files, but can also do BMP photos. It&rsquo;s Windows only and does not record audio.</p>
<p><a href="http://camstudio.org/">CamStudio.org</a> - An open source program for capturing your on-screen video and audio as AVI files. Windows only, and absolutely free.</p>
<p><a href="http://danicsoft.com/projects/copernicus/">Copernicus</a> - A free program for Macs that focuses heavily on making quick and speedy films by recording the video to your RAM for quicker access. Does not include any support for audio.</p>
<p><a href="http://www.jingproject.com/">JingProject.com</a> - Beyond recording video, Jing allows you to take a picture of any portion fo your desktop, draw on it, add a message, and immediately upload your media to a free hosting account. You are then given a small URL that you can give to whomever needs to see the image or video. Works with Macs and Windows machines.</p>
<p><a href="http://www.screencast-o-matic.com/">Screencast-O-Matic.com</a> - A Java-based screencasting tool that requires no downloads and will allow you to automatically upload to hosting. According to their site it works well with Macs and Windows machines, but does have some issues with Linux.</p>
<p><a href="http://www.debugmode.com/wink/">Wink</a> - Screencasting software that focuses on making tutorials with audio and text annotation abilities. Outputs to Flash, PDF, HTML, EXE files and more.<br />
<br />
以及在ubuntu下的<a href="http://xvidcap.sourceforge.net/">xvidcap</a>。</p>
<p>【1】http://www.freecharity.org.uk/2007/04/12/the-secret-to-screencasting-with-ubuntu-and-free-software/<br />
【2】http://mashable.com/2008/02/21/screencasting-video-tutorials/</p>]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2008-02-25 10:18:37</wp:post_date>
		<wp:post_date_gmt>2008-02-25 10:18:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%b6%e4%bd%9c%e8%a7%86%e9%a2%91%e6%95%99%e7%a8%8b%e7%9a%84%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>50 Questions to Evaluate the Quality of Your Website</title>
		<link>http://www.iceskysl.com/?p=219</link>
		<pubDate>Mon, 25 Feb 2008 10:25:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[<p>作为一个互联网人，你对自己的网站有多少理解和把握，对其前途是否能看好，能否认识到目前的现况和不足，都是十分重要的。</p>
<p><strong>CarstenCumbrowski</strong> from <a target="_blank" title="50 Questions to Evaluate the Quality of Your Website" href="http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/">SearchEngineJournal</a> has come up with a great and pretty <a target="_blank" title="50 Questions to Evaluate the Quality of Your Website" href="http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/">detailed list of 50 questions</a> that a website owner should asked himself about his own website.</p>
<p>If the answer to every question that follows below was answered with yes, you can be very pleased with yourself and consider yourself the top of the crop, because most websites have flaws for a number of different reasons, mostly related to the limitation of resources and sacrifices that must be made as a direct result of the shortage.</p>
<p>These questions are divided into following main categories: <strong>Accessibility</strong>, <strong>Navigation</strong>, <strong>Design</strong>, <strong>Content</strong>, <strong>Security</strong>, <strong>Other Technical Considerations</strong>, <strong>Other Marketing Considerations</strong> and <strong>Legal Stuff/Re-Assurance/Legitimization</strong>.</p>
<p>【1】http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>作为一个互联网人，你对自己的网站有多少理解和把握，对其前途是否能看好，能否认识到目前的现况和不足，都是十分重要的。</p>
<p><strong>CarstenCumbrowski</strong> from <a target="_blank" title="50 Questions to Evaluate the Quality of Your Website" href="http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/">SearchEngineJournal</a> has come up with a great and pretty <a target="_blank" title="50 Questions to Evaluate the Quality of Your Website" href="http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/">detailed list of 50 questions</a> that a website owner should asked himself about his own website.</p>
<p>If the answer to every question that follows below was answered with yes, you can be very pleased with yourself and consider yourself the top of the crop, because most websites have flaws for a number of different reasons, mostly related to the limitation of resources and sacrifices that must be made as a direct result of the shortage.</p>
<p>These questions are divided into following main categories: <strong>Accessibility</strong>, <strong>Navigation</strong>, <strong>Design</strong>, <strong>Content</strong>, <strong>Security</strong>, <strong>Other Technical Considerations</strong>, <strong>Other Marketing Considerations</strong> and <strong>Legal Stuff/Re-Assurance/Legitimization</strong>.</p>
<p>【1】http://www.searchenginejournal.com/50-questions-to-evaluate-the-quality-of-your-website/6400/</p>]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2008-02-25 10:25:27</wp:post_date>
		<wp:post_date_gmt>2008-02-25 10:25:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>50-questions-to-evaluate-the-quality-of-your-website</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Ubuntu Mobile Edition：这个世界太疯狂了</title>
		<link>http://www.iceskysl.com/?p=220</link>
		<pubDate>Mon, 25 Feb 2008 22:07:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[<p>虽然我使用Ubuntu工作已经很长一段时间，虽然我也使用过Kubuntu、Xubuntu，虽然我也对ubuntu的前途比较看好，虽然。。<br />
N多的虽然，但当我第一次看到<strong>Ubuntu Mobile Edition</strong>的时候，还是不免呢喃了一句&ldquo;世界太疯狂了！&rdquo;难道不是么。<br />
<img src="http://www.ubuntu.com/files/u1/html-small.jpg" alt="" /><br />
自从iphone的成功，到Google的潜力修行，加上nokia的大半市场和windowmobile的无可奈何，现在又多了Ubuntu Mobile Edition。</p>
<blockquote>
<p>&ldquo;Ubuntu Mobile Edition 是 Ubuntu 家族的又一新成员。与 Kubuntu、Xubuntu、Edubuntu 这些版本相同的是，Ubuntu Mobile 一样基于 Ubuntu；不同的是，Ubuntu Mobile 是专门为 MID (Mobile Internet Devices，移动互联网设备) 而设计的。&rdquo;</p>
<p>&ldquo;Ubuntu Mobile 不仅包含丰富的应用软件，而且集成了流行的 Web 2.0 服务，如 Facebook、MySpace、YouTube 等。使用者通过 Ubuntu Mobile 能够执行诸如网络浏览、收发邮件、分享视频/音乐/照片、即时通讯、撰写博客、玩游戏等常见操作。&rdquo;</p>
</blockquote>
<p>其他的介绍：</p>
<p>http://linuxtoy.org/archives/ubuntu-mobile-edition.html</p>
<p>http://moblin.org/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>虽然我使用Ubuntu工作已经很长一段时间，虽然我也使用过Kubuntu、Xubuntu，虽然我也对ubuntu的前途比较看好，虽然。。<br />
N多的虽然，但当我第一次看到<strong>Ubuntu Mobile Edition</strong>的时候，还是不免呢喃了一句&ldquo;世界太疯狂了！&rdquo;难道不是么。<br />
<img src="http://www.ubuntu.com/files/u1/html-small.jpg" alt="" /><br />
自从iphone的成功，到Google的潜力修行，加上nokia的大半市场和windowmobile的无可奈何，现在又多了Ubuntu Mobile Edition。</p>
<blockquote>
<p>&ldquo;Ubuntu Mobile Edition 是 Ubuntu 家族的又一新成员。与 Kubuntu、Xubuntu、Edubuntu 这些版本相同的是，Ubuntu Mobile 一样基于 Ubuntu；不同的是，Ubuntu Mobile 是专门为 MID (Mobile Internet Devices，移动互联网设备) 而设计的。&rdquo;</p>
<p>&ldquo;Ubuntu Mobile 不仅包含丰富的应用软件，而且集成了流行的 Web 2.0 服务，如 Facebook、MySpace、YouTube 等。使用者通过 Ubuntu Mobile 能够执行诸如网络浏览、收发邮件、分享视频/音乐/照片、即时通讯、撰写博客、玩游戏等常见操作。&rdquo;</p>
</blockquote>
<p>其他的介绍：</p>
<p>http://linuxtoy.org/archives/ubuntu-mobile-edition.html</p>
<p>http://moblin.org/</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2008-02-25 22:07:25</wp:post_date>
		<wp:post_date_gmt>2008-02-25 22:07:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu-mobile-edition%ef%bc%9a%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e5%a4%aa%e7%96%af%e7%8b%82%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>正则真的很强大</title>
		<link>http://www.iceskysl.com/?p=221</link>
		<pubDate>Tue, 26 Feb 2008 09:40:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=221</guid>
		<description></description>
		<content:encoded><![CDATA[<p>毋庸置疑，正则表达式真的相当的博大精深，不要看懂几个正则的元字符就认为自己掌握了正则表达式，那连皮毛都没东呢，呵呵。</p>
<p>年前买了一本<strong>《精通正则表达式》</strong>，没事的时候喜欢慢慢的读，才晓得原来如此神奇和精妙，如果能按照正则的思维去解决问题，显得如此的舒服和优雅。强烈推荐我行的人有时间可以仔细阅读。</p>
<p>如下举个小例子，在一些社区、论坛上有些代码段还是挺不错的，但是常常被格式化后，复制下来就带有行号，如果你曾经一行一行的删掉这些行号的话，也不足为奇，因为我以前也这么干的，其实不用那么麻烦，那我最喜欢的文本编辑器Emeditor来看，这样就可搞定。<img src="http://lh6.google.com/iceskysl/R8NsUmo4tPI/AAAAAAAAB9w/R1sLjLWf51g/2008-02-26_092652.png?imgmax=512" alt="" /></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>毋庸置疑，正则表达式真的相当的博大精深，不要看懂几个正则的元字符就认为自己掌握了正则表达式，那连皮毛都没东呢，呵呵。</p>
<p>年前买了一本<strong>《精通正则表达式》</strong>，没事的时候喜欢慢慢的读，才晓得原来如此神奇和精妙，如果能按照正则的思维去解决问题，显得如此的舒服和优雅。强烈推荐我行的人有时间可以仔细阅读。</p>
<p>如下举个小例子，在一些社区、论坛上有些代码段还是挺不错的，但是常常被格式化后，复制下来就带有行号，如果你曾经一行一行的删掉这些行号的话，也不足为奇，因为我以前也这么干的，其实不用那么麻烦，那我最喜欢的文本编辑器Emeditor来看，这样就可搞定。<img src="http://lh6.google.com/iceskysl/R8NsUmo4tPI/AAAAAAAAB9w/R1sLjLWf51g/2008-02-26_092652.png?imgmax=512" alt="" /></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2008-02-26 09:40:23</wp:post_date>
		<wp:post_date_gmt>2008-02-26 09:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%ad%a3%e5%88%99%e7%9c%9f%e7%9a%84%e5%be%88%e5%bc%ba%e5%a4%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在CSDN的blog中添加技能云</title>
		<link>http://www.iceskysl.com/?p=222</link>
		<pubDate>Tue, 26 Feb 2008 09:49:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=222</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有段时间没有使用<a href="http://blog.csdn.net/">CSDN</a>的blog了，其实在是不够稳定，呵呵，但是不可否认的是其实目前国内比较大的程序员汇集区，而<a href="http://www.itechtag.com/">技能云</a>针对的就是程序员，于是看了下如何在CSDN的blog中添加显示其在技能云上的widget。</p>
<p>1、在CSDN的个人blog管理后台选择&ldquo;配置&rdquo;选项卡</p>
<p><img src="http://lh6.google.com/iceskysl/R8NuQmo4tSI/AAAAAAAAB-I/vOFZfNHh_eM/2008-02-26_091422.png" alt="" /></p>
<p>2、在&ldquo;公告&rdquo;的地方加上技能云的个人widget的引用，保存即可。</p>
<p><img src="http://lh4.google.com/iceskysl/R8NuQGo4tQI/AAAAAAAAB94/_FVGT7UJTGk/2008-02-26_091344.png" alt="" /></p>
<p>3、前台即可正常显示个人的&ldquo;技能云&rdquo;，如下，还挺不错的。</p>
<p><img src="http://lh5.google.com/iceskysl/R8NuQWo4tRI/AAAAAAAAB-A/G1dPm3Vk3cU/2008-02-26_091406.png" alt="" /></p>
<p>可以看我的<a href="http://blog.csdn.net/IceskYsl/">CSDN上显示的效果</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有段时间没有使用<a href="http://blog.csdn.net/">CSDN</a>的blog了，其实在是不够稳定，呵呵，但是不可否认的是其实目前国内比较大的程序员汇集区，而<a href="http://www.itechtag.com/">技能云</a>针对的就是程序员，于是看了下如何在CSDN的blog中添加显示其在技能云上的widget。</p>
<p>1、在CSDN的个人blog管理后台选择&ldquo;配置&rdquo;选项卡</p>
<p><img src="http://lh6.google.com/iceskysl/R8NuQmo4tSI/AAAAAAAAB-I/vOFZfNHh_eM/2008-02-26_091422.png" alt="" /></p>
<p>2、在&ldquo;公告&rdquo;的地方加上技能云的个人widget的引用，保存即可。</p>
<p><img src="http://lh4.google.com/iceskysl/R8NuQGo4tQI/AAAAAAAAB94/_FVGT7UJTGk/2008-02-26_091344.png" alt="" /></p>
<p>3、前台即可正常显示个人的&ldquo;技能云&rdquo;，如下，还挺不错的。</p>
<p><img src="http://lh5.google.com/iceskysl/R8NuQWo4tRI/AAAAAAAAB-A/G1dPm3Vk3cU/2008-02-26_091406.png" alt="" /></p>
<p>可以看我的<a href="http://blog.csdn.net/IceskYsl/">CSDN上显示的效果</a></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2008-02-26 09:49:46</wp:post_date>
		<wp:post_date_gmt>2008-02-26 09:49:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8csdn%e7%9a%84blog%e4%b8%ad%e6%b7%bb%e5%8a%a0%e6%8a%80%e8%83%bd%e4%ba%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Gmail版Gtalk终于出现“隐身功能”</title>
		<link>http://www.iceskysl.com/?p=223</link>
		<pubDate>Wed, 27 Feb 2008 09:06:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=223</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>Gtalk</strong>虽然不及<strong>MSN</strong>普及，但是我周围的一些人还是很喜欢的，简洁、漂亮等是对其的评价，我也为此放弃了其他的IM工具，比如不喜欢QQ的商业气味和花哨，不喜欢MSN的莫名其妙的问题等等。</p>
<p>作为一个技术人，我还是喜欢基于XMPP的Gtalk（我也在<a href="http://www.itechtag.com/">技能云</a>中增加了对<a href="http://www.itechtag.com/groups/1/posts/137">XMPP机器人</a>的支持），当你工作的时候，还是不希望被人打扰到的，现在Gmail版本的Gtalk已经增加了&ldquo;<strong>隐身</strong>&rdquo;功能。</p>
<p>&nbsp;</p>
<p><img src="http://lh6.google.com/iceskysl/R8S1nWo4tTI/AAAAAAAAB-Q/uRH1sJ1jVII/gmail.png?imgmax=400" alt="" /></p>
<p>但是桌面版及插件（gadget；网页）版的Gtalk还没有这个功能，也很久没有发布新版本了，还是慢慢等待吧。</p>
<p>其他报道：http://www.gseeker.com/50226711/gtalkeeeaeie_139633.php</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>Gtalk</strong>虽然不及<strong>MSN</strong>普及，但是我周围的一些人还是很喜欢的，简洁、漂亮等是对其的评价，我也为此放弃了其他的IM工具，比如不喜欢QQ的商业气味和花哨，不喜欢MSN的莫名其妙的问题等等。</p>
<p>作为一个技术人，我还是喜欢基于XMPP的Gtalk（我也在<a href="http://www.itechtag.com/">技能云</a>中增加了对<a href="http://www.itechtag.com/groups/1/posts/137">XMPP机器人</a>的支持），当你工作的时候，还是不希望被人打扰到的，现在Gmail版本的Gtalk已经增加了&ldquo;<strong>隐身</strong>&rdquo;功能。</p>
<p>&nbsp;</p>
<p><img src="http://lh6.google.com/iceskysl/R8S1nWo4tTI/AAAAAAAAB-Q/uRH1sJ1jVII/gmail.png?imgmax=400" alt="" /></p>
<p>但是桌面版及插件（gadget；网页）版的Gtalk还没有这个功能，也很久没有发布新版本了，还是慢慢等待吧。</p>
<p>其他报道：http://www.gseeker.com/50226711/gtalkeeeaeie_139633.php</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date>2008-02-27 09:06:18</wp:post_date>
		<wp:post_date_gmt>2008-02-27 09:06:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gmail%e7%89%88gtalk%e7%bb%88%e4%ba%8e%e5%87%ba%e7%8e%b0%e9%9a%90%e8%ba%ab%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[gmail%e7%89%88gtalk%e7%bb%88%e4%ba%8e%e5%87%ba%e7%8e%b0%e2%80%9c%e9%9a%90%e8%ba%ab%e5%8a%9f%e8%83%bd%e2%80%9d]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>真的,个人在线声望越来越重要！</title>
		<link>http://www.iceskysl.com/?p=224</link>
		<pubDate>Wed, 27 Feb 2008 15:33:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>个人在线声望</strong>真的越来越被看重了，我一直在做的&ldquo;<a href="http://www.itechtag.com/">技能云</a>&rdquo;的目的就是建立良好的个人声望，虽然目前国内的很多人还没有意识到这点，但毋庸置疑的是，真的越来越重要了，前段时间MR.6就写过一篇文章，几天又发现了一个文章专门说这个问题的，我也顺着这个思路说说看。</p>
<p>先来看这篇文章&ldquo;<a href="http://www.readwriteweb.com/archives/how_to_manage_your_online_reputation.php">How To Manage Your Online Reputation</a>&rdquo;，文章中说到：You've spent a lot of time building up your reputation and image both online and off, so it's important to make sure that someone isn't out there dragging it through the mud. The latest tool for reputation management is <a href="http://www.trackur.com/o">Trackur</a>, but its bottom-level price is $88/month, so the question on my mind, is: &quot;Is it worth it?&quot; There are already many different ways to monitor your online reputation as it is. Let's see how they stack up.&nbsp;</p>
<p>而后列举了几个可以使用的工具（网站）来管理自己的在线声望，其中提到了一个网站<a href="http://www.trackur.com/">http://www.trackur.com/</a>竟然是收费的，而且还不便宜，最便宜的还88美刀/月，另外还有像google通知等。详细的可以去看这篇文章：http://www.readwriteweb.com/archives/how_to_manage_your_online_reputation.php</p>
<p>接着看上面说到的这个收费的网站，真的是个监视、管理个人在线声望的网站，价格也真不便宜，呵呵，看看他是怎么说个人声望的：</p>
<p>Did you know that 52% of individuals put their trust in what others have to say about you?<br />
<br />
Did you know that 87% of consumers look at the reputation of your CEO, when judging your company's reputation?<br />
<br />
Did you know that 59% of hiring managers are influenced by your online reputation?<br />
<br />
Did you know that Trackur will monitor the web 24/7 and alert you whenever your reputation is being discussed?( 这条是宣传自己网站的）</p>
<p>看看上面列举的几个数据，怎么来的，我们无法得知，但是其在一定程度上说明了个人声望是如何的重要，可能国外会更普及一点；但是对于国内来说，其他行业我不了解，至少和互联网沾边的，不如<strong>软件开发行业</strong>等，会比较看重的。</p>
<p>都说国内什么都要落后老外们几年时间，但是值得我们高兴的事，我们这次我们的意识并没有晚，我们与2007年中开始做的&rdquo;<a href="http://www.itechtag.com/">技能云</a>&ldquo;正是在这个方面的体现，我们希望的是通过用户的努力，创建良好的个人声望，并勇敢的把自己的声望show出去；此外，我们还将创建公司和项目的声望。</p>
<p>虽然我们才刚刚起步，虽然很多人还不能意识到这点的重要性，但是我们相信，随着时间的推移，随着个人不断的体会和经历，加上<a href="http://www.itechtag.com/">技能云</a>平台的不断完善，我们肯定会让所有的对自己声望在意的朋友建立起自己的&rdquo;技能云&ldquo;。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>个人在线声望</strong>真的越来越被看重了，我一直在做的&ldquo;<a href="http://www.itechtag.com/">技能云</a>&rdquo;的目的就是建立良好的个人声望，虽然目前国内的很多人还没有意识到这点，但毋庸置疑的是，真的越来越重要了，前段时间MR.6就写过一篇文章，几天又发现了一个文章专门说这个问题的，我也顺着这个思路说说看。</p>
<p>先来看这篇文章&ldquo;<a href="http://www.readwriteweb.com/archives/how_to_manage_your_online_reputation.php">How To Manage Your Online Reputation</a>&rdquo;， 文章中说到：You've spent a lot of time building up your reputation and image both online and off, so it's important to make sure that someone isn't out there dragging it through the mud. The latest tool for reputation management is <a href="http://www.trackur.com/o">Trackur</a>, but its bottom-level price is $88/month, so the question on my mind, is: &quot;Is it worth it?&quot; There are already many different ways to monitor your online reputation as it is. Let's see how they stack up.&nbsp;</p>
<p>而后列举了几个可以使用的工具（网站）来管理自己的在线声望，其中提到了一个网站<a href="http://www.trackur.com/">http://www.trackur.com/</a>竟 然是收费的，而且还不便宜，最便宜的还88美刀/月，另外还有像google通知等。详细的可以去看这篇文章：http: //www.readwriteweb.com/archives/how_to_manage_your_online_reputation.php</p>
<p>接着看上面说到的这个收费的网站，真的是个监视、管理个人在线声望的网站，价格也真不便宜，呵呵，看看他是怎么说个人声望的：</p>
<p>Did you know that 52% of individuals put their trust in what others have to say about you?<br />
<br />
Did you know that 87% of consumers look at the reputation of your CEO, when judging your company's reputation?<br />
<br />
Did you know that 59% of hiring managers are influenced by your online reputation?<br />
<br />
Did you know that Trackur will monitor the web 24/7 and alert you whenever your reputation is being discussed?( 这条是宣传自己网站的）</p>
<p>看看上面列举的几个数据，怎么来的，我们无法得知，但是其在一定程度上说明了个人声望是如何的重要，可能国外会更普及一点；但是对于国内来说，其他行业我不了解，至少和互联网沾边的，不如<strong>软件开发行业</strong>等，会比较看重的。</p>
<p>都说国内什么都要落后老外们几年时间，但是值得我们高兴的事，我们这次我们的意识并没有晚，我们与2007年中开始做的&rdquo;<a href="http://www.itechtag.com/">技能云</a>&ldquo;正是在这个方面的体现，我们希望的是通过用户的努力，创建良好的个人声望，并勇敢的把自己的声望show出去；此外，我们还将创建公司和项目的声望。</p>
<p>虽然我们才刚刚起步，虽然很多人还不能意识到这点的重要性，但是我们相信，随着时间的推移，随着个人不断的体会和经历，加上<a href="http://www.itechtag.com/">技能云</a>平台的不断完善，我们肯定会让所有的对自己声望在意的朋友建立起自己的&rdquo;技能云&ldquo;。</p>]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2008-02-27 15:33:01</wp:post_date>
		<wp:post_date_gmt>2008-02-27 15:33:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%9c%9f%e7%9a%84%e4%b8%aa%e4%ba%ba%e5%9c%a8%e7%ba%bf%e5%a3%b0%e6%9c%9b%e8%b6%8a%e6%9d%a5%e8%b6%8a%e9%87%8d%e8%a6%81%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.28.113</wp:comment_author_IP>
			<wp:comment_date>2008-03-05 00:10:16</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[同意iceskysl的观点，但是好的想法一定要商业模式的支撑，再伟大的企业没有盈利的话将最终消失。
十大趋势很有道理！
技能云技术实现真的太惊艳，就是粘性方面还需要下功夫，有时间俺会沉下心来提些发自肺腑的建议的！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.28.113</wp:comment_author_IP>
			<wp:comment_date>2008-03-05 00:12:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ps： 建议兄弟，左边加个订阅到抓虾 googlereader 鲜果等等按钮，这个对流量帮助很大，特别是it技术方面的blog]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[差沙]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.221.108.8</wp:comment_author_IP>
			<wp:comment_date>2008-03-05 00:36:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[感觉技能云有两个问题。

1.美工一般，没有web2.0的感觉。
2.这个“技能”不能限定在“技术”方面，考虑一些其他行业也有技能这个东西存在的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>FriendFeed高明在哪里？</title>
		<link>http://www.iceskysl.com/?p=225</link>
		<pubDate>Thu, 28 Feb 2008 10:44:31 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近比较清闲，就到处转悠，然后写些自己的感受，今天要说的是<a href="http://friendfeed.com/"><strong>FriendFeed</strong></a>，FriendFeed enables you to keep up-to-date on the web pages, photos, videos and music that your friends and family are sharing. It offers a unique way to discover and discuss information among friends.</p>
<p>注册试用了下，感觉比以前试用的那几个好点，比如facebook我一进去就晕，校内也差不多的模式，其他的什么占座之类的就看几眼就再不会去了。而FriendFeed有点点不一样，可能是由于其&rdquo;亲缘&ldquo;关系的缘故（大多数人都死来自Google成员）做事风格也和Google比较类似，简洁明了。其主要的抓取功能还是挺强大的，速度相当的快。</p>
<p>应该是在Google中积累的经验，使得这个项目在Google排名等都表现相当不错，在改进&rdquo;<a href="http://www.itechtag.com/">技能云</a>&ldquo;的时候可以学习下他的表现形式，再琢磨下Google的一些规则。</p>
<p>我向来不是很喜欢这类SNS的东西，不过这个FriendFeed倒让我觉得可以忍受。</p>
<p>慢慢的，我也学会了冷静的观察～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近比较清闲，就到处转悠，然后写些自己的感受，今天要说的是<a href="http://friendfeed.com/"><strong>FriendFeed</strong></a>，FriendFeed enables you to keep up-to-date on the web pages, photos, videos and music that your friends and family are sharing. It offers a unique way to discover and discuss information among friends.</p>
<p>注册试用了下，感觉比以前试用的那几个好点，比如facebook我一进去就晕，校内也差不多的模式，其他的什么占座之类的就看几眼就再不会去了。而FriendFeed有点点不一样，可能是由于其&rdquo;亲缘&ldquo;关系的缘故（大多数人都死来自Google成员）做事风格也和Google比较类似，简洁明了。其主要的抓取功能还是挺强大的，速度相当的快。</p>
<p>应该是在Google中积累的经验，使得这个项目在Google排名等都表现相当不错，在改进&rdquo;<a href="http://www.itechtag.com/">技能云</a>&ldquo;的时候可以学习下他的表现形式，再琢磨下Google的一些规则。</p>
<p>我向来不是很喜欢这类SNS的东西，不过这个FriendFeed倒让我觉得可以忍受。</p>
<p>慢慢的，我也学会了冷静的观察～</p>]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2008-02-28 10:44:31</wp:post_date>
		<wp:post_date_gmt>2008-02-28 10:44:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friendfeed%e9%ab%98%e6%98%8e%e5%9c%a8%e5%93%aa%e9%87%8c%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中使用Active Merchant快速支付</title>
		<link>http://www.iceskysl.com/?p=226</link>
		<pubDate>Thu, 28 Feb 2008 14:11:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[<p>采用Google在线文档书写和维护，请自行查看，如果有建议和意见，请在这里提出，谢谢～<br />
<a href="http://docs.google.com/Doc?id=dhf86kr9_223dsnbwhc2">在Rails中使用Active Merchant快速支付</a></p>
<p>尚未写完，有愿意的朋友可以一起写，谢谢！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>采用Google在线文档书写和维护，请自行查看，如果有建议和意见，请在这里提出，谢谢～<br />
<a href="http://docs.google.com/Doc?id=dhf86kr9_223dsnbwhc2">在Rails中使用Active Merchant快速支付</a></p>
<p>尚未写完，有愿意的朋友可以一起写，谢谢！</p>
<p>如果你没有paypal，可以在这里注册：</p>
<p><!-- Begin PayPal Logo --><a target="_blank" href="https://www.paypal.com/row/mrb/pal=XGQSUDLZB4DRS"><img border="0" alt="Sign up for PayPal and start accepting credit card payments instantly." src="http://images.paypal.com/en_US/i/bnr/paypal_mrb_banner.gif" /></a><!-- End PayPal Logo --></p>]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2008-02-28 14:11:45</wp:post_date>
		<wp:post_date_gmt>2008-02-28 14:11:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8active-merchant%e5%bf%ab%e9%80%9f%e6%94%af%e4%bb%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>IP地址到物理地址的转化</title>
		<link>http://www.iceskysl.com/?p=227</link>
		<pubDate>Fri, 07 Mar 2008 13:05:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[<p>以前我也写过一个类似的，找不到了，刚才看到<a class="t" href="http://chinaonrails.com/u/axgle">axgle</a>写了一个，挺轻巧的。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>1.&nbsp;require&nbsp;</span><span class="string">'net/http'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>2.&nbsp;require&nbsp;<span class="string">&quot;uri&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>4.&nbsp;<span class="keyword">def</span><span>&nbsp;ip2addr(ip=</span><span class="string">&quot;google.com&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>5.&nbsp;url=URI.parse(<span class="string">&quot;http://ip138.com/ips8.asp&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>6.&nbsp;res=Net::HTTP.post_form(url,<span class="symbol">:ip</span><span>=&gt;ip,</span><span class="symbol">:action</span><span>=&gt;2)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>7.&nbsp;res.body.scan(/&lt;ul&nbsp;<span class="keyword">class</span><span>=</span><span class="string">&quot;ul1&quot;</span><span>&gt;(.*)&lt;\/ul&gt;/).to_s.scan(/&lt;li&gt;(.*?)&lt;\/li&gt;/)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>8.&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>0.&nbsp;puts&nbsp;ip2addr&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>结果 <img border="0" align="absmiddle" style="padding: 0px 2px;" src="http://chinaonrails.com/img/icons/silk/emoticon_smile.png" alt="" /><br />
<br />
本站主数据：美国<br />
查询结果2：美国<br />
查询结果3：美国 加利福尼亚州Mountain<br />
<br />
http://chinaonrails.com/topic/view/216.html</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前我也写过一个类似的，找不到了，刚才看到<a class="t" href="http://chinaonrails.com/u/axgle">axgle</a>写了一个，挺轻巧的。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>1.&nbsp;require&nbsp;</span><span class="string">'net/http'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>2.&nbsp;require&nbsp;<span class="string">&quot;uri&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>4.&nbsp;<span class="keyword">def</span><span>&nbsp;ip2addr(ip=</span><span class="string">&quot;google.com&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>5.&nbsp;url=URI.parse(<span class="string">&quot;http://ip138.com/ips8.asp&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>6.&nbsp;res=Net::HTTP.post_form(url,<span class="symbol">:ip</span><span>=&gt;ip,</span><span class="symbol">:action</span><span>=&gt;2)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>7.&nbsp;res.body.scan(/&lt;ul&nbsp;<span class="keyword">class</span><span>=</span><span class="string">&quot;ul1&quot;</span><span>&gt;(.*)&lt;\/ul&gt;/).to_s.scan(/&lt;li&gt;(.*?)&lt;\/li&gt;/)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>8.&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>0.&nbsp;puts&nbsp;ip2addr&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>结果 <img border="0" align="absmiddle" style="padding: 0px 2px;" src="http://chinaonrails.com/img/icons/silk/emoticon_smile.png" alt="" /><br />
<br />
本站主数据：美国<br />
查询结果2：美国<br />
查询结果3：美国 加利福尼亚州Mountain<br />
<br />
http://chinaonrails.com/topic/view/216.html</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2008-03-07 13:05:12</wp:post_date>
		<wp:post_date_gmt>2008-03-07 13:05:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ip%e5%9c%b0%e5%9d%80%e5%88%b0%e7%89%a9%e7%90%86%e5%9c%b0%e5%9d%80%e7%9a%84%e8%bd%ac%e5%8c%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_ac25c8ae5c8e02c1e23357470be524cd</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.33.5.212</wp:comment_author_IP>
			<wp:comment_date>2008-03-07 18:10:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近很忙吗! :-)
都不见你登录1..S.T了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>关于Ruby中对正则表达式中的特殊字符转义的疑惑</title>
		<link>http://www.iceskysl.com/?p=228</link>
		<pubDate>Wed, 12 Mar 2008 15:51:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=228</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转义正则表达式中的特殊字符<br />
===========================================<br />
使用Regexp.<strong>escape</strong>方法(别名方法是Regexp.<strong>quote</strong>)，可以把正则表达式中的特殊字符统统转义：<br />
str1 = &quot;[*?]&quot;<br />
str2 = Regexp.escape(str1)    # &quot;\[\*\?\]&quot;<br />
<br />
escape会转义掉[*?]这几个特殊的字符，但是其没有对另外一个字符<strong>&lsquo;/&rsquo;</strong>进行任何处理，这个作为正则表达式的分隔符(//)中的字符难道不是特殊字符么。<br />
<br />
<strong> 看个例子：</strong><br />
pages=&quot;http://www.taojer.com/id=1&amp;name=help&quot;<br />
puts Regexp.escape(pages)<br />
<br />
<strong> 输出：</strong><br />
E:\Ysl\Test&gt;ruby exp.rb<br />
http://www\.taojer\.com/id=1&amp;name=help<br />
<br />
可以看到其对/字符是没有进行处理的。<br />
<br />
这个可能会给如下这个需求带来一些问题：<br />
我想在一段String中找到所有以一个指定的URL开头的链接地址，程序大概是这样的：<br />
url=&quot;http://www.taojer.com&quot;<br />
按照我们的思路，可能会这么写：<br />
e_url = Regexp.escape(url)<br />
==》http://www\.taojer\.com<br />
str.scan(/&lt;a href=&quot;(e_url)&quot;&gt;(.+?)&lt;\/a&gt;/m)<br />
但是这样就会因为/字符存在而异常咯？<br />
<br />
正确是应该是：<br />
str.scan(/&lt;a href=&quot;(http:\/\/www\.taojer\.com)&quot;&gt;(.+?)&lt;\/a&gt;/m).each do |list|<br />
#do something<br />
end<br />
<br />
按照规定：<br />
特殊字符包括^、$、?、.、/、\、[、]、{、}、(、)、+、*、<br />
为什么这个方法不转义<strong>/</strong>呢？<br />
有啥子高招，解决这个问题？<br />
参考：<br />
http://chinaonrails.com/topic/view/1418.html<br />
http://www.ruby-doc.org/core/classes/Regexp.html#M001227</p>
<p>http://lzj520.javaeye.com/blog/143223</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>转义正则表达式中的特殊字符<br />
===========================================<br />
使用Regexp.<strong>escape</strong>方法(别名方法是Regexp.<strong>quote</strong>)，可以把正则表达式中的特殊字符统统转义：<br />
str1 = &quot;[*?]&quot;<br />
str2 = Regexp.escape(str1)    # &quot;\[\*\?\]&quot;<br />
<br />
escape会转义掉[*?]这几个特殊的字符，但是其没有对另外一个字符<strong>&lsquo;/&rsquo;</strong>进行任何处理，这个作为正则表达式的分隔符(//)中的字符难道不是特殊字符么。<br />
<br />
<strong> 看个例子：</strong><br />
pages=&quot;http://www.taojer.com/id=1&amp;name=help&quot;<br />
puts Regexp.escape(pages)<br />
<br />
<strong> 输出：</strong><br />
E:\Ysl\Test&gt;ruby exp.rb<br />
http://www\.taojer\.com/id=1&amp;name=help<br />
<br />
可以看到其对/字符是没有进行处理的。<br />
<br />
这个可能会给如下这个需求带来一些问题：<br />
我想在一段String中找到所有以一个指定的URL开头的链接地址，程序大概是这样的：<br />
url=&quot;http://www.taojer.com&quot;<br />
按照我们的思路，可能会这么写：<br />
e_url = Regexp.escape(url)<br />
==》http://www\.taojer\.com<br />
str.scan(/&lt;a href=&quot;(e_url)&quot;&gt;(.+?)&lt;\/a&gt;/m)<br />
但是这样就会因为/字符存在而异常咯？<br />
<br />
正确是应该是：<br />
str.scan(/&lt;a href=&quot;(http:\/\/www\.taojer\.com)&quot;&gt;(.+?)&lt;\/a&gt;/m).each do |list|<br />
#do something<br />
end<br />
<br />
按照规定：<br />
特殊字符包括^、$、?、.、/、\、[、]、{、}、(、)、+、*、<br />
为什么这个方法不转义<strong>/</strong>呢？<br />
有啥子高招，解决这个问题？<br />
参考：<br />
http://chinaonrails.com/topic/view/1418.html<br />
http://www.ruby-doc.org/core/classes/Regexp.html#M001227</p>
<p>http://lzj520.javaeye.com/blog/143223</p>]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2008-03-12 15:51:07</wp:post_date>
		<wp:post_date_gmt>2008-03-12 15:51:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8eruby%e4%b8%ad%e5%af%b9%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e4%b8%ad%e7%9a%84%e7%89%b9%e6%ae%8a%e5%ad%97%e7%ac%a6%e8%bd%ac%e4%b9%89%e7%9a%84%e7%96%91%e6%83%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_c6644acccfa5028880484b1bdcc99ce9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linux和windows之间的压缩包乱码</title>
		<link>http://www.iceskysl.com/?p=229</link>
		<pubDate>Sat, 15 Mar 2008 23:02:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这个问题搞了我一晚上，到现在也没找到合适的方法，真是郁闷呀，记录下找到的东西，如下：</p>
<p><strong>问题：</strong><br />
我在rails中使用fasterCSV导出DB里面的东西，编码为UTF-8,在linux上查看一切正常，但是我先后采用了zip，gzip，tar，7zip，rar，以及biz等压缩后传送给windows，打开发现是乱码。</p>
<p>具体表现为：</p>
<p>1、zip，tar，gzip，biz等压缩出来的，中文文件名和数据文件均乱码;</p>
<p>2、用7zip和rar打包出来的，在windows下打开，中文名正常，但是内部的数据文件还是乱码。</p>
<p>&nbsp;</p>
<p>在linux与windows平台间交换压缩包文件，如果文件名中含有中文，有时候就会遇到乱码问题，给平台间的文件交换带来麻烦。今天仔细研究了一下，总结下面一些经验，供大家分享</p>
<p>1. 7zip和rar（我用的是3.50，好像rar的旧版本不行）会对文件名编码进行转换，内部文件名编码使用</p>
<p>unicode，所以使用这两种格式在linux和windows平台间交换不会有乱码问题，其他格式（比如tar.gz, tar.bz2)似乎不进行转换，所以不适合平台间交换。但鉴于linux的自由精神，不推荐使用商业软件rar，而推荐自由的7zip。但是，我发现用 <a title="Ubuntu" href="http://www.linuxidc.com/topicnews.aspx?tid=2">Ubuntu</a>中（我的是Edge）file-roller处理7zip文件还是会存在问题，而用命令行就没有问题，所以推荐大家用命令行的7zip。</p>
<p><br />
按照找到的资料，应该只有文件名会出现乱码，正文内容不会乱码的呀，真是奇怪。<br />
<br />
我本地测试用7zip或者rar压缩以后，中文的文件名正常了，但是内部的数据文件中的中文还是乱码，奇怪呀。。。</p>
<p>有高手指点一下，多谢了哦。</p>
<p><br />
相关资料：<br />
http://linux.chinaitlab.com/administer/735727.html<br />
http://www.zdnet.com.cn/server/2008/0228/744257.shtml<br />
http://www.linuxidc.com/Linux/2007-12/9951.htm</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这个问题搞了我一晚上，到现在也没找到合适的方法，真是郁闷呀，记录下找到的东西，如下：</p>
<p><strong>问题：</strong><br />
我在rails中使用fasterCSV导出DB里面的东西，编码为UTF-8,在linux上查看一切正常，但是我先后采用了zip，gzip，tar，7zip，rar，以及biz等压缩后传送给windows，打开发现是乱码。</p>
<p>具体表现为：</p>
<p>1、zip，tar，gzip，biz等压缩出来的，中文文件名和数据文件均乱码;</p>
<p>2、用7zip和rar打包出来的，在windows下打开，中文名正常，但是内部的数据文件还是乱码。</p>
<p>在linux与windows平台间交换压缩包文件，如果文件名中含有中文，有时候就会遇到乱码问题，给平台间的文件交换带来麻烦。今天仔细研究了一下，总结下面一些经验，供大家分享</p>
<p>1. 7zip和rar（我用的是3.50，好像rar的旧版本不行）会对文件名编码进行转换，内部文件名编码使用</p>
<p>unicode，所以使用这两种格式在linux和windows平台间交换不会有乱码问题，其他格式（比如tar.gz, tar.bz2)似乎不进行转换，所以不适合平台间交换。但鉴于linux的自由精神，不推荐使用商业软件rar，而推荐自由的7zip。但是，我发现用 <a title="Ubuntu" href="http://www.linuxidc.com/topicnews.aspx?tid=2">Ubuntu</a>中（我的是Edge）file-roller处理7zip文件还是会存在问题，而用命令行就没有问题，所以推荐大家用命令行的7zip。</p>
<p><br />
按照找到的资料，应该只有文件名会出现乱码，正文内容不会乱码的呀，真是奇怪。<br />
<br />
我本地测试用7zip或者rar压缩以后，中文的文件名正常了，但是内部的数据文件中的中文还是乱码，奇怪呀。。。</p>
<p>有高手指点一下，多谢了哦。</p>
<p><br />
相关资料：<br />
http://linux.chinaitlab.com/administer/735727.html<br />
http://www.zdnet.com.cn/server/2008/0228/744257.shtml<br />
http://www.linuxidc.com/Linux/2007-12/9951.htm</p>]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2008-03-15 23:02:20</wp:post_date>
		<wp:post_date_gmt>2008-03-15 23:02:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e5%92%8cwindows%e4%b9%8b%e9%97%b4%e7%9a%84%e5%8e%8b%e7%bc%a9%e5%8c%85%e4%b9%b1%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_1a94af075bc75b78b0c47b978eae9c8b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.82.240</wp:comment_author_IP>
			<wp:comment_date>2008-03-16 00:11:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.linuxdiyf.com/bbs/viewthread.php?tid=76177]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中发送大文件</title>
		<link>http://www.iceskysl.com/?p=230</link>
		<pubDate>Mon, 17 Mar 2008 15:53:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有个需求是需要在程序里生成压缩文件，并通过浏览器下载，在rails中发送文件的方式有2中，分别是send_data和send_file,两者还是有些区别的，详细的可以参考Rails的API文档（http://api.rubyonrails.com/classes/ActionController/Streaming.html），这里简单的记录2个方式，如下：</p>
<pre><strong>send_file '/path/to.zip'</strong></pre>
<blockquote>（Sends the file by streaming it <strong>4096 </strong>bytes at a time. This way the whole<br />
file doesn&lsquo;t need to be read into memory at once. This makes it<br />
feasible to send even large files.）<br />
</blockquote>
<pre>恩，我的需求差不多也是这样的，需要发送的文件比较大，大概在10M左右的大小，按照上<br />面的这个说明，15M的文件差不多需要下载一分钟（理论速度，和实际的网速还是有关系的）；<br />挺方便了。<br />参考：<br />http://api.rubyonrails.com/classes/ActionController/Streaming.html<br />http://www.javaeye.com/post/219997</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有个需求是需要在程序里生成压缩文件，并通过浏览器下载，在rails中发送文件的方式有2中，分别是send_data和send_file,两 者还是有些区别的，详细的可以参考Rails的API文档（http: //api.rubyonrails.com/classes/ActionController/Streaming.html），这里简单的记录2个 方式，如下：</p>
<p><strong>send_file '/path/to.zip'</strong></p>
<blockquote>（Sends the file by streaming it <strong>4096 </strong>bytes at a time. This way the whole<br />
file doesn&lsquo;t need to be read into memory at once. This makes it<br />
feasible to send even large files.）<br />
</blockquote>
<p>恩，我的需求差不多也是这样的，需要发送的文件比较大，大概在10M左右的大小，按照上<br />
面的这个说明，15M的文件差不多需要下载一分钟（理论速度，和实际的网速还是有关系的）；<br />
挺方便了。<br />
参考：<br />
http://api.rubyonrails.com/classes/ActionController/Streaming.html<br />
http://www.javaeye.com/post/219997</p>]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2008-03-17 15:53:20</wp:post_date>
		<wp:post_date_gmt>2008-03-17 15:53:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e5%8f%91%e9%80%81%e5%a4%a7%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[hjg515]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.252.20.20</wp:comment_author_IP>
			<wp:comment_date>2008-09-12 13:39:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[大文件传送，大照片发送，跨国文件传送，跨国文件传输，网络传输加速，跨国网络传输，都是酷达的代名词。建议你使用酷达免费软件，这种软件专门用来传输大文件的，我用了，速度非常快！在http://www.qoodaa.com.cn可以下载到。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>别想馅饼啦，小心掉到陷阱里面去</title>
		<link>http://www.iceskysl.com/?p=231</link>
		<pubDate>Tue, 18 Mar 2008 14:39:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近，老是收到一封名字为&ldquo;spam轉寄^_^&rdquo;的邮件，内容相当老套，和以往的思路差不多，这次是鼓吹&ldquo;比尔盖茨&rdquo;多NB，说起在施舍自己的财富啥的，只要转发那个邮件就可以自动汇入多少多少美金。。</p>
<p>对于这类的馅饼，偶从来就不放心上的，搞过计算机安全，偶也懂得一点的&rdquo;社会工程学&ldquo;的，利用社会学的例子，在不知不觉中，有些人就得到了其需要的东西而不会被人发觉。这就是社工的魅力和内涵。</p>
<p>来看下这个邮件，其诱惑点有如下几个：</p>
<p>1、有英文及其对应的翻译（繁体字），让人觉得有那么点可信；</p>
<p>2、开始有几个炒作的，都说收到钱了，等等，让人稍微动心了；</p>
<p>3、反正不费事，于是很多人就开始抱着试试看的心情大量转发咯；</p>
<p>那么这样会给开始策划的人带来什么好处呢？</p>
<p>具体的我不知道，有可能是测试中国人的心里；有可能是闹着玩等等，但是偶认为其还可以收集大家的工作邮箱，想想这么多人的真实、活跃邮箱，这可是比较珍贵的东西呀。</p>
<p>抑或在某些版本的邮件接收中有类似跨站，取cookie、溢出下载等等的漏洞，这样就可以有更多的用处了。</p>
<p>哎，对于这类&rdquo;馅饼&ldquo;，大家还是小心为妙，不要为了&rdquo;馅饼&ldquo;调到&rdquo;陷阱&ldquo;里啦。</p>
<p>附：原文：</p>
<p><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">請不要管它是真還是假，試一下！　如下文章的意思是：（水平有限，可能翻譯得不是很正確，班門弄斧了！）</span></font></strong></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;">  <br />
</span></font><strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-size: 10pt; color: red; font-family: Arial;">Dear  Friends,</span></font></strong></strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-weight: bold; font-size: 10pt; color: red; font-family: Arial;"><br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">Please do not take this for a junk  letter. Bill Gates is sharing his fortune. If you ignore this you will repent  later. Microsoft and AOL are now the largest Internet companies and in an effort  to make sure that Internet Explorer remains the most widely used program,  Microsoft and AOL are running an e-mail beta test.  </span></font></strong></strong></span></font></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;"><br />
</span></font><strong><strong><font size="2" face="PMingLiU" color="red"><span style="font-size: 10pt; color: red; font-family: PMingLiU;">親愛的朋友們，</span></font></strong></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;">  <br />
</span></font><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">請不要把此郵件當作是垃圾郵件。比爾</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">.</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">蓋茨正在施捨他的財富。如果你無視此封郵件稍後你將會追悔莫及</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">.Microsoft and AOL  </span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">是現今最大的因特網公司並致力於確保因特網</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">Windows</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">資源管理器依然是使用最廣的程序，</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">Microsoft and AOL  </span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">正在進行</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">E-mail</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">第二個階段的測試。</span></font></strong></strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-weight: bold; font-size: 10pt; color: red; font-family: Arial;"><br />
<br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">When you forward this e-mail to  friends, Microsoft can and will track it (if you are a Microsoft Windows user)  for a two week time period.</span></font></strong></strong></span></font></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;">  <br />
</span></font><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">噹你把此</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">e-mail</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">轉送給你的朋友時，微軟將跟在兩周</span></font></strong></strong><strong><strong><font size="2" face="宋体" color="blue"><span style="font-size: 10pt; color: blue; font-family: 宋体;">內蹤它（如果你是</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">Microsoft Windows  </span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">的使用者）。</span></font></strong></strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-weight: bold; font-size: 10pt; color: red; font-family: Arial;"><br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">For every person that you forward  this e-mail to, Microsoft will pay you $245.00, for every person that you sent  it to that forwards it on, Microsoft will pay you $243.00 and for every third  person that receives it, you will be paid $241.00. Within two week! s, Microsoft  will contact you for your address and then send you a cheque.  </span></font></strong></strong></span></font></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;"><br />
</span></font><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">對於每一個轉發此</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">mail</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">給朋友的人，微軟將會付給你</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">$245</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">。對於每一個你轉發了的人，</span></font></strong></strong><strong><strong><font size="2" face="宋体" color="blue"><span style="font-size: 10pt; color: blue; font-family: 宋体;">別人又繼續轉發的人，微軟將付給你</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">$243</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">並且每三個人收到此</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">mail</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">，你將會得及</span></font></strong></strong><strong><strong><font size="2" face="Arial" color="blue"><span lang="EN-US" style="font-size: 10pt; color: blue; font-family: Arial;">$241</span></font></strong></strong><strong><strong><font size="2" face="PMingLiU" color="blue"><span style="font-size: 10pt; color: blue; font-family: PMingLiU;">的付款。在兩周</span></font></strong></strong><strong><strong><font size="2" face="宋体" color="blue"><span style="font-size: 10pt; color: blue; font-family: 宋体;">內，微軟將會聯繫你的地址並給你一張支票！　</span></font></strong></strong><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;"> <br />
</span></font><font size="2" face="Arial" color="#333399"><span lang="EN-US" style="font-size: 10pt; color: rgb(51, 51, 153); font-family: Arial;">Don</span></font><font size="2" color="#333399"><span lang="EN-US" style="font-size: 10pt; color: rgb(51, 51, 153);">&rsquo;</span></font><font size="2" face="Arial" color="#333399"><span lang="EN-US" style="font-size: 10pt; color: rgb(51, 51, 153); font-family: Arial;">t Know True Or  False, Just Have &nbsp;a &nbsp; Try</span></font><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;">  <br />
</span></font><span lang="EN-US">&nbsp;</span><font size="2" face="Verdana"><span lang="EN-US" style="font-size: 10pt; font-family: Verdana;">  <br />
</span></font><strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-size: 10pt; color: red; font-family: Arial;">Dear  Friends,</span></font></strong></strong><strong><font size="2" face="Arial" color="red"><span lang="EN-US" style="font-weight: bold; font-size: 10pt; color: red; font-family: Arial;"><br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">Please do not take this for a junk  letter. Bill Gates is sharing his fortune. If you ignore this you will repent  later. Microsoft and AOL are now the largest Internet companies and in an effort  to make sure that Internet Explorer remains the most widely used program,  Microsoft and AOL are running an e-mail beta test.  </span></font></strong></strong><br />
<br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">When you forward this e-mail to friends, Microsoft  can and will track it (if you are a Microsoft Windows user) for a two week time  period.</span></font></strong></strong><br />
<br />
<strong><strong><font face="Arial"><span style="font-family: Arial;">For every person that you forward this e-mail to,  Microsoft will pay you $245.00, for every person that you sent it to that  forwards it on, Microsoft will pay you $243.00 and for every third person that  receives it, you will be paid $241.00. Within two week! s, Microsoft will  contact you for your address and then send you a cheque.&nbsp;  </span></font></strong></strong></span></font></strong><font size="2" face="Verdana" color="black"><span lang="EN-US" style="font-size: 10pt; color: black; font-family: Verdana;"><br />
</span></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近，老是收到一封名字为&ldquo;spam轉寄^_^&rdquo;的邮件，内容相当老套，和以往的思路差不多，这次是鼓吹&ldquo;比尔盖茨&rdquo;多NB，说起在施舍自己的财富啥的，只要转发那个邮件就可以自动汇入多少多少美金。。</p>
<p>对于这类的馅饼，偶从来就不放心上的，搞过计算机安全，偶也懂得一点的&rdquo;社会工程学&ldquo;的，利用社会学的例子，在不知不觉中，有些人就得到了其需要的东西而不会被人发觉。这就是社工的魅力和内涵。</p>
<p>来看下这个邮件，其诱惑点有如下几个：</p>
<p>1、有英文及其对应的翻译（繁体字），让人觉得有那么点可信；</p>
<p>2、开始有几个炒作的，都说收到钱了，等等，让人稍微动心了；</p>
<p>3、反正不费事，于是很多人就开始抱着试试看的心情大量转发咯；</p>
<p>那么这样会给开始策划的人带来什么好处呢？</p>
<p>具体的我不知道，有可能是测试中国人的心里；有可能是闹着玩等等，但是偶认为其还可以收集大家的工作邮箱，想想这么多人的真实、活跃邮箱，这可是比较珍贵的东西呀。</p>
<p>抑或在某些版本的邮件接收中有类似跨站，取cookie、溢出下载等等的漏洞，这样就可以有更多的用处了。</p>
<p>哎，对于这类&rdquo;馅饼&ldquo;，大家还是小心为妙，不要为了&rdquo;馅饼&ldquo;调到&rdquo;陷阱&ldquo;里啦。</p>
<p>附：原文：</p>]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2008-03-18 14:39:05</wp:post_date>
		<wp:post_date_gmt>2008-03-18 14:39:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%ab%e6%83%b3%e9%a6%85%e9%a5%bc%e5%95%a6%ef%bc%8c%e5%b0%8f%e5%bf%83%e6%8e%89%e5%88%b0%e9%99%b7%e9%98%b1%e9%87%8c%e9%9d%a2%e5%8e%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.57.89</wp:comment_author_IP>
			<wp:comment_date>2008-03-21 06:37:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[研究一下，嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Google Chart API去除流量限制　增加新特性</title>
		<link>http://www.iceskysl.com/?p=232</link>
		<pubDate>Wed, 19 Mar 2008 12:42:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=232</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Google Chart API由于功能强大及使用简便，受到了大范围的好评。但用户也有强烈不满的地方，那便是Chart API有个流量限制，每用户每天最多只能执行5万次查询。为了满足大站用户的需求，Google今天去除了这个限制。<br />
<br />
此外，Chart API也对原有的一些特性进行了扩展，以及增加了新的特性。新的特性包括了支持了地图、雷达图等：</p>
<p><img src="http://www.gseeker.com/50226711/radar-chart.png" alt="" /><br />
详细的更新可进入<a target="_blank" href="http://code.google.com/apis/chart/">Chart API主页</a>查看（标准有extended或new的）。同样地，如果觉得这些文档不易阅读，也可参阅<a target="_blank" href="http://www.gseeker.com/50226711/google_chart_apiaece_131740.php">中文版</a>，以及使用<a target="_blank" href="http://www.gseeker.com/50226711/chartmakerieaegoogle_chart_apice_134221.php">图形化的生成工具</a>。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Google Chart API由于功能强大及使用简便，受到了大范围的好评。但用户也有强烈不满的地方，那便是Chart API有个流量限制，每用户每天最多只能执行5万次查询。为了满足大站用户的需求，Google今天去除了这个限制。<br />
<br />
此外，Chart API也对原有的一些特性进行了扩展，以及增加了新的特性。新的特性包括了支持了地图、雷达图等：</p>
<p><img src="http://www.gseeker.com/50226711/radar-chart.png" alt="" /><br />
详细的更新可进入<a target="_blank" href="http://code.google.com/apis/chart/">Chart API主页</a>查看（标准有extended或new的）。同样地，如果觉得这些文档不易阅读，也可参阅<a target="_blank" href="http://www.gseeker.com/50226711/google_chart_apiaece_131740.php">中文版</a>，以及使用<a target="_blank" href="http://www.gseeker.com/50226711/chartmakerieaegoogle_chart_apice_134221.php">图形化的生成工具</a>。</p>]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2008-03-19 12:42:52</wp:post_date>
		<wp:post_date_gmt>2008-03-19 12:42:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-chart-api%e5%8e%bb%e9%99%a4%e6%b5%81%e9%87%8f%e9%99%90%e5%88%b6%e3%80%80%e5%a2%9e%e5%8a%a0%e6%96%b0%e7%89%b9%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中调用系统的rar来打包文件包</title>
		<link>http://www.iceskysl.com/?p=233</link>
		<pubDate>Sun, 23 Mar 2008 22:36:47 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于项目需求,用户可以定制,下载一些数据和图片,于是乎就需要实现的功能有:打包,中文,以及下载等,这里大概的说一下,我也是测试了好久,查了好多资料踩搞明白一些问题,首先BS下window所谓的国际化.真是FT.</p>
<p>先看如果压缩文件,看代码,如下:</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>pwd&nbsp;=&nbsp;</span><span class="builtin">Dir</span><span>.pwd&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;Dir.pwd=#{pwd}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="builtin">Dir</span><span>.chdir(</span><span class="string">&quot;#{cp_dir}&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;system&nbsp;<span class="string">&quot;rar&nbsp;a&nbsp;&nbsp;#{local_dir_name}&nbsp;#{local_dir_name}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>使用了Ruby的Dir及其代码块的临时切换目录的功能,实在是棒,开始的时候,我还在想使用Tar或者rar用-C参数来去掉打包后的文件夹路径;</p>
<p>至于这里为什么使用rar而没有使用比较传统的tar或者gzip,zip或则7zip等,主要是乱码的问题,详细的大家可以查看我以前的文章&lt;<a href="../../../?action=show&amp;id=229" id="r_l_3">linux和windows之间的压缩包乱码</a>&gt;.</p>
<p>而后下载的过程中,再次感觉WIn下IE的可恶,乱码,呵呵,没关系,我们可以这样做,如下:<span>&nbsp;<br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>res&nbsp;=&nbsp;Resource.find(params[</span><span class="symbol">:id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span>res.update_attribute(<span class="symbol">:downed_count</span><span>,&nbsp;res.downed_count&nbsp;+&nbsp;1)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>user_agent&nbsp;=&nbsp;request.user_agent.downcase&nbsp;&nbsp;</span></li>
    <li class=""><span>filename&nbsp;=&nbsp;<span class="builtin">File</span><span>.basename(res.path)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">if</span><span>&nbsp;user_agent&nbsp;&nbsp;=~&nbsp;/msie/i&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;send_file(RAILS_ROOT&nbsp;+&nbsp;res.path,<span class="symbol">:buffer</span><span>&nbsp;=&gt;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;16384&quot;</span><span>,</span><span class="symbol">:filename</span><span>=&gt;CGI:</span><span class="symbol">:escape</span><span>(filename))&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;send_file(RAILS_ROOT&nbsp;+&nbsp;res.path,<span class="symbol">:buffer</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;16384&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</span></p>
<p>差不多这些都是关键,搞明白了,就基本上无敌了,呵呵.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于项目需求,用户可以定制,下载一些数据和图片,于是乎就需要实现的功能有:打包,中文,以及下载等,这里大概的说一下,我也是测试了好久,查了好多资料踩搞明白一些问题,首先BS下window所谓的国际化.真是FT.</p>
<p>先看如果压缩文件,看代码,如下:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>pwd&nbsp;=&nbsp;</span><span class="builtin">Dir</span><span>.pwd&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;Dir.pwd=#{pwd}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="builtin">Dir</span><span>.chdir(</span><span class="string">&quot;#{cp_dir}&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;system&nbsp;<span class="string">&quot;rar&nbsp;a&nbsp;&nbsp;#{local_dir_name}&nbsp;#{local_dir_name}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>使用了Ruby的Dir及其代码块的临时切换目录的功能,实在是棒,开始的时候,我还在想使用Tar或者rar用-C参数来去掉打包后的文件夹路径;</p>
<p>至于这里为什么使用rar而没有使用比较传统的tar或者gzip,zip或则7zip等,主要是乱码的问题,详细的大家可以查看我以前的文章&lt;<a href="../../../?action=show&amp;id=229" id="r_l_3">linux和windows之间的压缩包乱码</a>&gt;.</p>
<p>而后下载的过程中,再次感觉WIn下IE的可恶,乱码,呵呵,没关系,我们可以这样做,如下:<span>&nbsp;<br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>res&nbsp;=&nbsp;Resource.find(params[</span><span class="symbol">:id</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class=""><span>res.update_attribute(<span class="symbol">:downed_count</span><span>,&nbsp;res.downed_count&nbsp;+&nbsp;1)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>user_agent&nbsp;=&nbsp;request.user_agent.downcase&nbsp;&nbsp;</span></li>
    <li class=""><span>filename&nbsp;=&nbsp;<span class="builtin">File</span><span>.basename(res.path)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">if</span><span>&nbsp;user_agent&nbsp;&nbsp;=~&nbsp;/msie/i&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;send_file(RAILS_ROOT&nbsp;+&nbsp;res.path,<span class="symbol">:buffer</span><span>&nbsp;=&gt;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;16384&quot;</span><span>,</span><span class="symbol">:filename</span><span>=&gt;CGI:</span><span class="symbol">:escape</span><span>(filename))&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;send_file(RAILS_ROOT&nbsp;+&nbsp;res.path,<span class="symbol">:buffer</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;16384&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</span></p>
<p>差不多这些都是关键,搞明白了,就基本上无敌了,呵呵.</p>]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2008-03-23 22:36:47</wp:post_date>
		<wp:post_date_gmt>2008-03-23 22:36:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e8%b0%83%e7%94%a8%e7%b3%bb%e7%bb%9f%e7%9a%84rar%e6%9d%a5%e6%89%93%e5%8c%85%e6%96%87%e4%bb%b6%e5%8c%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>调优：大量的CLOSE_WAIT状态连接</title>
		<link>http://www.iceskysl.com/?p=234</link>
		<pubDate>Mon, 24 Mar 2008 13:34:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这几天，项目上遇到一个很奇怪的问题，由于项目比较庞大，使用了3台独立的主机做服务器，前端用了硬件的radware采用轮询算法做了三台服务器的负载均衡，每台服务上部署了一台weblogic和一个前置apache做proxy，并且启用了apache的支持weblogic的集群功能，二次向三台weblogic做负载均衡（虽然这里我觉得没啥必要，但是原先他们就这么做了，我就不改了）。</p>
<p>apache使用的是prefork模块，开了<strong>800</strong>个最大连接，配置了超时机制；后端的weblogic除了线程池和队列，文件句柄等做了修改外，其他的貌似没怎么修改。</p>
<p>出现的问题的现象是，apache的线程全部用完（802个），weblogic相对比较空闲，内存消耗一般，CPU（4颗的）的idea也在50%左右；前端表现是页面打开速度相当慢，基本不可用。</p>
<p>问题的分析过程是，先看到apache的error的log里面很多&ldquo;文件找不到&rdquo;错误，由于编辑做的页面上引了一些并不存在的资源，导致的，怀疑此类错误太多，会影响性能，于是找出错误页面，让编辑修复其中巍峨文件引用。但是效果不是很明显，虽然error少了很多。</p>
<p>继续分析，使用netstat -an看到很多端口被占用，且很多处于CLOSE_WAIT状态，找个脚本统计下，如下：</p>
<p><font>[wwwpps@IceskYsl]$ netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S)  print a, S[a]}'<br />
LAST_ACK 1<br />
SYN_RECV 15<br />
<font color="#ff0000"><strong>CLOSE_WAIT 7729</strong></font><br />
ESTABLISHED  471<br />
FIN_WAIT1 3<br />
FIN_WAIT2 52<br />
SYN_SENT 1<br />
TIME_WAIT 725</font></p>
<p><font>可以看到，确实很多，感觉这里是有问题，google得到一些资料，说到这个问题会导致：&ldquo;</font><font><font color="#000000">大量的CLOSE_WAIT连接，直接占满TCP队列，导致Apache失去响应。&rdquo;</font></font></p>
<p><font><font color="#000000">解决这个问题的方法是修改系统的参数，系统默认超时时间的是7200秒，也就是2小时，这个太大了，对于我们这样的负荷来说，于是修改如下几个参数：</font></font></p>
<p>sysctl -w net.ipv4.tcp_keepalive_time=30<br />
sysctl -w net.ipv4.tcp_keepalive_probes=2<br />
sysctl -w net.ipv4.tcp_keepalive_intvl=2</p>
<p>然后，执行sysctl命令使修改生效，基本上就算完成了。目前正在观察中，看看下午高峰时候效果如何，就可以基本上得出结论了。</p>
<p>参考文章：</p>
<p>1、解释apache的几种模式的差别：http://www.servertechnology.cn/archives/314.html</p>
<p>2、解释&ldquo;CLOSE_WAIT生成的原因及其系统参数的意义&rdquo;：http://haka.sharera.com/blog/BlogTopic/32309.htm</p>
<p>3、解释如何修复：http://luobuwa.cn/tag.php?tag=apache&amp;mode=1</p>
<p><font><br />
</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这几天，项目上遇到一个很奇怪的问题，由于项目比较庞大，使用了3台独立的主机做服务器，前端用了硬件的radware采用轮询算法做了三台服务器 的负载均衡，每台服务上部署了一台weblogic和一个前置apache做proxy，并且启用了apache的支持weblogic的集群功能，二次 向三台weblogic做负载均衡（虽然这里我觉得没啥必要，但是原先他们就这么做了，我就不改了）。</p>
<p>apache使用的是prefork模块，开了<strong>800</strong>个最大连接，配置了超时机制；后端的weblogic除了线程池和队列，文件句柄等做了修改外，其他的貌似没怎么修改。</p>
<p>出现的问题的现象是，apache的线程全部用完（802个），weblogic相对比较空闲，内存消耗一般，CPU（4颗的）的idea也在50%左右；前端表现是页面打开速度相当慢，基本不可用。</p>
<p>问题的分析过程是，先看到apache的error的log里面很多&ldquo;文件找不到&rdquo;错误，由于编辑做的页面上引了一些并不存在的资源，导致的，怀疑此类错误太多，会影响性能，于是找出错误页面，让编辑修复其中巍峨文件引用。但是效果不是很明显，虽然error少了很多。</p>
<p>继续分析，使用netstat -an看到很多端口被占用，且很多处于CLOSE_WAIT状态，找个脚本统计下，如下：</p>
<p><font>[wwwpps@IceskYsl]$ netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S)  print a, S[a]}'<br />
LAST_ACK 1<br />
SYN_RECV 15<br />
<font color="#ff0000"><strong>CLOSE_WAIT 7729</strong></font><br />
ESTABLISHED  471<br />
FIN_WAIT1 3<br />
FIN_WAIT2 52<br />
SYN_SENT 1<br />
TIME_WAIT 725</font></p>
<p><font>可以看到，确实很多，感觉这里是有问题，google得到一些资料，说到这个问题会导致：&ldquo;</font><font><font color="#000000">大量的CLOSE_WAIT连接，直接占满TCP队列，导致Apache失去响应。&rdquo;</font></font></p>
<p><font><font color="#000000">解决这个问题的方法是修改系统的参数，系统默认超时时间的是7200秒，也就是2小时，这个太大了，对于我们这样的负荷来说，于是修改如下几个参数：</font></font></p>
<p>sysctl -w net.ipv4.tcp_keepalive_time=30<br />
sysctl -w net.ipv4.tcp_keepalive_probes=2<br />
sysctl -w net.ipv4.tcp_keepalive_intvl=2</p>
<p>然后，执行sysctl命令使修改生效，基本上就算完成了。目前正在观察中，看看下午高峰时候效果如何，就可以基本上得出结论了。</p>
<p>参考文章：</p>
<p>1、解释apache的几种模式的差别：http://www.servertechnology.cn/archives/314.html</p>
<p>2、解释&ldquo;CLOSE_WAIT生成的原因及其系统参数的意义&rdquo;：http://haka.sharera.com/blog/BlogTopic/32309.htm</p>
<p>3、解释如何修复：http://luobuwa.cn/tag.php?tag=apache&amp;mode=1</p>
<p><font><br />
</font></p>]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2008-03-24 13:34:17</wp:post_date>
		<wp:post_date_gmt>2008-03-24 13:34:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b0%83%e4%bc%98%ef%bc%9a%e5%a4%a7%e9%87%8f%e7%9a%84close_wait%e7%8a%b6%e6%80%81%e8%bf%9e%e6%8e%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>RESTClient:Web开发测试助手</title>
		<link>http://www.iceskysl.com/?p=235</link>
		<pubDate>Tue, 25 Mar 2008 11:47:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="prettyprint"><span class="pln"><a href="http://code.google.com/p/rest-client/">RESTClient</a> is a Java platform client application to test RESTful webservices. It can be used to test variety of HTTP communications.<br /><br /><img src="http://farm4.static.flickr.com/3015/2323886213_574ef710bd_o.png" alt="" /><br />使用很方便，但是需要java环境，如下：<br />$ java </span><span class="pun">-</span><span class="pln">jar restclient</span><span class="pun">-</span><span class="lit">2.1</span><span class="pun">-</span><span class="pln">jar</span><span class="pun">-</span><span class="kwd">with</span><span class="pun">-</span><span class="pln">dependencies</span><span class="pun">.</span><span class="pln">jar</span></pre>
<p><a id="About">关于这个的实现，可以参考这个文章：http://justtalkaboutweb.com/2008/01/25/building-restful-application-in-rails-20-step-by-step/</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<pre class="prettyprint"><span class="pln"><a href="http://code.google.com/p/rest-client/">RESTClient</a> is a Java platform client application to test RESTful webservices. It can be used to test variety of HTTP communications.<br /><br /><img src="http://farm4.static.flickr.com/3015/2323886213_574ef710bd_o.png" alt="" /><br />使用很方便，但是需要java环境，如下：<br />$ java </span><span class="pun">-</span><span class="pln">jar restclient</span><span class="pun">-</span><span class="lit">2.1</span><span class="pun">-</span><span class="pln">jar</span><span class="pun">-</span><span class="kwd">with</span><span class="pun">-</span><span class="pln">dependencies</span><span class="pun">.</span><span class="pln">jar</span></pre>
<p><a id="About">关于这个的实现，可以参考这个文章：http://justtalkaboutweb.com/2008/01/25/building-restful-application-in-rails-20-step-by-step/<br />
</a></p>]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2008-03-25 11:47:45</wp:post_date>
		<wp:post_date_gmt>2008-03-25 11:47:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restclientweb%e5%bc%80%e5%8f%91%e6%b5%8b%e8%af%95%e5%8a%a9%e6%89%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>好久没有回到Windows下了</title>
		<link>http://www.iceskysl.com/?p=236</link>
		<pubDate>Sat, 29 Mar 2008 20:27:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很久了，记不得什么时候开始使用ubuntu的，只记得当时还是7.04版本刚刚出来的时候，转眼间，ubuntu的8.04版本都快发布了，哦，这么算下来，差不多一年了吧。</p>
<p>这么一年来的时间，在家工作或者学习、娱乐的时候都在ubuntu下完成的，感觉不到什么别扭，甚至觉得更加的习惯和舒服，一点点都不怀念Window，今天回到windows下，面对一些曾经熟悉的界面，竟然有点不晓得做什么，好在浏览器还是FF，多少还比较习惯。</p>
<p>一年多的ubuntu，让我觉得lunix，非常适合我的需要，对一个不打游戏，不咋看电影，天天沉浸在coding的世界里，天天打交道的是IDE，SSH等等。这些都成为我工作之余的大部分内容，真的，ubuntu或者其他的发行版lunix，对程序员或者做互联网的人，非常的适合。</p>
<p>一年来，系统再也没有出过啥问题，最多的一次就是xfec的面板不见了，google下，非常简单的一条命令即可搞定；虽然我在windows下也很少中毒，虽然我也不装杀毒软件，但是免不了，偶尔还要用iceword检查下系统是否安全；在ubuntu下，这都免了。</p>
<p>我的本本上的window还没有彻底删除，主要是嫌转移资料，整理比较麻烦，反正ubuntu里面，可以直接读windows里的资料，就那么放着吧，有时间再重启进来瞧瞧，呵呵。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很久了，记不得什么时候开始使用ubuntu的，只记得当时还是7.04版本刚刚出来的时候，转眼间，ubuntu的8.04版本都快发布了，哦，这么算下来，差不多一年了吧。</p>
<p>这么一年来的时间，在家工作或者学习、娱乐的时候都在ubuntu下完成的，感觉不到什么别扭，甚至觉得更加的习惯和舒服，一点点都不怀念Window，今天回到windows下，面对一些曾经熟悉的界面，竟然有点不晓得做什么，好在浏览器还是FF，多少还比较习惯。</p>
<p>一年多的ubuntu，让我觉得lunix，非常适合我的需要，对一个不打游戏，不咋看电影，天天沉浸在coding的世界里，天天打交道的是 IDE，SSH等等。这些都成为我工作之余的大部分内容，真的，ubuntu或者其他的发行版lunix，对程序员或者做互联网的人，非常的适合。</p>
<p>一年来，系统再也没有出过啥问题，最多的一次就是xfec的面板不见了，google下，非常简单的一条命令即可搞定；虽然我在windows下也很少中毒，虽然我也不装杀毒软件，但是免不了，偶尔还要用iceword检查下系统是否安全；在ubuntu下，这都免了。</p>
<p>我的本本上的window还没有彻底删除，主要是嫌转移资料，整理比较麻烦，反正ubuntu里面，可以直接读windows里的资料，就那么放着吧，有时间再重启进来瞧瞧，呵呵。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2008-03-29 20:27:25</wp:post_date>
		<wp:post_date_gmt>2008-03-29 20:27:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a5%bd%e4%b9%85%e6%b2%a1%e6%9c%89%e5%9b%9e%e5%88%b0windows%e4%b8%8b%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.227.225.202</wp:comment_author_IP>
			<wp:comment_date>2008-03-29 21:30:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[lunix?貌似"Linux",或者是另外一个东东?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.46.179</wp:comment_author_IP>
			<wp:comment_date>2008-03-30 01:19:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小时候，被人误导过，一直没改过来，呵呵。
每次拼写的时候，都想到unix，然后就在前面直接加个l，就写成lunix了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>修复OpenOffice中打开Word文档行距很大</title>
		<link>http://www.iceskysl.com/?p=237</link>
		<pubDate>Sun, 30 Mar 2008 08:14:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[<p>平时用<u>word</u>的机会越来越少，虽然<u>OpenOffice</u>也挺不错，但是我还是习惯了<u>Google</u>的在线文档，简洁好用；但是偶尔也需要用OpenOffice打开以前的Word文档，发现其行距总是很宽，比较看着不舒服，查了下，原因及其解决办法为：</p>
<p><strong>Q: </strong>为什么我在OpenOffice.org中打开Word文档，总是行距很宽？而且调整行距不起作用。<br />
<br />
<strong>A: </strong>这是OpenOffice.org Writer里面一个选项造成的。在［格式］菜单里面选择［页面］，在［文字网格］选项卡中选择［不使用网格］，你的文档就回到正常状态啦！似乎 OpenOffice碰见亚洲字符的文档，就会自动给他加上网格，目前不太清楚如何自动关掉。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>平时用<u>word</u>的机会越来越少，虽然<u>OpenOffice</u>也挺不错，但是我还是习惯了<u>Google</u>的在线文档，简洁好用；但是偶尔也需要用OpenOffice打开以前的Word文档，发现其行距总是很宽，比较看着不舒服，查了下，原因及其解决办法为：</p>
<p><strong>Q: </strong>为什么我在OpenOffice.org中打开Word文档，总是行距很宽？而且调整行距不起作用。<br />
<br />
<strong>A: </strong>这是OpenOffice.org Writer里面一个选项造成的。在［格式］菜单里面选择［页面］，在［文字网格］选项卡中选择［不使用网格］，你的文档就回到正常状态啦！似乎 OpenOffice碰见亚洲字符的文档，就会自动给他加上网格，目前不太清楚如何自动关掉。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2008-03-30 08:14:37</wp:post_date>
		<wp:post_date_gmt>2008-03-30 08:14:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bf%ae%e5%a4%8dopenoffice%e4%b8%ad%e6%89%93%e5%bc%80word%e6%96%87%e6%a1%a3%e8%a1%8c%e8%b7%9d%e5%be%88%e5%a4%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中使用缓存(码表)的方式</title>
		<link>http://www.iceskysl.com/?p=238</link>
		<pubDate>Sun, 30 Mar 2008 23:09:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=238</guid>
		<description></description>
		<content:encoded><![CDATA[<p>搞过Java的应该都晓得,经常会定义一些字典,然后将这些字典缓存带内存中以提高查询的效率和速度,也就是常说的缓存,有人叫码表.</p>
<p>今天看看如何在Rails中实现类似的功能,思路是一样的,可以缓存在数组或者Hash里面,这里为了查找方便,我们选择使用Hash.</p>
<p>也就是:如何创建一个变量从rails开始运行时初始化，一直维持到rails终止，而且对于每一个request都能共享的变量？</p>
<p><strong>1,</strong>首先在<strong>environment.rb</strong>里面(如果您使用的Rails2以上版本,建议放在<strong>initializers</strong>目录里面,自己创建一个文件即可)定义一个ruby中的全局变量即可，例如<em><strong>$actions_in_mem</strong></em>在ruby里面，以<strong>$</strong>开头的变量即自动申明为全局变量）。在rails启动的时候，执行在environment.rb和initializers里面的文件，初始化<em><strong>$actions_in_mem</strong></em>,这样<em><strong>$actions_in_mem</strong></em>即可持续使用了,如:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="variable">$actions_in_mem</span><span>&nbsp;=&nbsp;</span><span class="builtin">Hash</span><span>.</span><span class="keyword">new</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>&nbsp;</p>
<p><strong>2,</strong>然后在controller或者model或者view里面都是可用的了,比如在model里面实现刷新:</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#刷新缓存</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;Action.refresh&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Action.get_actions(1).<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|ac|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;put_into_hash(ac.controller+<span class="string">&quot;_&quot;</span><span>+ac.action,ac.id)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;Action.put_into_hash(key,value)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">$actions_in_mem</span><span>.store(key,&nbsp;value)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;logger.info(<span class="string">&quot;@@actions_in_mem.size=#{$actions_in_mem.size}---#{key}=&gt;#{value}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>3,</strong>当然,你可以在controller中定义一个方法手工刷新这个全局变量,或者定时刷新即可,如下代码实现手工刷新.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#刷新缓存数据</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;refresh_actions&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Action.refresh&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>&nbsp;</p>
<p><strong>4,</strong>最后是在view里面显示或者维护,如下代码段:</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">ul</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%&nbsp;$actions_in_mem.each&nbsp;do&nbsp;|key,value|%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">li</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=key%</span><span class="tag">&gt;</span><span>=</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=value%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">li</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%end%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">ul</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>如上,就可以理解的差不多啦..</p>
<p>&nbsp;</p>
<p>关于如何查找,等下再写一篇说说.</p>
<p><strong>&nbsp;其他参考文档:</strong></p>
<p>1.http://blog.waynedeng.com/article.asp?id=628</p>
<p>2.http://www.cnblogs.com/hardrock/archive/2006/09/07/497554.html</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>搞过Java的应该都晓得,经常会定义一些字典,然后将这些字典缓存带内存中以提高查询的效率和速度,也就是常说的缓存,有人叫码表.</p>
<p>今天看看如何在Rails中实现类似的功能,思路是一样的,可以缓存在数组或者Hash里面,这里为了查找方便,我们选择使用Hash.</p>
<p>也就是:如何创建一个变量从rails开始运行时初始化，一直维持到rails终止，而且对于每一个request都能共享的变量？</p>
<p><strong>1,</strong>首先在<strong>environment.rb</strong>里面(如果您使用的Rails2以上版本,建议放在<strong>initializers</strong>目录里面,自己创建一个文件即可)定义一个ruby中的全局变量即可，例如<em><strong>$actions_in_mem</strong></em>在ruby里面，以<strong>$</strong>开头的变量即自动申明为全局变量）。在rails启动的时候，执行在environment.rb和initializers里面的文件，初始化<em><strong>$actions_in_mem</strong></em>,这样<em><strong>$actions_in_mem</strong></em>即可持续使用了,如:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="variable">$actions_in_mem</span><span>&nbsp;=&nbsp;</span><span class="builtin">Hash</span><span>.</span><span class="keyword">new</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>2,</strong>然后在controller或者model或者view里面都是可用的了,比如在model里面实现刷新:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#刷新缓存</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;Action.refresh&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Action.get_actions(1).<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|ac|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;put_into_hash(ac.controller+<span class="string">&quot;_&quot;</span><span>+ac.action,ac.id)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;Action.put_into_hash(key,value)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="variable">$actions_in_mem</span><span>.store(key,&nbsp;value)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;logger.info(<span class="string">&quot;@@actions_in_mem.size=#{$actions_in_mem.size}---#{key}=&gt;#{value}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>3,</strong>当然,你可以在controller中定义一个方法手工刷新这个全局变量,或者定时刷新即可,如下代码实现手工刷新.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#刷新缓存数据</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;refresh_actions&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Action.refresh&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>4,</strong>最后是在view里面显示或者维护,如下代码段:</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">ul</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%&nbsp;$actions_in_mem.each&nbsp;do&nbsp;|key,value|%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">li</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=key%</span><span class="tag">&gt;</span><span>=</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span>%=value%</span><span class="tag">&gt;</span><span class="tag">&lt;/</span><span class="tag-name">li</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%end%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">ul</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>如上,就可以理解的差不多啦..</p>
<p>关于如何查找,等下再写一篇说说.</p>]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date>2008-03-30 23:09:38</wp:post_date>
		<wp:post_date_gmt>2008-03-30 23:09:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8%e7%bc%93%e5%ad%98%e7%a0%81%e8%a1%a8%e7%9a%84%e6%96%b9%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Ruby的集合对象的遍历技巧</title>
		<link>http://www.iceskysl.com/?p=239</link>
		<pubDate>Sun, 30 Mar 2008 23:16:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前面一篇文章说到了<a href="http://iceskysl.1sters.com/?action=show&amp;id=238">在Rails中实现缓存(码表)</a>,接下来就说说如何度缓存的码表做查询,这里说的缓存有可能是数组,或者是Hash.</p>
<p>1.先看数组的</p>
<p>可以使用delect或者select方法来查找需要的那个元素,代码段如下:</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_object_by_id(collections,id)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;collections.select{|c|&nbsp;c.step_id&nbsp;==&nbsp;id}&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
2.Hash的,待续</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面一篇文章说到了<a href="../../../?action=show&amp;id=238">在Rails中实现缓存(码表)</a>,接下来就说说如何度缓存的码表做查询,这里说的缓存有可能是数组,或者是Hash.</p>
<p>1.先看数组的</p>
<p>可以使用delect或者select方法来查找需要的那个元素,代码段如下:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;get_object_by_id(collections,id)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;collections.select{|c|&nbsp;c.step_id&nbsp;==&nbsp;id}&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>2.Hash的,待续</p>]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2008-03-30 23:16:13</wp:post_date>
		<wp:post_date_gmt>2008-03-30 23:16:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e7%9a%84%e9%9b%86%e5%90%88%e5%af%b9%e8%b1%a1%e7%9a%84%e9%81%8d%e5%8e%86%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Scout是个挺有趣的tools</title>
		<link>http://www.iceskysl.com/?p=240</link>
		<pubDate>Mon, 31 Mar 2008 11:40:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=240</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Scout是Highgroove Studios写的一个很有趣的应用，他提供了一个大的框架，使得其他人可以以插件（集成）的方式实现他的方法（run），进而按照他预定的格式，将采集到的数据发送到其中央服务器，进而可以存储，并以报表的形式展示出来。</p>
<p>我大概了看了下起实现方式，和插件的编写方式，其实也挺简单的，其原理也就是在*unix上可以采用crob之类的做定时调度，采集数据（可以使用系统的一些命令，比如ps,top)等等，再把数据组合成他预定义的格式就可以了。</p>
<p>看个插件的代码以及我的注释，就很清楚了：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;TODO:&nbsp;use&nbsp;alternate&nbsp;process&nbsp;open&nbsp;to&nbsp;catch&nbsp;STDOUT,&nbsp;STDERR&nbsp;for&nbsp;those&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;processes&nbsp;that&nbsp;use</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#分析:&nbsp;IceskYsl@1sters!(http://iceskysl.1sters.com)</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#这个插件实现的是，定时监控指定的进程，需要的时候重启，并生成报告</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;KeepProcessRunning&nbsp;&lt;&nbsp;Scout::Plugin&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;run&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#预定义返回的数据格式</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;report&nbsp;=&nbsp;{<span class="symbol">:report</span><span>&nbsp;=&gt;&nbsp;{},&nbsp;</span><span class="symbol">:alerts</span><span>&nbsp;=&gt;&nbsp;[],&nbsp;</span><span class="symbol">:memory</span><span>&nbsp;=&gt;&nbsp;{}}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#取需要监控的进程的名字和重启进程的命令</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;process_to_monitor&nbsp;=&nbsp;<span class="variable">@options</span><span>[</span><span class="symbol">:process_name</span><span>]&nbsp;||&nbsp;</span><span class="string">&quot;&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;restart_action&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span class="variable">@options</span><span>[</span><span class="symbol">:restart_action</span><span>]&nbsp;||&nbsp;process_to_monitor&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;Search&nbsp;all&nbsp;running&nbsp;processes&nbsp;for&nbsp;the&nbsp;process&nbsp;(do&nbsp;not&nbsp;match&nbsp;the&nbsp;grep&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;process&nbsp;nor&nbsp;the&nbsp;locally&nbsp;running&nbsp;scout&nbsp;client).</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#这就是调用系统的ps命令，并grep，看是否有指定的进程存在</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ps_output&nbsp;=&nbsp;`ps&nbsp;auxww&nbsp;|&nbsp;grep&nbsp;<span class="string">&quot;#{process_to_monitor}&quot;</span><span>&nbsp;|&nbsp;grep&nbsp;-v&nbsp;</span><span class="string">&quot;grep&quot;</span><span>&nbsp;|&nbsp;grep&nbsp;-v&nbsp;</span><span class="string">&quot;scout&quot;</span><span>`&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#如果不存在，则根据上面给的重启命令来重启</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">unless</span><span>&nbsp;process_match&nbsp;=&nbsp;ps_output.to_a.first&nbsp;&nbsp;</span><span class="comment">#&nbsp;process&nbsp;not&nbsp;found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;attempt&nbsp;to&nbsp;restart&nbsp;the&nbsp;process</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart_output&nbsp;=&nbsp;`<span class="comment">#{restart_action}`</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report[<span class="symbol">:alerts</span><span>]&nbsp;&lt;&lt;&nbsp;{</span><span class="symbol">:subject</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;#{process_to_monitor}&nbsp;is&nbsp;not&nbsp;running.&nbsp;Restart&nbsp;reported:&nbsp;#{restart_output}&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;</span><span class="comment">#&nbsp;process&nbsp;is&nbsp;running</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;if&nbsp;we&nbsp;wanted&nbsp;to&nbsp;parse&nbsp;fields&nbsp;we&nbsp;could:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;fields&nbsp;=&nbsp;process_match.downcase.split</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report[<span class="symbol">:report</span><span>][process_to_monitor]&nbsp;=&nbsp;1&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#返回报告</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;report&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;</span><span class="builtin">Exception</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class="symbol">:error</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:subject</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;Could&nbsp;not&nbsp;keep&nbsp;the&nbsp;process&nbsp;running.&quot;</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:body</span><span>&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;</span><span class="string">&quot;An&nbsp;exception&nbsp;was&nbsp;thrown:&nbsp;&nbsp;#{$!.message}&quot;</span><span>&nbsp;}&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>他采取的&ldquo;Client Key&rdquo;来做唯一性校验，也就是说，你必须获得这个&ldquo;Client Key&rdquo;，而这个将来可以成为其卖点（可行的方法是分级售卖，比如多少钱的帐号可以监控几个服务器之类的）。</p>
<p>仔细一想，这个Idea还真不赖，呵呵～</p>
<p><strong>其他的参考资料：</strong></p>
<p>1、Scout主页：http://scoutapp.com/</p>
<p>2、插件编写手册：http://scoutapp.com/plugin_urls/static/creating_a_plugin</p>
<p>3、rubyinside的报道：http://www.rubyinside.com/scout-a-ruby-powered-web-monitoring-and-reporting-service-825.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Scout是Highgroove Studios写的一个很有趣的应用，他提供了一个大的框架，使得其他人可以以插件（集成）的方式实现他的方法（run），进而按照他预定的格式，将采集到的数据发送到其中央服务器，进而可以存储，并以报表的形式展示出来。</p>
<p>我大概了看了下起实现方式，和插件的编写方式，其实也挺简单的，其原理也就是在*unix上可以采用crob之类的做定时调度，采集数据（可以使用系统的一些命令，比如ps,top)等等，再把数据组合成他预定义的格式就可以了。</p>
<p>看个插件的代码以及我的注释，就很清楚了：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;TODO:&nbsp;use&nbsp;alternate&nbsp;process&nbsp;open&nbsp;to&nbsp;catch&nbsp;STDOUT,&nbsp;STDERR&nbsp;for&nbsp;those&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;processes&nbsp;that&nbsp;use</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#分析:&nbsp;IceskYsl@1sters!(http://iceskysl.1sters.com)</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#这个插件实现的是，定时监控指定的进程，需要的时候重启，并生成报告</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;KeepProcessRunning&nbsp;&lt;&nbsp;Scout::Plugin&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;run&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#预定义返回的数据格式</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;report&nbsp;=&nbsp;{<span class="symbol">:report</span><span>&nbsp;=&gt;&nbsp;{},&nbsp;</span><span class="symbol">:alerts</span><span>&nbsp;=&gt;&nbsp;[],&nbsp;</span><span class="symbol">:memory</span><span>&nbsp;=&gt;&nbsp;{}}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#取需要监控的进程的名字和重启进程的命令</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;process_to_monitor&nbsp;=&nbsp;<span class="variable">@options</span><span>[</span><span class="symbol">:process_name</span><span>]&nbsp;||&nbsp;</span><span class="string">&quot;&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;restart_action&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;<span class="variable">@options</span><span>[</span><span class="symbol">:restart_action</span><span>]&nbsp;||&nbsp;process_to_monitor&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;Search&nbsp;all&nbsp;running&nbsp;processes&nbsp;for&nbsp;the&nbsp;process&nbsp;(do&nbsp;not&nbsp;match&nbsp;the&nbsp;grep&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;process&nbsp;nor&nbsp;the&nbsp;locally&nbsp;running&nbsp;scout&nbsp;client).</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#这就是调用系统的ps命令，并grep，看是否有指定的进程存在</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ps_output&nbsp;=&nbsp;`ps&nbsp;auxww&nbsp;|&nbsp;grep&nbsp;<span class="string">&quot;#{process_to_monitor}&quot;</span><span>&nbsp;|&nbsp;grep&nbsp;-v&nbsp;</span><span class="string">&quot;grep&quot;</span><span>&nbsp;|&nbsp;grep&nbsp;-v&nbsp;</span><span class="string">&quot;scout&quot;</span><span>`&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#如果不存在，则根据上面给的重启命令来重启</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">unless</span><span>&nbsp;process_match&nbsp;=&nbsp;ps_output.to_a.first&nbsp;&nbsp;</span><span class="comment">#&nbsp;process&nbsp;not&nbsp;found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;attempt&nbsp;to&nbsp;restart&nbsp;the&nbsp;process</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart_output&nbsp;=&nbsp;`<span class="comment">#{restart_action}`</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report[<span class="symbol">:alerts</span><span>]&nbsp;&lt;&lt;&nbsp;{</span><span class="symbol">:subject</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;#{process_to_monitor}&nbsp;is&nbsp;not&nbsp;running.&nbsp;Restart&nbsp;reported:&nbsp;#{restart_output}&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;</span><span class="comment">#&nbsp;process&nbsp;is&nbsp;running</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;if&nbsp;we&nbsp;wanted&nbsp;to&nbsp;parse&nbsp;fields&nbsp;we&nbsp;could:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;fields&nbsp;=&nbsp;process_match.downcase.split</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;report[<span class="symbol">:report</span><span>][process_to_monitor]&nbsp;=&nbsp;1&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#返回报告</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;report&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;</span><span class="builtin">Exception</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class="symbol">:error</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:subject</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;Could&nbsp;not&nbsp;keep&nbsp;the&nbsp;process&nbsp;running.&quot;</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:body</span><span>&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;</span><span class="string">&quot;An&nbsp;exception&nbsp;was&nbsp;thrown:&nbsp;&nbsp;#{$!.message}&quot;</span><span>&nbsp;}&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>他采取的&ldquo;Client Key&rdquo;来做唯一性校验，也就是说，你必须获得这个&ldquo;Client Key&rdquo;，而这个将来可以成为其卖点（可行的方法是分级售卖，比如多少钱的帐号可以监控几个服务器之类的）。</p>
<p>仔细一想，这个Idea还真不赖，呵呵～</p>
<p><strong>其他的参考资料：</strong></p>
<p>1、Scout主页：http://scoutapp.com/</p>
<p>2、插件编写手册：http://scoutapp.com/plugin_urls/static/creating_a_plugin</p>
<p>3、rubyinside的报道：http://www.rubyinside.com/scout-a-ruby-powered-web-monitoring-and-reporting-service-825.html</p>]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2008-03-31 11:40:38</wp:post_date>
		<wp:post_date_gmt>2008-03-31 11:40:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scout%e6%98%af%e4%b8%aa%e6%8c%ba%e6%9c%89%e8%b6%a3%e7%9a%84tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>支持Elastic IP Addresses,EC2越来越成熟了.</title>
		<link>http://www.iceskysl.com/?p=241</link>
		<pubDate>Tue, 01 Apr 2008 23:00:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[<p>晚上写完手上的代码,正准备睡觉的时候,收到<strong>Amazon</strong>的一封mail,以为是<strong>S3</strong>或<strong>EC2</strong>的账单呢,打开一看,原来是<strong>EC2</strong>的好消息.</p>
<p><font size="2" face="verdana" color="#0000ff">Greetings AWS Developers, </font>  <font size="2" face="verdana">
<p><font color="#0000ff"> Last week brought some exciting, highly requested new Amazon EC2 features to the community - Elastic IP Addresses, Availability Zones, and User Selectable Kernels.</font></p>
<p><font size="3">wowo,真是个好东西,<strong>EC2</strong>一直以来都被人诟病之一的就是其IP地址的动态的,也就是当你重启您&quot;镜像&quot;后,你的IP地址会变化,也就是说,你的域名需要才信修改IP指向,或者采用一个老外写的一个插件(忘记脚啥名字了)来动态解析,比较不爽的很.现在EC2终于推出了&quot;静态IP&quot;功能,我粗略的看了下,其和账户是绑定的,也就是你重启自己的&quot;镜像&quot;后,并不失效.</font></p>
<p><font size="3">好东西,EC2会越来越好的...<br />
</font></p>
<p><font size="3">还是直接看英语的吧,呵呵:</font></p>
<p>Elastic IP addresses are static IP addresses designed for dynamic cloud computing.    An Elastic IP address is associated with your account, not a particular instance,    and you control that address until you choose to explicitly release it. Unlike    traditional static IP addresses, however, Elastic IP addresses allow you to    mask instance or availability zone failures by programmatically remapping your    public IP addresses to any instance associated with your account. Rather than    waiting on a data technician to reconfigure or replace your host, or waiting    for DNS to propagate to all of your customers, Amazon EC2 enables you to engineer    around problems with your instance or software by programmatically remapping    your Elastic IP address to a replacement instance.</p>
<p>详细情况请参考:http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1346</p>
</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>晚上写完手上的代码,正准备睡觉的时候,收到<strong>Amazon</strong>的一封mail,以为是<strong>S3</strong>或<strong>EC2</strong>的账单呢,打开一看,原来是<strong>EC2</strong>的好消息.</p>
<p><font size="2" face="verdana" color="#0000ff">Greetings AWS Developers, </font>  <font size="2" face="verdana">
<p><font color="#0000ff"> Last week brought some exciting, highly requested new Amazon EC2 features to the community - Elastic IP Addresses, Availability Zones, and User Selectable Kernels.</font></p>
<p><font size="3">wowo,真是个好东西,<strong>EC2</strong>一直以来都被人诟病之一的就是其IP地址的动态的,也就是当你重启您 &quot;镜像&quot;后,你的IP地址会变化,也就是说,你的域名需要才信修改IP指向,或者采用一个老外写的一个插件(忘记脚啥名字了)来动态解析,比较不爽的很. 现在EC2终于推出了&quot;静态IP&quot;功能,我粗略的看了下,其和账户是绑定的,也就是你重启自己的&quot;镜像&quot;后,并不失效.</font></p>
<p><font size="3">好东西,EC2会越来越好的...<br />
</font></p>
<p><font size="3">还是直接看英语的吧,呵呵:</font></p>
<p>Elastic IP addresses are static IP addresses designed for dynamic cloud computing.    An Elastic IP address is associated with your account, not a particular instance,    and you control that address until you choose to explicitly release it. Unlike    traditional static IP addresses, however, Elastic IP addresses allow you to    mask instance or availability zone failures by programmatically remapping your    public IP addresses to any instance associated with your account. Rather than    waiting on a data technician to reconfigure or replace your host, or waiting    for DNS to propagate to all of your customers, Amazon EC2 enables you to engineer    around problems with your instance or software by programmatically remapping    your Elastic IP address to a replacement instance.</p>
<p>详细情况请参考:http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1346</p>
</font></p>]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2008-04-01 23:00:29</wp:post_date>
		<wp:post_date_gmt>2008-04-01 23:00:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%94%af%e6%8c%81elastic-ip-addressesec2%e8%b6%8a%e6%9d%a5%e8%b6%8a%e6%88%90%e7%86%9f%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Ubuntu的快捷键</title>
		<link>http://www.iceskysl.com/?p=242</link>
		<pubDate>Tue, 01 Apr 2008 23:21:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=242</guid>
		<description></description>
		<content:encoded><![CDATA[<p>毫无疑问,熟练的使用快捷键可以大大的提高工作效率,windows如此,lunix也是如此,下面收录一些ubuntu的快捷键,没事的时候看看,用用,就记得了.<br />
* 打开主菜单 = Alt + F1<br />
* 运行 = Alt + F2<br />
* 显示桌面 = Ctrl + Alt + d<br />
* 最小化当前窗口 = Alt + F9<br />
* 最大化当前窗口 = Alt + F10<br />
* 关闭当前窗口 = Alt + F4<br />
* 截取全屏 = Print Screen<br />
* 截取窗口 = Alt + Print Screen<br />
默认特殊快捷键<br />
* 展示所有窗口程序 = F10<br />
* 展示当前窗口最上层程序 = F11<br />
* 展示当前窗口所有程序 = F12<br />
* 切换窗口 = Alt + Tab<br />
* 旋转3D桌面 = Ctrl + Alt + 左/右箭头（也可以把鼠标放在标题栏或桌面使用滚轮切换）<br />
* 旋转3D桌面（ 活动窗口跟随） = Ctrl + Shift + Alt + 左/右箭头<br />
* 手动旋转3D桌面 = Ctrl + Alt + 左键单击并拖拽桌面空白处<br />
* 窗口透明/不透明 = possible with the &ldquo;transset&rdquo; utility or Alt + 滚轮<br />
* 放大一次 = 超级键 + 右击<br />
* 手动放大 = 超级键 + 滚轮向上<br />
* 手动缩小 = 超级键 + 滚轮向下<br />
* 移动窗口 = Alt + 左键单击<br />
* 移动窗口时贴住边框 = 左键开始拖动后再 Ctrl + Alt<br />
* 调整窗口大小 = Alt + 中击<br />
* Bring up the window below the top window = Alt + middle-click<br />
* 动态效果减速 = Shift + F10<br />
* 水纹 = 按住 Ctrl+超级键<br />
* 雨点 = Shift-F9<br />
* 桌面展开＝ Ctrl + Alt + 下箭头，然后按住 Ctrl + Alt 和左/右箭头选择桌面</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>毫无疑问,熟练的使用快捷键可以大大的提高工作效率,windows如此,lunix也是如此,下面收录一些ubuntu的快捷键,没事的时候看看,用用,就记得了.<br />
* 打开主菜单 = Alt + F1<br />
* 运行 = Alt + F2<br />
* 显示桌面 = Ctrl + Alt + d<br />
* 最小化当前窗口 = Alt + F9<br />
* 最大化当前窗口 = Alt + F10<br />
* 关闭当前窗口 = Alt + F4</p>]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2008-04-01 23:21:12</wp:post_date>
		<wp:post_date_gmt>2008-04-01 23:21:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu%e7%9a%84%e5%bf%ab%e6%8d%b7%e9%94%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>BaiDu之Hi体验～</title>
		<link>http://www.iceskysl.com/?p=243</link>
		<pubDate>Wed, 02 Apr 2008 14:37:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[<p>向来喜欢体验些新东西，虽然GoogleTalk已经让我觉得非常满意，虽然在linux上无法使用Hi，虽然我对Baidu并不十分的喜欢，但是看到订阅的一些RSS里面屡屡出现Baidu的Hi的身影的时候，我还在会看看他到底有啥不同，有啥奇特的？</p>
<p>看到白鸽和麦田等等的介绍，我也发了封申请，今天收到Baidu的回复，下载，安装，加了个好友，试试这个传说中可以和QQ对抗的IM到底是啥样子。</p>
<p><strong>1、界面不算简洁，比QQ有余，比Gtalk不足</strong></p>
<p>都说Hi的界面清爽，偶看了下，比起QQ或者MSN确实干净了不少，QQ的花里胡哨最让我受不了，用了一段时间TM后，还是觉得不爽，最后就不用QQ了；MSN的界面上的广告太嚣张，偶尔还会弹出来，哎，也不喜欢。Gtalk的节目最简洁，简洁到我一使用就喜欢上了。Hi的界面，有点MSN的风格，但是暂时没发现广告，不晓得还能干净多久。</p>
<p><strong>2、功能实用，但有不足</strong></p>
<p>IM作为最实用的工具（中国是这样的），有些功能是必须的，即时消息，文件传输这两个我觉得是必须的；语音和视频可有可无，如果能支持SMS就更好了，呵呵。Hi基本上具备了这些功能（SMS的没有）。但是我在使用过程发现，文件传输比较不正常，开始想试试传输速度，无奈的900K的东西，半天没反应，又自动断了，还提示双方&ldquo;对方取消&rdquo;，引起不少误解；后来试了一个小的图片，还是不行。看来这里有BUG..</p>
<p><strong>3、自身功能还有待加强</strong></p>
<p>我修改设定了自己的图片，无奈的是报告错误而无法完成，这应该也有Bug。</p>
<p>其他的没兴趣试了，此次的Baidu的Hi体验，非常一般。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>向来喜欢体验些新东西，虽然GoogleTalk已经让我觉得非常满意，虽然在linux上无法使用Hi，虽然我对Baidu并不十分的喜欢，但是看到订阅的一些RSS里面屡屡出现Baidu的Hi的身影的时候，我还在会看看他到底有啥不同，有啥奇特的？</p>
<p>看到白鸽和麦田等等的介绍，我也发了封申请，今天收到Baidu的回复，下载，安装，加了个好友，试试这个传说中可以和QQ对抗的IM到底是啥样子。</p>
<p><strong>1、界面不算简洁，比QQ有余，比Gtalk不足</strong></p>
<p>都说Hi的界面清爽，偶看了下，比起QQ或者MSN确实干净了不少，QQ的花里胡哨最让我受不了，用了一段时间TM后，还是觉得不爽，最后就不用 QQ了；MSN的界面上的广告太嚣张，偶尔还会弹出来，哎，也不喜欢。Gtalk的节目最简洁，简洁到我一使用就喜欢上了。Hi的界面，有点MSN的风 格，但是暂时没发现广告，不晓得还能干净多久。</p>
<p><strong>2、功能实用，但有不足</strong></p>
<p>IM作为最实用的工具（中国是这样的），有些功能是必须的，即时消息，文件传输这两个我觉得是必须的；语音和视频可有可无，如果能支持SMS就更好 了，呵呵。Hi基本上具备了这些功能（SMS的没有）。但是我在使用过程发现，文件传输比较不正常，开始想试试传输速度，无奈的900K的东西，半天没反 应，又自动断了，还提示双方&ldquo;对方取消&rdquo;，引起不少误解；后来试了一个小的图片，还是不行。看来这里有BUG..</p>
<p><strong>3、自身功能还有待加强</strong></p>
<p>我修改设定了自己的图片，无奈的是报告错误而无法完成，这应该也有Bug。</p>
<p>其他的没兴趣试了，此次的Baidu的Hi体验，非常一般。</p>]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2008-04-02 14:37:00</wp:post_date>
		<wp:post_date_gmt>2008-04-02 14:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>baidu%e4%b9%8bhi%e4%bd%93%e9%aa%8c%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[cash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>61.139.78.70</wp:comment_author_IP>
			<wp:comment_date>2008-04-02 16:12:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还没体验，不知道如何？不过懒得用了。一大堆IM。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.50.208</wp:comment_author_IP>
			<wp:comment_date>2008-04-09 01:08:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[更多是战略上服务自身的产品而非与QQ竞争，目的是打通所有百度所有内部服务(包括将来的C2C业务)。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mongrel之cluster::restart vs. stop/start的区别</title>
		<link>http://www.iceskysl.com/?p=244</link>
		<pubDate>Mon, 07 Apr 2008 14:14:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近终于用上了我一直比较推荐的Rails部署方式（<strong>Nginx+Mongrel</strong>集群）,感觉相当的不错，关于这方面的技巧和配置，以后有时间再说，今天主要说说Mongrel集群的时候，其<strong>start./stop</strong>和<strong>restart</strong>有啥区别。
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>mongrel_rails&nbsp;cluster::start&nbsp;#启动&nbsp;&nbsp;</span></span></li>
    <li class=""><span>mongrel_rails&nbsp;cluster::restart&nbsp;#重启&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mongrel_rails&nbsp;cluster::stop&nbsp;#停止&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>如上三条命令为启动，停止和重启的命令，找我们的理解，重启应该是和stop/start一样的效果，其实不然，主要区别就是：</p>
<p><strong>1、</strong>stop/start模式就是先stop掉，再启动，他会等到线程结束后stop，启动时会再次读取配置文件。</p>
<p><strong>2、</strong>restart模式和这个类似，但是其不会重新加载配置文件，也就是说你如果修改了配置文件，restart是不起作用的。</p>
<p>以上是我的理解，有不对的地方，还望指出，谢谢～</p>
<p><strong>参考文章：</strong></p>
<p>1.http://rubyforge.org/pipermail/mongrel-users/2006-June/000438.html</p>
<p>2.http://linux.ccidnet.com/art/302/20080327/1403439_1.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近终于用上了我一直比较推荐的Rails部署方式（<strong>Nginx+Mongrel</strong>集群）,感觉相当的不错，关于这方面的技巧和配置，以后有时间再说，今天主要说说Mongrel集群的时候，其<strong>start./stop</strong>和<strong>restart</strong>有啥区别。</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>mongrel_rails&nbsp;cluster::start&nbsp;#启动&nbsp;&nbsp;</span></span></li>
    <li class=""><span>mongrel_rails&nbsp;cluster::restart&nbsp;#重启&nbsp;&nbsp;</span></li>
    <li class="alt"><span>mongrel_rails&nbsp;cluster::stop&nbsp;#停止&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>如上三条命令为启动，停止和重启的命令，找我们的理解，重启应该是和stop/start一样的效果，其实不然，主要区别就是：</p>
<p><strong>1、</strong>stop/start模式就是先stop掉，再启动，他会等到线程结束后stop，启动时会再次读取配置文件。</p>
<p><strong>2、</strong>restart模式和这个类似，但是其不会重新加载配置文件，也就是说你如果修改了配置文件，restart是不起作用的。</p>
<p>以上是我的理解，有不对的地方，还望指出，谢谢～</p>
<p><strong>参考文章：</strong></p>
<p>1.http://rubyforge.org/pipermail/mongrel-users/2006-June/000438.html</p>
<p>2.http://linux.ccidnet.com/art/302/20080327/1403439_1.html</p>]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2008-04-07 14:14:20</wp:post_date>
		<wp:post_date_gmt>2008-04-07 14:14:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongrel%e4%b9%8bclusterrestart-vs-stopstart%e7%9a%84%e5%8c%ba%e5%88%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails中捕获TimeOut异常及其处理</title>
		<link>http://www.iceskysl.com/?p=245</link>
		<pubDate>Mon, 07 Apr 2008 15:17:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[<p>把应用迁移到新的服务器上以后，发现经常有&rdquo;超时&ldquo;的错误信息，如<em>/usr/lib/ruby/1.8/timeout.rb:54:in `rbuf_fill': execution expired (Timeout::Error)</em>，恩，应该是网络不稳定或者是服务器响应太慢的结果，需要捕获下这个异常并做些处理，记录如下：</p>
<p>需要注意的是，<strong>Timeout::Error</strong>不是<strong>StandardError</strong>的子类, 而是继承至 <strong>Interrupt class</strong>，所以捕获的时候，需要格外注意，演示如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'net/pop3'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Net::POP3.auth_only(<span class="variable">@server</span><span>,&nbsp;</span><span class="variable">@port</span><span>,&nbsp;</span><span class="variable">@username</span><span>,&nbsp;</span><span class="variable">@password</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;do_something_sensible&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
看上面的这段代码，当POP3服务器不能及时响应的时候，所触发的异常并不能被下面捕获到，原因就是上面说的，再看正确的处理代码：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'net/pop3'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Net::POP3.auth_only(<span class="variable">@server</span><span>,&nbsp;</span><span class="variable">@port</span><span>,&nbsp;</span><span class="variable">@username</span><span>,&nbsp;</span><span class="variable">@password</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;do_something_sensible&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">rescue</span><span>&nbsp;Timeout::Error&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;do_something_sensible_for_timeout&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
这段代码可以正常工作，并按照我们的意愿来处理了。</p>
<p>&nbsp;如果您知道对方的服务器会比较慢的响应，或者你知道网络状态不好，你可以单独设置这个<strong>TimeOut</strong>的时间，代码如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'timeout'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>...&nbsp;&nbsp;</span></li>
    <li class=""><span>...&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;timeout(60)&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resp,&nbsp;body=3Dh.get(<span class="string">'/index.html'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;body&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;TimeoutError&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;Timed&nbsp;Out&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
</p>
<p>或者这样：（来源：http://textsnippets.com/posts/show/868）
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>http&nbsp;=&nbsp;Net::HTTP.</span><span class="keyword">new</span><span>(url.host,&nbsp;url.port)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>http.read_timeout=time_out&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p><strong>参考资料：</strong></p>
<p>1.'rbuf_fill': execution expired (Timeout::Error): http://lindsaar.net/2007/12/9/rbuf_filltimeout-error</p>
<p>2.How to catch Timeout::ERROR ? : http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/170394</p>
<p>3.Ruby's Thread#raise, Thread#kill, timeout.rb, and net/protocol.rb libraries are broken: http://headius.blogspot.com/2008/02/rubys-threadraise-threadkill-timeoutrb.html</p>
<p>4.How to change the Timeout::Error threshold for open_uri : http://www.ruby-forum.com/topic/146676</p>
<p>5.http://griffin.oobleyboo.com/archive/ruby-net-http-exceptions/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>把应用迁移到新的服务器上以后，发现经常有&rdquo;超时&ldquo;的错误信息，如<em>/usr/lib/ruby/1.8/timeout.rb:54:in `rbuf_fill': execution expired (Timeout::Error)</em>，恩，应该是网络不稳定或者是服务器响应太慢的结果，需要捕获下这个异常并做些处理，记录如下：</p>
<p>需要注意的是，<strong>Timeout::Error</strong>不是<strong>StandardError</strong>的子类, 而是继承至 <strong>Interrupt class</strong>，所以捕获的时候，需要格外注意，演示如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'net/pop3'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Net::POP3.auth_only(<span class="variable">@server</span><span>,&nbsp;</span><span class="variable">@port</span><span>,&nbsp;</span><span class="variable">@username</span><span>,&nbsp;</span><span class="variable">@password</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;do_something_sensible&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>看上面的这段代码，当POP3服务器不能及时响应的时候，所触发的异常并不能被下面捕获到，原因就是上面说的，再看正确的处理代码：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'net/pop3'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;Net::POP3.auth_only(<span class="variable">@server</span><span>,&nbsp;</span><span class="variable">@port</span><span>,&nbsp;</span><span class="variable">@username</span><span>,&nbsp;</span><span class="variable">@password</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;do_something_sensible&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">rescue</span><span>&nbsp;Timeout::Error&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;write_error_to_logfile(e)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;do_something_sensible_for_timeout&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>这段代码可以正常工作，并按照我们的意愿来处理了。</p>
<p>&nbsp;如果您知道对方的服务器会比较慢的响应，或者你知道网络状态不好，你可以单独设置这个<strong>TimeOut</strong>的时间，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'timeout'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>...&nbsp;&nbsp;</span></li>
    <li class=""><span>...&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;timeout(60)&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resp,&nbsp;body=3Dh.get(<span class="string">'/index.html'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;body&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">rescue</span><span>&nbsp;TimeoutError&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;Timed&nbsp;Out&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>或者这样：（来源：http://textsnippets.com/posts/show/868）</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>http&nbsp;=&nbsp;Net::HTTP.</span><span class="keyword">new</span><span>(url.host,&nbsp;url.port)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>http.read_timeout=time_out&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><strong>参考资料：</strong></p>
<p>1.'rbuf_fill': execution expired (Timeout::Error): http://lindsaar.net/2007/12/9/rbuf_filltimeout-error</p>
<p>2.How to catch Timeout::ERROR ? : http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/170394</p>
<p>3.Ruby's Thread#raise, Thread#kill, timeout.rb, and net/protocol.rb libraries are broken: http://headius.blogspot.com/2008/02/rubys-threadraise-threadkill-timeoutrb.html</p>
<p>4.How to change the Timeout::Error threshold for open_uri : http://www.ruby-forum.com/topic/146676</p>
<p>5.http://griffin.oobleyboo.com/archive/ruby-net-http-exceptions/</p>]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2008-04-07 15:17:41</wp:post_date>
		<wp:post_date_gmt>2008-04-07 15:17:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e6%8d%95%e8%8e%b7timeout%e5%bc%82%e5%b8%b8%e5%8f%8a%e5%85%b6%e5%a4%84%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[dottree]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>15.203.233.78</wp:comment_author_IP>
			<wp:comment_date>2009-06-01 17:26:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good. Just what I wanted.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Ubuntu7.10上装rar/unrar</title>
		<link>http://www.iceskysl.com/?p=246</link>
		<pubDate>Tue, 08 Apr 2008 13:34:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早在我开始使用Ubuntu的时候（7.04）就安装了linux下的rar，这几天在一台新的服务器上上安装的时候，竟然花了这么大的牛劲，呵呵。</p>
<p><strong>&nbsp;先看下版本，如下：</strong></p>
<p>1sters@IceskYsl:~/sources$ uname -a<br />
Linux taojer 2.6.18-xen #1 SMP Fri Nov 2 06:14:54 UTC 2007 x86_64 GNU/Linux</p>
<p><strong>然后使用&ldquo;sudo apt-get install rar&rdquo;，却发现出错，如下：</strong></p>
<blockquote>
<p>1sters@IceskYsl:~/sources$ sudo apt-get install rar<br />
Password:<br />
Reading package lists... Done<br />
Building dependency tree... Done<br />
Package rar is not available, but is referred to by another package.<br />
This may mean that the package is missing, has been obsoleted, or<br />
is only available from another source<br />
E: Package rar has no installation candidate</p>
</blockquote>
<p>找不到相应的包，哦，因该是源的问题，查了下Google，很多人说是源的问题，于是乎，胡乱加了一大堆的源，试了下，貌似不好使，再查，找到相应的源，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>deb&nbsp;http://archive.ubuntu.com/ubuntu&nbsp;dapper&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></span></li>
    <li class=""><span>deb-src&nbsp;http://archive.ubuntu.com/ubuntu&nbsp;dapper&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
</ol>
</div>
再使用：
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>sudo&nbsp;aptitude&nbsp;upgrade&nbsp;&nbsp;</span></span></li>
    <li class=""><span>sudo&nbsp;aptitude&nbsp;install&nbsp;rar&nbsp;unrar&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>然后就差不多OK了。</p>
<p><strong>参考资料：</strong></p>
<p>1、http://ubuntuforums.org/showthread.php?t=571440</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早在我开始使用Ubuntu的时候（7.04）就安装了linux下的rar，这几天在一台新的服务器上上安装的时候，竟然花了这么大的牛劲，呵呵。</p>
<p><strong>&nbsp;先看下版本，如下：</strong></p>
<p>1sters@IceskYsl:~/sources$ uname -a<br />
Linux taojer 2.6.18-xen #1 SMP Fri Nov 2 06:14:54 UTC 2007 x86_64 GNU/Linux</p>
<p><strong>然后使用&ldquo;sudo apt-get install rar&rdquo;，却发现出错，如下：</strong></p>
<blockquote>
<p>1sters@IceskYsl:~/sources$ sudo apt-get install rar<br />
Password:<br />
Reading package lists... Done<br />
Building dependency tree... Done<br />
Package rar is not available, but is referred to by another package.<br />
This may mean that the package is missing, has been obsoleted, or<br />
is only available from another source<br />
E: Package rar has no installation candidate</p>
</blockquote>
<p>找不到相应的包，哦，因该是源的问题，查了下Google，很多人说是源的问题，于是乎，胡乱加了一大堆的源，试了下，貌似不好使，再查，找到相应的源，如下：</p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>deb&nbsp;http://archive.ubuntu.com/ubuntu&nbsp;dapper&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></span></li>
    <li class=""><span>deb-src&nbsp;http://archive.ubuntu.com/ubuntu&nbsp;dapper&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>再使用：</p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>sudo&nbsp;aptitude&nbsp;upgrade&nbsp;&nbsp;</span></span></li>
    <li class=""><span>sudo&nbsp;aptitude&nbsp;install&nbsp;rar&nbsp;unrar&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>然后就差不多OK了。</p>
<p><strong>参考资料：</strong></p>
<p>1、http://ubuntuforums.org/showthread.php?t=571440</p>]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2008-04-08 13:34:05</wp:post_date>
		<wp:post_date_gmt>2008-04-08 13:34:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ubuntu7-10%e4%b8%8a%e8%a3%85rarunrar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>再次遭遇乱码侵袭～</title>
		<link>http://www.iceskysl.com/?p=247</link>
		<pubDate>Tue, 08 Apr 2008 13:57:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[<p>经历了Java/Rails的乱码洗礼，经过Zip/RAR/7zip等等的搔扰，经过不懈的恶补，偶以为面对乱码问题可以应对自如了，然而不幸的是，这次又遇到了，下面看过程。</p>
<p><strong>问题现象：</strong></p>
<p><strong>1、</strong>在Rails中，上传本地的文件到服务器，服务器接收到以后，保存到服务器并记录其所在的路径，然后使用Rails中的 send_file来实现下载功能。我在本地开发环境上一切正常，但是在服务器上发生&ldquo;找不到文件&rdquo;的错误，SSH连进去看了下，原来保存在硬盘上时，中文文件名出现乱码，类似&ldquo;2008_03_25_07_54_27_娣樺疂瓒呯骇鐢ㄦ埛鎼滅储寮曟搸.rar&rdquo;这样的。</p>
<p><strong>2、</strong>在Rails中使用Ruby的File.new()、File.open()函数创建的文件，在硬盘上显示的中文名也是乱码。（这个人和我发现的问题类似：http://www.javaeye.com/topic/66371）</p>
<p><strong>问题分析及其定位：</strong></p>
<p>经过查找和分析，偶认为这与系统的字符集设置有关，因为在我本地开发机器上是可以正常显示和查看的，但是在服务器上就不可以，着重了解字符集的设置。</p>
<p><strong>分析过程：</strong></p>
<p>1、先看看系统</p>
<p>1sters@IceskYsl:~$ uname -a<br />
Linux 1sters 2.6.18-xen #1 SMP Fri Nov 2 06:14:54 UTC 2007 x86_64 GNU/Linux</p>
<p>恩，是linux的系统。</p>
<p>2、再看看目前的字符集</p>
<p>1sters@IceskYsl:~$ locale<br />
LANG=<br />
LC_CTYPE=&quot;POSIX&quot;<br />
LC_NUMERIC=&quot;POSIX&quot;<br />
LC_TIME=&quot;POSIX&quot;<br />
LC_COLLATE=&quot;POSIX&quot;<br />
LC_MONETARY=&quot;POSIX&quot;<br />
LC_MESSAGES=&quot;POSIX&quot;<br />
LC_PAPER=&quot;POSIX&quot;<br />
LC_NAME=&quot;POSIX&quot;<br />
LC_ADDRESS=&quot;POSIX&quot;<br />
LC_TELEPHONE=&quot;POSIX&quot;<br />
LC_MEASUREMENT=&quot;POSIX&quot;<br />
LC_IDENTIFICATION=&quot;POSIX&quot;<br />
LC_ALL=</p>
<p>这是默认的POSIX。</p>
<p>3、查看下系统支持的字符集</p>
<p>locale -a</p>
<p><strong>修改方法：</strong></p>
<p>在/etc/bashrc中加入<br />
export LC_ALL=&quot;zh_CN.utf8&quot;<br />
export LANG=&quot;zh_CN.utf8&quot;<br />
系统默认的locale变成了zh_CN.utf8</p>
<p><strong>参考资料：</strong></p>
<p>1、如何更改普通用户的locale？？http://linux.chinaunix.net/bbs/viewthread.php?tid=715236<br />
2、更改默认locale http://blog.chinaunix.net/u/22117/showart_257343.html<br />
3、关于locale的设定 http://blog.csdn.net/whoopee/archive/2006/09/28/1299891.aspx</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经历了Java/Rails的乱码洗礼，经过Zip/RAR/7zip等等的搔扰，经过不懈的恶补，偶以为面对乱码问题可以应对自如了，然而不幸的是，这次又遇到了，下面看过程。</p>
<p><strong>问题现象：</strong></p>
<p><strong>1、</strong>在Rails中，上传本地的文件到服务器，服务器接收到以后，保存到服务器并记录其所在的路径，然后使用Rails中的 send_file来实现下载功能。我在本地开发环境上一切正常，但是在服务器上发生&ldquo;找不到文件&rdquo;的错误，SSH连进去看了下，原来保存在硬盘上时，中 文文件名出现乱码，类似&ldquo;2008_03_25_07_54_27_娣樺疂瓒呯骇鐢ㄦ埛鎼滅储寮曟搸.rar&rdquo;这样的。</p>
<p><strong>2、</strong>在Rails中使用Ruby的File.new()、File.open()函数创建的文件，在硬盘上显示的中文名也是乱码。（这个人和我发现的问题类似：http://www.javaeye.com/topic/66371）</p>
<p><strong>问题分析及其定位：</strong></p>
<p>经过查找和分析，偶认为这与系统的字符集设置有关，因为在我本地开发机器上是可以正常显示和查看的，但是在服务器上就不可以，着重了解字符集的设置。</p>
<p><strong>分析过程：</strong></p>
<p>1、先看看系统</p>
<p>1sters@IceskYsl:~$ uname -a<br />
Linux 1sters 2.6.18-xen #1 SMP Fri Nov 2 06:14:54 UTC 2007 x86_64 GNU/Linux</p>
<p>恩，是linux的系统。</p>
<p>2、再看看目前的字符集</p>
<p>1sters@IceskYsl:~$ locale<br />
LANG=<br />
LC_CTYPE=&quot;POSIX&quot;<br />
LC_NUMERIC=&quot;POSIX&quot;<br />
LC_TIME=&quot;POSIX&quot;<br />
LC_COLLATE=&quot;POSIX&quot;<br />
LC_MONETARY=&quot;POSIX&quot;<br />
LC_MESSAGES=&quot;POSIX&quot;<br />
LC_PAPER=&quot;POSIX&quot;<br />
LC_NAME=&quot;POSIX&quot;<br />
LC_ADDRESS=&quot;POSIX&quot;<br />
LC_TELEPHONE=&quot;POSIX&quot;<br />
LC_MEASUREMENT=&quot;POSIX&quot;<br />
LC_IDENTIFICATION=&quot;POSIX&quot;<br />
LC_ALL=</p>
<p>这是默认的POSIX。</p>
<p>3、查看下系统支持的字符集</p>
<p>locale -a</p>
<p><strong>修改方法：</strong></p>
<p>在/etc/bashrc中加入<br />
export LC_ALL=&quot;zh_CN.utf8&quot;<br />
export LANG=&quot;zh_CN.utf8&quot;<br />
系统默认的locale变成了zh_CN.utf8</p>
<p><strong>参考资料：</strong></p>
<p>1、如何更改普通用户的locale？？http://linux.chinaunix.net/bbs/viewthread.php?tid=715236<br />
2、更改默认locale http://blog.chinaunix.net/u/22117/showart_257343.html<br />
3、关于locale的设定 http://blog.csdn.net/whoopee/archive/2006/09/28/1299891.aspx</p>]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2008-04-08 13:57:32</wp:post_date>
		<wp:post_date_gmt>2008-04-08 13:57:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%8d%e6%ac%a1%e9%81%ad%e9%81%87%e4%b9%b1%e7%a0%81%e4%be%b5%e8%a2%ad%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Ruby中调用系统的shell命令的异常</title>
		<link>http://www.iceskysl.com/?p=248</link>
		<pubDate>Tue, 08 Apr 2008 23:55:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=248</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近有点蹊跷,老是遇到一些莫名其妙的问题,呵呵,折腾吧.今天要说的问题是,在ruby中调用系统(*UNIX)中的shell命令来做些事情,本来没啥难度的事情,我却遇到了一个费解的问题.</p>
<p><strong>问题描述:</strong></p>
<p>由于需要给用户打包下载一系列的文件(图片),为了方便,我在ruby中调用系统的rar来打包需要下载的资源,然后再send_file下载下去,但是这里却遇到了奇怪的问题,调用系统命令的那句出现问题.</p>
<p>关于在RUby中调用系统的shell,大家可以参考如下文章( 6 Ways to Run Shell Commands in Ruby: http://pasadenarb.com/2007/03/ruby-shell-commands.html#comment-1886),我就不多废话了.直接看我的相关代码,如下:</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>local_dir_name=1207667932_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;rar&nbsp;a&nbsp;#{local_dir_name}&nbsp;#{local_dir_name}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>oo=&nbsp;%x{rar&nbsp;a&nbsp;<span class="comment">#{local_dir_name}&nbsp;#{local_dir_name}}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;oo=#{oo}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
上面的那个变量是按照时间取的唯一标识.这里使用的 %x{}(`)来获取执行的结果,以方便查看及问题定位,在本地机器(Ubuntu 7.10)上,一切正常,输出如下:
<div class="codeText">
<div class="codeHead">本地输出日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>rar&nbsp;a&nbsp;1207667932_2&nbsp;1207667932_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="attribute">oo</span><span>=&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="attribute-value">RAR</span><span>&nbsp;3.70&nbsp;beta&nbsp;1&nbsp;Copyright&nbsp;(c)&nbsp;1993-2007&nbsp;Alexander&nbsp;Roshal&nbsp;8&nbsp;Jan&nbsp;2007&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Shareware&nbsp;version&nbsp;Type&nbsp;RAR&nbsp;-?&nbsp;for&nbsp;help&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Evaluation&nbsp;copy.&nbsp;Please&nbsp;register.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Creating&nbsp;archive&nbsp;1207667932_2.rar&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Adding&nbsp;1207667932_2/datas.csv&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Adding&nbsp;1207667932_2/images&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class=""><span>Adding&nbsp;1207667932_2&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Done&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>但是在服务器上 (这里使用的是DH的PS服务器),其不能正常运行,如下:</p>
<p>
<div class="codeText">
<div class="codeHead">服务器输出日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>rar&nbsp;a&nbsp;1207666290_2&nbsp;1207666290_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="attribute">oo</span><span>=&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="attribute-value">Program</span><span>&nbsp;aborted&nbsp;&nbsp;</span></span></li>
</ol>
</div>
可以看到,如上发生了异常,但是原因无法得知.</p>
<p><strong>问题分析:</strong></p>
<p>奇怪的很,查了下环境,没啥不一样的呀,唯一发现不一样的是rar的版本不咋一致,DH上的rar版本比较老,分别如下:
<div class="codeText">
<div class="codeHead">RAR的版本信息</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Localhost&nbsp;rar&nbsp;version&nbsp;is&nbsp;:&nbsp;&nbsp;</span></span></li>
    <li class=""><span>RAR&nbsp;3.70&nbsp;beta&nbsp;1&nbsp;Copyright&nbsp;(c)&nbsp;1993-2007&nbsp;Alexander&nbsp;Roshal&nbsp;8&nbsp;Jan&nbsp;2007&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>DH's&nbsp;rar&nbsp;version&nbsp;is&nbsp;:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>[iceskysl]$&nbsp;rar&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>RAR&nbsp;3.30&nbsp;Copyright&nbsp;(c)&nbsp;1993-2004&nbsp;Eugene&nbsp;Roshal&nbsp;22&nbsp;Jan&nbsp;2004&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>这难道会是原因,还真搞不清?难道DH上对进程啥的有特殊要求,还是其他的啥原因呢?有知道的朋友,请赐教,多谢了.</p>
<p>参考文章:http://pasadenarb.com/2007/03/ruby-shell-commands.html#comment-1886</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近有点蹊跷,老是遇到一些莫名其妙的问题,呵呵,折腾吧.今天要说的问题是,在ruby中调用系统(*UNIX)中的shell命令来做些事情,本来没啥难度的事情,我却遇到了一个费解的问题.</p>
<p><strong>问题描述:</strong></p>
<p>由于需要给用户打包下载一系列的文件(图片),为了方便,我在ruby中调用系统的rar来打包需要下载的资源,然后再send_file下载下去,但是这里却遇到了奇怪的问题,调用系统命令的那句出现问题.</p>
<p>关于在RUby中调用系统的shell,大家可以参考如下文章( 6 Ways to Run Shell Commands in Ruby: http://pasadenarb.com/2007/03/ruby-shell-commands.html#comment-1886),我就不 多废话了.直接看我的相关代码,如下:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>local_dir_name=1207667932_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;rar&nbsp;a&nbsp;#{local_dir_name}&nbsp;#{local_dir_name}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>oo=&nbsp;%x{rar&nbsp;a&nbsp;<span class="comment">#{local_dir_name}&nbsp;#{local_dir_name}}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.info(<span class="string">&quot;oo=#{oo}&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>上面的那个变量是按照时间取的唯一标识.这里使用的 %x{}(`)来获取执行的结果,以方便查看及问题定位,在本地机器(Ubuntu 7.10)上,一切正常,输出如下:</p>
<div class="codeText">
<div class="codeHead">本地输出日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>rar&nbsp;a&nbsp;1207667932_2&nbsp;1207667932_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="attribute">oo</span><span>=&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="attribute-value">RAR</span><span>&nbsp;3.70&nbsp;beta&nbsp;1&nbsp;Copyright&nbsp;(c)&nbsp;1993-2007&nbsp;Alexander&nbsp;Roshal&nbsp;8&nbsp;Jan&nbsp;2007&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Shareware&nbsp;version&nbsp;Type&nbsp;RAR&nbsp;-?&nbsp;for&nbsp;help&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Evaluation&nbsp;copy.&nbsp;Please&nbsp;register.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Creating&nbsp;archive&nbsp;1207667932_2.rar&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Adding&nbsp;1207667932_2/datas.csv&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Adding&nbsp;1207667932_2/images&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class=""><span>Adding&nbsp;1207667932_2&nbsp;OK&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Done&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>但是在服务器上 (这里使用的是DH的PS服务器),其不能正常运行,如下:</p>
<div class="codeText">
<div class="codeHead">服务器输出日志</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>rar&nbsp;a&nbsp;1207666290_2&nbsp;1207666290_2&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="attribute">oo</span><span>=&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="attribute-value">Program</span><span>&nbsp;aborted&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>可以看到,如上发生了异常,但是原因无法得知.</p>
<p><strong>问题分析:</strong></p>
<p>奇怪的很,查了下环境,没啥不一样的呀,唯一发现不一样的是rar的版本不咋一致,DH上的rar版本比较老,分别如下:</p>
<div class="codeText">
<div class="codeHead">RAR的版本信息</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>Localhost&nbsp;rar&nbsp;version&nbsp;is&nbsp;:&nbsp;&nbsp;</span></span></li>
    <li class=""><span>RAR&nbsp;3.70&nbsp;beta&nbsp;1&nbsp;Copyright&nbsp;(c)&nbsp;1993-2007&nbsp;Alexander&nbsp;Roshal&nbsp;8&nbsp;Jan&nbsp;2007&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>DH's&nbsp;rar&nbsp;version&nbsp;is&nbsp;:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>[iceskysl]$&nbsp;rar&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>RAR&nbsp;3.30&nbsp;Copyright&nbsp;(c)&nbsp;1993-2004&nbsp;Eugene&nbsp;Roshal&nbsp;22&nbsp;Jan&nbsp;2004&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>这难道会是原因,还真搞不清?难道DH上对进程啥的有特殊要求,还是其他的啥原因呢?有知道的朋友,请赐教,多谢了.</p>
<p>参考文章:http://pasadenarb.com/2007/03/ruby-shell-commands.html#comment-1886</p>]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date>2008-04-08 23:55:53</wp:post_date>
		<wp:post_date_gmt>2008-04-08 23:55:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ruby%e4%b8%ad%e8%b0%83%e7%94%a8%e7%b3%bb%e7%bb%9f%e7%9a%84shell%e5%91%bd%e4%bb%a4%e7%9a%84%e5%bc%82%e5%b8%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.150</wp:comment_author_IP>
			<wp:comment_date>2008-04-14 23:37:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[估计和服务器底层软件有关，cpanel？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>设置/美化SecureCRT让其更加适合自己</title>
		<link>http://www.iceskysl.com/?p=249</link>
		<pubDate>Wed, 09 Apr 2008 09:31:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[<p>时常还是要在另外一台电脑上使用windows，也只能使用putty或者SecureCRT,连接到服务器上，但是一直以来，都存在一些小问题，这里以SecureCRT为例把解决方法汇总下。</p>
<p><strong>1、中文显示乱码的问题</strong></p>
<p>该问题的现象是用SecureCRT连接到服务器上，比如tail应用日志的时候，其日志中的中文不能很好的显示（也就是乱码）。这个问题的根本原因是双方的编码方式不一致，因为一般的来说，服务器上的编码是UTF-8（我的服务器是这样的，或者被我设定为这样的）你可以在服务器上使用locale 查看，而SecureCRT的默认设置的字符编码是保持系统一致的，在中文windows上就是GBK或者其他编码；</p>
<p>知道原因修改起来就比较简单了，分为两个部分：</p>
<p>1）修改远程linux机器的配置<br />
vim /etc/sysconfig/i18n<br />
把LANG改成支持UTF-8的字符集<br />
如：<br />
LANG=&rdquo;zh_CN.UTF-8&Prime;<br />
或者是<br />
LANG=&rdquo;en_US.UTF-8&Prime;</p>
<p>或者是修改指定用户的locale，编辑.bashrc文件，导入以上的编码即可。</p>
<p>2）然后再改Secure CRT的设置<br />
Options -&gt; Session Options -&gt;&nbsp; Apperance -&gt; Fonts -&gt; Character（选项-&gt;会话选项-&gt;外观-&gt;字符编码-&gt;uft-8）<br />
<br />
退出，再重新登录。发现utf8的文件都能正确读了，utf8的文件名也能正确显示了。</p>
<p><strong>2、显示颜色</strong></p>
<p>显示颜色是个好习惯，一来直观明了，二来增加美感，对视力也有好处，在Secure CRT中设置显示颜色也比较简单，如下：<br />
Options -&gt; Session Options -&gt;Terminal -&gt;Emulation -&gt;ANSI Color 选中就可以了。</p>
<p><strong>3、字体选择</strong></p>
<p>选择不同的字体，可以显示不同的效果，按照个人喜好，比如我自己就喜欢细一点的，清晰一点的字体，而这个字体在Secure CRT是可以设置的，其默认的是vt100，我个人比较喜欢&ldquo;新宋体&rdquo;的显示效果。（PS.很多人喜欢fixedsys 字体）。设置方法也很简单，如下：Options -&gt; Session Options -&gt;&nbsp; Apperance -&gt; Fonts 选择你需要的字体即可。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>时常还是要在另外一台电脑上使用windows，也只能使用putty或者SecureCRT,连接到服务器上，但是一直以来，都存在一些小问题，这里以SecureCRT为例把解决方法汇总下。</p>
<p><strong>1、中文显示乱码的问题</strong></p>
<p>该问题的现象是用SecureCRT连接到服务器上，比如tail应用日志的时候，其日志中的中文不能很好的显示（也就是乱码）。这个问题的根本原因是双方的编码方式不一致，因为一般的来说，服务器上的编码是UTF-8（我的服务器是这样的，或者被我设定为这样的）你可以在服务器上使用locale 查看，而SecureCRT的默认设置的字符编码是保持系统一致的，在中文windows上就是GBK或者其他编码；</p>
<p>知道原因修改起来就比较简单了，分为两个部分：</p>
<p>1）修改远程linux机器的配置<br />
vim /etc/sysconfig/i18n<br />
把LANG改成支持UTF-8的字符集<br />
如：<br />
LANG=&rdquo;zh_CN.UTF-8&Prime;<br />
或者是<br />
LANG=&rdquo;en_US.UTF-8&Prime;</p>
<p>或者是修改指定用户的locale，编辑.bashrc文件，导入以上的编码即可。</p>
<p>2）然后再改Secure CRT的设置<br />
Options -&gt; Session Options -&gt;&nbsp; Apperance -&gt; Fonts -&gt; Character（选项-&gt;会话选项-&gt;外观-&gt;字符编码-&gt;uft-8）<br />
<br />
退出，再重新登录。发现utf8的文件都能正确读了，utf8的文件名也能正确显示了。</p>
<p><strong>2、显示颜色</strong></p>
<p>显示颜色是个好习惯，一来直观明了，二来增加美感，对视力也有好处，在Secure CRT中设置显示颜色也比较简单，如下：<br />
Options -&gt; Session Options -&gt;Terminal -&gt;Emulation -&gt;ANSI Color 选中就可以了。</p>
<p><strong>3、字体选择</strong></p>
<p>选择不同的字体，可以显示不同的效果，按照个人喜好，比如我自己就喜欢细一点的，清晰一点的字体，而这个字体在Secure CRT是可以设置的，其默认的是vt100，我个人比较喜欢&ldquo;新宋体&rdquo;的显示效果。（PS.很多人喜欢fixedsys 字体）。设置方法也很简单，如下：Options -&gt; Session Options -&gt;&nbsp; Apperance -&gt; Fonts 选择你需要的字体即可。</p>]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2008-04-09 09:31:33</wp:post_date>
		<wp:post_date_gmt>2008-04-09 09:31:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%be%e7%bd%ae%e7%be%8e%e5%8c%96securecrt%e8%ae%a9%e5%85%b6%e6%9b%b4%e5%8a%a0%e9%80%82%e5%90%88%e8%87%aa%e5%b7%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>谈谈我使用过的几个国外服务器提供商</title>
		<link>http://www.iceskysl.com/?p=250</link>
		<pubDate>Fri, 11 Apr 2008 13:52:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=250</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天在<a href="http://www.williamlong.info/archives/1301.html">月光的blog</a>上看到其对<strong>DreamHost</strong>的抱怨，说起存在&ldquo;<strong>过度销售</strong>&rdquo;的现象，具体的可以看<a href="http://www.williamlong.info/archives/1301.html">这里</a>（http://www.williamlong.info/archives/1301.html）。</p>
<p>这里说说我自己使用过的和了解到的国外服务器提供商的个人感受，纯属个人感受，请不要乱扣帽子。我选空间的用途主要是有2个，<strong>其一</strong>是运行一些我开发的开源的系统（比如1stlog，byeloo！等）的Demo，用来演示或者流量不大的应用；<strong>其二</strong>是为客户选择的跑商业化的RoR应用。所以我选择的服务区必须可以支持RubyOnRails应用。</p>
<p>我使用过的国外提供商有<strong>BlueHost</strong>，<strong>DreamHost</strong>和<strong>SliceHost</strong>，我试用过的有亚马逊的<strong>EC2</strong>，<strong>RaislHost</strong>,<strong>hostingrails</strong>和<strong>railsplayground</strong>；我了解过的有<strong>mt</strong>和<strong>Railsmeches</strong>，如下分别说说个人感受：</p>
<p><strong>1、BlueHost：</strong>这个是我最开始使用的国外的服务器，当时是从朋友那分了一些空间过来使用的，因为最开始的时候，Rails的服务器并不多，貌似只有BH和DH吧，呵呵，BH虽然支持Rails，但是限制相当多，我记得当时我写的&ldquo;<a href="http://www.itechtag.com/">技能云</a>&rdquo;就放上面，那次被InfoQ报道了下后，那天流量稍微大些，就撑不住了。且速度一般般，映像不咋好，后来就撤离了。</p>
<p dragover="true"><strong>2、DreamHost：</strong>这个我使用的时间比较长，包括现在这个blog也是放在上面的，总的来说，马马虎虎，只能用来放个人blog和一些Demo等，不适合做商业站点使用；我开始使用的是<strong>Share</strong>模式的，但是后来开发的一个系统需要在后台跑一些定时JOB，其不支持，就只能开通其<strong>PS</strong>服务（这个速度相当慢，我等了20多天，来来回回的交互了好多次邮件，他们都说申请开通PS的客户太多，他们忙不过来，需要耐心的等，后来最后我怒了，说再不搞好，我就给我所有的客户选择SliceHost，这招见效，立马搞定，推荐大家使用，哈哈）。</p>
<p>其Share模式的用户非常的多，月光说他的那个服务器上有380个shell用户和1600多的FTP，都是很正常的，主要是其销售模式，带来巨量的用户群，而其宣称的500G空间和5T的月流量，无限子域名，无限MYSQL库等等，都是扯淡的，为了吸引眼球和骗那些新入手的朋友，他们对CPU和内存的限制非常严格（这就是他们的高明之处），一旦超过内存和CPU，你必须升级到PS模式。</p>
<p>而升级到PS模式（最低是150M内存/150MHZCPU/15美刀/月，以此随自己调解，以10MHZcpu/10M内存/1美刀/月的价格）以后，他会再三提醒您，如果mem不够，请增加自己的内存等。</p>
<p>虽然PS号称是&rdquo;私有服务器&ldquo;，其效果和许诺的CPU和MEM都可以得到保证，但是也不是很稳定，毕竟用户群那么大，出问题的小概率事件也会很多的。</p>
<p>值得称道的是，他们的技术支持还是不错的，我每次发邮件问，基本上很快就给我比较明确的答复；另外，DH的网速还是不错的（就我使用的那个服务器看）；其操作面板比较容易操作，也非常强大。付款比较方便，支持信用卡，paypal以及google checkout等。</p>
<p>总的来说：DH的share模式比较适合流量小的和一些demo演示之类的应用，不适合商业化的服务；PS模式稍微好点，但是要做好down机的准备，呵呵。</p>
<p><strong>3、SliceHost：</strong>这个应该是最便宜的VPN提供商了，其比较专业，以VPN的方式提供服务，可以选择的种类最低是256M独立内存，可以自己选择操作系统类型，自己装web服务器等，其技术文档比较多且可操作性比较好，但是其技术支持不是很到位，我只在chat里和他们沟通过，没发过邮件。</p>
<p>SliceHost我上次使用的是256M的ubuntu7.10+nginx+mogrel集群跑的一个Rails应用，用apache的ab压力测了下，效果还不错，且没有出现down机等不稳定现象的出现，比较令人满意。</p>
<p>但是有个问题，需要注意，我当时需要在程序里么net/http 取国内一些网站上的资源，速度很让人郁闷，有时候竟然只有900B/秒，相当慢。我曾和他们的技术支持沟通，他们给的解释是&ldquo;<em>SliceHsot在美国，而您要取得资源在中国，这个网路上的事情，我们也无能为力</em>&rdquo;，所以，如果您有类似需求，请千万注意。</p>
<p>其他几个，类似EC2和Mt等，由于我没有实际长时间使用过，这里就不评价了，最近会逐一试试，以后再补充这个文章。</p>
<p>如果您使用过其他的国外的服务器，还请分享一二；或者想更多的了解我使用过的这些服务器，请留言即可。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天在<a href="http://www.williamlong.info/archives/1301.html">月光的blog</a>上看到其对<strong>DreamHost</strong>的抱怨，说起存在&ldquo;<strong>过度销售</strong>&rdquo;的现象，具体的可以看<a href="http://www.williamlong.info/archives/1301.html">这里</a>（http://www.williamlong.info/archives/1301.html）。</p>
<p>这里说说我自己使用过的和了解到的国外服务器提供商的个人感受，纯属个人感受，请不要乱扣帽子。我选空间的用途主要是有2个，<strong>其一</strong>是运行一些我开发的开源的系统（比如1stlog，byeloo！等）的Demo，用来演示或者流量不大的应用；<strong>其二</strong>是为客户选择的跑商业化的RoR应用。所以我选择的服务区必须可以支持RubyOnRails应用。</p>
<p>我使用过的国外提供商有<strong>BlueHost</strong>，<strong>DreamHost</strong>和<strong>SliceHost</strong>，我试用过的有亚马逊的<strong>EC2</strong>，<strong>RaislHost</strong>,<strong>hostingrails</strong>和<strong>railsplayground</strong>；我了解过的有<strong>mt</strong>和<strong>Railsmeches</strong>，如下分别说说个人感受：</p>
<p><strong>1、BlueHost：</strong>这个是我最开始使用的国外的服务器，当时是从朋友那分了一些空间过来使用的，因为最开始的时候，Rails的服务器并不多，貌似只有BH和DH吧，呵呵，BH虽然支持Rails，但是限制相当多，我记得当时我写的&ldquo;<a href="http://www.itechtag.com/">技能云</a>&rdquo;就放上面，那次被InfoQ报道了下后，那天流量稍微大些，就撑不住了。且速度一般般，映像不咋好，后来就撤离了。</p>
<p dragover="true"><strong>2、DreamHost：</strong>这个我使用的时间比较长，包括现在这个blog也是放在上面的，总的来说，马马虎虎，只能用来放个人blog和一些Demo等，不适合做商业站点使用；我开始使用的是<strong>Share</strong>模式的，但是后来开发的一个系统需要在后台跑一些定时JOB，其不支持，就只能开通其<strong>PS</strong>服务（这个速度相当慢，我等了20多天，来来回回的交互了好多次邮件，他们都说申请开通PS的客户太多，他们忙不过来，需要耐心的等，后来最后我怒了，说再不搞好，我就给我所有的客户选择SliceHost，这招见效，立马搞定，推荐大家使用，哈哈）。</p>
<p>其Share模式的用户非常的多，月光说他的那个服务器上有380个shell用户和1600多的FTP，都是很正常的，主要是其销售模式，带来巨 量的用户群，而其宣称的500G空间和5T的月流量，无限子域名，无限MYSQL库等等，都是扯淡的，为了吸引眼球和骗那些新入手的朋友，他们对CPU和 内存的限制非常严格（这就是他们的高明之处），一旦超过内存和CPU，你必须升级到PS模式。</p>
<p>而升级到PS模式（最低是150M内存/150MHZCPU/15美刀/月，以此随自己调解，以10MHZcpu/10M内存/1美刀/月的价格）以后，他会再三提醒您，如果mem不够，请增加自己的内存等。</p>
<p>虽然PS号称是&rdquo;私有服务器&ldquo;，其效果和许诺的CPU和MEM都可以得到保证，但是也不是很稳定，毕竟用户群那么大，出问题的小概率事件也会很多的。</p>
<p>值得称道的是，他们的技术支持还是不错的，我每次发邮件问，基本上很快就给我比较明确的答复；另外，DH的网速还是不错的（就我使用的那个服务器看）；其操作面板比较容易操作，也非常强大。付款比较方便，支持信用卡，paypal以及google checkout等。</p>
<p>总的来说：DH的share模式比较适合流量小的和一些demo演示之类的应用，不适合商业化的服务；PS模式稍微好点，但是要做好down机的准备，呵呵。</p>
<p><strong>3、SliceHost：</strong>这个应该是最便宜的VPN提供商了，其比较专业，以VPN的方式提供服务，可以选择的种类最低是256M独 立内存，可以自己选择操作系统类型，自己装web服务器等，其技术文档比较多且可操作性比较好，但是其技术支持不是很到位，我只在chat里和他们沟通 过，没发过邮件。</p>
<p>SliceHost我上次使用的是256M的ubuntu7.10+nginx+mogrel集群跑的一个Rails应用，用apache的ab压力测了下，效果还不错，且没有出现down机等不稳定现象的出现，比较令人满意。</p>
<p>但是有个问题，需要注意，我当时需要在程序里么net/http 取国内一些网站上的资源，速度很让人郁闷，有时候竟然只有900B/秒，相当慢。我曾和他们的技术支持沟通，他们给的解释是&ldquo;<em>SliceHsot在美国，而您要取得资源在中国，这个网路上的事情，我们也无能为力</em>&rdquo;，所以，如果您有类似需求，请千万注意。</p>
<p>其他几个，类似EC2和Mt等，由于我没有实际长时间使用过，这里就不评价了，最近会逐一试试，以后再补充这个文章。</p>
<p>如果您使用过其他的国外的服务器，还请分享一二；或者想更多的了解我使用过的这些服务器，请留言即可。</p>]]></excerpt:encoded>
		<wp:post_id>250</wp:post_id>
		<wp:post_date>2008-04-11 13:52:22</wp:post_date>
		<wp:post_date_gmt>2008-04-11 13:52:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b0%88%e8%b0%88%e6%88%91%e4%bd%bf%e7%94%a8%e8%bf%87%e7%9a%84%e5%87%a0%e4%b8%aa%e5%9b%bd%e5%a4%96%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%8f%90%e4%be%9b%e5%95%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.150</wp:comment_author_IP>
			<wp:comment_date>2008-04-14 23:40:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[正找朋友详细测试mt]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[群振]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.qunzhen.info/</wp:comment_author_url>
			<wp:comment_author_IP>222.136.104.132</wp:comment_author_IP>
			<wp:comment_date>2008-04-15 10:12:32</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在用着JIANG提供的HostGator，速度有点慢，很稳定，现在博客流量很小，根本看不出虚拟主机的品质。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://g.zhen.ning@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>116.27.190.205</wp:comment_author_IP>
			<wp:comment_date>2008-06-06 17:51:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1、BlueHost：这个是我最开始使用的国外的服务器，当时是从朋友那分了一些空间过来使用的，因为最开始的时候，Rails的服务器并不多，貌似只有BH和DH吧，呵呵，BH虽然支持Rails，但是限制相当多，我记得当时我写的“技能云”就放上面，那次被InfoQ报道了下后，那天流量稍微大些，就撑不住了。且速度一般般，映像不咋好，后来就撤离了。
=
这个流量大一点是指哪个段落呢？
1000IP~2000IP
2000~4000IP
更高]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://g.zhen.ning@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>116.27.190.205</wp:comment_author_IP>
			<wp:comment_date>2008-06-06 21:01:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵，1KIP就顶不住，还是要换才行。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://g.zhen.ning@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>116.27.190.205</wp:comment_author_IP>
			<wp:comment_date>2008-06-06 21:02:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[装wordpress在Dh 2KIP/day都不怕，有朋友上了1W/DAY才告知CPU占用过大。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>BB入手，跨入智能时代</title>
		<link>http://www.iceskysl.com/?p=251</link>
		<pubDate>Sun, 13 Apr 2008 23:59:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[<p>毕业那年为了找工作方便，花了1250大洋，跑了一天在汉口买中联想i816手机，用了两年后，换了另外一款联想的手机i908，把i816放到抽屉保存了起来，可惜刚买的i908没3个月，就在长沙步行街被小贼盗去，于是又重新拿出原来的i816凑合着使用，然后慢慢选择自己适合的手机，随着i816的老化，通话都受到影响，还为此影响了一次重要的事情后，于是下定决心，换！</p>
<p>选了好久，不求花哨，但求个性，不求昂贵，只求实惠，在Nokia，联想等几个手机直接徘徊了很久，最后竟然选择了黑莓，也就是传说中的BB。</p>
<p>偶受不了太大的个，所以选了个最苗条的，又有个很帅的&ldquo;轨迹球&rdquo;的8100系列，刷了最新的4.5系统，可以很好的支持中文，显示效果非常的榜。</p>
<p>昨天玩了一天，基本上都熟悉了，还在不断的熟悉，把那么多的快捷键都记住了，会相当方便滴，满意。show个网上的照片，呵呵。</p>
<p>&nbsp;</p>
<p><img src="http://img2.pconline.com.cn/pconline/0704/06/994312_cxl070405bb_8100_2s.jpg" alt="" /></p>
<p><br />
关于使用体会啥的，有时间再说。</p>
<p>偶也终于跨入PDA的时代，hoho。。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>毕业那年为了找工作方便，花了1250大洋，跑了一天在汉口买中联想i816手机，用了两年后，换了另外一款联想的手机i908，把i816放到抽 屉保存了起来，可惜刚买的i908没3个月，就在长沙步行街被小贼盗去，于是又重新拿出原来的i816凑合着使用，然后慢慢选择自己适合的手机，随着 i816的老化，通话都受到影响，还为此影响了一次重要的事情后，于是下定决心，换！</p>
<p>选了好久，不求花哨，但求个性，不求昂贵，只求实惠，在Nokia，联想等几个手机直接徘徊了很久，最后竟然选择了黑莓，也就是传说中的BB。</p>
<p>偶受不了太大的个，所以选了个最苗条的，又有个很帅的&ldquo;轨迹球&rdquo;的8100系列，刷了最新的4.5系统，可以很好的支持中文，显示效果非常的榜。</p>
<p>昨天玩了一天，基本上都熟悉了，还在不断的熟悉，把那么多的快捷键都记住了，会相当方便滴，满意。show个网上的照片，呵呵。</p>
<p>&nbsp;</p>
<p><img src="http://img2.pconline.com.cn/pconline/0704/06/994312_cxl070405bb_8100_2s.jpg" alt="" /></p>
<p><br />
关于使用体会啥的，有时间再说。</p>
<p>偶也终于跨入PDA的时代，hoho。。。</p>]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date>2008-04-13 23:59:33</wp:post_date>
		<wp:post_date_gmt>2008-04-13 23:59:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bb%e5%85%a5%e6%89%8b%ef%bc%8c%e8%b7%a8%e5%85%a5%e6%99%ba%e8%83%bd%e6%97%b6%e4%bb%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.150</wp:comment_author_IP>
			<wp:comment_date>2008-04-14 23:42:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很不错，决定不换手机，新刷个mnokia6630]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.67.134</wp:comment_author_IP>
			<wp:comment_date>2008-04-15 22:29:57</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BB挺好,又便宜,有强大..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby正则表达式小技巧</title>
		<link>http://www.iceskysl.com/?p=252</link>
		<pubDate>Tue, 15 Apr 2008 21:24:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[<p>关于Ruby的正则表达式的基本的东西大家都很熟悉了,偶然会遇到一些没见过的小技巧,本篇用来收集和记录这些小技巧,如果你有其他小技巧,欢迎分享.</p>
<p>pre_match和<span class="hilite2">post_match这两个方法以前没使用过</span>，他们分别是用来获取当前匹配结果的前一个和后一个匹配结果,看个例子既可以明白了.<span><span>&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;#这个是分析URI的&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.split_uri(&nbsp;uri_str&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;%r&lt;http://([^/]+)&gt;.match(uri_str)&nbsp;<span class="keyword">or</span><span>&nbsp;</span><span class="keyword">raise</span><span>&nbsp;ArgumentError,&nbsp;</span><span class="string">&quot;cannot&nbsp;parse&nbsp;URI:&nbsp;#{uri_str}&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host&nbsp;=&nbsp;m[1].strip&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;m.post_match&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;<span class="string">'/'</span><span>&nbsp;</span><span class="keyword">if</span><span>&nbsp;path.empty?&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;host,&nbsp;path&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>url&nbsp;=&nbsp;http://www.1sters.com:80/this_is_a_string/and_this_is_too&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts(split_uri(url))&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#Outout:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#www.1sters.com:80,this_is_a_string/and_this_is_too&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</span></span>如上这段代码很好的说明了<span><span><span>post_match的作用</span></span></span>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>关于Ruby的正则表达式的基本的东西大家都很熟悉了,偶然会遇到一些没见过的小技巧,本篇用来收集和记录这些小技巧,如果你有其他小技巧,欢迎分享.</p>
<p>pre_match和<span class="hilite2">post_match这两个方法以前没使用过</span>，他们分别是用来获取当前匹配结果的前一个和后一个匹配结果,看个例子既可以明白了.<span><span>&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;#这个是分析URI的&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.split_uri(&nbsp;uri_str&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;%r&lt;http://([^/]+)&gt;.match(uri_str)&nbsp;<span class="keyword">or</span><span>&nbsp;</span><span class="keyword">raise</span><span>&nbsp;ArgumentError,&nbsp;</span><span class="string">&quot;cannot&nbsp;parse&nbsp;URI:&nbsp;#{uri_str}&quot;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host&nbsp;=&nbsp;m[1].strip&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;m.post_match&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;<span class="string">'/'</span><span>&nbsp;</span><span class="keyword">if</span><span>&nbsp;path.empty?&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;host,&nbsp;path&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>url&nbsp;=&nbsp;http://www.1sters.com:80/this_is_a_string/and_this_is_too&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts(split_uri(url))&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#Outout:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#www.1sters.com:80,this_is_a_string/and_this_is_too&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</span></span>如上这段代码很好的说明了<span><span><span>post_match的作用</span></span></span>.</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2008-04-15 21:24:14</wp:post_date>
		<wp:post_date_gmt>2008-04-15 21:24:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%b0%8f%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Google App Engine,前途无量,充满乐趣</title>
		<link>http://www.iceskysl.com/?p=253</link>
		<pubDate>Wed, 16 Apr 2008 10:09:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=253</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早在几天前，就在Gseek上看到关于<a href="http://code.google.com/appengine/">GoogleAppEngine</a>的介绍，可惜当时去晚了，没有申请到试用帐号，只大略的看了下，发现其实好东西，今天在<a href="http://www.infoq.com/cn/news/2008/04/google-app-engine-simplifies-web">infoQ上</a>再次看到这个东西的就介绍，再跑过去看看，下载了SDK并看了下他的guider，和演示代码，发现其真的很有前途，是个很有诱惑力的东西。</p>
<p>尽管Google说会支持其他很多环境，但是现在还只支持python，毫无疑问，Google内部对python的喜爱已经毋庸置疑的。当然，我期待着哪天其可以支持ruby（rails框架或者其他）；或者我该抽点时间去学学python了，呵呵。<br />
看看他自己的说明：<br />
<strong>Run your web applications on Google's infrastructure.</strong><br />
Google App Engine enables you to build web applications on the same scalable systems that power Google applications.<br />
<strong>No assembly required.</strong><br />
Google App Engine provides a fully-integrated application environment.<br />
<strong>It's easy to scale.</strong><br />
Google App Engine makes it easy to build scalable applications that grow from one user to millions of users without infrastructure headaches.<br />
<strong>It's free to get started.</strong><br />
Every Google App Engine application can use up to 500MB of persistent storage and enough bandwidth and CPU for 5 million monthly page views.</p>
<p>毫无疑问，如果能大规模的推广开，将会带来很大的web开发热浪，同时Google将在这个里面得到更多的东西，不仅仅限于卖这个服务的费用，还会给google自己的其他份额应用更好的支撑。</p>
<p>同时，不可否认，会给亚马逊的S3,EC2,SQS等带来一些竞争，当然，这会使得这个领域更加合理和更多的选择。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早在几天前，就在Gseek上看到关于<a href="http://code.google.com/appengine/">GoogleAppEngine</a>的介绍，可惜当时去晚了，没有申请到试用帐号，只大略的看了下，发现其实好东西，今天在<a href="http://www.infoq.com/cn/news/2008/04/google-app-engine-simplifies-web">infoQ上</a>再次看到这个东西的就介绍，再跑过去看看，下载了SDK并看了下他的guider，和演示代码，发现其真的很有前途，是个很有诱惑力的东西。</p>
<p>尽管Google说会支持其他很多环境，但是现在还只支持python，毫无疑问，Google内部对python的喜爱已经毋庸置疑的。当然，我期待着哪天其可以支持ruby（rails框架或者其他）；或者我该抽点时间去学学python了，呵呵。<br />
看看他自己的说明：<br />
<strong>Run your web applications on Google's infrastructure.</strong><br />
Google App Engine enables you to build web applications on the same scalable systems that power Google applications.<br />
<strong>No assembly required.</strong><br />
Google App Engine provides a fully-integrated application environment.<br />
<strong>It's easy to scale.</strong><br />
Google App Engine makes it easy to build scalable applications that grow from one user to millions of users without infrastructure headaches.<br />
<strong>It's free to get started.</strong><br />
Every Google App Engine application can use up to 500MB of persistent storage and enough bandwidth and CPU for 5 million monthly page views.</p>
<p>毫无疑问，如果能大规模的推广开，将会带来很大的web开发热浪，同时Google将在这个里面得到更多的东西，不仅仅限于卖这个服务的费用，还会给google自己的其他份额应用更好的支撑。</p>
<p>同时，不可否认，会给亚马逊的S3,EC2,SQS等带来一些竞争，当然，这会使得这个领域更加合理和更多的选择。</p>]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2008-04-16 10:09:20</wp:post_date>
		<wp:post_date_gmt>2008-04-16 10:09:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-app-engine%e5%89%8d%e9%80%94%e6%97%a0%e9%87%8f%e5%85%85%e6%bb%a1%e4%b9%90%e8%b6%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.84.207</wp:comment_author_IP>
			<wp:comment_date>2008-04-20 13:18:37</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.javaeye.com/news/1854]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Scout已经长大，正式上线，试用手记～</title>
		<link>http://www.iceskysl.com/?p=254</link>
		<pubDate>Wed, 16 Apr 2008 11:30:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=254</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前段时间我曾写过一篇介绍<a href="https://scoutapp.com/"><strong>Scout</strong></a>插件编写规则的文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=240">Scout是个挺有趣的tools</a>》，当时Scout尚未正式商用，今天收到Scout的邮件说，已经正式上线了。</p>
<p>过去注册了一个free的帐号，在我的一个应用里面使用了下，感觉效果相当不错，将来肯定有大量的用户和开发者。</p>
<p>Scout的模式相当好，对于<strong>Saas</strong>应用来说，这个模式相当不错，首先开发一个应用框架，Scout本身就是一个监控框架，然后制定相应的插件开发规则，让更多的人贡献智慧，而Scout本身作为一个数据存储中心，接收每个客户机上采集到的数据，入库保存，生成报表，并做适当的告警处理等。</p>
<p>这个做法相当棒，他在用户注册的时候，会生成一个<strong>Client Key</strong>，然后您在安装Scout的时候，输入验证，如果通过，就认为是自己的客户。（至于客户的类型等等都是在服务器上保存的，客户端只需要这个key就OK了）。</p>
<p>看了一眼价格，还真不便宜，Basc版本的都是 			$14.00/mo，最高的是$119.00/mo，这样的价格，会带来不小的收益哦。</p>
<p>另外，如果能集合SMS告警等，就不用SS每天的724监控了，呵呵。</p>
<p>但是有一点需要注意的是：</p>
<p>你在客户机上安装了Scout的gem后，其他插件并不需要再SSH上去安装，主要在Scout的UI界面上，选择你要的插件，简单的配置，即可安装，这么看来，其实可以让客户端系统安装任何插件了，如果有人非法利用，后果还是挺严重的，比后门还要NB呀~</p>
<p><br />
看下我测试的一个界面：</p>
<p><img src="http://lh6.ggpht.com/iceskysl/SAVxKl2uqhI/AAAAAAAACCQ/_B72uUb3Vlw/s400/taojer.png" alt="" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前段时间我曾写过一篇介绍<a href="https://scoutapp.com/"><strong>Scout</strong></a>插件编写规则的文章《<a href="../../../?action=show&amp;id=240">Scout是个挺有趣的tools</a>》，当时Scout尚未正式商用，今天收到Scout的邮件说，已经正式上线了。</p>
<p>过去注册了一个free的帐号，在我的一个应用里面使用了下，感觉效果相当不错，将来肯定有大量的用户和开发者。</p>
<p>Scout的模式相当好，对于<strong>Saas</strong>应用来说，这个模式相当不错，首先开发一个应用框架，Scout本身就是一个监控框架，然后制定相应的插件开发规则，让更多的人贡献智慧，而Scout本身作为一个数据存储中心，接收每个客户机上采集到的数据，入库保存，生成报表，并做适当的告警处理等。</p>
<p>这个做法相当棒，他在用户注册的时候，会生成一个<strong>Client Key</strong>，然后您在安装Scout的时候，输入验证，如果通过，就认为是自己的客户。（至于客户的类型等等都是在服务器上保存的，客户端只需要这个key就OK了）。</p>
<p>看了一眼价格，还真不便宜，Basc版本的都是 			$14.00/mo，最高的是$119.00/mo，这样的价格，会带来不小的收益哦。</p>
<p>另外，如果能集合SMS告警等，就不用SS每天的724监控了，呵呵。</p>
<p>但是有一点需要注意的是：</p>
<p>你在客户机上安装了Scout的gem后，其他插件并不需要再SSH上去安装，主要在Scout的UI界面上，选择你要的插件，简单的配置，即可安装，这么看来，其实可以让客户端系统安装任何插件了，如果有人非法利用，后果还是挺严重的，比后门还要NB呀~</p>
<p><br />
看下我测试的一个界面：</p>
<p><img src="http://lh6.ggpht.com/iceskysl/SAVxKl2uqhI/AAAAAAAACCQ/_B72uUb3Vlw/s400/taojer.png" alt="" /></p>]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2008-04-16 11:30:51</wp:post_date>
		<wp:post_date_gmt>2008-04-16 11:30:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scout%e5%b7%b2%e7%bb%8f%e9%95%bf%e5%a4%a7%ef%bc%8c%e6%ad%a3%e5%bc%8f%e4%b8%8a%e7%ba%bf%ef%bc%8c%e8%af%95%e7%94%a8%e6%89%8b%e8%ae%b0%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.42.194.13</wp:comment_author_IP>
			<wp:comment_date>2008-04-20 00:55:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好！近段时间比较忙，也发生了很多事情~所以都没有时间去1.S.T写些文章了。真是抱歉哦！但是我也是把它当成了自己的一个家！~  此次来是想问一下你是在国外哪里买的空间的！感觉速度还可以！ 但是价格怎么样！我要求不是很大，而且价格也不是很高~因为不想再用国内的了！ 如果在这里不方便说，可以发E-mail：ngshaozhu@gmail.com
  谢谢哦！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.82.136</wp:comment_author_IP>
			<wp:comment_date>2008-04-20 01:28:48</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[啊哈,大家都比较忙,
这个空间是DH(DreamHost)的,空间比较大,号称有500G空间,5T月流量,但是实际上是用不了这么多的.
建议您看看我前些日子写了的几个国外空间的比较(http://iceskysl.1sters.com/?action=show&id=250).
另外,DH的空间是119美元一年,如果想买,可以找我要优惠码,貌似可以优惠55美元.
有问题再联系...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.8.69.122</wp:comment_author_IP>
			<wp:comment_date>2008-04-20 20:15:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[今天看了DH、lunarpages和其它的， 但是感觉没有必要使用那么大！而且购买都比较麻烦（没办法，懒人来的）我现在也有两个空间，但是现在不想用了！ 所以想跟你用点，放个Blog就可以了！价钱嘛！你自己看吧！只要不太....嘿！
  不知能否！谢谢哦！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>130</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.211.196</wp:comment_author_IP>
			<wp:comment_date>2008-04-20 23:21:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我的这个貌似最近很不稳定,老是出现500错误,我查到是内存的的问题,经常访问不了,正在和DH的客服联系.
等解决了再说,ok?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.200.131</wp:comment_author_IP>
			<wp:comment_date>2008-04-21 02:28:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恩！好的！是不是防问量大了，受到他们的限制！然后另外加$！不过没关系了！说句实话，我现在学习Php开发！而我没有你那么好的条件，我今天所学的这些都是靠自己自学来的，虽然自学的路上很艰辛，未来的路还不知道在何方，但是我一直都没有放弃！我跟浪子哥有些共同的经历吧！现在英语也都交给老师了，大多数都是靠google翻译的，真是惭愧！有时候真的很羡慕你！哎！不多说了！总之这一切都怪自己！如果然你搞定了麻烦告知我一声！再次感谢你！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.200.131</wp:comment_author_IP>
			<wp:comment_date>2008-04-22 01:09:33</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那等待你佳音了，呵！怪不得今晚防问不了！我Blog现在是用Asp的PJ，国内也有多人使用的。只是它现在的版本只支持access，所以不想用了。想换Php的！至于是sablong或wp还是其它的还不确定，如果有时间自己倒想开发一个简单易用的，当做练习！嘿！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>EC2支持Persistent Storage，日渐完善</title>
		<link>http://www.iceskysl.com/?p=255</link>
		<pubDate>Wed, 16 Apr 2008 12:41:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&quot;Last night Amazon announced <a href="http://aws.typepad.com/aws/2008/04/block-to-the-fu.html">persistent storage on EC2</a>. Now you can create disks in S3 and attach them to EC2 instances. You want a terabyte of storage for your machine, just create it in S3 and mount it.&quot;</p>
<p>很多人应该记得，<a href="http://iceskysl.1sters.com/?action=show&amp;id=241">EC2才宣布支持静态IP</a>没几天，今天就看到消息称EC2支持<strong>Persistent Storage</strong>了，大家应该还记得，EC2发布以来，虽然带给大家无数的方便和快捷，但是其中两个诟病一直被人提及，那就是&ldquo;不支持固定IP地址&rdquo;和&ldquo;没有&rdquo;Persistent Storage&ldquo;，这两个诟病使得：</p>
<p>1、一旦你重启了EC2，你的IP地址就会变化，这就意味着你花了几个小时才解析生效的DNS又无法解析。</p>
<p>2、一旦你的EC2重启，你必须及时的备份数据库和数据文件到S3上，以防止重启或者down机丢失数据。</p>
<p>而这两个问题，到现在为止，已经全部完善了，EC2基本上很成熟了，剩下一个让国内开发者认为不爽的是，在国内，访问的速度实在不咋地。希望亚马逊有改善的计划，到时，就不用自己买服务器，托管啥的啦，甚至VPS都得靠边站，呵呵，就像我以前说的《<a href="../../../?action=show&amp;id=188">RubyOnRails + S3 + EC2 = ?</a> 》，依然好戏。</p>
<p>或许是受到Google发布的Google App Engine的刺激，亚马逊才会在最近做这么大的动作，因为Google App Engine号称是亚马逊的EC2,S3,SQS以及SimpleDB的整体方案。对亚马逊有直接的竞争关系。</p>
<p>前面一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a> 》就说了，这样的竞争，会带来更多的好处，好戏还会有，下一个改进会是什么呢？</p>
<p>PS：这次公告中还提及一个新功能：<br />
Another feature rolled out last night is snapshots. Need backup or the ability to rollback? Snapshot the instance and it&rsquo;s on S3, ready to use. You can create new volumes from any particular snapshot.<br />
<br />
These two features make Amazon&rsquo;s grid computing platform a very nice place for startups to experiment, develop, and build out. All with little or no capital cost.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>&quot;Last night Amazon announced <a href="http://aws.typepad.com/aws/2008/04/block-to-the-fu.html">persistent storage on EC2</a>. Now you can create disks in S3 and attach them to EC2 instances. You want a terabyte of storage for your machine, just create it in S3 and mount it.&quot;</p>
<p>很多人应该记得，<a href="http://iceskysl.1sters.com/?action=show&amp;id=241">EC2才宣布支持静态IP</a>没几天，今天就看到消息称EC2支持<strong>Persistent Storage</strong>了，大家应该还记得，EC2发布以来，虽然带给大家无数的方便和快捷，但是其中两个诟病一直被人提及，那就是&ldquo;不支持固定IP地址&rdquo;和&ldquo;没有&rdquo;Persistent Storage&ldquo;，这两个诟病使得：</p>
<p>1、一旦你重启了EC2，你的IP地址就会变化，这就意味着你花了几个小时才解析生效的DNS又无法解析。</p>
<p>2、一旦你的EC2重启，你必须及时的备份数据库和数据文件到S3上，以防止重启或者down机丢失数据。</p>
<p>而这两个问题，到现在为止，已经全部完善了，EC2基本上很成熟了，剩下一个让国内开发者认为不爽的是，在国内，访问的速度实在不咋地。希望亚马逊有改善的计划，到时，就不用自己买服务器，托管啥的啦，甚至VPS都得靠边站，呵呵，就像我以前说的《<a href="../../../?action=show&amp;id=188">RubyOnRails + S3 + EC2 = ?</a> 》，依然好戏。</p>
<p>或许是受到Google发布的Google App Engine的刺激，亚马逊才会在最近做这么大的动作，因为Google App Engine号称是亚马逊的EC2,S3,SQS以及SimpleDB的整体方案。对亚马逊有直接的竞争关系。</p>
<p>前面一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a> 》就说了，这样的竞争，会带来更多的好处，好戏还会有，下一个改进会是什么呢？</p>
<p>PS：这次公告中还提及一个新功能：<br />
Another feature rolled out last night is snapshots. Need backup or the ability to rollback? Snapshot the instance and it&rsquo;s on S3, ready to use. You can create new volumes from any particular snapshot.<br />
<br />
These two features make Amazon&rsquo;s grid computing platform a very nice place for startups to experiment, develop, and build out. All with little or no capital cost.</p>]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2008-04-16 12:41:26</wp:post_date>
		<wp:post_date_gmt>2008-04-16 12:41:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ec2%e6%94%af%e6%8c%81persistent-storage%ef%bc%8c%e6%97%a5%e6%b8%90%e5%ae%8c%e5%96%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.50.194</wp:comment_author_IP>
			<wp:comment_date>2008-04-18 09:48:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[相当的看好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>134</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.212.59</wp:comment_author_IP>
			<wp:comment_date>2008-06-05 00:27:15</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wed, Jun 4, 2008 at 7:52 PM又来新东西了，如下
   * Amazon EC2 High-CPU Instances Available
    * Sun & MySQL Partnership
    * Amazon FPS: New Widget Functionality
    * DevPay Enables Amazon S3 Query String Authentication
    * Building Scalable, Reliable Amazon EC2 Applications with Amazon SQS]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>服务器最近有些异常</title>
		<link>http://www.iceskysl.com/?p=256</link>
		<pubDate>Mon, 21 Apr 2008 00:30:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<p>也许大家发现了,我的Blog这几天有些异样,经常出现500错误,开始我并不晓得是咋回事,后来看了下内存才发现,是内存不够了.</p>
<p>这个Blog是放在DH的PS上的,虽然号称PS,但是感觉还不如sharemode的时候稳定,无语,DH的一个经的催我增加内存.FT...</p>
<p>我基本上天天在线,如果你发现本站不能访问了,请在GoogleTalk上告诉我,我重启下PS服务器..正在和DH的交涉,应该很快就有结果.</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>也许大家发现了,我的Blog这几天有些异样,经常出现500错误,开始我并不晓得是咋回事,后来看了下内存才发现,是内存不够了.</p>
<p>这个Blog是放在DH的PS上的,虽然号称PS,但是感觉还不如sharemode的时候稳定,无语,DH的一个经的催我增加内存.FT...</p>
<p>我基本上天天在线,如果你发现本站不能访问了,请在GoogleTalk上告诉我,我重启下PS服务器..正在和DH的交涉,应该很快就有结果.</p>]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2008-04-21 00:30:27</wp:post_date>
		<wp:post_date_gmt>2008-04-21 00:30:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%9c%80%e8%bf%91%e6%9c%89%e4%ba%9b%e5%bc%82%e5%b8%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>1stlog归来，人员征集中。</title>
		<link>http://www.iceskysl.com/?p=257</link>
		<pubDate>Mon, 21 Apr 2008 10:25:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[<p>花了一个周末，把<strong>1stlog</strong>的代码整理了下，由于当时开发的时候Rails还是1.2的版本，里面用了一些方法和措施，在Rails2版本上市不支持的。加上当时学习Rails不久，写的代码也有点XXX。<br />
<br />
本次修改的主要有：<br />
1、增加对Rails2版本的支持；<br />
2、增加配置文件的缓存，提高性能；<br />
3、增加多模板支持；<br />
4、使用一套全新的后台管理界面。<br />
<br />
以上四者是主要的工作，其他都是小细节的修复，基本工作已经完成，马上即可发布版本，敬请关注，谢谢。<br />
（PS：还没有修改完，目前搭建了一套空壳子，有兴趣的请在这里看 :<a target="_blank" href="http://1stlog.1sters.com/">http://1stlog.1sters.com</a>）<br />
<br />
需要如下人员参与：<br />
1、文档编写者 --负责编写（在原来的基础上修改和完善）插件开发手册；使用手册、安装部署文档以及模板设计手册；<br />
2、UI设计师&nbsp;-- 负责按照模板设计手册设计有个性的模板并与大家分享；<br />
3、开发人员&nbsp; --负责Bug修复和部分开发工作；<br />
4、QA人员&nbsp;&nbsp;--负责收集和整理Bug和新需求；<br />
5、测试人员&nbsp; -负责功能性测试、可用性测试等及其问题验证；<br />
<br />
1stlog是开源的项目，代码和设计思路等都贡献给每个人，所以以上工作都需要您有激情，有希望做些开源的事情，谢谢。<br />
<br />
如果您有兴趣，请跟贴或者给我发Email（<a href="mailto:iceskysl@gmail.com">iceskysl@gmail.com</a>）报名并附带自己愿意担任的角色和自己擅长的地方，谢谢。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>花了一个周末，把<strong>1stlog</strong>的代码整理了下，由于当时开发的时候Rails还是1.2的版本，里面用了一些方法和措施，在Rails2版本上市不支持的。加上当时学习Rails不久，写的代码也有点XXX。<br />
<br />
本次修改的主要有：<br />
1、增加对Rails2版本的支持；<br />
2、增加配置文件的缓存，提高性能；<br />
3、增加多模板支持；<br />
4、使用一套全新的后台管理界面。<br />
<br />
以上四者是主要的工作，其他都是小细节的修复，基本工作已经完成，马上即可发布版本，敬请关注，谢谢。<br />
（PS：还没有修改完，目前搭建了一套空壳子，有兴趣的请在这里看 :<a target="_blank" href="http://1stlog.1sters.com/">http://1stlog.1sters.com</a>）<br />
<br />
需要如下人员参与：<br />
1、文档编写者 --负责编写（在原来的基础上修改和完善）插件开发手册；使用手册、安装部署文档以及模板设计手册；<br />
2、UI设计师&nbsp;-- 负责按照模板设计手册设计有个性的模板并与大家分享；<br />
3、开发人员&nbsp; --负责Bug修复和部分开发工作；<br />
4、QA人员&nbsp;&nbsp;--负责收集和整理Bug和新需求；<br />
5、测试人员&nbsp; -负责功能性测试、可用性测试等及其问题验证；<br />
<br />
1stlog是开源的项目，代码和设计思路等都贡献给每个人，所以以上工作都需要您有激情，有希望做些开源的事情，谢谢。<br />
<br />
如果您有兴趣，请跟贴或者给我发Email（<a href="mailto:iceskysl@gmail.com">iceskysl@gmail.com</a>）报名并附带自己愿意担任的角色和自己擅长的地方，谢谢。</p>]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2008-04-21 10:25:57</wp:post_date>
		<wp:post_date_gmt>2008-04-21 10:25:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1stlog%e5%bd%92%e6%9d%a5%ef%bc%8c%e4%ba%ba%e5%91%98%e5%be%81%e9%9b%86%e4%b8%ad%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>60.176.108.177</wp:comment_author_IP>
			<wp:comment_date>2008-04-21 13:07:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Count me in^0^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[想飞就非]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wldandan@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>130.214.25.249</wp:comment_author_IP>
			<wp:comment_date>2008-04-22 14:55:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[希望参加，研究Rails一段时间了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[galeki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://galeki.is-programmer.com</wp:comment_author_url>
			<wp:comment_author_IP>58.246.95.130</wp:comment_author_IP>
			<wp:comment_date>2008-04-22 15:55:54</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也拿 rails 做了个简单的 blog，有空多交流～ :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails之Component探析,引出Cells。</title>
		<link>http://www.iceskysl.com/?p=258</link>
		<pubDate>Mon, 21 Apr 2008 15:36:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=258</guid>
		<description></description>
		<content:encoded><![CDATA[<p>由于打算将我的第一个开源项目<a href="http://iceskysl.1sters.com/?action=show&amp;id=257">1stlog重构和完善</a>，看了下以前的实现方式，除了用到了很对rails2不支持的方法和插件外（正在着手修改），还用到了Rails中的<strong>component</strong>的。而这正是被很多railser们告诫要小心的地方，甚至有人说component是<strong>evil</strong>的，新版1stlog发布在即，我得好好了解下component为什么evil。</p>
<p><strong>一、为什么当时选择component</strong></p>
<p>选择component是根据当时的设计需求来的，1stlog设计的时候是作为一个只有基本blog功能的大框架，而其他的一些个性化功能，需要由其他开发人员或者爱好者来按照一定的规范开发和编写，当时认为，使用component时自简单有效的策略，您可以参考我当时编写&rdquo;<a href="http://1stlog.googlecode.com/files/1stlog%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.doc">1stlog插件开发指南</a>&ldquo;。</p>
<p><strong>二、为什么说component是邪恶的</strong></p>
<p>有人说Rails中的component是邪恶的，千万不要使用，原因呢，还真不清楚，看到<a href="http://glu.ttono.us/articles/2006/08/30/guide-things-you-shouldnt-be-doing-in-rails">有人这么写</a>：
<div class="codeText">
<div class="codeHead"><span><span>Using&nbsp;Components&nbsp; <br />
</span></span></div>
<span> </span>
<ol start="1" class="dp-xml">
    <li class="alt"><span>Components&nbsp;don&rsquo;t&nbsp;belong&nbsp;in&nbsp;Rails.&nbsp;Don&rsquo;t&nbsp;use&nbsp;them.&nbsp;They&nbsp;weren&rsquo;t&nbsp;an <br />
    </span></li>
    <li class="alt"><span>extraction.&nbsp;They&nbsp;weren&rsquo;t&nbsp;well&nbsp;planned.&nbsp;When&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;a <br />
    </span></li>
    <li class="alt"><span>component&nbsp;it&nbsp;is&nbsp;probably&nbsp;because&nbsp;you&nbsp;misunderstand&nbsp;them&nbsp;or <br />
    </span></li>
    <li class="alt"><span>really&nbsp;want&nbsp;a&nbsp;partial.&nbsp;Rethink&nbsp;what&nbsp;you&rsquo;re&nbsp;doing. <br />
    </span></li>
    <li class="alt"><span>The&nbsp;rest&nbsp;of&nbsp;the&nbsp;Rails&nbsp;world&nbsp;has&nbsp;written&nbsp;off&nbsp;components&nbsp;for&nbsp;a <br />
    </span></li>
    <li class="alt"><span>reason&nbsp;and&nbsp;they&rsquo;ll&nbsp;probably&nbsp;be&nbsp;deprecated&nbsp;by&nbsp;2.0.&nbsp;Resist.&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>也有人拿typo中使用component导致响应很迟钝的数据说明，可以参考&ldquo;<a href="http://railsexpress.de/blog/articles/2005/11/18/components-may-not-be-evil-but-they-sure-can-be-slow">Components may not be evil, but they sure can be slow</a>&rdquo;，再看看Rails的DHH咋说的呢？哦，他说&rdquo;<a href="http://weblog.rubyonrails.org/2005/11/11/why-engines-and-components-are-not-evil-but-distracting/">Why engines and components are not evil but distracting</a>&ldquo;</p>
<p>这么看来，component并不邪恶了，只是慢一点，有些小问题罢了。</p>
<p><strong>三、还用不用？</strong></p>
<p>竟然大家都持谨慎态度，那么我们还用不用呢？用！但是或许得换个方式用。此话怎么讲？因为有一个既可以实现component功能，又不evil的东西出现了，那就是<a href="http://rubyforge.org/projects/cells/">Cells</a>，何谓Cells？还是看他的自白好了：</p>
<p><img src="http://cells.rubyforge.org/RailsCells_files/cells_logo.jpg" alt="" /></p>
<blockquote>
<p>A rails plugin to push things towards component-oriented architecture. Controller logic and views are encapsulated in lightweight cells and can be rendered like render_component.</p>
</blockquote>
<p>哦，看来是个好东西，还想多了解点，看看这些文章吧，&quot;<a href="http://kurt.karmalab.org/articles/2008/02/13/bringing-components-back-into-rails-with-cells">Cells: Bringing Components Back Into Rails 3</a>&quot;或者中文简要版本&rdquo;<a href="http://chinaonrails.com/topic/view/1318/1.html">插件Cells：把模块化带入Rails 应用中，组件导向轻量级的开发</a>&ldquo;，还可以看看道喜的简介&rdquo;<a href="http://www.lycom.de/past/2008/2/14/component-2008-02-14/#comments">Rails框架：组件理念是否重返Rails框架</a>&ldquo;，或者看看中文的一个简单那的例子&rdquo;<a href="http://usurffx-gmail-com.javaeye.com/blog/176186">有人用过cell么？</a>&ldquo;，如果想更深入的了解，可以看看&rdquo;<a href="https://groups.google.com/group/ruby-component-web-frameworks">Ruby Component Web Frameworks</a>&ldquo;</p>
<p><strong>四、还有更好的？</strong></p>
<p>我是不知道了，您要是知道的话，还请告诉我。</p>
<p><strong>参考资料：</strong></p>
<p>1、http://glu.ttono.us/articles/2006/08/30/guide-things-you-shouldnt-be-doing-in-rails</p>
<p>2、http://usurffx-gmail-com.javaeye.com/blog/176186</p>
<p>3、https://groups.google.com/group/ruby-component-web-frameworks</p>
<p>4、http://chinaonrails.com/topic/view/1318/1.html</p>
<p>5、http://www.lycom.de/past/2008/2/14/component-2008-02-14/#comments</p>
<p>6、http://railsexpress.de/blog/articles/2005/11/18/components-may-not-be-evil-but-they-sure-can-be-slow</p>
<p>7、http://weblog.rubyonrails.org/2005/11/11/why-engines-and-components-are-not-evil-but-distracting/</p>
<p>8、http://rubyforge.org/projects/cells/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于打算将我的第一个开源项目<a href="../../../?action=show&amp;id=257">1stlog重构和完善</a>，看了下以前的实现方式，除了用到了很对rails2不支持的方法和插件外（正在着手修改），还用到了Rails中的<strong>component</strong>的。而这正是被很多railser们告诫要小心的地方，甚至有人说component是<strong>evil</strong>的，新版1stlog发布在即，我得好好了解下component为什么evil。</p>
<p><strong>一、为什么当时选择component</strong></p>
<p><strong>二、为什么说component是邪恶的</strong></p>
<p><strong>三、还用不用？</strong></p>
<p><strong>四、还有更好的？</strong></p>
<p><strong>参考资料：</strong></p>]]></excerpt:encoded>
		<wp:post_id>258</wp:post_id>
		<wp:post_date>2008-04-21 15:36:43</wp:post_date>
		<wp:post_date_gmt>2008-04-21 15:36:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e4%b9%8bcomponent%e6%8e%a2%e6%9e%90%e5%bc%95%e5%87%bacells%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>TibetIsXiZang,Tell this to all over the world,Tibet就是西藏!</title>
		<link>http://www.iceskysl.com/?p=259</link>
		<pubDate>Tue, 22 Apr 2008 13:49:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[<p>首先，我并不是一个专业的<strong>SEOer</strong>，<span id="description">而只是个懂点安全对于互联网充满期待的程序员&hellip;并且在业务时间喜欢去Zac的&ldquo;<a href="http://www.chinamyhosting.com/seoblog/">SEO每天一贴</a>&rdquo;和<a href="http://www.dunsh.org/">点石互动</a>转转，喜欢观察观察网络风云的&ldquo;互联网重度使用者&rdquo;。</span></p>
<p><span id="description">我喜欢安静的写着代码，而不喜欢参与到关于政治方面的讨论和争辩，但我敢拍着胸脯说，我为我的祖国自豪。经历这一次浩浩荡荡的，仍然在继续的事情，我被很多人感动着。</span></p>
<p><span id="description">面对<strong>3.14</strong>发生下西藏的特殊事件，国外媒体的声音让我们首先是<strong>愤怒</strong>，接着是<strong>无奈</strong>，最后市打心底里<strong>看不起</strong>。就像一个朋友到CNN的时候，联系到前段时间CNN捏造了所谓中国政府资助一些&rdquo;黑客&ldquo;入侵了一些网站的&rsquo;黑客门事件&lsquo;等，朋友说了这么一句话，<em>&ldquo;原来国外的媒体素质是这么低，这么多年，真是高看他们了&rdquo;</em>，无奈，瞧不起，我打心底里是这样的。</span></p>
<p><span id="description">将<strong>西藏</strong>的事件和最近闹得沸沸扬扬的&ldquo;<strong>圣火传递事件</strong>&rdquo;，再加上<strong>CNN</strong>的那个素质低下的主持人和<strong>BBC</strong>的一些话语，巴黎的一些让人震惊的行为，一些政客们无耻的嘴脸，一些被人、媒体操纵了的民众<strong>无知</strong>的行为，言论；还有那披着<strong>宗教</strong>的外衣到处兴风作浪的可怜的小人，以及某些国家的领导人虚情假意的外交辞令，这都是丑陋的；</span></p>
<p><span id="description">相反，我被国外留学生，网络上的爱国人士，去游街宣传奥运的人，抵制家乐福，支持奥运，挂上&rdquo;<strong>红心china</strong>&ldquo;的上班族们，那些QQ群，社区，还有那些以比较极端的&rdquo;技术手段&ldquo;让其网站飘满五星红旗而最后被迫关闭的一小撮人，都是值得骄傲的。</span></p>
<p><span id="description">但是，这些是不够的，看到前些日子Zac说，最需要网络营销的是我们的国家，因为很多外国的民众是善良的，被其媒体愚弄的，zac说的一句话让我映像深刻：新加坡的一位朋友问&lsquo;北京有楼房么？&rsquo;。这不是少数，而是现况，世界真的不了解我们。</span></p>
<p><span id="description">该怎么办？在互联网的今天，网络的力量是巨大的，当你在Google输入'<strong>Tibet</strong>'的时候，当你输入<strong>&rsquo;xizang&lsquo;</strong>或者&rdquo;<strong>西藏</strong>&ldquo;的时候，你找到的都是什么网页，什么信息。你可以自己去试试看。</span></p>
<p><span id="description">做为国内知名的SEO聚集区的<a href="http://www.dunsh.org/">点石</a>，SEOer们用自己的方式，来感动我们，<a href="http://www.tibetisxizang.com/">&rdquo;</a></span><a href="http://www.tibetisxizang.com/">第二届中文搜索引擎优化大赛&ldquo;</a>的关键字由<strong>&rdquo;TibetIsXiZang&ldquo;</strong>改为&ldquo;<strong>tibet   xizang</strong>&rdquo;和&rsquo;<strong>西藏</strong>&lsquo;做为最终的比赛关键字，用意十分清晰。</p>
<p>我虽然不是SEOer，也不会刻意的去注册域名，做一个网站参与比赛，但我会使用现有的资源做些力所能及的事情，比如在Google开通了&rdquo;<a href="https://groups.google.com/group/tibetisxizang">TibetIsXiZang</a>&ldquo;的Group，还会有其他的动作。</p>
<p>让不久后，还世界一个真实的西藏，让世界所有的人知道，Tibet IS XiZang...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>首先，我并不是一个专业的<strong>SEOer</strong>，<span id="description">而只是个懂点安全对于互联网充满期待的程序员&hellip;并且在业务时间喜欢去Zac的&ldquo;<a href="http://www.chinamyhosting.com/seoblog/">SEO每天一贴</a>&rdquo;和<a href="http://www.dunsh.org/">点石互动</a>转转，喜欢观察观察网络风云的&ldquo;互联网重度使用者&rdquo;。</span></p>
<p><span id="description">我喜欢安静的写着代码，而不喜欢参与到关于政治方面的讨论和争辩，但我敢拍着胸脯说，我为我的祖国自豪。经历这一次浩浩荡荡的，仍然在继续的事情，我被很多人感动着。</span></p>
<p><span id="description">面对<strong>3.14</strong>发生下西藏的特殊事件，国外媒体的声音让我们首先是<strong>愤怒</strong>，接着是<strong>无奈</strong>，最后市打心底里<strong>看不起</strong>。就像一个朋友到CNN的时候，联系到前段时间CNN捏造了所谓中国政府资助一些&rdquo;黑客&ldquo;入侵了一些网站的&rsquo;黑客门事件&lsquo;等，朋友说了这么一句话，<em>&ldquo;原来国外的媒体素质是这么低，这么多年，真是高看他们了&rdquo;</em>，无奈，瞧不起，我打心底里是这样的。</span></p>
<p><span id="description">将<strong>西藏</strong>的事件和最近闹得沸沸扬扬的&ldquo;<strong>圣火传递事件</strong>&rdquo;，再加上<strong>CNN</strong>的那个素质低下的主持人和<strong>BBC</strong>的一些话语，巴黎的一些让人震惊的行为，一些政客们无耻的嘴脸，一些被人、媒体操纵了的民众<strong>无知</strong>的行为，言论；还有那披着<strong>宗教</strong>的外衣到处兴风作浪的可怜的小人，以及某些国家的领导人虚情假意的外交辞令，这都是丑陋的；</span></p>
<p><span id="description">相反，我被国外留学生，网络上的爱国人士，去游街宣传奥运的人，抵制家乐福，支持奥运，挂上&rdquo;<strong>红心china</strong>&ldquo;的上班族们，那些QQ群，社区，还有那些以比较极端的&rdquo;技术手段&ldquo;让其网站飘满五星红旗而最后被迫关闭的一小撮人，都是值得骄傲的。</span></p>
<p><span id="description">但是，这些是不够的，看到前些日子Zac说，最需要网络营销的是我们的国家，因为很多外国的民众是善良的，被其媒体愚弄的，zac说的一句话让我映像深刻：新加坡的一位朋友问&lsquo;北京有楼房么？&rsquo;。这不是少数，而是现况，世界真的不了解我们。</span></p>
<p><span id="description">该怎么办？在互联网的今天，网络的力量是巨大的，当你在Google输入'<strong>Tibet</strong>'的时候，当你输入<strong>&rsquo;xizang&lsquo;</strong>或者&rdquo;<strong>西藏</strong>&ldquo;的时候，你找到的都是什么网页，什么信息。你可以自己去试试看。</span></p>
<p><span id="description">做为国内知名的SEO聚集区的<a href="http://www.dunsh.org/">点石</a>，SEOer们用自己的方式，来感动我们，<a href="http://www.tibetisxizang.com/">&rdquo;</a></span><a href="http://www.tibetisxizang.com/">第二届中文搜索引擎优化大赛&ldquo;</a>的关键字由<strong>&rdquo;TibetIsXiZang&ldquo;</strong>改为&ldquo;<strong>tibet   xizang</strong>&rdquo;和&rsquo;<strong>西藏</strong>&lsquo;做为最终的比赛关键字，用意十分清晰。</p>
<p>我虽然不是SEOer，也不会刻意的去注册域名，做一个网站参与比赛，但我会使用现有的资源做些力所能及的事情，比如在Google开通了&rdquo;<a href="https://groups.google.com/group/tibetisxizang">TibetIsXiZang</a>&ldquo;的Group，还会有其他的动作。</p>
<p>让不久后，还世界一个真实的西藏，让世界所有的人知道，Tibet IS XiZang...</p>]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2008-04-22 13:49:37</wp:post_date>
		<wp:post_date_gmt>2008-04-22 13:49:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tibetisxizangtell-this-to-all-over-the-worldtibet%e5%b0%b1%e6%98%af%e8%a5%bf%e8%97%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Amazon SQS,分布式作业不再费心</title>
		<link>http://www.iceskysl.com/?p=260</link>
		<pubDate>Wed, 23 Apr 2008 10:03:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[<p>开始写这个之前，我不得不佩服下Amazon，不用说别的，就其SimpleDB，S3,EC2这几个就足以让业界大为惊叹，这些都比较熟悉了，今天说的是另外一个类似的东西，<a href="http://www.amazon.com/Simple-Queue-Service-home-page/b/ref=sc_fe_l_2/102-6256901-8077705?ie=UTF8&amp;node=13584001&amp;no=3435361&amp;me=A36L942TSJ2AJA">Amazon Simple Queue Service</a>（SQS）。</p>
<p>看名字，大概就可以猜出大概的意思了，对，就是队列服务，<strong>SQS</strong>就是一个简单的<strong>队列服务</strong>，你可以创建一个队列，然后从不同的地方往里面<strong>放</strong>东西，然后又可以在不同的地方不停的往外<strong>取</strong>东西，想想看，这不就是分布式协作么。</p>
<p>但是需要注意的是，往里面放的时候，消息必须是txet，也就是是说不能放Hash或者数组啥的，如果您有类似需求，请接着往后看，我将提供一个变通的方法。</p>
<p>一、简介SQS</p>
<p>Amazon Simple Queue Service (Amazon SQS) offers a reliable, highly scalable, hosted queue for storing messages as they travel between computers. By using Amazon SQS, developers can simply move data between distributed components of their applications that perform different tasks, without losing messages or requiring each component to be always available.</p>
<p>二、如何使用</p>
<p>Ruby的社区足够活跃，每个应用都能找到对应的Gem或者插件，这给了我们足够的方便，针对SQS，我推荐的两个gem，分别是：</p>
<p><strong>1、SQS Gem<br />
</strong></p>
<p>这个插件是Amazon SQS官方站点写的教程《<a href="http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1182">Using Amazon S3, EC2, SQS, Lucene, and Ruby for Web Spidering</a>》上使用的，足够的简单，但是其<a href="http://rubyforge.org/projects/sqs/">主页</a>貌似访问不了了，只能通过<a href="http://203.208.35.101/search?q=cache:4BF5qfnmG-oJ:sqs.rubyforge.org/+sqs+ruby&amp;hl=zh-CN&amp;ct=clnk&amp;cd=1&amp;gl=cn&amp;st_usg=ALhdy28JOtHb5qDHNlfaKBIxo1tvsqKpDA">Google Cach</a>看看。</p>
<p>使用非常方便，流程如下</p>
<p>1）安装：gem install SQS</p>
<p>2）测试：ruby test/all_tests.rb</p>
<p>3）使用示例
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'sqs'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>SQS.access_key_id&nbsp;=&nbsp;<span class="string">'YOURACCESSKEYID'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQS.secret_access_key&nbsp;=&nbsp;<span class="string">'YOURSECRETACCESSKEY'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>q&nbsp;=&nbsp;SQS.create_queue&nbsp;<span class="string">'myFantasticQ'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>puts&nbsp;q.url&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>SQS.each_queue&nbsp;<span class="keyword">do</span><span>&nbsp;|q|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;puts&nbsp;q.name&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>q&nbsp;=&nbsp;SQS.get_queue&nbsp;<span class="string">'myFantasticQ'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>q.send_message&nbsp;<span class="string">'This&nbsp;is&nbsp;a&nbsp;message!'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>m&nbsp;=&nbsp;q.receive_message&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts&nbsp;m.body&nbsp;&nbsp;</span></li>
    <li class=""><span>m.delete&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>q.each_message&nbsp;<span class="keyword">do</span><span>&nbsp;|m|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;note&nbsp;that&nbsp;#each_message&nbsp;is&nbsp;an&nbsp;infinite&nbsp;loop!</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="comment">#&nbsp;you&nbsp;must&nbsp;either&nbsp;break&nbsp;out&nbsp;of&nbsp;it,&nbsp;or&nbsp;delete&nbsp;each&nbsp;message&nbsp;you&nbsp;receive</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;m.delete&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>q.approximate_number_of_messages&nbsp;&nbsp;</span></li>
    <li class="alt"><span>q.visibility_timeout&nbsp;&nbsp;</span></li>
    <li class=""><span>q.visibiltit_timeout&nbsp;=&nbsp;3&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>q.delete&nbsp;&nbsp;</span></li>
</ol>
</div>
其他文章，可以自己Google。</p>
<p><strong>2、RightScale gems</strong></p>
<p><a href="http://rightaws.rubyforge.org/">RightScale gems</a>是<a href="http://www.rightscale.com/">RightScale</a> 从其产品里面提取出来的，这个现象很常见，就像Shopify 中提取的<a href="http://iceskysl.1sters.com/?action=show&amp;id=226">Active Merchant</a>一样，从一个成熟的产品中提取出来一个gem，其可用性是相当高的。</p>
<p>使用方法大同小异，不再赘述，如果感兴趣，请到上面的地址上自行查看。</p>
<p><strong>三、如何扩展</strong></p>
<p>前面我们说了，SQS中容纳的消息是text的，但是看其文档表述，是这样写的：</p>
<blockquote>
<p>New messages can be added to a queue at any time. The message body can contain up to 8 KB of text in any format.</p>
</blockquote>
<p>any time？啥意思？奇怪。</p>
<p>我认为一种可行的办法是，把Hash转成ymal格式的（<strong>.to_yaml</strong>），然后放进去后；取出的时候，直接<strong>YAML.load(message.body)</strong>，然后再还原即可了。</p>
<p>看段代码，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'SQS'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">class</span><span>&nbsp;Tsqs&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>SQS.conf_file&nbsp;=&nbsp;<span class="string">'sqs_conf.yml'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>s&nbsp;=&nbsp;SQS.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>puts&nbsp;s.api_version&nbsp;&nbsp;</span></li>
    <li class=""><span>puts&nbsp;s.conf_file&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts&nbsp;s.url_for_query&nbsp;&nbsp;</span></li>
    <li class=""><span>iceskysl&nbsp;=&nbsp;s.get_queue(<span class="string">'iceskysl_message'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>books_to_update&nbsp;=&nbsp;{&nbsp;<span class="string">'bookid'</span><span>=&gt;</span><span class="string">&quot;1&quot;</span><span>,</span><span class="string">'url'</span><span>=&gt;</span><span class="string">&quot;url1&quot;</span><span>,</span><span class="string">'queue'</span><span>=&gt;</span><span class="string">&quot;queue1&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>iceskysl.send_message(books_to_update.to_yaml)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>iceskysl_messages&nbsp;=&nbsp;iceskysl.receive_messages&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts&nbsp;iceskysl_messages.size&nbsp;&nbsp;</span></li>
    <li class=""><span>iceskysl_messages.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|message|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;params&nbsp;=&nbsp;YAML.load(message.body)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;puts&nbsp;<span class="string">&quot;bookid=&quot;</span><span>&nbsp;+&nbsp;params[</span><span class="symbol">:bookid</span><span>]&nbsp;+&nbsp;</span><span class="string">&quot;,url=&quot;</span><span>&nbsp;+&nbsp;params[</span><span class="symbol">:url</span><span>]&nbsp;+&nbsp;&nbsp;</span><span class="string">&quot;,queue=&quot;</span><span>&nbsp;+&nbsp;params[</span><span class="symbol">:queue</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;message.delete&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
看明白了么，没问题吧，呵呵。另外，这里还有<a href="http://blog.teksol.info/2008/1/18/using-sqs-and-s3-to-decouple-image-resizing-from-uploading">一篇文章</a>使用的是RightScale gems。</p>
<p>OK，差不多介绍完了，有疑问或者有其他好的gem请告诉我，谢谢。</p>
<p><strong>参考文档：</strong></p>
<ol>
    <li>SQS API：http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1148&amp;categoryID=102</li>
    <li>SQS主页：http://www.amazon.com/Simple-Queue-Service-home-page/b/ref=sc_fe_l_2/102-6256901-8077705?ie=UTF8&amp;node=13584001&amp;no=3435361&amp;me=A36L942TSJ2AJA</li>
</ol>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>开始写这个之前，我不得不佩服下Amazon，不用说别的，就其SimpleDB，S3,EC2这几个就足以让业界大为惊叹，这些都比较熟悉了，今天说的是另外一个类似的东西，<a href="http://www.amazon.com/Simple-Queue-Service-home-page/b/ref=sc_fe_l_2/102-6256901-8077705?ie=UTF8&amp;node=13584001&amp;no=3435361&amp;me=A36L942TSJ2AJA">Amazon Simple Queue Service</a>（SQS）。</p>
<p>看名字，大概就可以猜出大概的意思了，对，就是队列服务，<strong>SQS</strong>就是一个简单的<strong>队列服务</strong>，你可以创建一个队列，然后从不同的地方往里面<strong>放</strong>东西，然后又可以在不同的地方不停的往外<strong>取</strong>东西，想想看，这不就是分布式协作么。</p>
<p>但是需要注意的是，往里面放的时候，消息必须是txet，也就是是说不能放Hash或者数组啥的，如果您有类似需求，请接着往后看，我将提供一个变通的方法。</p>
<p><strong>一、简介SQS</strong></p>
<p><strong>二、如何使用</strong></p>
<p>1、SQS Gem</p>
<p>2、RightScale gems</p>
<p><strong>三、如何扩展</strong></p>
<p>参考文档：</p>]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2008-04-23 10:03:45</wp:post_date>
		<wp:post_date_gmt>2008-04-23 10:03:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amazon-sqs%e5%88%86%e5%b8%83%e5%bc%8f%e4%bd%9c%e4%b8%9a%e4%b8%8d%e5%86%8d%e8%b4%b9%e5%bf%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>138</wp:comment_id>
			<wp:comment_author><![CDATA[plk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>61.139.78.70</wp:comment_author_IP>
			<wp:comment_date>2008-04-23 12:34:07</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[New messages can be added to a queue at any time. The message body can contain up to 8 KB of text in any format.


限制放入的大小最大为8KB？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>139</wp:comment_id>
			<wp:comment_author><![CDATA[plk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>124.161.181.66</wp:comment_author_IP>
			<wp:comment_date>2008-04-23 12:45:05</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用你的测试代码测一下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>60.177.169.94</wp:comment_author_IP>
			<wp:comment_date>2008-04-25 15:33:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[any format是指你爱放YAML或其他什么的都随你，只要不超过8K限制，并且你自己负责对格式的解析。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>141</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.30.131.234</wp:comment_author_IP>
			<wp:comment_date>2008-05-21 21:07:54</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[发现一个问题,就如上面说的:放入的大小最大为8KB,如果超过这个长度,就会有如下错误.
<?xml version="1.0"?>
<ErrorResponse xmlns="http://queue.amazonaws.com/doc/2008-01-01/"><Error><Type>Sender</Type><Code>InvalidParameterValue</Code><Message>Value for parameter MessageBody is invalid. Reason: Message body must be shorter than 8192 characters.</Message><Detail/></Error><RequestID>5675ecc4-b7fd-4d7b-993e-3b7d06cf0fac</RequestID></ErrorResponse> #]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>终于等到Google Docs Offline了</title>
		<link>http://www.iceskysl.com/?p=261</link>
		<pubDate>Wed, 23 Apr 2008 14:40:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=261</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早就在Gseek看到<strong>GoogleDocs</strong>可以离线的消息，但是我的帐户里面一直还没有发现，好歹我也算Dcos的重度使用者，咋一直没看到这个功能呢？</p>
<p>今天猛然发现，OK了，我等到了，呵呵。</p>
<p><strong>Overview: What is Google Docs Offline?</strong><br />
&nbsp;<br />
Google Docs now allows you to view and edit your documents offline, without an internet connection. To do all of this, Google Docs uses Google Gears, an open source browser extension that adds offline functionality directly to the browser. Google Docs can be accessed offline by typing http://docs.google.com into your browser or by clicking on the desktop shortcut that is downloaded during the installation process.</p>
<p>挺好的，可以彻底不用Word和OpenOffice咯。三者比较下，我还是喜欢GoogleDocs的这个简洁和方便，不过不得不说几句，上次的改变，把那结果H1 H2 H3几个放到下拉菜单，不是好的用户体验，每次都多点一下，囧～</p>
<p>有了离线后，以后带着本本就不怕没网络咯，Good～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>fccc36ff,早就在Gseek看到<strong>GoogleDocs</strong>可以离线的消息，但是我的帐户里面一直还没有发现，好歹我也算Dcos的重度使用者，咋一直没看到这个功能呢？</p>
<p>今天猛然发现，OK了，我等到了，呵呵。</p>
<p><strong>Overview: What is Google Docs Offline?</strong><br />
&nbsp;<br />
Google Docs now allows you to view and edit your documents offline, without an internet connection. To do all of this, Google Docs uses Google Gears, an open source browser extension that adds offline functionality directly to the browser. Google Docs can be accessed offline by typing http://docs.google.com into your browser or by clicking on the desktop shortcut that is downloaded during the installation process.</p>
<p>挺好的，可以彻底不用Word和OpenOffice咯。三者比较下，我还是喜欢GoogleDocs的这个简洁和方便，不过不得不说几句，上次的改变，把那结果H1 H2 H3几个放到下拉菜单，不是好的用户体验，每次都多点一下，囧～</p>
<p>有了离线后，以后带着本本就不怕没网络咯，Good～</p>]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2008-04-23 14:40:18</wp:post_date>
		<wp:post_date_gmt>2008-04-23 14:40:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bb%88%e4%ba%8e%e7%ad%89%e5%88%b0google-docs-offline%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>142</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.208</wp:comment_author_IP>
			<wp:comment_date>2008-04-26 10:46:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[才知道，我的也有啦，噢噢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Lower Data Transfer Costs,AWS降价,欢喜吧.</title>
		<link>http://www.iceskysl.com/?p=262</link>
		<pubDate>Wed, 23 Apr 2008 23:30:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[<p>晚上收到Amazon的AWS的邮件,说降价了,哈,真是好消息,前台在写&lt;<a href="http://iceskysl.1sters.com/?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a>&gt;的时候,还说到&quot;<em><strong>同时，不可否认，会给亚马逊的S3,EC2,SQS等带来一些竞争，当然，这会使得这个领域更加合理和更多的选择。</strong></em>&quot;,不想到,这么快,Amazon就有动作了,真是好消息,直接看原文吧,总觉得用中文把E文再重复一遍挺浪费的,也比较别扭,总感觉有些外文不好使用中文表述出来,呵呵.</p>
<p><font size="2" face="verdana">=====================start===================<br />
</font></p>
<p><font size="2" face="verdana">Dear Amazon Web Services developers,
<p>We've often told you that one of our goals is to drive down costs continuously and to pass those savings on to you. We have been able to reduce our costs for data transfer, so we're pleased to announce that we're lowering our pricing for data transfer, effective May 1, 2008. You'll notice below that we've reduced price at every existing usage tier of transfer out, as well as added an additional tier for the heaviest users.</p>
<p><strong>Current data transfer price (through April 30, 2008)</strong><br />
$0.100 per GB - data transfer in<br />
$0.180 per GB - first 10 TB / month data transfer out<br />
$0.160 per GB - next 40 TB / month data transfer out<br />
$0.130 per GB - data transfer out / month over 50 TB</p>
<p>Data transfer &quot;in&quot; and &quot;out&quot; refers to transfer into and out of the Amazon service. Data transferred between Amazon EC2 and Amazon S3-US, Amazon SimpleDB and Amazon SQS is free of charge (i.e., $0.00 per GB). Data transferred between Amazon EC2 and Amazon S3-Europe will be charged at regular rates.</p>
<p><strong>New data transfer price (effective May 1, 2008)</strong><br />
$0.100 per GB - data transfer in<br />
$0.170 per GB - first 10 TB / month data transfer out<br />
$0.130 per GB - next 40 TB / month data transfer out<br />
$0.110 per GB - next 100 TB / month data transfer out<br />
$0.100 per GB - data transfer out / month over 150 TB</p>
<p>Data transfer &quot;in&quot; and &quot;out&quot; refers to transfer into and out of the Amazon service. Data transferred between Amazon EC2 and Amazon S3-US, Amazon SimpleDB and Amazon SQS is free of charge (i.e., $0.00 per GB). Data transferred between Amazon EC2 and Amazon S3-Europe will be charged at regular rates.</p>
<p>The result of this pricing change is that all customers will see a reduction in the price of transfer out. For example, a customer transferring 50TB a month will save 16% and a customer transferring 500TB a month will save 26% on transfer with the new pricing. Please see <a target="_blank" href="http://www.amazon.com/gp/r.html?R=VJJ7UKH1T0MK&amp;C=2EY6D8X22VKHD&amp;H=vYT8cpDrSAfwEEXC4UGHM3dWLh0A&amp;T=C&amp;U=http%3A%2F%2Faws.amazon.com">http://aws.amazon.com</a> for full pricing information for each service.</p>
<p>Sincerely,<br />
The Amazon Web Services Team</p>
<p>================end-==================</p>
<p>当然了,你也可以到Amazon官方网站上看到这个消息,<a href="http://developer.amazonwebservices.com/connect/ann.jspa?annID=313">&quot;Announcement: Lower Data Transfer Costs&quot;</a></p>
<p>AWS越来越成熟,在继支持静态IP和固定存储后,这又是一个大的变化,如果啥时能使得国内的访问速度提上去的话,对国内的WEB人员将是最大的幸福了.继续期待...</p>
<p>&nbsp;</p>
</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>晚上收到Amazon的AWS的邮件,说降价了,哈,真是好消息,前台在写&lt;<a href="../../../?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a>&gt;的时候,还说到&quot;<em><strong>同时，不可否认，会给亚马逊的S3,EC2,SQS等带来一些竞争，当然，这会使得这个领域更加合理和更多的选择。</strong></em>&quot;,不想到,这么快,Amazon就有动作了,真是好消息,直接看原文吧,总觉得用中文把E文再重复一遍挺浪费的,也比较别扭,总感觉有些外文不好使用中文表述出来,呵呵.</p>
<p><font size="2" face="verdana">
<p>当然了,你也可以到Amazon官方网站上看到这个消息,<a href="http://developer.amazonwebservices.com/connect/ann.jspa?annID=313">&quot;Announcement: Lower Data Transfer Costs&quot;</a></p>
<p>AWS越来越成熟,在继支持静态IP和固定存储后,这又是一个大的变化,如果啥时能使得国内的访问速度提上去的话,对国内的WEB人员将是最大的幸福了.继续期待...</p>
</font></p>]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2008-04-23 23:30:30</wp:post_date>
		<wp:post_date_gmt>2008-04-23 23:30:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lower-data-transfer-costsaws%e9%99%8d%e4%bb%b7%e6%ac%a2%e5%96%9c%e5%90%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>143</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>60.176.111.199</wp:comment_author_IP>
			<wp:comment_date>2008-04-24 08:34:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[诚如你所说，S3和其他AWS的唯一问题是国内的访问速度。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Ruby中使用RMagick动态生成图片</title>
		<link>http://www.iceskysl.com/?p=263</link>
		<pubDate>Thu, 24 Apr 2008 16:20:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=263</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前就有类似的需求了，但是当时恐惧<strong>RMagick</strong>的庞大身躯，加上其对中文的支持布什很完善，就没怎么去在意他，最近一个项目中需要生成一些动态的图片，本来使用了Google的那个chart功能，后来觉得有点牵强附会，于是乎，静下心来，仔细看看RMagick咋生成图片。</p>
<p>我的需求很简单，就是动态生成一个指定大小的图片，然后再图片上写几个汉字或者数字，英文等，所以大概的步骤就是这样的，直接看代码吧：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">class</span><span>&nbsp;DrawPrice&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.draw(name,nickname,email,blog=</span><span class="string">'http://iceskysl.1sters.com/'</span><span>,columns=240,rows=80,bg_color=</span><span class="string">'white'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img&nbsp;=&nbsp;Magick::Image.<span class="keyword">new</span><span>(columns,rows,Magick::HatchFill.</span><span class="keyword">new</span><span>(bg_color,</span><span class="string">'lightcyan2'</span><span>))&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc&nbsp;=&nbsp;Magick::Draw.<span class="keyword">new</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.stroke(<span class="string">'transparent'</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(16)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.font(<span class="string">&quot;fonts/simhei.ttf&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,30,&nbsp;<span class="string">&quot;姓名:#{nickname}&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,50,&nbsp;<span class="string">&quot;Email:#{email}.&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(13)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,70,&nbsp;blog)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.draw(img)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.write(<span class="string">&quot;files/#{name}.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;DrawPrice.draw(<span class="string">&quot;Ysl&quot;</span><span>,</span><span class="string">&quot;IceskYsl&quot;</span><span>,</span><span class="string">&quot;iceskysl@gmail.com&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
再看个效果图：</p>
<p>虽然很多函数，但是我们用到的就那么几个，Good～不是吗？</p>
<p>参考文档：</p>
<p>http://www.javaeye.com/post/262865</p>
<p>http://www.javaeye.com/topic/174048</p>
<p>http://www.javaeye.com/post/380907</p>
<p>http://www.simplesystems.org/RMagick/doc/image1.html#new</p>
<p>http://rmagick.rubyforge.org/portfolio3.html</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前就有类似的需求了，但是当时恐惧<strong>RMagick</strong>的庞大身躯，加上其对中文的支持布什很完善，就没怎么去在意他，最近一个项目中需要生成一些动态的图片，本来使用了Google的那个chart功能，后来觉得有点牵强附会，于是乎，静下心来，仔细看看RMagick咋生成图片。</p>
<p>我的需求很简单，就是动态生成一个指定大小的图片，然后再图片上写几个汉字或者数字，英文等，所以大概的步骤就是这样的，直接看代码吧：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">class</span><span>&nbsp;DrawPrice&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.draw(name,nickname,email,blog=</span><span class="string">'http://iceskysl.1sters.com/'</span><span>,columns=240,rows=80,bg_color=</span><span class="string">'white'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img&nbsp;=&nbsp;Magick::Image.<span class="keyword">new</span><span>(columns,rows,Magick::HatchFill.</span><span class="keyword">new</span><span>(bg_color,</span><span class="string">'lightcyan2'</span><span>))&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc&nbsp;=&nbsp;Magick::Draw.<span class="keyword">new</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.stroke(<span class="string">'transparent'</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(16)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.font(<span class="string">&quot;fonts/simhei.ttf&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,30,&nbsp;<span class="string">&quot;姓名:#{nickname}&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,50,&nbsp;<span class="string">&quot;Email:#{email}.&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(13)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,70,&nbsp;blog)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gc.draw(img)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.write(<span class="string">&quot;files/#{name}.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;DrawPrice.draw(<span class="string">&quot;Ysl&quot;</span><span>,</span><span class="string">&quot;IceskYsl&quot;</span><span>,</span><span class="string">&quot;iceskysl@gmail.com&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>再看个效果图：</p>
<p>虽然很多函数，但是我们用到的就那么几个，Good～不是吗？</p>]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2008-04-24 16:20:28</wp:post_date>
		<wp:post_date_gmt>2008-04-24 16:20:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ruby%e4%b8%ad%e4%bd%bf%e7%94%a8rmagick%e5%8a%a8%e6%80%81%e7%94%9f%e6%88%90%e5%9b%be%e7%89%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[plk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>61.139.78.70</wp:comment_author_IP>
			<wp:comment_date>2008-04-24 17:32:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[学到了，嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ubuntu 8.04 LTS (Hardy Heron)和Netbeans6.1发布啦～</title>
		<link>http://www.iceskysl.com/?p=264</link>
		<pubDate>Fri, 25 Apr 2008 04:38:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近好热闹，不说 <a href="http://iceskysl.1sters.com/?action=show&amp;id=253">Google App Engine </a>和<a href="http://iceskysl.1sters.com/?action=show&amp;id=262">Amazon降价</a>，又有两个和我相关的重磅消息，那就是<a href="http://iceskysl.1sters.com/?action=show&amp;id=264"> Ubuntu 8.04 LTS (Hardy Heron) </a>按时发布了，另外就是<a href="http://www.netbeans.org/community/releases/61/">NetBeans IDE 6.1</a>发布了。</p>
<p>我个人使用NetBeans IDE在Ubuntu下好长一段时间了，这两个新闻自然和我息息相关咯，找个时间，把7.10升级到8.04去，啥时在Down个NetBeans IDE 6.1下来。</p>
<p>哦，对了，刚看到一个消息，貌似<a href="http://www.linux-ren.org/modules/news/article.php?storyid=347">MySQL 5.1.24 rc版本中已取消集群功能，</a>意味着什么，意味着MYSQL也会被肢解，一部分拿去赚钱了，这是个坏消息。</p>
<p>wowo～真热闹～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近好热闹，不说 <a href="../../../?action=show&amp;id=253">Google App Engine </a>和<a href="../../../?action=show&amp;id=262">Amazon降价</a>，又有两个和我相关的重磅消息，那就是<a href="../../../?action=show&amp;id=264"> Ubuntu 8.04 LTS (Hardy Heron) </a>按时发布了，另外就是<a href="http://www.netbeans.org/community/releases/61/">NetBeans IDE 6.1</a>发布了。</p>
<p>我个人使用NetBeans IDE在Ubuntu下好长一段时间了，这两个新闻自然和我息息相关咯，找个时间，把7.10升级到8.04去，啥时在Down个NetBeans IDE 6.1下来。</p>
<p>哦，对了，刚看到一个消息，貌似<a href="http://www.linux-ren.org/modules/news/article.php?storyid=347">MySQL 5.1.24 rc版本中已取消集群功能，</a>意味着什么，意味着MYSQL也会被肢解，一部分拿去赚钱了，这是个坏消息。</p>
<p>wowo～真热闹～</p>]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2008-04-25 04:38:11</wp:post_date>
		<wp:post_date_gmt>2008-04-25 04:38:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu-8-04-lts-hardy-heron%e5%92%8cnetbeans6-1%e5%8f%91%e5%b8%83%e5%95%a6%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>145</wp:comment_id>
			<wp:comment_author><![CDATA[ngshaozhu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.62.192.86</wp:comment_author_IP>
			<wp:comment_date>2008-04-25 16:07:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[由于之前的7.10出了点问题，而且直接升级又比较慢！自己就下载来刻盘安装了！现在正在体验中～嘿！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>146</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.212.78</wp:comment_author_IP>
			<wp:comment_date>2008-04-25 19:34:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[晕晕哦，升级后启动不了X了。。。
Fatal server error:
no screens found]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>147</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.212.78</wp:comment_author_IP>
			<wp:comment_date>2008-04-25 22:36:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[wowo,成功解决了,现在OK了.
另外,美化了下小企鹅输入法的界面,现在漂亮多了....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>148</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.208</wp:comment_author_IP>
			<wp:comment_date>2008-04-26 10:47:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[seo 好  多搞链接到外部，记住了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.3</wp:comment_author_IP>
			<wp:comment_date>2008-04-27 02:47:27</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似关系不大,再拿不到对方给我的链接的时候,主动链过去,蜘蛛会认为两个网页有相关度的.:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>成功升级到Ubuntu8.08和Netbeans6.1</title>
		<link>http://www.iceskysl.com/?p=265</link>
		<pubDate>Fri, 25 Apr 2008 23:04:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[<p>正如前面的这篇文章说的,Ubuntu8.04和NB6.1都发布了,我自然得抓紧升级了,正好今天调班在家休息,一觉睡到12点多,起来开始升级,先把重要的资料备份到另外一台电脑上,然后按照google出来的资料升级,我是用命令行升级的.</p>
<p>1.修改源地址</p>
<p>我以前的源很乱,正好这次一并清理下,把以前的 710的时候的源备份下,然后测了下google出来的那些源,选了个台湾的最快,(后来升级的时候发现这个源上有几个包当时下载不了,后来又加了一组上海电信的源)</p>
<p>sudo gedit /etc/apt/sources.list</p>
<p>
<div class="codeText">
<div class="codeHead">这是我使用的源</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>deb&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></span></li>
    <li class=""><span>deb-src&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-updates&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb-src&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-updates&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-backports&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb-src&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-backports&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-security&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb-src&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-security&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-proposed&nbsp;main&nbsp;multiverse&nbsp;restricted&nbsp;universe&nbsp;&nbsp;</span></li>
    <li class=""><span>deb-src&nbsp;http://ubuntu.csie.ntu.edu.tw/ubuntu/&nbsp;hardy-proposed&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>deb&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb-src&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-updates&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb-src&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-updates&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-backports&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb-src&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-backports&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-security&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb-src&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-security&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
    <li class=""><span>deb&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-proposed&nbsp;main&nbsp;multiverse&nbsp;restricted&nbsp;universe&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb-src&nbsp;http://mirror.vmmatrix.net/ubuntu/&nbsp;hardy-proposed&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>deb&nbsp;http://archive.ubuntu.org.cn/ubuntu-cn/&nbsp;hardy&nbsp;main&nbsp;restricted&nbsp;universe&nbsp;multiverse&nbsp;&nbsp;</span></li>
</ol>
</div>
其他的请参考:http://hi.baidu.com/jmlover/blog/item/3b2e3bf3cd0e0b54352accd9.html</p>
<p>2.执行升级命令</p>
<p>sudo apt-get update</p>
<p>sudo apt-get&nbsp; upgrade</p>
<p>3.修复相关问题</p>
<p>由于我是使用Xfce的,所以最开始升级的时候忘记升级相应的xfce了,导致后来启动的时候,没有UI界面,并遇到了scree not found的问题;然后修复了小企鹅输入法的方块问题,并做了些美化.</p>
<p>这些问题google都是可以找到答案的,我也没具体记是咋整的,呵呵,反正是可以解决的.</p>
<p>4.安装了NB6.1版本</p>
<p>差不多搞了一下午,,中途睡了一觉,遇到一些问题都解决了,呵呵,但没感觉到8.04的有啥不一样的地方,哈哈..</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>正如前面的这篇文章说的,Ubuntu8.04和NB6.1都发布了,我自然得抓紧升级了,正好今天调班在家休息,一觉睡到12点多,起来开始升级,先把重要的资料备份到另外一台电脑上,然后按照google出来的资料升级,我是用命令行升级的.</p>
<p>1.修改源地址</p>
<p>2.执行升级命令</p>
<p>sudo apt-get update</p>
<p>sudo apt-get&nbsp; upgrade</p>
<p>3.修复相关问题</p>
<p>4.安装了NB6.1版本</p>]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2008-04-25 23:04:23</wp:post_date>
		<wp:post_date_gmt>2008-04-25 23:04:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%90%e5%8a%9f%e5%8d%87%e7%ba%a7%e5%88%b0ubuntu8-08%e5%92%8cnetbeans6-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>150</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.48.208</wp:comment_author_IP>
			<wp:comment_date>2008-04-26 11:12:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也用filezilla 哈哈 ，桌面真简洁]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>151</wp:comment_id>
			<wp:comment_author><![CDATA[Sparkle]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weavesky.com</wp:comment_author_url>
			<wp:comment_author_IP>218.19.67.216</wp:comment_author_IP>
			<wp:comment_date>2008-04-26 18:38:10</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你贴的netbeans截图明明写着RC2嘛

6.1延期发布,现在还没出的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>152</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.3</wp:comment_author_IP>
			<wp:comment_date>2008-04-27 02:44:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是哦,还真没注意,看他主业上写了6.1,我就刷刷的下了,呵呵]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ubuntu Hardy(8.04)源列表大全不断更新中)</title>
		<link>http://www.iceskysl.com/?p=266</link>
		<pubDate>Sat, 26 Apr 2008 08:55:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=266</guid>
		<description></description>
		<content:encoded><![CDATA[<p>升级的时候老是寻找最可靠的源,下面收集一些来自互联网的UBuntu8.04的源,供大家使用,会不断的更新和测试,谢谢.</p>
<p>如下列举了部分电信,网通和双线的源,每个人具体的所在位置有些不同,所以速度相对来说是不一样,甚至差别很大的,所以各位在选的时候,先ping下看看那组最快,谢谢.</p>
<p>Ubuntu.cn99.com更新服务器（江苏省常州市电信，推荐电信用户使用）：<br />
<br />
deb http://ubuntu.cn99.com/ubuntu/ hardy main restricted universe multiverse<br />
deb http://ubuntu.cn99.com/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://ubuntu.cn99.com/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://ubuntu.cn99.com/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb http://ubuntu.cn99.com/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://ubuntu.cn99.com/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://ubuntu.cn99.com/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://ubuntu.cn99.com/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://ubuntu.cn99.com/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb-src http://ubuntu.cn99.com/ubuntu/ hardy-backports main restricted universe multiverse<br />
<br />
<br />
Archive.ubuntu.com更新服务器（欧洲，此为官方源，电信网通用户使用)：<br />
<br />
deb http://archive.ubuntu.com/ubuntu/ hardy main restricted universe multiverse<br />
deb http://archive.ubuntu.com/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://archive.ubuntu.com/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://archive.ubuntu.com/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb http://archive.ubuntu.com/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://archive.ubuntu.com/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://archive.ubuntu.com/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://archive.ubuntu.com/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://archive.ubuntu.com/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb-src http://archive.ubuntu.com/ubuntu/ hardy-backports main restricted universe multiverse<br />
<br />
Mirrors.shlug.org更新服务器（电信服务器，Ubuntu China Official Mirror, maintained by Shanghai Linux User Group）：<br />
<br />
deb http://cn.archive.ubuntu.com/ubuntu hardy main restricted universe multiverse<br />
deb http://cn.archive.ubuntu.com/ubuntu hardy-security main restricted universe multiverse<br />
deb http://cn.archive.ubuntu.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb http://cn.archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb http://cn.archive.ubuntu.com/ubuntu hardy-proposed main restricted universe multiverse<br />
deb-src http://cn.archive.ubuntu.com/ubuntu hardy main restricted universe multiverse<br />
deb-src http://cn.archive.ubuntu.com/ubuntu hardy-security main restricted universe multiverse<br />
deb-src http://cn.archive.ubuntu.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb-src http://cn.archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb-src http://cn.archive.ubuntu.com/ubuntu hardy-proposed main restricted universe multiverse<br />
<br />
<br />
Mirror.lupaworld.com更新服务器（浙江省杭州市双线服务器）：<br />
<br />
deb http://mirror.lupaworld.com/ubuntu hardy main restricted universe multiverse<br />
deb http://mirror.lupaworld.com/ubuntu hardy-security main restricted universe multiverse<br />
deb http://mirror.lupaworld.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb http://mirror.lupaworld.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb http://mirror.lupaworld.com/ubuntu hardy-proposed main restricted universe multiverse<br />
deb-src http://mirror.lupaworld.com/ubuntu hardy main restricted universe multiverse<br />
deb-src http://mirror.lupaworld.com/ubuntu hardy-security main restricted universe multiverse<br />
deb-src http://mirror.lupaworld.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb-src http://mirror.lupaworld.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb-src http://mirror.lupaworld.com/ubuntu hardy-proposed main restricted universe multiverse<br />
<br />
厦门大学更新服务器（教育网服务器）：<br />
<br />
deb ftp://ubuntu.realss.cn/ubuntu/ hardy main restricted universe multiverse<br />
deb ftp://ubuntu.realss.cn/ubuntu/ hardy-backports restricted universe multiverse<br />
deb ftp://ubuntu.realss.cn/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb ftp://ubuntu.realss.cn/ubuntu/ hardy-security main restricted universe multiverse<br />
deb ftp://ubuntu.realss.cn/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src ftp://ubuntu.realss.cn/ubuntu/ hardy main restricted universe multiverse<br />
deb-src ftp://ubuntu.realss.cn/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src ftp://ubuntu.realss.cn/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb-src ftp://ubuntu.realss.cn/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src ftp://ubuntu.realss.cn/ubuntu/ hardy-updates main restricted universe multiverse<br />
<br />
成都市 电子科技大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
deb http://ubuntu.uestc.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb http://ubuntu.uestc.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb http://ubuntu.uestc.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb http://ubuntu.uestc.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb http://ubuntu.uestc.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src http://ubuntu.uestc.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb-src http://ubuntu.uestc.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src http://ubuntu.uestc.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://ubuntu.uestc.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src http://ubuntu.uestc.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe<br />
<br />
== 如果无法解析uestc.edu.cn域名，请使用以下地址 ==<br />
<br />
deb http://ubuntu.dormforce.net/ubuntu/ hardy main multiverse restricted universe<br />
deb http://ubuntu.dormforce.net/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb http://ubuntu.dormforce.net/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb http://ubuntu.dormforce.net/ubuntu/ hardy-security main multiverse restricted universe<br />
deb http://ubuntu.dormforce.net/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src http://ubuntu.dormforce.net/ubuntu/ hardy main multiverse restricted universe<br />
deb-src http://ubuntu.dormforce.net/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src http://ubuntu.dormforce.net/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://ubuntu.dormforce.net/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src http://ubuntu.dormforce.net/ubuntu/ hardy-updates main multiverse restricted universe<br />
<br />
<br />
上海市上海交通大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
deb http://ftp.sjtu.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb http://ftp.sjtu.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb http://ftp.sjtu.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb http://ftp.sjtu.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb http://ftp.sjtu.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src http://ftp.sjtu.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb-src http://ftp.sjtu.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src http://ftp.sjtu.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://ftp.sjtu.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src http://ftp.sjtu.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe<br />
<br />
中国科学技术大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
deb http://debian.ustc.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb http://debian.ustc.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb http://debian.ustc.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb http://debian.ustc.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb http://debian.ustc.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src http://debian.ustc.edu.cn/ubuntu/ hardy main multiverse restricted universe<br />
deb-src http://debian.ustc.edu.cn/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src http://debian.ustc.edu.cn/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://debian.ustc.edu.cn/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src http://debian.ustc.edu.cn/ubuntu/ hardy-updates main multiverse restricted universe</p>
<p>北京市清华大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
deb http://mirror9.net9.org/ubuntu/ hardy main multiverse restricted universe<br />
deb http://mirror9.net9.org/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb http://mirror9.net9.org/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb http://mirror9.net9.org/ubuntu/ hardy-security main multiverse restricted universe<br />
deb http://mirror9.net9.org/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src http://mirror9.net9.org/ubuntu/ hardy main multiverse restricted universe<br />
deb-src http://mirror9.net9.org/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src http://mirror9.net9.org/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://mirror9.net9.org/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src http://mirror9.net9.org/ubuntu/ hardy-updates main multiverse restricted universe<br />
<br />
<br />
沈阳市东北大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
deb ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy main multiverse restricted universe<br />
deb ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-security main multiverse restricted universe<br />
deb ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-updates main multiverse restricted universe<br />
deb-src ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy main multiverse restricted universe<br />
deb-src ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-backports main multiverse restricted universe<br />
deb-src ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-security main multiverse restricted universe<br />
deb-src ftp://ftp.neu.edu.cn/mirror/archive.ubuntu.com/ubuntu/ hardy-updates main multiverse restricted universe<br />
<br />
<br />
中国台湾 台湾大学更新服务器（推荐网通用户使用，电信PING平均响应速度41MS。强烈推荐此源，比较完整，较少出现同步问题）：<br />
<br />
deb http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy main restricted universe multiverse<br />
deb http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://ubuntu.csie.ntu.edu.tw/ubuntu/ hardy-proposed main restricted universe multiverse<br />
<br />
<br />
Mirror.vmmatrix.net更新服务器（上海市电信，推荐电信网通用户使用）：<br />
<br />
deb http://mirror.vmmatrix.net/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://mirror.vmmatrix.net/ubuntu/ hardy main restricted universe multiverse<br />
deb http://mirror.vmmatrix.net/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://mirror.vmmatrix.net/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://mirror.vmmatrix.net/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://mirror.vmmatrix.net/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb http://mirror.vmmatrix.net/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://mirror.vmmatrix.net/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://mirror.vmmatrix.net/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://mirror.vmmatrix.net/ubuntu/ hardy-proposed main restricted universe multiverse<br />
<br />
<br />
ubuntu.cnsite.org更新服务器（福建省福州市 电信）：<br />
<br />
deb http://ubuntu.cnsite.org/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://ubuntu.cnsite.org/ubuntu/ hardy main restricted universe multiverse<br />
deb http://ubuntu.cnsite.org/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://ubuntu.cnsite.org/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://ubuntu.cnsite.org/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://ubuntu.cnsite.org/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb http://ubuntu.cnsite.org/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://ubuntu.cnsite.org/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://ubuntu.cnsite.org/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://ubuntu.cnsite.org/ubuntu/ hardy-proposed main restricted universe multiverse<br />
<br />
<br />
mirror.rootguide.org更新服务器（上海市 电信）：<br />
<br />
deb http://mirror.rootguide.org/ubuntu/ hardy main restricted universe multiverse<br />
deb-src http://mirror.rootguide.org/ubuntu/ hardy main restricted universe multiverse<br />
deb http://mirror.rootguide.org/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb-src http://mirror.rootguide.org/ubuntu/ hardy-updates main restricted universe multiverse<br />
deb http://mirror.rootguide.org/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb-src http://mirror.rootguide.org/ubuntu/ hardy-backports main restricted universe multiverse<br />
deb http://mirror.rootguide.org/ubuntu/ hardy-security main restricted universe multiverse<br />
deb-src http://mirror.rootguide.org/ubuntu/ hardy-security main restricted universe multiverse<br />
deb http://mirror.rootguide.org/ubuntu/ hardy-proposed main multiverse restricted universe<br />
deb-src http://mirror.rootguide.org/ubuntu/ hardy-proposed main restricted universe multiverse<br />
deb http://mirror.rootguide.org/ubuntu-cn/ hardy main restricted universe multiverse<br />
<br />
<br />
台湾的官方源速度也相当不错，有时甚至快于内地的：<br />
<br />
deb http://tw.archive.ubuntu.com/ubuntu hardy main restricted universe multiverse<br />
deb http://tw.archive.ubuntu.com/ubuntu hardy-security main restricted universe multiverse<br />
deb http://tw.archive.ubuntu.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb http://tw.archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb http://tw.archive.ubuntu.com/ubuntu hardy-proposed main restricted universe multiverse<br />
deb-src http://tw.archive.ubuntu.com/ubuntu hardy main restricted universe multiverse<br />
deb-src http://tw.archive.ubuntu.com/ubuntu hardy-security main restricted universe multiverse<br />
deb-src http://tw.archive.ubuntu.com/ubuntu hardy-updates main restricted universe multiverse<br />
deb-src http://tw.archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse<br />
deb-src http://tw.archive.ubuntu.com/ubuntu hardy-proposed main restricted universe multiverse</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>升级的时候老是寻找最可靠的源,下面收集一些来自互联网的UBuntu8.04的源,供大家使用,会不断的更新和测试,谢谢.<br />
如下列举了部分电信,网通和双线的源,每个人具体的所在位置有些不同,所以速度相对来说是不一样,甚至差别很大的,所以各位在选的时候,先ping下看看那组最快,谢谢.</p>
<p>Ubuntu.cn99.com更新服务器（江苏省常州市电信，推荐电信用户使用）：</p>
<p>Archive.ubuntu.com更新服务器（欧洲，此为官方源，电信网通用户使用)：</p>
<p>Mirrors.shlug.org更新服务器（电信服务器，Ubuntu China Official Mirror, maintained by Shanghai Linux User Group）：</p>
<p>Mirror.lupaworld.com更新服务器（浙江省杭州市双线服务器）：</p>
<p>厦门大学更新服务器（教育网服务器）：</p>
<p>成都市 电子科技大学更新服务器（教育网，推荐校园网和网通用户使用）：</p>
<p>上海市上海交通大学更新服务器（教育网，推荐校园网和网通用户使用）：<br />
<br />
中国科学技术大学更新服务器（教育网，推荐校园网和网通用户使用）：</p>
<p>北京市清华大学更新服务器（教育网，推荐校园网和网通用户使用）：</p>
<p>沈阳市东北大学更新服务器（教育网，推荐校园网和网通用户使用）：</p>]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2008-04-26 08:55:54</wp:post_date>
		<wp:post_date_gmt>2008-04-26 08:55:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu-hardy8-04%e6%ba%90%e5%88%97%e8%a1%a8%e5%a4%a7%e5%85%a8%e4%b8%8d%e6%96%ad%e6%9b%b4%e6%96%b0%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>153</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.24.98.3</wp:comment_author_IP>
			<wp:comment_date>2008-04-27 02:43:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[深圳ADSL测试觉得TW的那个最快,有200k的样子.
北京的一个朋友测试清华的那个快的恐怖...3m多..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>利用Amazon Web Services(AWS)构建可扩展的WebApp应用</title>
		<link>http://www.iceskysl.com/?p=267</link>
		<pubDate>Mon, 28 Apr 2008 15:34:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在上次（2008.01.10）简单了写了一篇《<a href="../../../?action=show&amp;id=188">RubyOnRails + S3 + EC2 = ?</a> 》至今已经有段时间了，经过一段时间的发展，Amazon Web Services到今天已经相当成熟了，一整套的解决方案可以给Web App带来很多的便利，再一系列的改进措施后，AWS基本上是成熟了。</p>
<p><img src="http://lh3.ggpht.com/iceskysl/SBV1lquzeiI/AAAAAAAACDI/o50yR_nOby4/s400/all.png" alt="" /></p>
<p>上面这个图片来源于slideshare上的一个PPT&ldquo;<a href="http://www.slideshare.net/martin.rehfeld/amazon-simple-db-07-feb-2008-rug-b/">Using Amazon SimpleDB with Ruby on Rails</a>&rdquo;，正如我上面截取的这个图片说的：</p>
<ul>
    <li>静态文件存储在S3上；</li>
    <li>App server使用课余无限扩展的EC2；</li>
    <li>结构化数据存储在SimpleDB上；</li>
    <li>客户端/服务端的交互使用SQS；</li>
</ul>
<p>看看AWS的几个应用，正好覆盖了WebApp的整个过程，以下逐一介绍下这几个服务：</p>
<p>1、<strong>S3</strong>看上去就是一个大的硬盘，你可以把App中的所有数据都放上去，取回来，展示等等，是个比较安全的存储服务，省略了自己买磁盘阵列，维护等等费用，且号称是安全的。</p>
<p>2、<strong>EC2</strong>的最大卖点就是其可以无限伸缩的，号称可以扩展到&ldquo;云&rdquo;上去，不用因为您的服务器压力过重而购买一批一批的机器，免得找机房，等等，可谓相当方便，在其推出<a href="http://iceskysl.1sters.com/?action=show&amp;id=241">固定IP</a>和<a href="http://iceskysl.1sters.com/?action=show&amp;id=255">固态存储</a>之后，使得EC2相当成熟；</p>
<p>3、<strong>SimpleDB</strong>推出的最早，但是一直没仔细看，以为其和S3差不多，今天仔细看了下，其实不然，看其名字是SimpleDB，是用来替代DB的，但是比普通的DB更加Simple，其实也就是一个结构化的存储，你可以把DB的东西（表，行）组合一下放进去，然后根据其有的API查询和存贮，省了维护数据库的人力物力，但是速度不晓得如何。</p>
<p>4、<strong>SQS</strong>是前段时间了解的，不晓得这个服务当初推出的典型应用场景是什么样的，就我的理解，其就是一个队列，相当于一个缓冲队列，用在分布式处理或者作用同步上相当不错，有兴趣的可以看我以前的文章&ldquo;Amazon SQS,分布式作业不再费心&rdquo;。</p>
<p>总的来说，AWS的几个服务都是将WebApp开发中涉及到的几个方面分拆出来做成服务，以来提供便捷，二来自己赚了一大笔，真是聪明，不过这些应用的维护不晓得Amazon 是怎么处理的，肯定不会是我们常见的人工维护，估计和Google存储差不多的自维护系统。</p>
<p>如果您对AWS感兴趣，如果您和笔者一样使用的是RubyOnRails，你可以使用RightAws插件，其包含了以上4个应用的实现，相当不错。</p>
<p>但是其不足之处依然存在，例如多国内用户，速度不敢恭维；也有人列举了&ldquo;<a href="http://www.ryanpark.org/2008/04/top-10-avoid-the-simpledb-hype.html">Top 10 Reasons to Avoid the SimpleDB Hype</a>&rdquo;,当然也有人针锋相对的回应了这10个问题&ldquo; <a href="http://rashkovskii.com/articles/2008/4/26/top-10-reasons-to-avoid-document-databases-fud">Top 10 Reasons to Avoid Document Databases FUD&nbsp; 4 </a>&rdquo;；另外还有其价格是否真的划算（现在支付美刀比较划算），以及其曾经出现过的问题，所以您在决定使用之前还请仔细考量，这几个应用我都有过尝试，虽然没有大规模的使用，但是基本上比较了解了，如果您有问题，或者其他的经验，欢迎和我交流。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在上次（2008.01.10）简单了写了一篇《<a href="../../../?action=show&amp;id=188">RubyOnRails + S3 + EC2 = ?</a> 》至今已经有段时间了，经过一段时间的发展，Amazon Web Services到今天已经相当成熟了，一整套的解决方案可以给Web App带来很多的便利，再一系列的改进措施后，AWS基本上是成熟了。</p>
<p><img src="http://lh3.ggpht.com/iceskysl/SBV1lquzeiI/AAAAAAAACDI/o50yR_nOby4/s400/all.png" alt="" /></p>
<p>上面这个图片来源于slideshare上的一个PPT&ldquo;<a href="http://www.slideshare.net/martin.rehfeld/amazon-simple-db-07-feb-2008-rug-b/">Using Amazon SimpleDB with Ruby on Rails</a>&rdquo;，正如我上面截取的这个图片说的：</p>
<ul>
    <li>静态文件存储在S3上；</li>
    <li>App server使用课余无限扩展的EC2；</li>
    <li>结构化数据存储在SimpleDB上；</li>
    <li>客户端/服务端的交互使用SQS；</li>
</ul>
<p>看看AWS的几个应用，正好覆盖了WebApp的整个过程，以下逐一介绍下这几个服务：</p>
<p>1、<strong>S3</strong>看上去就是一个大的硬盘，你可以把App中的所有数据都放上去，取回来，展示等等，是个比较安全的存储服务，省略了自己买磁盘阵列，维护等等费用，且号称是安全的。</p>
<p>2、<strong>EC2</strong>的最大卖点就是其可以无限伸缩的，号称可以扩展到&ldquo;云&rdquo;上去，不用因为您的服务器压力过重而购买一批一批的机器，免得找机房，等等，可谓相当方便，在其推出<a href="../../../?action=show&amp;id=241">固定IP</a>和<a href="../../../?action=show&amp;id=255">固态存储</a>之后，使得EC2相当成熟；</p>
<p>3、<strong>SimpleDB</strong>推出的最早，但是一直没仔细看，以为其和S3差不多，今天仔细看了下，其实不然，看其名字是SimpleDB， 是用来替代DB的，但是比普通的DB更加Simple，其实也就是一个结构化的存储，你可以把DB的东西（表，行）组合一下放进去，然后根据其有的API 查询和存贮，省了维护数据库的人力物力，但是速度不晓得如何。</p>
<p>4、<strong>SQS</strong>是前段时间了解的，不晓得这个服务当初推出的典型应用场景是什么样的，就我的理解，其就是一个队列，相当于一个缓冲队列，用在分布式处理或者作用同步上相当不错，有兴趣的可以看我以前的文章&ldquo;Amazon SQS,分布式作业不再费心&rdquo;。</p>
<p>总的来说，AWS的几个服务都是将WebApp开发中涉及到的几个方面分拆出来做成服务，以来提供便捷，二来自己赚了一大笔，真是聪明，不过这些应用的维护不晓得Amazon 是怎么处理的，肯定不会是我们常见的人工维护，估计和Google存储差不多的自维护系统。</p>
<p>如果您对AWS感兴趣，如果您和笔者一样使用的是RubyOnRails，你可以使用RightAws插件，其包含了以上4个应用的实现，相当不错。</p>
<p>但是其不足之处依然存在，例如多国内用户，速度不敢恭维；也有人列举了&ldquo;<a href="http://www.ryanpark.org/2008/04/top-10-avoid-the-simpledb-hype.html">Top 10 Reasons to Avoid the SimpleDB Hype</a>&rdquo;,当然也有人针锋相对的回应了这10个问题&ldquo; <a href="http://rashkovskii.com/articles/2008/4/26/top-10-reasons-to-avoid-document-databases-fud">Top 10 Reasons to Avoid Document Databases FUD&nbsp; 4 </a>&rdquo;；另外还有其价格是否真的划算（现在支付美刀比较划算），以及其曾经出现过的问题，所以您在决定使用之前还请仔细考量，这几个应用我都有过尝试，虽然没有大规模的使用，但是基本上比较了解了，如果您有问题，或者其他的经验，欢迎和我交流。</p>]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2008-04-28 15:34:55</wp:post_date>
		<wp:post_date_gmt>2008-04-28 15:34:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%a9%e7%94%a8amazon-web-servicesaws%e6%9e%84%e5%bb%ba%e5%8f%af%e6%89%a9%e5%b1%95%e7%9a%84webapp%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Google更新PR～</title>
		<link>http://www.iceskysl.com/?p=268</link>
		<pubDate>Mon, 05 May 2008 10:24:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Google正在更新PR，我放假回老家几天没上网，回来看到我的blog已经从以前的1更新到3，虽然不高，但是还是差不多体现了我blog的价值。</p>
<p>基本上都是原创的内容，只是外链不多而已～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Google正在更新PR，我放假回老家几天没上网，回来看到我的blog已经从以前的1更新到3，虽然不高，但是还是差不多体现了我blog的价值。</p>
<p>基本上都是原创的内容，只是外链不多而已～</p>]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2008-05-05 10:24:36</wp:post_date>
		<wp:post_date_gmt>2008-05-05 10:24:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google%e6%9b%b4%e6%96%b0pr%ef%bd%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>154</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.51.167</wp:comment_author_IP>
			<wp:comment_date>2008-05-06 01:00:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恭喜恭喜！5  比较合理：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在RoR中取得最近记录的方法</title>
		<link>http://www.iceskysl.com/?p=269</link>
		<pubDate>Mon, 05 May 2008 10:37:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=269</guid>
		<description></description>
		<content:encoded><![CDATA[<p>时常有类似于&ldquo;查看最近一天发布的文章&rdquo;，&ldquo;最近一个星期发布的文章&rdquo;等，与是找到一段代码，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Topic&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.find_latest(time&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;%w(&nbsp;hour&nbsp;day&nbsp;week&nbsp;month&nbsp;year&nbsp;)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;r.include?(time)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.find&nbsp;</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">'created_at&nbsp;&gt;&nbsp;?'</span><span>,&nbsp;1.send(time).ago]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.find&nbsp;</span><span class="symbol">:all</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Topic.find_latest(<span class="string">'day'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Topic.find_latest(<span class="string">'week'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Topic.find_latest(<span class="string">'year'</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>比较简单，就不罗嗦了，要是你有更好的方法，请分享下～</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>时常有类似于&ldquo;查看最近一天发布的文章&rdquo;，&ldquo;最近一个星期发布的文章&rdquo;等，与是找到一段代码，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Topic&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.find_latest(time&nbsp;=&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;%w(&nbsp;hour&nbsp;day&nbsp;week&nbsp;month&nbsp;year&nbsp;)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;r.include?(time)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.find&nbsp;</span><span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">'created_at&nbsp;&gt;&nbsp;?'</span><span>,&nbsp;1.send(time).ago]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.find&nbsp;</span><span class="symbol">:all</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>Topic.find_latest(<span class="string">'day'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Topic.find_latest(<span class="string">'week'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Topic.find_latest(<span class="string">'year'</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>比较简单，就不罗嗦了，要是你有更好的方法，请分享下～</p>]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2008-05-05 10:37:20</wp:post_date>
		<wp:post_date_gmt>2008-05-05 10:37:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ror%e4%b8%ad%e5%8f%96%e5%be%97%e6%9c%80%e8%bf%91%e8%ae%b0%e5%bd%95%e7%9a%84%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>F形网页浏览眼球轨迹的研究报告</title>
		<link>http://www.iceskysl.com/?p=270</link>
		<pubDate>Wed, 07 May 2008 11:33:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这是个很古老的研究了，2006年4月，美国长期研究网站可用性的著名网站设计师<a href="http://www.useit.com/jakob/" target="_blank">杰柯柏&middot;尼尔森</a>（Jakob Nielsen）发表了一项《眼球轨迹的研究》报告（原文：<a href="http://www.useit.com/alertbox/reading_pattern.html" target="_blank">F-Shaped Pattern For Reading Web Content</a>）。<br />
报告称，大多数情况下浏览者都不由自主的以&ldquo;Ｆ&rdquo;形状的模式阅读网页，这种基本恒定的阅读习惯决定了网页呈现F形的关注热度。</p>
<p>&nbsp;</p>
<p><img src="http://www.lesishu.cn/wp-content/uploads/f.gif" alt="" /></p>
<p><strong>第一步</strong>：水平移动</p>
<p>浏览者首先在网页最上部形成一个水平浏览轨迹。</p>
<p><strong>第二步</strong>：目光下移，短范围水平移动</p>
<p>浏览者会将目光向下移，扫描比上一步短的区域。</p>
<p><strong>第三步</strong>：垂直浏览</p>
<p>浏览者完成上两步后，会将目光沿网页左侧垂直扫描；这一步的浏览速度较慢，也较有系统性、条理性。</p>
<p>&nbsp;</p>
<p><strong>附图：F形状网页浏览模式</strong></p>
<p>下面为杰柯柏&middot;尼尔森报告中的3张热度图，用颜色来表示浏览者眼光聚集的热度，分为最热（<span style="color: rgb(255, 0, 0);">红色</span>）、较热（<span style="color: rgb(255, 255, 0);">黄色</span>）、不热（<span style="color: rgb(0, 0, 255);">蓝色</span>）和基本不关注（<span style="color: rgb(192, 192, 192);">灰色</span>）4种。其中图3搜索结果页因SERP中网站标题、网页摘要较宽，第二条线会随之加长，但仍然是F形状。</p>
<p><img width="785" height="349" alt="Three screenshots from Nielsen Norman Group's recent eyetracking study." src="http://www.useit.com/alertbox/f_reading_pattern_eyetracking.jpg" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>详细的大家可以看：</p>
<p>1、点石上一篇文章：<a href="http://www.dunsh.org/2008/05/07/f-eyetracking/">尼尔森F形状网页浏览模式</a></p>
<p>2、作者的原报告：<a href="http://www.useit.com/alertbox/reading_pattern.html">F-Shaped Pattern For Reading Web Content</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这是个很古老的研究了，2006年4月，美国长期研究网站可用性的著名网站设计师<a href="http://www.useit.com/jakob/" target="_blank">杰柯柏&middot;尼尔森</a>（Jakob Nielsen）发表了一项《眼球轨迹的研究》报告（原文：<a href="http://www.useit.com/alertbox/reading_pattern.html" target="_blank">F-Shaped Pattern For Reading Web Content</a>）。<br />
报告称，大多数情况下浏览者都不由自主的以&ldquo;Ｆ&rdquo;形状的模式阅读网页，这种基本恒定的阅读习惯决定了网页呈现F形的关注热度。</p>
<p>详细的大家可以看：</p>
<p>1、点石上一篇文章：<a href="http://www.dunsh.org/2008/05/07/f-eyetracking/">尼尔森F形状网页浏览模式</a></p>
<p>2、作者的原报告：<a href="http://www.useit.com/alertbox/reading_pattern.html">F-Shaped Pattern For Reading Web Content</a></p>]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2008-05-07 11:33:50</wp:post_date>
		<wp:post_date_gmt>2008-05-07 11:33:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f%e5%bd%a2%e7%bd%91%e9%a1%b5%e6%b5%8f%e8%a7%88%e7%9c%bc%e7%90%83%e8%bd%a8%e8%bf%b9%e7%9a%84%e7%a0%94%e7%a9%b6%e6%8a%a5%e5%91%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[Cathy]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cathycn.cn</wp:comment_author_url>
			<wp:comment_author_IP>59.62.83.186</wp:comment_author_IP>
			<wp:comment_date>2008-05-07 19:14:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[把重要的内容放到这个F区，效果应该会很不错。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.95.96.201</wp:comment_author_IP>
			<wp:comment_date>2008-05-10 00:42:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有道理  我的经验也是这样]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Puppy Linux，放入U盘随身带的演示环境</title>
		<link>http://www.iceskysl.com/?p=271</link>
		<pubDate>Wed, 07 May 2008 17:48:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在U盘价格卖到&ldquo;白菜&rdquo;一样的时候，你拿U盘来做什么，又可以做什么，你有想过把一个linux装到U盘里，打造一个随身携带的&ldquo;生产环节&rdquo;呢。</p>
<p>设想下这么个场景，你是公司业务人员，受客户邀请和上司器重，去一个你并不熟悉的客户环境中讲解客户需要的产品，当你兴致勃勃的到达客户处时，却发现无法联上演示离不开的互联网来连到您的DEMO服务器，或者网路相当糟糕，让你不得不点一个按钮就停下里尴尬的等待，或者其他等等等情况。</p>
<p>如果我告诉你，可以把<strong>Puppy Linux 4.00</strong>打造成这套演示环境（小生产环境）随手带在U盘里，随时随地的演示，你会不会心动？</p>
<p>Ok，先看看&ldquo;<a href="http://www.ownlinux.cn/2008/05/06/puppy-linux-400-experience/">随身系统&mdash;&mdash;Puppy Linux 4.00 初体验</a>&rdquo;，如何，挺不错吧，想自己做一个么，看&ldquo;<a href="http://www.ownlinux.cn/2008/05/07/flash-puppy-linux-usb/">将 Puppy Linux 4.00 安装在U盘里 打造随身系统</a>&rdquo;，还想了解更多，看&ldquo;<a href="http://hi.baidu.com/puppylinux">E-PUP Linux 中文项目（Puppy Linux 中文版）您高效实用的小型Linux发行版</a>&rdquo;和&quot;<a href="http://www.murga-linux.com/puppy/index.php">Puppy Linux Discussion Forum</a>&ldquo;。</p>
<p>恩，差不多了，我想要的是一个带有Linux、Mysql,Ruby,Rails,gems,mogrels,nginx的小生产环境即可。至于开发环境下的JAVA，Netbeans等就无所谓了。有人能已经实践过了么，共享 :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在U盘价格卖到&ldquo;白菜&rdquo;一样的时候，你拿U盘来做什么，又可以做什么，你有想过把一个linux装到U盘里，打造一个随身携带的&ldquo;生产环节&rdquo;呢。</p>
<p>设想下这么个场景，你是公司业务人员，受客户邀请和上司器重，去一个你并不熟悉的客户环境中讲解客户需要的产品，当你兴致勃勃的到达客户处时，却发 现无法联上演示离不开的互联网来连到您的DEMO服务器，或者网路相当糟糕，让你不得不点一个按钮就停下里尴尬的等待，或者其他等等等情况。</p>
<p>如果我告诉你，可以把<strong>Puppy Linux 4.00</strong>打造成这套演示环境（小生产环境）随手带在U盘里，随时随地的演示，你会不会心动？</p>
<p>Ok，先看看&ldquo;<a href="http://www.ownlinux.cn/2008/05/06/puppy-linux-400-experience/">随身系统&mdash;&mdash;Puppy Linux 4.00 初体验</a>&rdquo;，如何，挺不错吧，想自己做一个么，看&ldquo;<a href="http://www.ownlinux.cn/2008/05/07/flash-puppy-linux-usb/">将 Puppy Linux 4.00 安装在U盘里 打造随身系统</a>&rdquo;，还想了解更多，看&ldquo;<a href="http://hi.baidu.com/puppylinux">E-PUP Linux 中文项目（Puppy Linux 中文版）您高效实用的小型Linux发行版</a>&rdquo;和&quot;<a href="http://www.murga-linux.com/puppy/index.php">Puppy Linux Discussion Forum</a>&ldquo;。</p>
<p>恩，差不多了，我想要的是一个带有Linux、Mysql,Ruby,Rails,gems,mogrels,nginx的小生产环境即可。至于开发环境下的JAVA，Netbeans等就无所谓了。有人能已经实践过了么，共享 :)</p>]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date>2008-05-07 17:48:04</wp:post_date>
		<wp:post_date_gmt>2008-05-07 17:48:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>puppy-linux%ef%bc%8c%e6%94%be%e5%85%a5u%e7%9b%98%e9%9a%8f%e8%ba%ab%e5%b8%a6%e7%9a%84%e6%bc%94%e7%a4%ba%e7%8e%af%e5%a2%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>圣火登珠峰，卓望&quot;一键拍发&quot;助力新华网全球首发</title>
		<link>http://www.iceskysl.com/?p=272</link>
		<pubDate>Thu, 08 May 2008 10:32:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img alt="" src="http://news.xinhuanet.com/sports/2008-05/08/xin_5520505080925468099555.jpg" /></p>
<p>北京时间2008年5月8日9时20分32秒，新华社向全球发布了扎西次仁从地球之巅拍摄的首张北京奥运圣火珠峰传递照片。<br />
此次照片的实时传递由<a href="http://www.aspire-tech.com/">卓望科技</a> 提供技术支撑，使用卓望提供的&ldquo;<strong>一键拍发</strong>&rdquo;客户端软件，由新华社特约记者带着安装了卓望科技客户端软件的几台手机即拍即发，登顶后不到10分钟就有清晰的照片实时发布。新华社成为首家提供圣火珠峰传递照片的新闻单位。 <br />
<a href="http://news.xinhuanet.com/sports/2008-05/08/content_8126456.htm">http://www.xinhuanet.com/<br />
http://news.xinhuanet.com/photo/2008-05/08/content_8126374.htm<br />
http://news.xinhuanet.com/sports/2008-05/08/content_8126456.htm</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>北京时间2008年5月8日9时20分32秒，新华社向全球发布了扎西次仁从地球之巅拍摄的首张北京奥运圣火珠峰传递照片。<br />
此次照片的实时传递由<a href="http://www.aspire-tech.com/">卓望科技</a> 提供技术支撑，使用卓望提供的&ldquo;<strong>一键拍发</strong>&rdquo;客户端软件，由新华社特约记者带着安装了卓望科技客户端软件的几台手机即拍即发，登顶后不到10分钟就有清晰的照片实时发布。新华社成为首家提供圣火珠峰传递照片的新闻单位。 <br />
<a href="http://news.xinhuanet.com/sports/2008-05/08/content_8126456.htm">http://www.xinhuanet.com/<br />
http://news.xinhuanet.com/photo/2008-05/08/content_8126374.htm<br />
http://news.xinhuanet.com/sports/2008-05/08/content_8126456.htm</a></p>]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2008-05-08 10:32:29</wp:post_date>
		<wp:post_date_gmt>2008-05-08 10:32:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a3%e7%81%ab%e7%99%bb%e7%8f%a0%e5%b3%b0%ef%bc%8c%e5%8d%93%e6%9c%9b%e4%b8%80%e9%94%ae%e6%8b%8d%e5%8f%91%e5%8a%a9%e5%8a%9b%e6%96%b0%e5%8d%8e%e7%bd%91%e5%85%a8%e7%90%83%e9%a6%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_d6194fdebcec62f81f7314d48130a6fc</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>157</wp:comment_id>
			<wp:comment_author><![CDATA[Han]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.hannahcn.cn</wp:comment_author_url>
			<wp:comment_author_IP>59.62.83.186</wp:comment_author_IP>
			<wp:comment_date>2008-05-08 15:19:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真的很清晰，不错。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Ruby测试AWS之S3国内数据存贮</title>
		<link>http://www.iceskysl.com/?p=273</link>
		<pubDate>Fri, 09 May 2008 16:42:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=273</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>一、S3概要介绍和其规范说明</strong><br />
1、什么是S3<br />
&nbsp;&nbsp;&nbsp; * Simple Storage Service Fron Amazon<br />
&nbsp;&nbsp;&nbsp; * 一块无容量限制的网络硬盘<br />
&nbsp;&nbsp;&nbsp; * 可以作为可靠、快速、可以无限扩展的网络存储服务<br />
<br />
<strong>2、S3的功能</strong><br />
&nbsp;&nbsp;&nbsp; * 支持最小1byte,最大5G的存储对象；<br />
&nbsp;&nbsp;&nbsp; * 无存贮对象个数上的限制；<br />
&nbsp;&nbsp;&nbsp; * 每个存储对象存储在bucket中，且由有个用户定义的唯一性key来标识；<br />
&nbsp;&nbsp;&nbsp; * 可以对每个存贮对象设置访问权限；<br />
&nbsp;&nbsp;&nbsp; * 提供了REST和SOAP接口对对象进行读写、删除等操作；<br />
&nbsp;&nbsp;&nbsp; * 可靠时间为99.9%<br />
<br />
3、S3的价格<br />
4、S3中的概念<br />
5、S3中的操作<br />
6、S3的API和库<br />
7、S3客户端工具<br />
8、存在的问题<br />
<br />
<strong>二、实际测试</strong><br />
1、测速代码:<br />
2、测速结果:<br />
<br />
参考资料</p>
<p>详细文章，请阅读《 <a href="https://docs.google.com/View?docID=dhf86kr9_2906crdnqpb&amp;revision=_latest">使用Amazon S3做资料存储</a>》,我使用Google DOC写的，随时可能更新，不在另行通知，如果您有这方面的经验，欢迎探讨，分享。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>一、S3概要介绍和其规范说明</strong><br />
1、什么是S3<br />
&nbsp;&nbsp;&nbsp; * Simple Storage Service Fron Amazon<br />
&nbsp;&nbsp;&nbsp; * 一块无容量限制的网络硬盘<br />
&nbsp;&nbsp;&nbsp; * 可以作为可靠、快速、可以无限扩展的网络存储服务<br />
<br />
<strong>2、S3的功能</strong><br />
&nbsp;&nbsp;&nbsp; * 支持最小1byte,最大5G的存储对象；<br />
&nbsp;&nbsp;&nbsp; * 无存贮对象个数上的限制；<br />
&nbsp;&nbsp;&nbsp; * 每个存储对象存储在bucket中，且由有个用户定义的唯一性key来标识；<br />
&nbsp;&nbsp;&nbsp; * 可以对每个存贮对象设置访问权限；<br />
&nbsp;&nbsp;&nbsp; * 提供了REST和SOAP接口对对象进行读写、删除等操作；<br />
&nbsp;&nbsp;&nbsp; * 可靠时间为99.9%<br />
<br />
3、S3的价格<br />
4、S3中的概念<br />
5、S3中的操作<br />
6、S3的API和库<br />
7、S3客户端工具<br />
8、存在的问题<br />
<br />
<strong>二、实际测试</strong><br />
1、测速代码:<br />
2、测速结果:<br />
<br />
参考资料</p>
<p>详细文章，请阅读《 <a href="https://docs.google.com/View?docID=dhf86kr9_2906crdnqpb&amp;revision=_latest">使用Amazon S3做资料存储</a>》,我使用Google DOC写的，随时可能更新，不在另行通知，如果您有这方面的经验，欢迎探讨，分享。</p>]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2008-05-09 16:42:07</wp:post_date>
		<wp:post_date_gmt>2008-05-09 16:42:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8ruby%e6%b5%8b%e8%af%95aws%e4%b9%8bs3%e5%9b%bd%e5%86%85%e6%95%b0%e6%8d%ae%e5%ad%98%e8%b4%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[yawl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xruby.javaeye.com</wp:comment_author_url>
			<wp:comment_author_IP>69.251.193.24</wp:comment_author_IP>
			<wp:comment_date>2008-05-10 00:13:32</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jets3t的客户端（Cockpit）我觉得还可以用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>LoadError: no such file to load -- RMagick</title>
		<link>http://www.iceskysl.com/?p=274</link>
		<pubDate>Sun, 11 May 2008 10:00:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[<p>虽然在ubuntu上的rails里面使用过很多次的RMagick,但是却一直没有在单独的ruby</p>
<p>script中使用过,这次需要单独使用来画一些图片,于是写了一段代码,但是却跑不起来,老是报&quot;LoadError: no such file to load -- RMagick &quot;错误,查了些资料,搞清楚原因,记录如下:</p>
<p><strong>1.注意大小写敏感度</strong></p>
<p>在windows或者mac上,不敏感大小写,可以:<code>require 'rmagick'</code></p>
<p><code>但是在linux上,却不行,需要写:</code><code> require 'RMagick'</code></p>
<p><code>否则您可能得到如下错误:</code></p>
<p><code> MissingSourceFile: no such file to load -- rmagick</code></p>
<p><strong>2.单独ruby中需要引用<code>rubygems</code></strong></p>
<p><code>require 'rubygems'<br />
require 'RMagick'</code></p>
<p><code>如果不引用</code><code>rubygems,可能会看到如下错误:</code></p>
<p><code> `require': no such file to load -- rmagick (LoadError)</code></p>
<p><code>或者<br />
</code></p>
<p><code> `require': no such file to load -- RMagick (LoadError)</code></p>
<p><strong>参考文档:</strong></p>
<ul>
    <li>在Ubuntu上安装RMagic:http://www.hhtong.com/blog1/articles/2006/11/11/ubuntu20061111-install-rmagic</li>
    <li>Ruby on Rails RMagic:http://www.mysmallventures.com/ruby-on-rails-rmagick-linux-issues/</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>虽然在ubuntu上的rails里面使用过很多次的RMagick,但是却一直没有在单独的ruby</p>
<p>script中使用过,这次需要单独使用来画一些图片,于是写了一段代码,但是却跑不起来,老是报&quot;LoadError: no such file to load -- RMagick &quot;错误,查了些资料,搞清楚原因,记录如下:</p>
<p><strong>1.注意大小写敏感度</strong></p>
<p>在windows或者mac上,不敏感大小写,可以:<code>require 'rmagick'</code></p>
<p><code>但是在linux上,却不行,需要写:</code><code> require 'RMagick'</code></p>
<p><code>否则您可能得到如下错误:</code></p>
<p><code> MissingSourceFile: no such file to load -- rmagick</code></p>
<p><strong>2.单独ruby中需要引用<code>rubygems</code></strong></p>
<p><code>require 'rubygems'<br />
require 'RMagick'</code></p>
<p><code>如果不引用</code><code>rubygems,可能会看到如下错误:</code></p>
<p><code> `require': no such file to load -- rmagick (LoadError)</code></p>
<p><code>或者<br />
</code></p>
<p><code> `require': no such file to load -- RMagick (LoadError)</code></p>
<p><strong>参考文档:</strong></p>
<ul>
    <li>在Ubuntu上安装RMagic:http://www.hhtong.com/blog1/articles/2006/11/11/ubuntu20061111-install-rmagic</li>
    <li>Ruby on Rails RMagic:http://www.mysmallventures.com/ruby-on-rails-rmagick-linux-issues/</li>
</ul>]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2008-05-11 10:00:55</wp:post_date>
		<wp:post_date_gmt>2008-05-11 10:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>loaderror-no-such-file-to-load-rmagick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>遭遇Magick::ImageMagickError</title>
		<link>http://www.iceskysl.com/?p=275</link>
		<pubDate>Sun, 11 May 2008 10:12:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一段调用RMagic的Ruby脚本,在本地跑的好好的代码,放到服务器上出现这个错误:<br />
&nbsp;Non-conforming drawing primitive definition&nbsp; (Magick::ImageMagickError)</p>
<p>查了下服务器和本地,貌似只有Rmagic的版本不一样,如下:</p>
<p>[iceskysl]$&nbsp; gem list | grep rmagick<br />
rmagick (1.15.12, 1.15.10)<br />
[iceskysl]$ dpkg -l | grep magick<br />
ii&nbsp; imagemagick&nbsp;&nbsp;&nbsp; 6.2.4.5.dfsg1- Image manipulation programs<br />
ii&nbsp; libmagick6&nbsp;&nbsp;&nbsp;&nbsp; 6.0.6.2-2.9&nbsp;&nbsp;&nbsp; Image manipulation library<br />
ii&nbsp; libmagick9&nbsp;&nbsp;&nbsp;&nbsp; 6.2.4.5.dfsg1- Image manipulation library<br />
ii&nbsp; librmagick-rub 1.6.0-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImageMagick API for Ruby<br />
ii&nbsp; librmagick-rub 1.6.0-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImageMagick API for Ruby<br />
ii&nbsp; librmagick-rub 1.15.12-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;insert up to 60 chars description&gt;<br />
ii&nbsp; perlmagick&nbsp;&nbsp;&nbsp;&nbsp; 6.0.6.2-2.9&nbsp;&nbsp;&nbsp; A perl interface to the libMagick graphics r<br />
<br />
and in my locolhost.it's:<br />
iceskysl@IceskYsl:/opt/devroot/Taojer/lib$ gem list | grep rmagick<br />
rmagick (2.3.0, 1.15.10)</p>
<p>iceskysl@IceskYsl:/opt/devroot/Taojer/lib$ dpkg -l | grep magick<br />
ii&nbsp; imagemagick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation programs<br />
ii&nbsp; libmagick10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation library<br />
ii&nbsp; libmagick9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.2.4.5.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Image manipulation library<br />
ii&nbsp; libmagick9-dev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation library - development files<br />
不晓得是不是这个问题,查遍了Google也没找到合适的答案,记录在案,有遇到类似错误的还望指教,谢谢.</p>
<p>
<div class="codeText">
<div class="codeHead">附录:相关代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#!/usr/bin/ruby</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>require&nbsp;<span class="string">'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#require&nbsp;'RMagick'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;DrawPrice&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#根据给出的文件名,路径等信息生成价图片</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.drawpic(dir,name,nickname,adrress,blog=</span><span class="string">'http://iceskysl.1sters.com/'</span><span>,columns=200,rows=80,bg_color=</span><span class="string">'white'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;img&nbsp;=&nbsp;Magick::Image.<span class="keyword">new</span><span>(columns,rows,Magick::HatchFill.</span><span class="keyword">new</span><span>(bg_color,</span><span class="string">'lightcyan2'</span><span>))&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;img=#{img}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gc&nbsp;=&nbsp;Magick::Draw.<span class="keyword">new</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;gc=#{gc}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.stroke(<span class="string">'transparent'</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(16)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.font(<span class="string">&quot;fonts/simhei.ttf&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.text(40,30,&nbsp;<span class="string">&quot;姓名:#{nickname}&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.text(40,50,&nbsp;<span class="string">&quot;地址:#{adrress}.&quot;</span><span>)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.pointsize(13)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.text(10,70,&nbsp;blog)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;gc.draw(img)&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;img.write(<span class="string">&quot;#{dir}/#{name}.jpg&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>DrawPrice.drawpic(<span class="string">&quot;files&quot;</span><span>,</span><span class="string">&quot;vip_price&quot;</span><span>,</span><span class="string">&quot;IceskYsl&quot;</span><span>,</span><span class="string">&quot;深圳&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一段调用RMagic的Ruby脚本,在本地跑的好好的代码,放到服务器上出现这个错误:<br />
&nbsp;Non-conforming drawing primitive definition&nbsp; (Magick::ImageMagickError)</p>
<p>查了下服务器和本地,貌似只有Rmagic的版本不一样,如下:</p>
<p>[iceskysl]$&nbsp; gem list | grep rmagick<br />
rmagick (1.15.12, 1.15.10)<br />
[iceskysl]$ dpkg -l | grep magick<br />
ii&nbsp; imagemagick&nbsp;&nbsp;&nbsp; 6.2.4.5.dfsg1- Image manipulation programs<br />
ii&nbsp; libmagick6&nbsp;&nbsp;&nbsp;&nbsp; 6.0.6.2-2.9&nbsp;&nbsp;&nbsp; Image manipulation library<br />
ii&nbsp; libmagick9&nbsp;&nbsp;&nbsp;&nbsp; 6.2.4.5.dfsg1- Image manipulation library<br />
ii&nbsp; librmagick-rub 1.6.0-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImageMagick API for Ruby<br />
ii&nbsp; librmagick-rub 1.6.0-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImageMagick API for Ruby<br />
ii&nbsp; librmagick-rub 1.15.12-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;insert up to 60 chars description&gt;<br />
ii&nbsp; perlmagick&nbsp;&nbsp;&nbsp;&nbsp; 6.0.6.2-2.9&nbsp;&nbsp;&nbsp; A perl interface to the libMagick graphics r<br />
<br />
and in my locolhost.it's:<br />
iceskysl@IceskYsl:/opt/devroot/Taojer/lib$ gem list | grep rmagick<br />
rmagick (2.3.0, 1.15.10)</p>
<p>iceskysl@IceskYsl:/opt/devroot/Taojer/lib$ dpkg -l | grep magick<br />
ii&nbsp; imagemagick&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation programs<br />
ii&nbsp; libmagick10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation library<br />
ii&nbsp; libmagick9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.2.4.5.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Image manipulation library<br />
ii&nbsp; libmagick9-dev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7:6.3.7.9.dfsg1-2ubuntu1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image manipulation library - development files<br />
不晓得是不是这个问题,查遍了Google也没找到合适的答案,记录在案,有遇到类似错误的还望指教,谢谢.</p>]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2008-05-11 10:12:48</wp:post_date>
		<wp:post_date_gmt>2008-05-11 10:12:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%81%ad%e9%81%87magickimagemagickerror</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.227.228.133</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 11:08:10</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似系统中又一个以上的rmagick版本,是否冲突?
用sudo gem cleanup
清理调老旧的RMagick会不会又改变呢?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.213.135</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 11:57:27</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thx ,Daniel
但是服务器不是自己的机子,也不是VPN,貌似无法清除老版本,会是这个问题么?您有遇到过?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.213.135</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 11:58:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[找到一篇有点点关系的文章:
convert: Non-conforming drawing primitive definition `image’.
http://www.andreaswacker.com/blog/2007/09/08/convert-non-conforming-drawing-primitive-definition-image/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>162</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.106.9</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 21:12:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有点眉目了,应该是RMagic版本的问题,我的代码应该是RMagic2的,但是服务器上的RMagic貌似是1.
http://rmagick.rubyforge.org/index.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.106.9</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 21:23:53</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[跟踪每步打印了一些帮助信息:
[iceskysl]$ ruby drawPrice.rb
img=#<Magick::Image:0xb7c09fec>
gc=#<Magick::Draw:0xb7c09f4c>
drawPrice.rb:20:in `draw': Non-conforming drawing primitive definition `�':  (Magick::ImageMagickError)
	from drawPrice.rb:20:in `drawpic'
	from drawPrice.rb:29
可以看到,Magick::Image.new和Magick::Draw.new都OK的,后面的操作也都OK,直到gc.draw(img) 在img上draw的时候出的错误.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.106.9</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 21:33:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[基本上可以确定是版本的问题,可以看到:
按照RMagic官方的说法:http://rmagick.rubyforge.org/rmagick2.html,
ImageMagick 6.3.0以前的版本只能使用Rmagic1,而其后版本可以使用RMagic2.
1.在服务器上
libmagick9     6.2.4.5.dfsg1- Image manipulation library
rmagick (1.15.12, 1.15.10)
可以确定是RMagic1.

2.本地主机
ii  libmagick9                                 7:6.2.4.5.dfsg1-2ubuntu1            Image manipulation library
rmagick (2.3.0, 1.15.10)
可以确定是RMagic2.

关于RMagic2的优点,在其官方上说了,主要有:
1.针对RMagic的内存泄漏的诟病推出的:RMagick 2 has two new methods to help you manage that memory.
2.还有其他的Other new features:
你可以在http://rmagick.rubyforge.org/rmagick2.html查看详细的.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.106.9</wp:comment_author_IP>
			<wp:comment_date>2008-05-11 21:40:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[但是奇怪的是RMagic1和RMagic2中,我代码里面的方法并没有啥改变呀,咋会跑不通呢,看到各自的API中都有 draw方法呀.
1.RMagic1
http://www.simplesystems.org/RMagick/doc/draw.html#draw
draw  draw.draw(img) -> draw
Description:
Draws the list of graphic primitives on the specified image. Calling draw does not affect the list of primitives. Each time you call draw the primitives will be re-executed from the beginning.

2.RMagic2
http://studio.imagemagick.org/RMagick/doc/draw.html#draw
draw  draw.draw(img) -> draw
Description:
Draws the list of graphic primitives on the specified image. Calling draw does not affect the list of primitives. Each time you call draw the primitives will be re-executed from the beginning.

貌似没啥变化吧,为什么不行呢?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Gmail妙用点滴聚合收集</title>
		<link>http://www.iceskysl.com/?p=276</link>
		<pubDate>Mon, 12 May 2008 11:14:47 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[<p>是的，我是一个重度Google产品使用者，包括Gmail，GoogleDoc，picasa，Google Sync,GoogleReader等等，Google的很多产品的都很有创意，也符合未来&ldquo;云计算&rdquo;的趋势，同时给我带来诸多的便利。</p>
<p>本篇文章主要是用来记录一些我自己使用的Gmail技巧和tips，或者是一些技巧的文章链接，以备不时之需，如果您有其他的小技巧，请与我分享，谢谢。</p>
<p><strong>1、Gmail与Google在线办公结合</strong></p>
<p>可以通过设置Gmail的过滤器为&ldquo;<strong>有附件</strong>&rdquo;且包含&ldquo;<strong>DOC or XML</strong>&rdquo;关键字的邮件转发到您的GoogleDoc的&ldquo;Email-In Your Documents and Files&quot;中，详细说明可以参考&rdquo;<a href="http://blog.jooit.com/?p=322">Gmail过滤器妙用 之与Google在线办公结合</a>&ldquo;。</p>
<p><strong>2、Gmail Labels和过滤器结合在备份中的妙用</strong></p>
<p>Gmail的lable功能很强大，和上面说的过滤器结合可以做很好的备份用，例如我订阅了很多的邮件列表，想nginx，mogrel等等，这些邮件列表相当活跃，如果每次都如inbox，会严重干扰我其他的邮件，这时lable和过滤器就可以结合来做归档了，详细的操作方法请参考&rdquo;<a href="http://blog.simplife.net/archives/396">Gmail Labels在备份中的妙用</a>&ldquo;</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>是的，我是一个重度Google产品使用者，包括Gmail，GoogleDoc，picasa，Google Sync,GoogleReader等等，Google的很多产品的都很有创意，也符合未来&ldquo;云计算&rdquo;的趋势，同时给我带来诸多的便利。</p>
<p>本篇文章主要是用来记录一些我自己使用的Gmail技巧和tips，或者是一些技巧的文章链接，以备不时之需，如果您有其他的小技巧，请与我分享，谢谢。</p>
<p><strong>1、Gmail与Google在线办公结合</strong></p>
<p>可以通过设置Gmail的过滤器为&ldquo;<strong>有附件</strong>&rdquo;且包含&ldquo;<strong>DOC or XML</strong>&rdquo;关键字的邮件转发到您的GoogleDoc的&ldquo;Email-In Your Documents and Files&quot;中，详细说明可以参考&rdquo;<a href="http://blog.jooit.com/?p=322">Gmail过滤器妙用 之与Google在线办公结合</a>&ldquo;。</p>
<p><strong>2、Gmail Labels和过滤器结合在备份中的妙用</strong></p>
<p>Gmail的lable功能很强大，和上面说的过滤器结合可以做很好的备份用，例如我订阅了很多的邮件列表，想nginx，mogrel等等，这些 邮件列表相当活跃，如果每次都如inbox，会严重干扰我其他的邮件，这时lable和过滤器就可以结合来做归档了，详细的操作方法请参考&rdquo;<a href="http://blog.simplife.net/archives/396">Gmail Labels在备份中的妙用</a>&ldquo;</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2008-05-12 11:14:47</wp:post_date>
		<wp:post_date_gmt>2008-05-12 11:14:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gmail%e5%a6%99%e7%94%a8%e7%82%b9%e6%bb%b4%e8%81%9a%e5%90%88%e6%94%b6%e9%9b%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>中国，挺起自己的脊梁来</title>
		<link>http://www.iceskysl.com/?p=277</link>
		<pubDate>Tue, 13 May 2008 16:51:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[<p>本来以为08是个大喜的年，我们期待这阳光和无限希望，我们盼了许久的奥运终于来临，我们无比兴奋，憧憬美好的未来。</p>
<p>谁料，我们等到的是：</p>
<p>2月肆虐的雪灾，冻裂了中国大地；3月的拉萨暴力事件，烧伤了美丽的圣地；4月的奥运火炬传递受阻，刺伤了中国人向世界张开的双臂；善变的5月，胶济铁路 火车相撞，撞碎了多少旅人的梦；突然传遍全国的儿童手足口病，令全国父母心头纠结；震动传及东南亚的四川大地震，撼及整个中国的灵魂&hellip;&hellip;</p>
<p>面对困难，面对挫折，我们如此渺小，昨天是地震发生的日志，下班后，看着新闻直播，不断的刷新互联网上的的死亡人数报告，心里无比的痛楚。</p>
<p>看到温总理的不断喊话和鼓励现场的人们，看着写完遗书去现场的突击队员们，看到记者冒着生命危险给大家带来最新的报道，看到朋友们一遍一遍的发送着祝福和祈愿，我们地处安全，却无能为力，我们只能不断的祷告和许愿，希望祖国人民，每个人都能平安，健康，上苍有好生之德，大家一起祈祷，祝愿那些朋友们尽快脱落危险。</p>
<p>附录：转载：一个记者在地震抢救现场给我们上午做的直播? <br />
----------------- <br />
绮梦 10:07:29  <br />
现场简直不能看了 <br />
绮梦 10:08:33 <br />
年过花甲的总理已经哭得不成样子了 <br />
绮梦 10:10:16  <br />
刚刚挖开的地方又塌方了 <br />
绮梦 10:11:24 <br />
这倒霉天气还在下雨，现在一线的军人已经被下达死命令，必须冒雨解救  <br />
绮梦 10:11:30 <br />
我就在现场 <br />
绮梦 10:11:56 <br />
我现在是在都江堰市 <br />
绮梦  10:13:24 <br />
交通已经瘫痪了，人员和物资很难运进去 <br />
绮梦 10:13:47 <br />
汶川现在还不让我们去 <br />
绮梦  10:15:21 <br />
汶川的交通完全封闭了，现场到底怎么样我不知道，不过早上总理指示军队不管有多大代价，必须进城 <br />
绮梦 10:16:03  <br />
倒霉天气在下雨，飞机几次都不能降落，伞兵马上就要起飞了 <br />
绮梦 10:17:36 <br />
飞机在汶川空投物资了 <br />
绮梦  10:20:06 <br />
被压在废墟下的300多学生现在很危险啊，刚才一次的营救又失败了，现在总理在现场组织再次营救。 <br />
绮梦 10:20:47  <br />
啊 总理摔到了， <br />
绮梦 10:21:35 <br />
照片我正在传给北京，不经过审核的是不允许发布的 <br />
绮梦 10:22:21  <br />
我和几个同行现在开了9台电脑，同时在传消息 <br />
绮梦 10:22:37 <br />
这个QQ在关键时候传的真慢 <br />
绮梦  10:23:39 <br />
突击队又上了 <br />
绮梦 10:25:04 <br />
如果你现在看见老爷子的样子，你马上就会哭的 <br />
绮梦  10:26:40 <br />
老爷子的手臂受伤出血了，他把要给他包扎的医务人员推开了 <br />
绮梦 10:27:09 <br />
好消息，发现一名学生了  <br />
绮梦 10:28:00 <br />
总理跑到塌方点了，在帮忙呢 <br />
绮梦 10:28:13 <br />
向峨乡中学 <br />
绮梦  10:28:33 <br />
拖出来了，医生在抢救 <br />
绮梦 10:28:56 <br />
部队上来的人还不是很多 <br />
绮梦 10:29:07  <br />
交通太困难 <br />
绮梦 10:29:42 <br />
现在还不一定，这个看样子看活着，吊瓶氧气都挂上了 <br />
绮梦 10:31:06  <br />
啊，又塌了 <br />
绮梦 10:31:28 <br />
突击队一个人被埋进去了 <br />
绮梦 10:31:40  <br />
等等，我到前面看看 <br />
绮梦 10:36:24 <br />
我回来了，抢救出来了 <br />
绮梦 10:37:16  <br />
最新消息，彭州被困的10万群众危险！！！ <br />
绮梦 10:38:49  <br />
由于大雨的影响，工程兵几次架桥失败，附近已经出现泥石流迹象，电话直接是叫通总理的，情况很危险！！！ <br />
绮梦 10:39:19  <br />
由于桥梁倒塌，彭州市10万群众被堵在山中，救灾人员和物资无法运人。已经出现泥石流迹象 <br />
绮梦 10:41:11  <br />
总理电话里大喊，我不管你们怎么样，我只要这10万群众月兑险，这是命令。他把电话摔了 <br />
绮梦 10:41:33  <br />
头一次看见老爷子这么厉害 <br />
绮梦 10:41:54 <br />
汶川现在还没通知去，估计情况不是很好 <br />
绮梦 10:42:16  <br />
我现在在通讯帐篷里 <br />
绮梦 10:43:54 <br />
汶川最新消息，雨开始小了，空投物资已经扔下去了，空降兵已经在外围机场登机了  <br />
绮梦 10:45:19 <br />
现在所有的国外记者都在关注号称中国最精锐的特种部队首次公开亮相 <br />
绮梦 10:46:50  <br />
总理现在和登机部队领导说话 <br />
绮梦 10:47:41 <br />
总理说，我就一句话，是人民在养你们，你们自己看着办。 <br />
绮梦  11:11:00 <br />
大家好，我现在是在军用直升机上，头一次坐这种飞机，很紧张。 <br />
绮梦 11:12:51  <br />
我现在在直升机上，估计一个小时后就到什肪了 <br />
绮梦 11:34:40  <br />
最新消息，汶川的映秀、漩口、卧龙三镇通讯信号很弱，至今也无法联系。估计三镇有将近两万多人被困，余震不断，大雨连绵，情况非常严峻，由于能见度太差，无法判断准确情况。总参命令，当空降部队到达汶川上空时，如果条件不允许，就不惜代价强行伞降！  <br />
绮梦 11:36:38 <br />
没有，飞机要进人雷区了，我要关机了，等会再和你们聊。</p>
<p>附录：<br />
<a href="http://review.feedsky.com/review/feedsky/iceskysl_1sters/%7E/txt/171/r.html">http://review.feedsky.com/review/feedsky/iceskysl_1sters/~/txt/171/r.html</a></p>
<p><img src="http://review.feedsky.com/review/feedsky/iceskysl_1sters/~/img/171/cw.gif" alt="" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本来以为08是个大喜的年，我们期待这阳光和无限希望，我们盼了许久的奥运终于来临，我们无比兴奋，憧憬美好的未来。</p>
<p>谁料，我们等到的是：</p>
<p><strong>2月</strong>肆虐的雪灾，冻裂了中国大地；<strong>3月</strong>的拉萨暴力事件，烧伤了美丽的圣地；<strong>4月</strong>的奥运火炬传递受阻，刺伤了中国人向世界张开的双臂；孤单的<strong>5月</strong>，胶济铁路 火车相撞，撞碎了多少旅人的梦；突然传遍全国的儿童手足口病，令全国父母心头纠结；震动传及东南亚的<strong>四川大地震</strong>，撼及整个中国的灵魂&hellip;&hellip;</p>
<p>面对困难，面对挫折，我们如此渺小，昨天是地震发生，下班后，看着新闻直播，不断的刷新互联网上的的死亡人数报告，心里无比的痛楚。</p>
<p>看到温总理的不断喊话和鼓励现场的人们，看着写完遗书去现场的突击队员们，看到记者冒着生命危险给大家带来最新的报道，看到朋友们一遍一遍的发送着 祝福和祈愿，我们地处安全，却无能为力，我们只能不断的祷告和许愿，希望祖国人民，每个人都能平安，健康，上苍有好生之德，大家一起祈祷，祝愿那些朋友们 尽快脱落危险。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2008-05-13 16:51:20</wp:post_date>
		<wp:post_date_gmt>2008-05-13 16:51:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ad%e5%9b%bd%ef%bc%8c%e6%8c%ba%e8%b5%b7%e8%87%aa%e5%b7%b1%e7%9a%84%e8%84%8a%e6%a2%81%e6%9d%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.52.248</wp:comment_author_IP>
			<wp:comment_date>2008-05-14 13:00:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[心痛！鼓励大家通过 李连杰的壹基金捐款：http://www.taobao.com/cn/theme/site/scdz_080512.php]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails多个应用中共享数据库</title>
		<link>http://www.iceskysl.com/?p=278</link>
		<pubDate>Wed, 14 May 2008 11:24:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[<p>如果你现在是这样的：</p>
<p>&nbsp;</p>
<p><img src="http://railsfreaks.com/assets/2008/5/3/before_uses_connection.png" alt="" /></p>
<p>但是想做成这样的：</p>
<p><img src="http://railsfreaks.com/assets/2008/5/3/after_uses_connection.png" alt="" /></p>
<p>估计没有类似需求的人是看不明白的，如果有类似需求或者遇到类似问题的，一看到这个标题就能明白我要说的是什么，对，就是在多个Rails应用之间共享一个数据库。</p>
<p>用什么？自然是选择插件了，刚刚看到有人放出了这样的插件uses_connection Rails plugin，<a href="http://github.com/railsfreaks/uses_connection/tree/master">代码在Github</a>上，有篇介绍的文章（<a href="http://railsfreaks.com/2008/5/2/introducing-the-uses_connection-rails-plugin">Introducing the &quot;uses_connection&quot; Rails plugin</a>）在railsfreaks上，bdl7x也发了一篇简单的介绍《<a href="http://chinaonrails.com/topic/view/1618.html">不同程序同一个数据库连接-插件uses_connection</a>》，在chinaonrails上。看这些，应该就可以明白这个插件是做啥的了。</p>
<p>这里说下可能存在的应用场景，你有一套系统对外提供服务，比如说是个新闻发布系统，您需要及时的抓取内容或者发布新的内容，以保证这个新闻系统的及时性，但是在一台主机上操作会比较耗费资源，这个时候，你可以开发几个后端发布系统，分开部署，共享这套数据库，然后就可以使用后端系统轻松发布、增加新的内容到数据库，然后前端输出就可以源源不断了。</p>
<p>这个例子可能不是很清晰，但是我相信有类似需求的人一看就明白这样做的好处，我就不多说了。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>估计没有类似需求的人是看不明白的，如果有类似需求或者遇到类似问题的，一看到这个标题就能明白我要说的是什么，对，就是在多个Rails应用之间共享一个数据库。</p>
<p>用什么？自然是选择插件了，刚刚看到有人放出了这样的插件uses_connection Rails plugin，<a href="http://github.com/railsfreaks/uses_connection/tree/master">代码在Github</a>上，有篇介绍的文章（<a href="http://railsfreaks.com/2008/5/2/introducing-the-uses_connection-rails-plugin">Introducing the &quot;uses_connection&quot; Rails plugin</a>）在railsfreaks上，bdl7x也发了一篇简单的介绍《<a href="http://chinaonrails.com/topic/view/1618.html">不同程序同一个数据库连接-插件uses_connection</a>》，在chinaonrails上。看这些，应该就可以明白这个插件是做啥的了。</p>
<p>这里说下可能存在的应用场景，你有一套系统对外提供服务，比如说是个新闻发布系统，您需要及时的抓取内容或者发布新的内容，以保证这个新闻系统的及 时性，但是在一台主机上操作会比较耗费资源，这个时候，你可以开发几个后端发布系统，分开部署，共享这套数据库，然后就可以使用后端系统轻松发布、增加新 的内容到数据库，然后前端输出就可以源源不断了。</p>
<p>这个例子可能不是很清晰，但是我相信有类似需求的人一看就明白这样做的好处，我就不多说了。</p>]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2008-05-14 11:24:44</wp:post_date>
		<wp:post_date_gmt>2008-05-14 11:24:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e5%a4%9a%e4%b8%aa%e5%ba%94%e7%94%a8%e4%b8%ad%e5%85%b1%e4%ba%ab%e6%95%b0%e6%8d%ae%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>167</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.107.213</wp:comment_author_IP>
			<wp:comment_date>2008-05-14 23:55:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[晚上抽时间测了下,很简单,比较容易使用.大家可以看那个介绍文章或者下载git后看里面的readme,都很清楚,主要有2步:
1.添加数据库链接配置
2.在model中使用#  uses_connection :shared, :in => :all激活即可..

我测试的时候,由于远程数据库比较慢,觉得有点慢,有丢失连接的现象外,其他比较正常,可以为分布式服务提供一种好思路.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dreamhost的Share Rails确实已经采用了mod_rails(Passenger)</title>
		<link>http://www.iceskysl.com/?p=279</link>
		<pubDate>Wed, 14 May 2008 18:28:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[<p>看到http://chinaonrails.com/topic/view/1620.html上说DH已经采用了mod_rails（Passenger ），但是没看到效果，按照其介绍文章&quot;<a href="http://blog.dreamhost.com/2008/05/13/passenger-for-ruby-on-rails/">Introducing Passenger for Ruby on Rails</a>&quot;,登录我的DH帐户后，果然发现已经支持了，见我抓的图片。</p>
<p>&nbsp;</p>
<p><img src="http://lh6.ggpht.com/iceskysl/SCq9iEMrmQI/AAAAAAAACGU/yRK6ITLGlr0/s400/moda-rails.png" alt="" /></p>
<p>难道mod_rails真的是share rails的好的选择，偶没研究过，不发表观点，不晓得性能如何，晚上切换过去压下试试。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>看到http://chinaonrails.com/topic/view/1620.html上说DH已经采用了mod_rails（Passenger ），但是没看到效果，按照其介绍文章&quot;<a href="http://blog.dreamhost.com/2008/05/13/passenger-for-ruby-on-rails/">Introducing Passenger for Ruby on Rails</a>&quot;,登录我的DH帐户后，果然发现已经支持了，见我抓的图片。</p>
<p>&nbsp;</p>
<p>难道mod_rails真的是share rails的好的选择，偶没研究过，不发表观点，不晓得性能如何，晚上切换过去压下试试。</p>]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2008-05-14 18:28:48</wp:post_date>
		<wp:post_date_gmt>2008-05-14 18:28:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dreamhost%e7%9a%84share-rails%e7%a1%ae%e5%ae%9e%e5%b7%b2%e7%bb%8f%e9%87%87%e7%94%a8%e4%ba%86mod_railspassenger</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>168</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.107.213</wp:comment_author_IP>
			<wp:comment_date>2008-05-14 23:45:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[晚上试了一下,把一个Rails应用切换过去,还是挺顺利的就跑起来了,可以看到其进程是:
todo     27233 20586  4 08:42 ?        00:00:01 Passenger ApplicationSpawner: /home/.witch/todo/webroot/1sters_net/1sters.net_20080126
todo     27267     1  1 08:42 ?        00:00:00 Rails: /home/.witch/todo/webroot/1sters_net/1sters.net_20080126

随手压了下,没看出性能如何..等下用Apache 的AB压下实时看.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>169</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.107.213</wp:comment_author_IP>
			<wp:comment_date>2008-05-14 23:49:30</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[顺手用ab压了下,没有对比的,也不好做判定,结果如下:
iceskysl@IceskYsl:/home/dev$ ab -n 10 -c 10 http://www.1sters.net/
This is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 2006 The Apache Software Foundation, http://www.apache.org/

Benchmarking www.1sters.net (be patient).....done


Server Software:        Apache/2.0.61
Server Hostname:        www.1sters.net
Server Port:            80

Document Path:          /
Document Length:        17838 bytes

Concurrency Level:      10
Time taken for tests:   12.792698 seconds
Complete requests:      10
Failed requests:        0
Write errors:           0
Total transferred:      193770 bytes
HTML transferred:       187929 bytes
Requests per second:    0.78 [#/sec] (mean)
Time per request:       12792.698 [ms] (mean)
Time per request:       1279.270 [ms] (mean, across all concurrent requests)
Transfer rate:          14.77 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:      301 1568 1631.1    323    3899
Processing:  3114 5372 2727.0   4723   12473
Waiting:      414 1355 618.1   1532    2358
Total:       3701 6941 2756.9   6783   12792

Percentage of the requests served within a certain time (ms)
  50%   6783
  66%   7892
  75%   8026
  80%   9466
  90%  12792
  95%  12792
  98%  12792
  99%  12792
 100%  12792 (longest request)

就我自己感觉来看,性能一般.没有ngix的响应迅速,可以比较下我另外一个用nginx+mogrel搭建的www.1sters.com.
iceskysl@IceskYsl:/home/dev$ ab -n 10 -c 10 http://www.1sters.com/
This is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 2006 The Apache Software Foundation, http://www.apache.org/

Benchmarking www.1sters.com (be patient).....done


Server Software:        nginx/0.5.26
Server Hostname:        www.1sters.com
Server Port:            80

Document Path:          /
Document Length:        6976 bytes

Concurrency Level:      10
Time taken for tests:   2.68052 seconds
Complete requests:      10
Failed requests:        0
Write errors:           0
Total transferred:      73380 bytes
HTML transferred:       69760 bytes
Requests per second:    4.84 [#/sec] (mean)
Time per request:       2068.052 [ms] (mean)
Time per request:       206.805 [ms] (mean, across all concurrent requests)
Transfer rate:          34.33 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:      515  526   8.4    527     539
Processing:  1211 1351 113.8   1336    1528
Waiting:      676  816 112.9    802     990
Total:       1726 1877 121.0   1865    2067

Percentage of the requests served within a certain time (ms)
  50%   1865
  66%   1897
  75%   2003
  80%   2037
  90%   2067
  95%   2067
  98%   2067
  99%   2067
 100%   2067 (longest request)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.107.213</wp:comment_author_IP>
			<wp:comment_date>2008-05-14 23:58:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[关于DH的,详细介绍请参考这篇wiki,比较清晰和简单.
http://wiki.dreamhost.com/Passenger]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>171</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.108.4</wp:comment_author_IP>
			<wp:comment_date>2008-06-15 21:35:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[*  When the code for your Ruby on Rails application has changed, creating or modifying the file tmp/restart.txt in the Rails application's root folder will tell Passenger to automatically restart the application.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用 NetBeans 开发 Blackberry</title>
		<link>http://www.iceskysl.com/?p=280</link>
		<pubDate>Tue, 20 May 2008 14:59:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[<p>虽然我的<a href="http://iceskysl.1sters.com/?action=show&amp;id=251"><strong>Blackberry</strong>入手</a>还不是很久，但是非常喜欢的说，看了些软件和API，doc,发现最BB上的开发应该也挺好玩的，毕竟BB还算开放的。</p>
<p>如下找到几个相关的文章，没事的时候爱捣鼓捣鼓，写几个自己的小程序用也不错，由于本人偏爱Netbeans，于是关注点就是<strong>Netbeans+Blackberry + Mobility</strong>了。</p>
<p>&ldquo;<a href="http://gceclub.sun.com.cn/NetBeans/tutorials/mobility/blackberry.html">使用 NetBeans Mobility 开发 Blackberry</a>&rdquo;说了如何在NB上搭建BB的开发环境，&ldquo;<a href="http://www.cnblogs.com/confach/category/36451.html?Show=All">Service Is Living</a>&rdquo;这个Blog上不少不错的资料和文章，&ldquo;<a href="http://down.maxpda.com/download/Blackberry_JDE_4.30-777.html">Blackberry JDE 4.30 黑莓Java开发环境软件</a>&rdquo;这里是JDE安装软件，&ldquo;<a href="http://blog.csdn.net/hunhun1981/archive/2007/12/25/1966201.aspx">NetBeans Mobility 开发 Blackberry 的环境设置</a>&rdquo;这里记录了一些NB上的BB开发环境，其他的都忘记存了，呵呵。</p>
<p>要不要增加一个blog分类呢？思考ing....</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>虽然我的<a href="../../../?action=show&amp;id=251"><strong>Blackberry</strong>入手</a>还不是很久，但是非常喜欢的说，看了些软件和API，doc,发现最BB上的开发应该也挺好玩的，毕竟BB还算开放的。</p>
<p>如下找到几个相关的文章，没事的时候爱捣鼓捣鼓，写几个自己的小程序用也不错，由于本人偏爱Netbeans，于是关注点就是<strong>Netbeans+Blackberry + Mobility</strong>了。</p>
<p>&ldquo;<a href="http://gceclub.sun.com.cn/NetBeans/tutorials/mobility/blackberry.html">使用 NetBeans Mobility 开发 Blackberry</a>&rdquo;说了如何在NB上搭建BB的开发环境，&ldquo;<a href="http://www.cnblogs.com/confach/category/36451.html?Show=All">Service Is Living</a>&rdquo;这个Blog上不少不错的资料和文章，&ldquo;<a href="http://down.maxpda.com/download/Blackberry_JDE_4.30-777.html">Blackberry JDE 4.30 黑莓Java开发环境软件</a>&rdquo;这里是JDE安装软件，&ldquo;<a href="http://blog.csdn.net/hunhun1981/archive/2007/12/25/1966201.aspx">NetBeans Mobility 开发 Blackberry 的环境设置</a>&rdquo;这里记录了一些NB上的BB开发环境，其他的都忘记存了，呵呵。</p>
<p>要不要增加一个blog分类呢？思考ing....</p>]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2008-05-20 14:59:02</wp:post_date>
		<wp:post_date_gmt>2008-05-20 14:59:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8-netbeans-%e5%bc%80%e5%8f%91-blackberry</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>172</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.221.213.34</wp:comment_author_IP>
			<wp:comment_date>2008-07-20 08:45:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一个用来开发黑莓程序的NetBeans插件. 下载地址 http://www.teesoft.info/content/view/36/36/#BlackBerryPlugin.
This is built from http://hg.netbeans.org/main/contrib/file/tip/mobility.plugins.blackberry/ with following features added:
1. BlackBerry JDE Component Package support. You can register BlackBerry JDE or BlackBerry JDE Component Package as the platform. You will get full features if you register BlackBerry JDE as platform. But since there are no simulator built in ,so you can just build your application with BlackBerry JDE Component Package, no run and build support for BlackBerry JDE Component Package.
2. non-windows os support. This includes linux, solaris and any os with wine installed. You need Wine to make this work. You can install the JDE or BlackBerry JDE Component Package using wine or install them in a windows pc and copy to your non-windows os. The BlackBerry JDE simulator is not so stable while running in wine, but at least you can build your applications.
3. auto get JDE versions.
4. auto build alx file in your dist folder.

The patch can be find at:
http://www.netbeans.org/issues/show_bug.cgi?id=140871

有什么问题可以发到:http://www.teesoft.info/phpbb/viewforum.php?f=7.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>汶川地震,让我震撼的这瞬间</title>
		<link>http://www.iceskysl.com/?p=281</link>
		<pubDate>Wed, 21 May 2008 10:10:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=281</guid>
		<description></description>
		<content:encoded><![CDATA[<p>毫无疑问，我们每个人或多或少的被汶川大地震中的一些话语，场景，图片，故事感动着，逝者已去，我们不禁回想起自己遇到的一些瞬间，莫名的被感动着，本系列文章是由我们自发组织和撰写的那些真实的，震撼着我们的瞬间。</p>
<p>采用Ping（点击文章下方的Trackbacks图标即可看到Trackbacks地址）或者留言的方式告诉我们您撰写的震撼你的那一瞬间，我们将召集网友，翻译成多种语言版本，展示给全世界的人们。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>毫无疑问，我们每个人或多或少的被汶川大地震中的一些话语，场景，图片，故事感动着，逝者已去，我们不禁回想起自己遇到的一些瞬间，莫名的被感动着，本系列文章是由我们自发组织和撰写的那些真实的，震撼着我们的瞬间。</p>
<p>采用Ping（点击文章下方的Trackbacks图标即可看到Trackbacks地址）或者留言的方式告诉我们您撰写的震撼你的那一瞬间，我们将召集网友，翻译成多种语言版本，展示给全世界的人们。</p>]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2008-05-21 10:10:14</wp:post_date>
		<wp:post_date_gmt>2008-05-21 10:10:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b1%b6%e5%b7%9d%e5%9c%b0%e9%9c%87%e8%ae%a9%e6%88%91%e9%9c%87%e6%92%bc%e7%9a%84%e8%bf%99%e7%9e%ac%e9%97%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>红十字会紧急救援队,救援队员写下个人资料以备不测</title>
		<link>http://www.iceskysl.com/?p=282</link>
		<pubDate>Wed, 21 May 2008 10:22:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=282</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://cimg2.163.com/catchpic/2/29/29A73E0A210861854580957B5468EB31.JPG" alt="" /></p>
<p>第一次看到这个图片是2008.05.17早上到长沙，坐公交车的时候买的一份义卖报纸上的图片新闻，一群<strong>红十字会紧急救援队</strong>队员在出发前，队员让其战友在自己的衣服背后写上其<strong>个人资料</strong>，以备不测。</p>
<p>看到上面写的<strong>姓名</strong>，<strong>单位</strong>，<strong>血型</strong>，<strong>证号</strong>等个人信息，我瞬间被震撼了，他们已经在为遇到的可能危险做准备，如果不幸牺牲，不用等待亲人辨认身份（因为有证号和姓名）；如果重伤，不用验血就可以直接输血抢救（因为有血型了），等等。</p>
<p>无法猜测当时他们的心情如何，但毫无疑问，我被这样一群勇敢的战士深深的震撼和感动了。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>第一次看到这个图片是2008.05.17早上到长沙，坐公交车的时候买的一份义卖报纸上的图片新闻，一群<strong>红十字会紧急救援队</strong>队员在出发前，队员让其战友在自己的衣服背后写上其<strong>个人资料</strong>，以备不测。</p>
<p>看到上面写的<strong>姓名</strong>，<strong>单位</strong>，<strong>血型</strong>，<strong>证号</strong>等个人信息，我瞬间被震撼了，他们已经在为遇到的可能危险做准备，如果不幸牺牲，不用等待亲人辨认身份（因为有证号和姓名）；如果重伤，不用验血就可以直接输血抢救（因为有血型了），等等。</p>
<p>无法猜测当时他们的心情如何，但毫无疑问，我被这样一群勇敢的战士深深的震撼和感动了。</p>]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2008-05-21 10:22:19</wp:post_date>
		<wp:post_date_gmt>2008-05-21 10:22:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ba%a2%e5%8d%81%e5%ad%97%e4%bc%9a%e7%b4%a7%e6%80%a5%e6%95%91%e6%8f%b4%e9%98%9f%e6%95%91%e6%8f%b4%e9%98%9f%e5%91%98%e5%86%99%e4%b8%8b%e4%b8%aa%e4%ba%ba%e8%b5%84%e6%96%99%e4%bb%a5%e5%a4%87%e4%b8%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Lockdown: A authentication/authorization system for RubyOnRails</title>
		<link>http://www.iceskysl.com/?p=283</link>
		<pubDate>Wed, 21 May 2008 11:20:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>RubyOnRails</strong>让我们无限惊喜，插件，gem，部署方式，协助方式等等层出不穷，让我们足够的惊喜，今天介绍的是一款用户权限控制系统Lockdown。</p>
<p><a href="http://lockdown.rubyforge.org/">Lockdown</a>的使用也是足够的简单（包括安装和使用），但是也有些不足和缺陷，后面会说到，但是有些东西还是可以借鉴的。</p>
<p><strong>安装方便：</strong></p>
<p>$ sudo gem install lockdown<br />
$ cd &lt;your_project_directory&gt;<br />
$ lockdown .</p>
<p><strong>使用前需要配置：</strong></p>
<p>需要人工在<strong>init.rb </strong>中配置角色和权限，不能通过界面维护，这点不是方便。</p>
<p><strong>定制不算复杂：</strong></p>
<p>定制角色和权限，以及权限的分配不是很复杂，但是显得比较呆板。</p>
<p><strong>其他不足：</strong></p>
<p>由于其兼顾了<strong>merb</strong>，导致很多代码混在一起，比较不轻便。</p>
<p>详细的使用方法和特点请参考其主页上的说明，不再赘述。</p>
<p><strong>其他实现方案：</strong></p>
<p>我还是认为我自己写的一款角色控制、分配系统比较好用，只是没有插件化，不方便移植，实现的方式是初始化的时候将资源（action）入库，可以随时建立角色和用户组，每个用户组可以拥有多个角色，每个角色可以拥有多个资源权限，做了一些缓存以提高性能，另外，每次action前作适当的鉴权。</p>
<p>有时间可以改成插件或者gem。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>RubyOnRails</strong>让我们无限惊喜，插件，gem，部署方式，协助方式等等层出不穷，让我们足够的惊喜，今天介绍的是一款用户权限控制系统Lockdown。</p>
<p><a href="http://lockdown.rubyforge.org/">Lockdown</a>的使用也是足够的简单（包括安装和使用），但是也有些不足和缺陷，后面会说到，但是有些东西还是可以借鉴的。</p>
<p><strong>安装方便：</strong></p>
<p>$ sudo gem install lockdown<br />
$ cd &lt;your_project_directory&gt;<br />
$ lockdown .</p>
<p><strong>使用前需要配置：</strong></p>
<p>需要人工在<strong>init.rb </strong>中配置角色和权限，不能通过界面维护，这点不是方便。</p>
<p><strong>定制不算复杂：</strong></p>
<p>定制角色和权限，以及权限的分配不是很复杂，但是显得比较呆板。</p>
<p><strong>其他不足：</strong></p>
<p>由于其兼顾了<strong>merb</strong>，导致很多代码混在一起，比较不轻便。</p>
<p>详细的使用方法和特点请参考其主页上的说明，不再赘述。</p>
<p><strong>其他实现方案：</strong></p>
<p>我还是认为我自己写的一款角色控制、分配系统比较好用，只是没有插件化，不方便移植，实现的方式是初始化的时候将资源（action）入库，可以随 时建立角色和用户组，每个用户组可以拥有多个角色，每个角色可以拥有多个资源权限，做了一些缓存以提高性能，另外，每次action前作适当的鉴权。</p>
<p>有时间可以改成插件或者gem。。</p>]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2008-05-21 11:20:37</wp:post_date>
		<wp:post_date_gmt>2008-05-21 11:20:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lockdown-a-authenticationauthorization-system-for-rubyonrails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>遭遇ActionController::InvalidAuthenticityToken</title>
		<link>http://www.iceskysl.com/?p=284</link>
		<pubDate>Wed, 21 May 2008 22:55:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=284</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一直没有自己亲自试试客户端直接POST一些数据到rails应用上,今天正好遇到这个需求,原以为会很简单的,在应用中加个action响应,再组合一个hash数据Post到这个action上就好了,赶紧试试,却遭遇<strong>ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken)</strong>错误,唉,貌似有点不对哦.</p>
<p>Google下,找到</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一直没有自己亲自试试客户端直接POST一些数据到rails应用上,今天正好遇到这个需求,原以为会很简单的,在应用中加个action响应,再组合一个hash数据Post到这个action上就好了,赶紧试试,却遭遇<strong>ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken)</strong>错误,唉,貌似有点不对哦.</p>
<p>Google下,找到</p>]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2008-05-21 22:55:17</wp:post_date>
		<wp:post_date_gmt>2008-05-21 22:55:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%81%ad%e9%81%87actioncontrollerinvalidauthenticitytoken</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>173</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.85.2</wp:comment_author_IP>
			<wp:comment_date>2008-05-22 00:26:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真能写，一晚上写这么多：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>新增“安全相关 &#124; Security”分类</title>
		<link>http://www.iceskysl.com/?p=285</link>
		<pubDate>Thu, 22 May 2008 11:06:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=285</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="../../../?action=show&amp;id=285"><strong>网络安全</strong></a>绝对是个很有前途的领域，同样，新技术层出不穷，手法和花样就像病毒变种一样，非常丰富。我接触安全领域有段历史了，现在依然是一个网络安全杂志的&ldquo;<strong>新漏洞</strong>&rdquo;栏目编辑和策划，自身对安全漏洞比较关注，尽管我的Rails的漏洞关注的不多，但是凭着这么多年的功底，还是比较容易的啦。</p>
<p>本分类将关注<strong>Rails</strong>或者其他的语言或者系统的<a href="../../../?action=show&amp;id=285"><strong>Security</strong></a>问题，例如SQL，CFRS，XSS等等以往的或者最新的安全知识，主要是针对RubyOnRails的安全问题予以分析和说明，并发布我发现的一些bug或者其他讯息。</p>
<p>另外，本分类会经常关注其他<a href="http://www.rorsecurity.info/">同类bloger</a>撰写的外文文章，做一些测试和再组合，以使得更多的国内读者能了解最新的Security问题。</p>
<p>如果您有类似心得，还望交流指教，谢谢。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://iceskysl.1sters.com/?action=show&amp;id=285"><strong>网络安全</strong></a>绝对是个很有前途的领域，同样，新技术层出不穷，手法和花样就像病毒变种一样，非常丰富。我接触安全领域有段历史了，现在依然是一个网络安全杂志的&ldquo;<strong>新漏洞</strong>&rdquo;栏目编辑和策划，自身对安全漏洞比较关注，尽管我的Rails的漏洞关注的不多，但是凭着这么多年的功底，还是比较容易的啦。</p>
<p>本分类将关注<strong>Rails</strong>或者其他的语言或者系统的<a href="http://iceskysl.1sters.com/?action=show&amp;id=285"><strong>Security</strong></a>问题，例如SQL，CFRS，XSS等等以往的或者最新的安全知识，主要是针对RubyOnRails的安全问题予以分析和说明，并发布我发现的一些bug或者其他讯息。</p>
<p>另外，本分类会经常关注其他<a href="http://www.rorsecurity.info/">同类bloger</a>撰写的外文文章，做一些测试和再组合，以使得更多的国内读者能了解最新的Security问题。</p>
<p>如果您有类似心得，还望交流指教，谢谢。</p>]]></excerpt:encoded>
		<wp:post_id>285</wp:post_id>
		<wp:post_date>2008-05-22 11:06:19</wp:post_date>
		<wp:post_date_gmt>2008-05-22 11:06:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e5%a2%9e%e5%ae%89%e5%85%a8%e7%9b%b8%e5%85%b3-security%e5%88%86%e7%b1%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%96%b0%e5%a2%9e%e2%80%9c%e5%ae%89%e5%85%a8%e7%9b%b8%e5%85%b3-security%e2%80%9d%e5%88%86%e7%b1%bb]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[plk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>61.139.78.70</wp:comment_author_IP>
			<wp:comment_date>2008-05-22 11:49:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，多发些，我好学习一下！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CSRF: 不要低估了我的危害和攻击能力</title>
		<link>http://www.iceskysl.com/?p=286</link>
		<pubDate>Thu, 22 May 2008 11:48:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[<div align="left">
<div align="left">
<div align="left">CSRF这种攻击方式虽然提出来很久（在2006年的时候就有了）了，但是这个沉睡的攻击巨人直到前不久才逐渐走入我们的视线，到底CSRF是啥，危害到底有多大？常见的利用方式是如何的，今天作为&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=285">安全相关 | Security</a>&rdquo;分类的第一篇文章，我按照自己的理解告诉你，不要低估了CSRF危害性和攻击能力。<br />
<strong><br />
一、什么是CSRF</strong><br />
先看看CSRF的原文说明，如下：</div>
</div>
<blockquote><font><font>Cross Site Reference Forgery works by including malicious code or a link in a page that accesses a web application that the user is believed to have authenticated. If the session for that web application has not timed out, an attacker may execute unauthorized commands.<br />
</font></font></blockquote><strong>二、CSRF案例说明和分析</strong><br />
自然，这里拿Rails程序来举例子说明这些问题，大家知道Rails2之前是把session放在服务器端（文件或者DB或者缓存中），客户但在 cookie中保存sessionid；而到了Rails2后，还有一种方式是把session放在基于cookie的客户端中。当然这两样都各有道理， 各有优劣，不在我们这次说的范围之内。我们继续说，当我们向一个域名发送一个请求的时候，如果本店存在这个域名的cookie，浏览器会自动的把 cookie附带上。这样本来没有啥问题，也是我们为了解决http无状态记录的解决方案，但是有个问题出现了，如果出现一个到其他域名的请求，浏览区在 加载的时候，也把cookie给带上了，会有什么问题？我们举个简单的也很常见的例子来说明这个问题。<br />
-----------------------------案例------------------------------<br />
1、Bob在自己的电脑上刚刚查看完自己的银行A账户余额，然后比较无聊就跑到一个公开的BBS上灌水，当他看到一篇&ldquo;银行A的内部照片&rdquo;的帖子，很有兴趣的打开这个帖子想看看自己信任的银行A的内部图片是啥样子的，殊不知，这其实是一个<font><font>attacker</font></font>精心设计的骗局。<br />
2、在这个帖子中确实有几个图片，看上去真的像是银行A的照片，但是其中有个图片没显示出来，Bob以为是自己网速太慢，导致这个图片没有加载进来，也没在意。只是对这些并不是十分满意的照片摇摇头，就关了这个帖子。<br />
3、几天后，Bob猛然发现自己在银行A的账户上少了1000元，到底是怎么了？<br />
<strong><br />
分析：</strong><br />
为什么钱少了呢？我们得分析一下上面这个案例，好记得当时Bob说有个图片没显示么，是的，我们来看看这个图片的地址,惊奇的发现是：<font><font>&lt;img .src=&quot;<a href="http://bank.com/transfer?account=bob&amp;amount=1000&amp;destination=attacker">http://www.banka.com/transfer?account=myself&amp;amount=1000&amp;destination=attacker</a>&quot;&gt;，这是一个什么地址？聪明的您一定很快就能明白，这个地址是邪恶的，看上去，他的意思是打开这个地址的人，给attacker转了1000元。<br />
这怎么可能？你肯定急了，我怎么能随便给一个人转1000元呢，而且我都不知道呀！但是，注意了，这其实是完全有可能的。还记得当时Bob刚刚查看完整及的帐号信息，基于银行A的cookie并不过期，当出现如上链接出现在src的时候（</font></font><font><font>note that .src is meant to be src</font></font><font><font>），浏览器尝试着按照本地的cookie去加载上面这个URL，而银行A验证了来源请求的cookie是可以的，所以就这样事情就悄悄的发生了。<br />
</font></font>-------------------------------案例结束---------------------------<br />
<font><font><br />
</font></font>ok，看明白了么，这就是CSRF，一句话给他下个定义就是：借你的cookie在你不知道的时候悄悄的做了一些你不愿意做 的事情。恶日期这里有个更要命的是，这个包含上述URL的图片或者链接，并不需要一定是放在银行A的服务器上，相反可以在任一地方，比如blog，公开的 BBS，或者一些群发的Mail中等等，如此多的场合下，这些都有可能存在陷阱。<br />
再看一副图片吧，其说明的正是CSRF的攻击原理。<br />
<img alt="" src="http://www.rorsecurity.info/files/foiling_cross_site_attacks_3.png" /><br />
<br />
<strong> 三、CSRF的预防</strong><br />
看上去很恐怖吧，是的，确实恐怖，意识到恐怖是个好事情，这样会促使你接着往下看如何改进和防止类似的漏洞出现。<br />
总体来说，预防CSRF主要从<strong>2</strong>个方面入手，分别是：<br />
<em>1、正确使用GET,POST和Cookie；<br />
2、在non-GET请求中使用Security token；<br />
<br />
</em>一般上，大家知道的浏览器发送请求的方式有GET或者POST，但是还有一种比较常用的是Cookie，至于其他的HTTP协议请求方式，你可以google，一般按照W3C的规范：<br />
<em>1、GET常用在查看，列举，展示的时候；<br />
2、POST常用在下达订单，改变一个资源的属性或者做其他一些事情</em>；<br />
<br />
ok，我们这里拿Rails按照前面列举的2种预防手段做说明，首先，我们可以在Rails的控制权中（controller）将一些方法（action）限定（verify）为只能使用POST或者GET，例如：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>verify&nbsp;</span><span class="symbol">:method</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:post</span><span>,&nbsp;</span><span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;[&nbsp;</span><span class="symbol">:transfer</span><span>&nbsp;],&nbsp;</span><span class="symbol">:redirect_to</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:list</span><span>&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
恩，很好，这样做下限制以后，前面案例中的方法就失效了，因为这里我们限定了<span><span class="symbol"><strong>transfer</strong>必须使用<strong>POST</strong>来提交请求，当<strong>GET</strong>请求来的时候并不会被响应。<br />
万事大吉了？NO！因为POST的请求也是可以被构造出来后自动发送的，如何实现，看下面吧，你肯定会吃惊的。<br />
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">a</span><span>&nbsp;</span><span class="attribute">.href</span><span>=</span><span class="attribute-value">&quot;http://www.1sters.com/&quot;</span><span>&nbsp;</span><span class="attribute">onclick</span><span>=</span><span class="attribute-value">&quot;var&nbsp;f&nbsp;=&nbsp;document.createElement('form');&nbsp;f.style.display&nbsp;=&nbsp;'none';&nbsp;this.parentNode.appendChild(f);&nbsp;f.method&nbsp;=&nbsp;'POST';&nbsp;f.action&nbsp;=&nbsp;'http://www.example.com/account/destroy';&nbsp;f.submit();return&nbsp;false;&quot;</span><span class="tag">&gt;</span><span>点我试试</span><span class="tag">&lt;/</span><span class="tag-name">a</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
是的，这就是一个活生生的例子(.<strong>href</strong> is meant to be href)，使用link的href或者img的<strong>src</strong>都可以的，再想想一个Attacher放了一个图片，然后写了一个</span></span><span><span class="symbol"><span><span class="attribute"><strong>onmouseover</strong>方法，执行上述的那段JS，如下，或者使用AJAX。</span></span></span></span><span><span class="symbol">
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">img</span><span>&nbsp;</span><span class="attribute">.src</span><span>=</span><span class="attribute-value">&quot;http://www.harmless.com/img&quot;</span><span>&nbsp;</span><span class="attribute">width</span><span>=</span><span class="attribute-value">&quot;400&quot;</span><span>&nbsp;</span><span class="attribute">height</span><span>=</span><span class="attribute-value">&quot;400&quot;</span><span>&nbsp;</span><span class="attribute">onmouseover</span><span>=</span><span class="attribute-value">&quot;&hellip;&quot;</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
所以，限定为POST后还不是非常的保险，怎么办？不急，我们还有第二步，给non-GET的请求设置 <strong>security token</strong>，如何实现，在Rails2以后非常简单（也是默认的），我们只需要在environment.rb中添加如下代码：<br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>config.action_controller.session&nbsp;=&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="symbol">:session_key</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'_csrf_session'</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="symbol">:secret</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;</span><span class="string">'ae4b43dda38ff78bb50898b2935da76d1e224061ab72a9399d34cea4c6178eee6dae815fff920a20642f27abda83b793da4e9b6cf20c4838805e80abf53e318a'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
然后</span></span><span><span class="symbol">在</span></span><span><span class="symbol">application controller中包含如下</span></span><span><span class="symbol">security token</span></span><span><span class="symbol">设置：<br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>protect_from_forgery&nbsp;&nbsp;</span><span class="symbol">:secret</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'053cef294a333f72c3584311799c69d2'</span><span>&nbsp; </span></span></li>
</ol>
</div>
ok，基本上安全了，如果这时POST请求过去，但是</span></span><span><span class="symbol">security token</span></span><span><span class="symbol">和session计算出来的</span></span><span><span class="symbol"><span><span class="symbol">secret</span></span></span></span><span><span class="symbol">和服务端的</span></span><span><span class="symbol"><span><span class="symbol">secret匹配不上的话，就会返回一个</span></span></span></span><font><font><a href="http://iceskysl.1sters.com/?action=show&amp;id=284">ActionController::InvalidAuthenticityToken错误</a>，防止该类缺陷的出现。<br />
安全了，也许你要说，那我如果能破解出</font></font><span><span class="symbol"><span><span>protect_from_forgery，不进OK了么，按照理论上是，但是实际是破解是基本上不可能的，因为有人曾计算过，暴力破解该串大概需要2的11次方时间，后续我将再写一篇文章详细的介绍，这里不再赘述。</span></span></span></span><br />
<span><span class="symbol"><br />
</span></span><strong>四、总结</strong><br />
总的来说，CSRF的兴起刚刚开始，网络上肯定会有一股热潮，Railser们一定要注意自己的程序的安全性，CSRF比你我能想到的更有威胁，千万别小瞧了它。</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<div align="left">
<div align="left">
<div align="left">CSRF这种攻击方式虽然提出来很久（在2006年的时候就有了）了，但是这个沉睡的攻击巨人直到前不久才逐渐走入我们的视线，到底CSRF是啥，危害到底有多大？常见的利用方式是如何的，今天作为&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=285">安全相关 | Security</a>&rdquo;分类的第一篇文章，我按照自己的理解告诉你，不要低估了CSRF危害性和攻击能力。<br />
<strong><br />
一、什么是CSRF</strong><br />
先看看CSRF的原文说明，如下：</div>
</div>
<blockquote><font><font>Cross Site Reference Forgery works by including malicious code or a link in a page that accesses a web application that the user is believed to have authenticated. If the session for that web application has not timed out, an attacker may execute unauthorized commands.<br />
</font></font></blockquote><strong>二、CSRF案例说明和分析<br />
</strong>当我们向一个域名发送一个请求的时候，如果本店存在这个域名的cookie，浏览器会自动的把 cookie附带上。这样本来没有啥问题，也是我们为了解决http无状态记录的解决方案，但是有个问题出现了，如果出现一个到其他域名的请求，浏览区在 加载的时候，也把cookie给带上了，会有什么问题？我们举个简单的也很常见的例子来说明这个问题。<br />
<strong> 三、CSRF的预防<br />
</strong>总体来说，预防CSRF主要从<strong>2</strong>个方面入手，分别是：<br />
<em>1、正确使用GET,POST和Cookie；<br />
2、在non-GET请求中使用Security token；</em><br />
<strong>四、总结<br />
</strong>总的来说，CSRF的兴起刚刚开始，网络上肯定会有一股热潮，Railser们一定要注意自己的程序的安全性，CSRF比你我能想到的更有威胁，千万别小瞧了它。</div>]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2008-05-22 11:48:41</wp:post_date>
		<wp:post_date_gmt>2008-05-22 11:48:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>csrf-%e4%b8%8d%e8%a6%81%e4%bd%8e%e4%bc%b0%e4%ba%86%e6%88%91%e7%9a%84%e5%8d%b1%e5%ae%b3%e5%92%8c%e6%94%bb%e5%87%bb%e8%83%bd%e5%8a%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[plk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.139.78.70</wp:comment_author_IP>
			<wp:comment_date>2008-05-22 14:53:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，学习到了。特别还结合了ruby。收藏]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>176</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.111.101</wp:comment_author_IP>
			<wp:comment_date>2008-05-22 21:12:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[另外，可以使用插件来进一步防范，详细信息请查看“csrf_killer ”http://svn.techno-weenie.net/projects/plugins/csrf_killer/。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Google Sites开放,建立IceskYsl@Docs</title>
		<link>http://www.iceskysl.com/?p=287</link>
		<pubDate>Thu, 22 May 2008 20:39:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前就用上了<strong>Google Docs</strong>来写一些技术文档，我个人觉得用GoogleDocs些技术文档相当好，可以随时修改和编辑，且可以保存版本信息，非常好。<br />
我已经使用GoogleDocs写了诸如&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=273"><strong>使用Amazon S3做资料存储</strong></a>&rdquo;，&ldquo;<strong>Twitter的Widget实现探析</strong>&rdquo;，&quot;<a href="http://iceskysl.1sters.com/?action=show&amp;id=260"><strong>Amazon SQS,分布式作业不再费心</strong></a>&quot;,&quot;<a href="http://iceskysl.1sters.com/?action=show&amp;id=286"><strong>CSRF: 不要低估了我的危害和攻击能力</strong></a>&quot;等技术文档，也曾在blog上发布了一些，以前都是在Blog简要的写个介绍，然后贴上Docs的链接地址，但是一直有个问题困扰我。<br />
我理想的状态是可以在页面上直接展示发布的<strong>docs</strong>，这样看上去更加直观，而不用每次都再点一次链接，曾经尝试过<strong>GoogleBlogger</strong>，但是除了被<em><strong>GFW</strong></em>外，他的布局我也不是很喜欢。一直在寻找另外可行的方式。<br />
今天看到Gseeker上说到<a href="http://www.gseeker.com/50226711/google_sitescie_149100.php">Google Sites正式开放</a>，Google Sites我以前也试过，只是当时还不成熟，竟然这次正式开放了，那么肯定比较成熟了。<br />
<img src="http://sites.google.com/site/iceskysl/_/rsrc/1211415838260/system/app/images/logo.png" alt="" /><br />
赶紧试试，很不错，正好满足我的需要，于是赶快建立一个<a href="http://sites.google.com/site/iceskysl/">IceskYsl@Docs</a>,把以前在Doc上写的文档都包含进去，效果挺好，除了可以插入Doc外，还可以插入表格，视频等等。<br />
<br />
以后我还使用Doc写更多的技术文档，并随时更新，修改，届时将第一时间放在IceskYsl@Docs上，同时将会在这个blog上的发布。<br />
<br />
有兴趣的赶紧去瞧瞧吧，有啥子问题记得给我留言。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前就用上了<strong>Google Docs</strong>来写一些技术文档，我个人觉得用GoogleDocs些技术文档相当好，可以随时修改和编辑，且可以保存版本信息，非常好。<br />
我已经使用GoogleDocs写了诸如&ldquo;<a href="../../../?action=show&amp;id=273"><strong>使用Amazon S3做资料存储</strong></a>&rdquo;，&ldquo;<strong>Twitter的Widget实现探析</strong>&rdquo;，&quot;<a href="../../../?action=show&amp;id=260"><strong>Amazon SQS,分布式作业不再费心</strong></a>&quot;,&quot;<a href="../../../?action=show&amp;id=286"><strong>CSRF: 不要低估了我的危害和攻击能力</strong></a>&quot;等技术文档，也曾在blog上发布了一些，以前都是在Blog简要的写个介绍，然后贴上Docs的链接地址，但是一直有个问题困扰我。<br />
我理想的状态是可以在页面上直接展示发布的<strong>docs</strong>，这样看上去更加直观，而不用每次都再点一次链接，曾经尝试过<strong>GoogleBlogger</strong>，但是除了被<em><strong>GFW</strong></em>外，他的布局我也不是很喜欢。一直在寻找另外可行的方式。<br />
今天看到Gseeker上说到<a href="http://www.gseeker.com/50226711/google_sitescie_149100.php">Google Sites正式开放</a>，Google Sites我以前也试过，只是当时还不成熟，竟然这次正式开放了，那么肯定比较成熟了。<br />
<img src="http://sites.google.com/site/iceskysl/_/rsrc/1211415838260/system/app/images/logo.png" alt="" /><br />
赶紧试试，很不错，正好满足我的需要，于是赶快建立一个<a href="http://sites.google.com/site/iceskysl/">IceskYsl@Docs</a>,把以前在Doc上写的文档都包含进去，效果挺好，除了可以插入Doc外，还可以插入表格，视频等等。<br />
<br />
以后我还使用Doc写更多的技术文档，并随时更新，修改，届时将第一时间放在IceskYsl@Docs上，同时将会在这个blog上的发布。<br />
<br />
有兴趣的赶紧去瞧瞧吧，有啥子问题记得给我留言。</p>]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date>2008-05-22 20:39:29</wp:post_date>
		<wp:post_date_gmt>2008-05-22 20:39:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-sites%e5%bc%80%e6%94%be%e5%bb%ba%e7%ab%8biceskysldocs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>CsrfKiller: 看CSRF还怎么乐的起来</title>
		<link>http://www.iceskysl.com/?p=288</link>
		<pubDate>Thu, 22 May 2008 21:28:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=288</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前面一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=286">CSRF: 不要低估了我的危害和攻击能力</a>》说到了<strong>CSRF</strong>是相当恐怖的，前面也说了，在Rails2中可以设置安全码来进一步的防止，另外，今天给大家分享一个插件，是<a href="http://svn.techno-weenie.net/projects/plugins/csrf_killer/">csrf_killer</a>，详细的介绍请参考<a href="http://svn.techno-weenie.net/projects/plugins/csrf_killer/README">README</a>。</p>
<pre><strong>CsrfKiller</strong><br />==========<br /><br />This plugin helps protect against possible CSRF attacks.  If you don't know what a Cross Site Request Forgery attack is, check these links:<br /><br />* http://isc.sans.org/diary.html?storyid=1750<br />* http://en.wikipedia.org/wiki/Cross-site_request_forgery<br /><br />This plugin works by extending all forms created with #form_tag (including #form_for, #form_remote_tag, and #remote_form_for) by adding<br />a token unique to each session id.  It also adds a filter that checks all non-GET requests for the existence of this token.  This should<br />ensure that all non-GET actions have been correctly submitted from a form on your site.</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面一篇文章《<a href="../../../?action=show&amp;id=286">CSRF: 不要低估了我的危害和攻击能力</a>》说到了<strong>CSRF</strong>是相当恐怖的，前面也说了，在Rails2中可以设置安全码来进一步的防止，另外，今天给大家分享一个插件，是<a href="http://svn.techno-weenie.net/projects/plugins/csrf_killer/">csrf_killer</a>，详细的介绍请参考<a href="http://svn.techno-weenie.net/projects/plugins/csrf_killer/README">README</a>。</p>
<pre><strong>CsrfKiller</strong><br />==========<br /><br />This plugin helps protect against possible CSRF attacks.  If you don't know what a Cross Site Request Forgery attack is, check these links:<br /><br />* http://isc.sans.org/diary.html?storyid=1750<br />* http://en.wikipedia.org/wiki/Cross-site_request_forgery<br /><br />This plugin works by extending all forms created with #form_tag (including #form_for, #form_remote_tag, and #remote_form_for) by adding<br />a token unique to each session id.  It also adds a filter that checks all non-GET requests for the existence of this token.  This should<br />ensure that all non-GET actions have been correctly submitted from a form on your site.</pre>]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2008-05-22 21:28:39</wp:post_date>
		<wp:post_date_gmt>2008-05-22 21:28:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>csrfkiller-%e7%9c%8bcsrf%e8%bf%98%e6%80%8e%e4%b9%88%e4%b9%90%e7%9a%84%e8%b5%b7%e6%9d%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.111.101</wp:comment_author_IP>
			<wp:comment_date>2008-05-22 22:31:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一个很不错的PPT：http://www.slideshare.net/jweiss/ruby-on-rails-security-218035/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>与时俱进,使用Git</title>
		<link>http://www.iceskysl.com/?p=289</link>
		<pubDate>Sat, 24 May 2008 00:19:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[<p>与时俱进总是好的，由<strong>Rails</strong>带动起来的东西真的不少，虽然<strong>Git</strong>早已大名鼎鼎，但是一直没有走入一般开发人员的视线，而Rails的到来，把Git带入了大家的视野，普遍认为Git比<strong>SVN</strong>更懂得协作的概念，呵呵，N多人推荐呀，眼看着merb，rails，vlad以及许多的gems都转移到Git，偶也安奈不住了。</p>
<p>其实关注GIt挺早了，草草的看了几篇介绍，囫囵吞枣，没有看到其哦精髓，以为没啥了不起的，于是乎就没有继续深入进去，今天周末晚上，终于又想来了，把他从头到尾的看了一遍，看了不少文章（外文居多 ），总算得到一些启示，Git很好，很强大，不多说，下次有机会再说吧，反正偶已经悄悄的用上了Git。</p>
<p>推荐几个参考文档，都读完就会了：</p>
<p>http://git.or.cz/course/svn.html</p>
<p>http://www.bitsun.com/documents/gittutorcn.htm</p>
<p>http://eagain.net/articles/git-for-computer-scientists/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>与时俱进总是好的，由<strong>Rails</strong>带动起来的东西真的不少，虽然<strong>Git</strong>早已大名鼎鼎，但是一直没有走入一般开发人员的视线，而Rails的到来，把Git带入了大家的视野，普遍认为Git比<strong>SVN</strong>更懂得协作的概念，呵呵，N多人推荐呀，眼看着merb，rails，vlad以及许多的gems都转移到Git，偶也安奈不住了。</p>
<p>其实关注GIt挺早了，草草的看了几篇介绍，囫囵吞枣，没有看到其哦精髓，以为没啥了不起的，于是乎就没有继续深入进去，今天周末晚上，终于又想来 了，把他从头到尾的看了一遍，看了不少文章（外文居多 ），总算得到一些启示，Git很好，很强大，不多说，下次有机会再说吧，反正偶已经悄悄的用上了Git。</p>
<p>推荐几个参考文档，都读完就会了：</p>
<p>http://git.or.cz/course/svn.html</p>
<p>http://www.bitsun.com/documents/gittutorcn.htm</p>
<p>http://eagain.net/articles/git-for-computer-scientists/</p>]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2008-05-24 00:19:22</wp:post_date>
		<wp:post_date_gmt>2008-05-24 00:19:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8e%e6%97%b6%e4%bf%b1%e8%bf%9b%e4%bd%bf%e7%94%a8git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>178</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.251.230</wp:comment_author_IP>
			<wp:comment_date>2008-05-24 09:19:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://blog.stonean.com/2008/04/github-and-public-key.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>将1stlog迁移到GitHub上.</title>
		<link>http://www.iceskysl.com/?p=290</link>
		<pubDate>Sat, 24 May 2008 10:30:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[<p>经过昨天的试用，发现<strong>GIT</strong>真的很不错，于是将1stlog迁移了过去，原来GoogleCode上的SVN将保持同步更新，另外主要活动将在Git上，望周知。<br />
<br />
Public&nbsp;Clone&nbsp;URL：git://github.com/IceskYsl/1stlog.git<br />
Git地址：http://github.com/IceskYsl/1stlog/tree<br />
<br />
稍微赶紧了下，发现GitHub还真是快，相当的快，难怪昨天Raecoo说&ldquo;速度是相当的棒！&rdquo;，虽然还是有点不熟悉，但是还是觉得Git还是挺好的。<br />
继续学习中，继续开发中...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经过昨天的试用，发现<strong>GIT</strong>真的很不错，于是将1stlog迁移了过去，原来GoogleCode上的SVN将保持同步更新，另外主要活动将在Git上，望周知。<br />
<br />
Public&nbsp;Clone&nbsp;URL：git://github.com/IceskYsl/1stlog.git<br />
Git地址：http://github.com/IceskYsl/1stlog/tree<br />
<br />
稍微赶紧了下，发现GitHub还真是快，相当的快，难怪昨天Raecoo说&ldquo;速度是相当的棒！&rdquo;，虽然还是有点不熟悉，但是还是觉得Git还是挺好的。<br />
继续学习中，继续开发中...</p>]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2008-05-24 10:30:17</wp:post_date>
		<wp:post_date_gmt>2008-05-24 10:30:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%861stlog%e8%bf%81%e7%a7%bb%e5%88%b0github%e4%b8%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>用Vlad通过Git在 Nginx+mogrels上部署RubyOnRails应用.</title>
		<link>http://www.iceskysl.com/?p=291</link>
		<pubDate>Sun, 25 May 2008 23:33:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一个周末又快过完了，这个周末主要看了下如何自动部署<strong>RubyOnRails</strong>，目前用的比较多的是capistrano和Vlad，两者各有优缺点，但是考虑到自身的情况和未来的趋势，我主要看的是Vlad，这里就说说如何试用Vlad来把RoR应用自动部署到Nginx，Mogrels，当然，我们这里就不堪SVN了，我们看看Git的实现。</p>
<p><a href="http://rubyhitsquad.com/Vlad_the_Deployer.html">Vlad</a>的最新版本中已经支持了Git，但是尚不支持<strong>Nginx</strong>，于是我们需要自己代码，我在<strong>GitHub</strong>上fork了一份Vlad的代码，然后添加了对nginx的支持，然后就按照自己的使用方便，修改了他的core文件，添加了自动生成配置文件的方法。</p>
<p>1、增加对Nginx的支持，可以通过Vlad来start，stop，restart Nginx服务器;</p>
<p>2、可以自动生成匹配web服务器，app服务器和scm的<strong>deploy.rb</strong>配置文件;</p>
<p>3、可以根据<strong>deploy.rb</strong>自动生成合适的nginx的配置文件，并上传到服务器;（需要<strong>rsync</strong>支持.）</p>
<p>4、可以通过Git自动clone需要的代码，自动发布。（需要服务器上有git支持）</p>
<p>详细的信息，感兴趣的可以查看<a href="http://github.com/IceskYsl/vlad/tree/master">我的vlad的git</a>，使用帮助信息，请查看&ldquo;<a href="http://github.com/IceskYsl/vlad/tree/master/doco/how_to_generate_configs.txt">/how_to_generate_configs.txt</a>&rdquo;,有啥子意见，请告诉我，:)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一个周末又快过完了，这个周末主要看了下如何自动部署<strong>RubyOnRails</strong>，目前用的比较多的是capistrano和Vlad，两者各有优缺点，但是考虑到自身的情况和未来的趋势，我主要看的是Vlad，这里就说说如何试用Vlad来把RoR应用自动部署到Nginx，Mogrels，当然，我们这里就不堪SVN了，我们看看Git的实现。</p>
<p><a href="http://rubyhitsquad.com/Vlad_the_Deployer.html">Vlad</a>的最新版本中已经支持了Git，但是尚不支持<strong>Nginx</strong>，于是我们需要自己代码，我在<strong>GitHub</strong>上fork了一份Vlad的代码，然后添加了对nginx的支持，然后就按照自己的使用方便，修改了他的core文件，添加了自动生成配置文件的方法。</p>
<p>1、增加对Nginx的支持，可以通过Vlad来start，stop，restart Nginx服务器;</p>
<p>2、可以自动生成匹配web服务器，app服务器和scm的<strong>deploy.rb</strong>配置文件;</p>
<p>3、可以根据<strong>deploy.rb</strong>自动生成合适的nginx的配置文件，并上传到服务器;（需要<strong>rsync</strong>支持.）</p>
<p>4、可以通过Git自动clone需要的代码，自动发布。（需要服务器上有git支持）</p>
<p>详细的信息，感兴趣的可以查看<a href="http://github.com/IceskYsl/vlad/tree/master">我的vlad的git</a>，使用帮助信息，请查看&ldquo;<a href="http://github.com/IceskYsl/vlad/tree/master/doco/how_to_generate_configs.txt">/how_to_generate_configs.txt</a>&rdquo;,有啥子意见，请告诉我，:)</p>]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2008-05-25 23:33:09</wp:post_date>
		<wp:post_date_gmt>2008-05-25 23:33:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8vlad%e9%80%9a%e8%bf%87git%e5%9c%a8-nginxmogrels%e4%b8%8a%e9%83%a8%e7%bd%b2rubyonrails%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>git-svn: 整合使用git和svn</title>
		<link>http://www.iceskysl.com/?p=292</link>
		<pubDate>Tue, 27 May 2008 13:14:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前面已经说了&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=289">与时俱进,使用Git</a>&rdquo;，用了几天<strong>git</strong>后，越来越觉得不错，如下说说<strong>SVN</strong>和<strong>Git</strong>的主要区别：</p>
<blockquote>
<p>Git是<strong>分布式</strong>SCM，而SVN是基于<strong>服务器</strong>的，也就是说每个开发者本地都有一套git库，每个人维护自己的版本（或者合并其他人的版本），而SVN是每个人写完代码后都及时的checkin到服务器上，进行合并。</p>
</blockquote>
<p>如果上面这段话还不能让你真正了解Git的好处，而不想使用git来替代你的svn的话，那么我再列举几个我认为不错的比较直观的场景：</p>
<p>1、可以在本地（<strong>离线</strong>）就做好版本控制，而不用时刻连网，特别是Soho一族或者喜欢经常到处跑，又喜欢在路上、车上或者马路旁边的小凳子上coding的人；这个时候你可以在自己的Git库上进行版本控制，而不用到处找网络把代码搞到svn上去。</p>
<p>2、分布式的SCM更加安全和健壮，有没有想过，如果你的SVN版本服务器挂掉了（硬盘坏了或者网络不可用等等），你会咋样，能修复的好么，一旦修复不好，资料都完蛋了，而Git的分布式SCM，其中的几个节点挂掉影响并不大。</p>
<p>3、速度，你如果使用<strong>GoogleCode</strong>或者其他的SVN服务的话，不知道你是否有呆呆的等待chenkin完成的情况（我是经常有的），而Git，毫无疑问，速度快的多，（就算是使用GitHub也快），究其原因，应该是Git是打包好了上传，而不像SVN单个文件上传。</p>
<p>4、版本、分支管理</p>
<p>还有啥？想不来了，差不多就这样了，视个人情况而定，但是我认为Git会让你更加满意。</p>
<p>但是有人可能会有这样的想法，我本地使用git，然后定时的checkin到SVN上，这样岂不是更好，啊哈，好吧，你还不习惯或者还有其他的特殊情况（比如其他开发者不喜欢git，或者原来的代码在svn上等等），这里看看如何把git和svn结合起来一起使用。</p>
<p><strong>1、比较笨的方法</strong></p>
<p>同时使用Git和SVN，然后再各自的&ldquo;忽略&rdquo;列表里面加加上对方的版本库，比如在svn的忽略列表中加上.git，而同时在git的.gitignore中加上.svn；然后执行各自的命令。</p>
<p><strong>2、比较靠谱的方法</strong></p>
<p>使用<strong>git-svn</strong>应该算更加科学和靠谱的方法，安装好<strong>git-svn</strong>（这个是需要单独安装的）后，就可以使用啦，基本上是这样的：</p>
<p>mkdir 1stlog<br />
cd 1stlog &amp;&amp; git-svn init http://1stlog.googlecode.com/svn/trunk/</p>
<p>其他的就不多说了，可以参考&ldquo;<a href="http://pluskid.lifegoo.com/?p=24">git and subversion</a>&rdquo;和&ldquo;<a href="http://www.flavio.castelli.name/howto_use_git_with_svn">Howto use Git and svn together</a>&rdquo;以及&ldquo;<a href="http://privacymania.info/index.php?hl=f5&amp;q=uggc%3A%2F%2Ff5hagl.oybtfcbg.pbz%2F2008%2F03%2Ftvg-fia.ugzy">git-svn 常用功能示例</a>&rdquo;。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面已经说了&ldquo;<a href="../../../?action=show&amp;id=289">与时俱进,使用Git</a>&rdquo;，用了几天<strong>git</strong>后，越来越觉得不错，如下说说<strong>SVN</strong>和<strong>Git</strong>的主要区别：</p>
<blockquote>
<p>Git是<strong>分布式</strong>SCM，而SVN是基于<strong>服务器</strong>的，也就是说每个开发者本地都有一套git库，每个人维护自己的版本（或者合并其他人的版本），而SVN是每个人写完代码后都及时的checkin到服务器上，进行合并。</p>
</blockquote>
<p>如果上面这段话还不能让你真正了解Git的好处，而不想使用git来替代你的svn的话，那么我再列举几个我认为不错的比较直观的场景：</p>
<p>1、可以在本地（<strong>离线</strong>）就做好版本控制，而不用时刻连网，特别是Soho一族或者喜欢经常到处跑，又喜欢在路上、车上或者马路旁边的小凳子上coding的人；这个时候你可以在自己的Git库上进行版本控制，而不用到处找网络把代码搞到svn上去。</p>
<p>2、分布式的SCM更加安全和健壮，有没有想过，如果你的SVN版本服务器挂掉了（硬盘坏了或者网络不可用等等），你会咋样，能修复的好么，一旦修复不好，资料都完蛋了，而Git的分布式SCM，其中的几个节点挂掉影响并不大。</p>
<p>3、速度，你如果使用<strong>GoogleCode</strong>或者其他的SVN服务的话，不知道你是否有呆呆的等待chenkin完成的情况（我是经常有的），而Git，毫无疑问，速度快的多，（就算是使用GitHub也快），究其原因，应该是Git是打包好了上传，而不像SVN单个文件上传。</p>
<p>4、版本、分支管理</p>
<p>还有啥？想不来了，差不多就这样了，视个人情况而定，但是我认为Git会让你更加满意。</p>
<p>但是有人可能会有这样的想法，我本地使用git，然后定时的checkin到SVN上，这样岂不是更好，啊哈，好吧，你还不习惯或者还有其他的特殊情况（比如其他开发者不喜欢git，或者原来的代码在svn上等等），这里看看如何把git和svn结合起来一起使用。</p>
<p><strong>1、比较笨的方法</strong></p>
<p>同时使用Git和SVN，然后再各自的&ldquo;忽略&rdquo;列表里面加加上对方的版本库，比如在svn的忽略列表中加上.git，而同时在git的.gitignore中加上.svn；然后执行各自的命令。</p>
<p><strong>2、比较靠谱的方法</strong></p>
<p>使用<strong>git-svn</strong>应该算更加科学和靠谱的方法，安装好<strong>git-svn</strong>（这个是需要单独安装的）后，就可以使用啦，基本上是这样的：</p>
<p>mkdir 1stlog<br />
cd 1stlog &amp;&amp; git-svn init http://1stlog.googlecode.com/svn/trunk/</p>
<p>其他的就不多说了，可以参考&ldquo;<a href="http://pluskid.lifegoo.com/?p=24">git and subversion</a>&rdquo;和&ldquo;<a href="http://www.flavio.castelli.name/howto_use_git_with_svn">Howto use Git and svn together</a>&rdquo;以及&ldquo;<a href="http://privacymania.info/index.php?hl=f5&amp;q=uggc%3A%2F%2Ff5hagl.oybtfcbg.pbz%2F2008%2F03%2Ftvg-fia.ugzy">git-svn 常用功能示例</a>&rdquo;。</p>]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2008-05-27 13:14:42</wp:post_date>
		<wp:post_date_gmt>2008-05-27 13:14:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-svn-%e6%95%b4%e5%90%88%e4%bd%bf%e7%94%a8git%e5%92%8csvn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Google App Engine，正式向所有用户开放并推出收费计划</title>
		<link>http://www.iceskysl.com/?p=293</link>
		<pubDate>Wed, 28 May 2008 13:46:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=293</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.gseeker.com/50226711/google_appengine-logo.png" alt="" /><br />
经常来我blog的人应该还记得，前段时间介绍了&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a>&rdquo;，当时还是内测版本，我也去晚了没有申请到，只是下了SDK看了下，觉得很有前途，并说了多Amazon的EC2等服务有竞争关系（后来不久<a href="http://iceskysl.1sters.com/?action=show&amp;id=262">Amazon就降价</a>了）。</p>
<p>刚刚看到Gseeker上放出消息说&ldquo;<a href="http://www.gseeker.com/50226711/google_app_enginecaee_149683.php">Google App Engine向所有用户开放　推出收费计划</a>&rdquo;，貌似不错，赶紧去试试，发现我的mail还在waitlist里面，囧～～</p>
<p>但是，消息应该是真的，因为其实Google在&ldquo;<a href="http://www.google.com/intl/en/press/annc/20080527_google_io.html">Google I/O大会</a>&rdquo;上宣布的，只是貌似还是只针对Py的支持，对<strong>Rails</strong>等还不支持，继续等待，也等待Amazon有没有其他的动作。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经常来我blog的人应该还记得，前段时间介绍了&ldquo;<a href="../../../?action=show&amp;id=253">Google App Engine,前途无量,充满乐趣</a>&rdquo;，当时还是内测版本，我也去晚了没有申请到，只是下了SDK看了下，觉得很有前途，并说了多Amazon的EC2等服务有竞争关系（后来不久<a href="../../../?action=show&amp;id=262">Amazon就降价</a>了）。</p>
<p>刚刚看到Gseeker上放出消息说&ldquo;<a href="http://www.gseeker.com/50226711/google_app_enginecaee_149683.php">Google App Engine向所有用户开放　推出收费计划</a>&rdquo;，貌似不错，赶紧去试试，发现我的mail还在waitlist里面，囧～～</p>
<p>但是，消息应该是真的，因为其实Google在&ldquo;<a href="http://www.google.com/intl/en/press/annc/20080527_google_io.html">Google I/O大会</a>&rdquo;上宣布的，只是貌似还是只针对Py的支持，对<strong>Rails</strong>等还不支持，继续等待，也等待Amazon有没有其他的动作。</p>]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2008-05-28 13:46:59</wp:post_date>
		<wp:post_date_gmt>2008-05-28 13:46:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-app-engine%ef%bc%8c%e6%ad%a3%e5%bc%8f%e5%90%91%e6%89%80%e6%9c%89%e7%94%a8%e6%88%b7%e5%bc%80%e6%94%be%e5%b9%b6%e6%8e%a8%e5%87%ba%e6%94%b6%e8%b4%b9%e8%ae%a1%e5%88%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>我为什么那么喜欢GoogleDoc呢？</title>
		<link>http://www.iceskysl.com/?p=294</link>
		<pubDate>Fri, 30 May 2008 11:39:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前就说过，我非常喜欢使用GoogleDoc来写技术文章，其好处有很多：</p>
<p><img src="https://docs.google.com/images/doclist/logo_docs.gif" alt="" /></p>
<p><strong>1、编辑、组织、协作、维护方便</strong></p>
<p><a href="https://docs.google.com/"><strong>GoogleDoc</strong></a>的<strong>编辑器</strong>我非常喜欢，去掉<strong>Word</strong>中那些我基本上用不上的功能，而只提供需要的功能，这是比较难得可贵的，&ldquo;<em>不要让用户思考&rdquo;</em>是一种好的用户体验，而我深信，google在这个方面比<u>盖茨大叔</u>做的更符合我的需求。</p>
<p>我可以按照不同的<strong>文件夹</strong>或者<strong>Tag</strong>来组织我的文章，可以快速方便的索引和搜索到需要找到的文档。</p>
<p>GoogleDoc的<strong>协助功能</strong>也非常的榜，我经常和其他人一起完成一份文档的编写，这比在本地写一份文档传来传去要方便，合理的多。我们经常一起编写，在意见不一致的地方<em>批注</em>，等待其他人的确认等等。</p>
<p>另外，每次修改都有<strong>历史版本</strong>信息，可以很轻松的找到以前的版本，这点相当的好呀。</p>
<p><strong>2、在线存储，更加方便</strong></p>
<p>GoogleDoc是<strong>在线存储</strong>的，按照google和amazon的&ldquo;云计算&rdquo;的概念，这应该算云计算的一种了，其强大的云存储能力，我相信比存在我本地或者我自己的服务器上更加安全和可靠，且我可以随时随地的联网更新和查看，而不需要随身拿个U盘带来带去，还要提防丢失U盘的噩梦。</p>
<p>另外，这样比直接发布在自己的Blog要可靠的多，谁知道您的blog服务商或者自己的blog服务器会不会那天罢工，或者哪天你的域名失效，或者那天您的数据库崩溃了，还有。。。</p>
<p><strong>3、离线功能，锦上添花</strong></p>
<p>以前有人说&ldquo;要是我上不了网，那我岂不是死翘翘了！&rdquo;，呵呵，现在有了离线功能，可以在本地编辑，然后在有网络的时候再传上去就OK了。</p>
<p><strong>4、不一安装，且自动更新，不断完善</strong></p>
<p>GoogleDoc还有个好处是，其不用每次修复一个漏洞或者增加一个新功能都要down下来重新安装，他在服务端更新了，我就可以即刻体验，免去一切不必要的麻烦。另外，他的功能还在不断的增加，比如我就很期待一个<font color="#0000ff"><u>可以自动给代码着色</u></font>的功能，那样我写文章里面的代码就可以更加直观了。只是我不知道谁还有和我类似的需求，也没有找到反馈的地方，有人有类似需求的么？帮我一起反馈上去吧 :)</p>
<p>相信随着网速的越来越快，所谓的云计算都能得到很好的应用。我现在只有工作的时候写相关文档才被迫使用Word，虽然在家的本本上的<u>Ubuntu</u>下有<strong>Openoffice</strong>，但是写自己的一些技术文章的时候，我还都是使用GoogleDoc。且可以利用其它的技术（比如<a href="http://iceskysl.1sters.com/?action=show&amp;id=287"><strong>GoogleSite</strong></a>）来整合、组织和展示文档。大家可以在<a href="http://sites.google.com/site/iceskysl/">IceskYsl@Docs</a>上看到我分享出来的一些技术文档。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前就说过，我非常喜欢使用GoogleDoc来写技术文章，其好处有很多：</p>
<p><img src="https://docs.google.com/images/doclist/logo_docs.gif" alt="" /></p>
<p><strong>1、编辑、组织、协作、维护方便</strong></p>
<p><a href="https://docs.google.com/"><strong>GoogleDoc</strong></a>的<strong>编辑器</strong>我非常喜欢，去掉<strong>Word</strong>中那些我基本上用不上的功能，而只提供需要的功能，这是比较难得可贵的，&ldquo;<em>不要让用户思考&rdquo;</em>是一种好的用户体验，而我深信，google在这个方面比<u>盖茨大叔</u>做的更符合我的需求。</p>
<p>我可以按照不同的<strong>文件夹</strong>或者<strong>Tag</strong>来组织我的文章，可以快速方便的索引和搜索到需要找到的文档。</p>
<p>GoogleDoc的<strong>协助功能</strong>也非常的榜，我经常和其他人一起完成一份文档的编写，这比在本地写一份文档传来传去要方便，合理的多。我们经常一起编写，在意见不一致的地方<em>批注</em>，等待其他人的确认等等。</p>
<p>另外，每次修改都有<strong>历史版本</strong>信息，可以很轻松的找到以前的版本，这点相当的好呀。</p>
<p><strong>2、在线存储，更加方便</strong></p>
<p>GoogleDoc是<strong>在线存储</strong>的，按照google和amazon的&ldquo;云计算&rdquo;的概念，这应该算云计算的一种了，其强大的云存储能力，我相信比存在我本地或者我自己的服务器上更加安全和可靠，且我可以随时随地的联网更新和查看，而不需要随身拿个U盘带来带去，还要提防丢失U盘的噩梦。</p>
<p>另外，这样比直接发布在自己的Blog要可靠的多，谁知道您的blog服务商或者自己的blog服务器会不会那天罢工，或者哪天你的域名失效，或者那天您的数据库崩溃了，还有。。。</p>
<p><strong>3、离线功能，锦上添花</strong></p>
<p>以前有人说&ldquo;要是我上不了网，那我岂不是死翘翘了！&rdquo;，呵呵，现在有了离线功能，可以在本地编辑，然后在有网络的时候再传上去就OK了。</p>
<p><strong>4、不一安装，且自动更新，不断完善</strong></p>
<p>GoogleDoc还有个好处是，其不用每次修复一个漏洞或者增加一个新功能都要down下来重新安装，他在服务端更新了，我就可以即刻体验，免去一切不必要的麻烦。另外，他的功能还在不断的增加，比如我就很期待一个<font color="#0000ff"><u>可以自动给代码着色</u></font>的功能，那样我写文章里面的代码就可以更加直观了。只是我不知道谁还有和我类似的需求，也没有找到反馈的地方，有人有类似需求的么？帮我一起反馈上去吧 :)</p>
<p>相信随着网速的越来越快，所谓的云计算都能得到很好的应用。我现在只有工作的时候写相关文档才被迫使用Word，虽然在家的本本上的<u>Ubuntu</u>下有<strong>Openoffice</strong>，但是写自己的一些技术文章的时候，我还都是使用GoogleDoc。且可以利用其它的技术（比如<a href="../../../?action=show&amp;id=287"><strong>GoogleSite</strong></a>）来整合、组织和展示文档。大家可以在<a href="http://sites.google.com/site/iceskysl/">IceskYsl@Docs</a>上看到我分享出来的一些技术文档。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2008-05-30 11:39:06</wp:post_date>
		<wp:post_date_gmt>2008-05-30 11:39:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e4%b8%ba%e4%bb%80%e4%b9%88%e9%82%a3%e4%b9%88%e5%96%9c%e6%ac%a2googledoc%e5%91%a2%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>发布Ubuntu Hardy下使用Nginx+Mongrel跑Rails应用的相关技术系列文章</title>
		<link>http://www.iceskysl.com/?p=295</link>
		<pubDate>Fri, 30 May 2008 11:58:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前面已经说了，我非常<a href="http://iceskysl.1sters.com/?action=show&amp;id=294">喜欢使用GoogleDoc来写一些文章</a>，一来是编写、协助、维护方便，二来是可以更加安全、长远的保存；而可以和其他的产品，比如GoogleSite整合展示，这里发布我最近翻译、实践、整理、撰写的&ldquo;<a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">Ubuntu Hardy下使用Nginx+Mongrel跑Rails应用的相关技术</a>&rdquo;系列文章，该类文章旨在全面，详细的告诉你如何在UbuntuHardy下使用Nginx+Mongrel（后续可能会加上Thin或者Memcached等）搭建一套很棒的Rails生产环境。</p>
<p>考虑编写，协助和维护的方便，已经可能存在的blog服务器出现问题的风险，该类及其以后类似系列文章都将使用GoogleDoc来编写和保持。然后在IceskYsl@Docs上整合组织展示，并在这个blog上发布更新信息等。</p>
<p>本次&ldquo;<a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">Ubuntu Hardy下使用Nginx+Mongrel跑Rails应用的相关技术</a>&rdquo;系列，已经编写如下几个文章：</p>
<ul>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">RubyOnRails , Ubuntu Hardy , Nginx and Mongrel </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/installing-nginx-via-aptitude">使用aptitude安装Nginx </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/installing-nginx-from-source">从源码编译安装Nginx</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/adding-an-nginx-init-script">添加启动脚本</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-configuration">配置Nginx</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-from-source-layout">定制Nginx目录结构</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-virtual-hosts">Nginx虚拟主机配置详解 </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-virtual-host-settings">让Nginx支持虚拟主机 </a></li>
</ul>
<p>如果你有类似的经验需要分享或者想参与进来，一些协助完成一些专题、系列文章的整理，实践和撰写，欢迎加入一起编写和维护，请发送Mail到（iceskysl_At_Gmail.com）或者留言告诉我（需要你有Google帐号，否则协作不了）。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面已经说了，我非常<a href="../../../?action=show&amp;id=294">喜欢使用GoogleDoc来写一些文章</a>，一来是编写、协助、维护方便，二来是可以更加安全、长远的保存；而可以和其他的产品，比如GoogleSite整合展示，这里发布我最近翻译、实践、整理、撰写的&ldquo;<a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">Ubuntu Hardy下使用Nginx+Mongrel跑Rails应用的相关技术</a>&rdquo;系列文章，该类文章旨在全面，详细的告诉你如何在UbuntuHardy下使用Nginx+Mongrel（后续可能会加上Thin或者Memcached等）搭建一套很棒的Rails生产环境。</p>
<p>考虑编写，协助和维护的方便，已经可能存在的blog服务器出现问题的风险，该类及其以后类似系列文章都将使用GoogleDoc来编写和保持。然后在IceskYsl@Docs上整合组织展示，并在这个blog上发布更新信息等。</p>
<p>本次&ldquo;<a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">Ubuntu Hardy下使用Nginx+Mongrel跑Rails应用的相关技术</a>&rdquo;系列，已经编写如下几个文章：</p>
<ul>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx">RubyOnRails , Ubuntu Hardy , Nginx and Mongrel </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/installing-nginx-via-aptitude">使用aptitude安装Nginx </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/installing-nginx-from-source">从源码编译安装Nginx</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/adding-an-nginx-init-script">添加启动脚本</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-configuration">配置Nginx</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-from-source-layout">定制Nginx目录结构</a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-virtual-hosts">Nginx虚拟主机配置详解 </a></li>
    <li><a href="http://sites.google.com/site/iceskysl/acticles/ubuntu-hardy-and-nginx/nginx-virtual-host-settings">让Nginx支持虚拟主机 </a></li>
</ul>
<p>如果你有类似的经验需要分享或者想参与进来，一些协助完成一些专题、系列文章的整理，实践和撰写，欢迎加入一起编写和维护，请发送Mail到（iceskysl_At_Gmail.com）或者留言告诉我（需要你有Google帐号，否则协作不了）。</p>]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2008-05-30 11:58:07</wp:post_date>
		<wp:post_date_gmt>2008-05-30 11:58:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%91%e5%b8%83ubuntu-hardy%e4%b8%8b%e4%bd%bf%e7%94%a8nginxmongrel%e8%b7%91rails%e5%ba%94%e7%94%a8%e7%9a%84%e7%9b%b8%e5%85%b3%e6%8a%80%e6%9c%af%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Windows command shell (cmd.exe)下设置Proxy</title>
		<link>http://www.iceskysl.com/?p=296</link>
		<pubDate>Fri, 30 May 2008 13:51:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For use <a href="http://code.google.com/appengine/docs/appcfgpy.html"><em>appcfg.py</em> </a>to upload you app datas behind an HTTP proxy in <a href="../../../?action=show&amp;id=293">Google App Engine</a><br />
,or use with gems, cpan,etc. Inside cmd.exe, typed:<br />
<br />
set HTTP_proxy=http://my.proxy.server:8000</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>For use <a href="http://code.google.com/appengine/docs/appcfgpy.html"><em>appcfg.py</em> </a>to upload you app datas behind an HTTP proxy in <a href="http://iceskysl.1sters.com/?action=show&amp;id=293">Google App Engine</a><br />
,or use with gems, cpan,etc. Inside cmd.exe, typed:<br />
<br />
set HTTP_proxy=http://my.proxy.server:8000</p>
<pre>&nbsp;</pre>]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2008-05-30 13:51:59</wp:post_date>
		<wp:post_date_gmt>2008-05-30 13:51:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8windows-command-shell-cmd-exe%e4%b8%8b%e8%ae%be%e7%bd%aeproxy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Rails的find中使用DISTINCT功能(MYSQL)</title>
		<link>http://www.iceskysl.com/?p=297</link>
		<pubDate>Sun, 01 Jun 2008 08:44:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有的时候需要在SQL里面加上<strong>distinck</strong>来过滤一些重复的记录，使用SQL比较好写，但是在Rails的API里面并没有找到DISTINCK的参数，于是google了一把，看到不少人有类似的需求，最后找到方案，整理如下：<br />
<strong>1、使用:select</strong></p>
<pre style="padding-top: 0pt; padding-bottom: 0pt;"><em>Item.find( :all, :select =&gt; 'DISTINCT fieldname1,filename2,filename3' )</em>,这里就可以使用DISTINCT参数但是你可能很郁闷的发现，这<br />样select出来的结果并不完全符合您的要求或者预想，呵呵。<br /><br /><strong>2、加上:group参数</strong><br />前面说的，如果只有<strong>:select</strong>参数，这样出来的结果可能会让你郁闷的发现，并不是您的预期，原因是前面的:select会对<br />&ldquo;fieldname1,filename2,filename3&rdquo;做DISTINCT，所有不满足您的预期;<br />我们可以再加上group参数即可，类似语句如下：<br /><em>Item.find( :all, :select =&gt; 'DISTINCT fieldname1,filename2,filename3' ,:group =&gt; 'fieldname1')</em><br /><br />最后还要说下这个<strong>:select</strong>参数，他可以很好的提高性能，因为在Rails中的find会把所有字段都select出来，如果遇到大字<br />段会很影像性能的，所有在必要的时候，最好是用:select限制下要取出的列。<br /><br />参考：<br />1、<a href="http://www.geekskillz.com/articles/11  ">Using :select in Rails for Better Performance</a> （这篇文章详细的说了使用select来提高性能）<br />2、<a href="http://www.5do8.com/blog/doc/479/index.aspx">说Mysql的distinct语句和group by，order by </a> (这篇文章说了distinct、group by和order by的关系)</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候需要在SQL里面加上<strong>distinck</strong>来过滤一些重复的记录，使用SQL比较好写，但是在Rails的API里面并没有找到DISTINCK的参数，于是google了一把，看到不少人有类似的需求，最后找到方案，整理如下：<br />
<strong>1、使用:select</strong></p>
<pre style="padding-top: 0pt; padding-bottom: 0pt;"><em>Item.find( :all, :select =&gt; 'DISTINCT fieldname1,filename2,filename3' )</em>,这里就可以使用DISTINCT参数但是你可能很郁闷的发现，这<br />样select出来的结果并不完全符合您的要求或者预想，呵呵。<br /><br /><strong>2、加上:group参数</strong><br />前面说的，如果只有<strong>:select</strong>参数，这样出来的结果可能会让你郁闷的发现，并不是您的预期，原因是前面的:select会对<br />&ldquo;fieldname1,filename2,filename3&rdquo;做DISTINCT，所有不满足您的预期;<br />我们可以再加上group参数即可，类似语句如下：<br /><em>Item.find( :all, :select =&gt; 'DISTINCT fieldname1,filename2,filename3' ,:group =&gt; 'fieldname1')</em><br /><br />最后还要说下这个<strong>:select</strong>参数，他可以很好的提高性能，因为在Rails中的find会把所有字段都select出来，如果遇到大字<br />段会很影像性能的，所有在必要的时候，最好是用:select限制下要取出的列。<br /><br />参考：<br />1、<a href="http://www.geekskillz.com/articles/11  ">Using :select in Rails for Better Performance</a> （这篇文章详细的说了使用select来提高性能）<br />2、<a href="http://www.5do8.com/blog/doc/479/index.aspx">说Mysql的distinct语句和group by，order by </a> (这篇文章说了distinct、group by和order by的关系)</pre>]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2008-06-01 08:44:07</wp:post_date>
		<wp:post_date_gmt>2008-06-01 08:44:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e7%9a%84find%e4%b8%ad%e4%bd%bf%e7%94%a8distinct%e5%8a%9f%e8%83%bdmysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>179</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.pixnet.net/zusocfc</wp:comment_author_url>
			<wp:comment_author_IP>123.204.64.142</wp:comment_author_IP>
			<wp:comment_date>2008-06-23 12:33:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果是有機會update的話
:select記得加上id
不然會造成無法update的窘境
至於DISTINIC
嗯，同學，你前面有打錯字喔:P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails 2.1 释出,众多特性值的尝试</title>
		<link>http://www.iceskysl.com/?p=299</link>
		<pubDate>Mon, 02 Jun 2008 11:15:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在距离<strong>Rails2.0</strong>发布六个月后，<a href="http://weblog.rubyonrails.org/2008/6/1/rails-2-1-time-zones-dirty-caching-gem-dependencies-caching-etc">Rails2.1</a>于6.1号（儿童节）又释出了，按照DHH的说法，在过去的6个月中，有差不多<strong>1400</strong>名贡献者提交了<strong>1600</strong>多个patch，也可以在<a href="https://github.com/rails/rails/tree">GitHub上看到Rails</a>的最活跃的，这次发布包含的新功能有：</p>
<ul>
    <li>Time zones (by Geoff Buesing): <a href="http://mad.ly/2008/04/09/rails-21-time-zone-support-an-overview/">Tutorial</a> | <a href="http://ryandaigle.com/articles/2008/1/25/what-s-new-in-edge-rails-easier-timezones">Introdction</a> | <a href="http://railscasts.com/episodes/106">Railscast</a></li>
    <li>Dirty tracking: <a href="http://ryandaigle.com/articles/2008/3/31/what-s-new-in-edge-rails-dirty-objects">Introduction</a> (<a href="http://ryandaigle.com/articles/2008/4/1/what-s-new-in-edge-rails-partial-updates">partial updates</a>) | <a href="http://railscasts.com/episodes/109">Railscast</a></li>
    <li>Gem Dependencies: <a href="http://ryandaigle.com/articles/2008/4/1/what-s-new-in-edge-rails-gem-dependencies">Introduction</a> | <a href="http://railscasts.com/episodes/110">Railscast</a></li>
    <li>Named scope (by Nick Kallen): <a href="http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality">Introduction</a> | <a href="http://railscasts.com/episodes/108">Railscast</a></li>
    <li><span class="caps">UTC</span>-based migrations: <a href="http://ryandaigle.com/articles/2008/4/2/what-s-new-in-edge-rails-utc-based-migration-versioning">Introduction</a> | <a href="http://railscasts.com/episodes/109">Railscast</a></li>
    <li>Better caching: <a href="http://ryandaigle.com/articles/2007/12/19/what-s-new-in-edge-rails-pluggable-controller-caching">Introduction</a></li>
</ul>
<p>在<a href="http://railscasts.com/">Railscasts</a>上游很多视频教程，在<a href="http://ryandaigle.com/">ryandaigle</a>哪里有很多的特性介绍文章，另外，按照&ldquo;<a href="http://chinaonrails.com/topic/view/1654.html">新教程：跟着2.1转 Rolling with Rails 2.1</a>&rdquo;上的介绍：<em>功能上增强，以及性能上的优化，促使必定要upgrade 到2.1。</em></p>
<p><strong>Update:</strong><br />
刚刚仔细的看了下新特性，发现有几个还是挺不错的，也是我一直以来认为Rails比较别扭的地方，现在改进了很多，例如gem的install和unpack；只update修改的字段，改进migrate的命名规范，dbconsole等等；另外，关于性能的测试还没有进行，测试后将分享给大家。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在距离<strong>Rails2.0</strong>发布六个月后，<a href="http://weblog.rubyonrails.org/2008/6/1/rails-2-1-time-zones-dirty-caching-gem-dependencies-caching-etc">Rails2.1</a>于6.1号（儿童节）又释出了，按照DHH的说法，在过去的6个月中，有差不多<strong>1400</strong>名贡献者提交了<strong>1600</strong>多个patch，也可以在<a href="https://github.com/rails/rails/tree">GitHub上看到Rails</a>的最活跃的，这次发布包含的新功能有：</p>
<ul>
    <li>Time zones (by Geoff Buesing): <a href="http://mad.ly/2008/04/09/rails-21-time-zone-support-an-overview/">Tutorial</a> | <a href="http://ryandaigle.com/articles/2008/1/25/what-s-new-in-edge-rails-easier-timezones">Introdction</a> | <a href="http://railscasts.com/episodes/106">Railscast</a></li>
    <li>Dirty tracking: <a href="http://ryandaigle.com/articles/2008/3/31/what-s-new-in-edge-rails-dirty-objects">Introduction</a> (<a href="http://ryandaigle.com/articles/2008/4/1/what-s-new-in-edge-rails-partial-updates">partial updates</a>) | <a href="http://railscasts.com/episodes/109">Railscast</a></li>
    <li>Gem Dependencies: <a href="http://ryandaigle.com/articles/2008/4/1/what-s-new-in-edge-rails-gem-dependencies">Introduction</a> | <a href="http://railscasts.com/episodes/110">Railscast</a></li>
    <li>Named scope (by Nick Kallen): <a href="http://ryandaigle.com/articles/2008/3/24/what-s-new-in-edge-rails-has-finder-functionality">Introduction</a> | <a href="http://railscasts.com/episodes/108">Railscast</a></li>
    <li><span class="caps">UTC</span>-based migrations: <a href="http://ryandaigle.com/articles/2008/4/2/what-s-new-in-edge-rails-utc-based-migration-versioning">Introduction</a> | <a href="http://railscasts.com/episodes/109">Railscast</a></li>
    <li>Better caching: <a href="http://ryandaigle.com/articles/2007/12/19/what-s-new-in-edge-rails-pluggable-controller-caching">Introduction</a></li>
</ul>
<p>在<a href="http://railscasts.com/">Railscasts</a>上游很多视频教程，在<a href="http://ryandaigle.com/">ryandaigle</a>哪里有很多的特性介绍文章，另外，按照&ldquo;<a href="http://chinaonrails.com/topic/view/1654.html">新教程：跟着2.1转 Rolling with Rails 2.1</a>&rdquo;上的介绍：<em>功能上增强，以及性能上的优化，促使必定要upgrade 到2.1。</em></p>
<p><strong>Update:</strong><br />
刚刚仔细的看了下新特性，发现有几个还是挺不错的，也是我一直以来认为Rails比较别扭的地方，现在改进了很多，例如gem的install和 unpack；只update修改的字段，改进migrate的命名规范，dbconsole等等；另外，关于性能的测试还没有进行，测试后将分享给大 家。</p>]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2008-06-02 11:15:59</wp:post_date>
		<wp:post_date_gmt>2008-06-02 11:15:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-2-1-%e9%87%8a%e5%87%ba%e4%bc%97%e5%a4%9a%e7%89%b9%e6%80%a7%e5%80%bc%e7%9a%84%e5%b0%9d%e8%af%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.30.131.167</wp:comment_author_IP>
			<wp:comment_date>2008-06-03 00:10:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[$ gem update rails
Updating installed gems...
Bulk updating Gem source index for: http://gems.rubyforge.org
Attempting remote update of rails
Successfully installed rails-2.1.0
1 gem installed
Gems updated: rails]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>181</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.67.129</wp:comment_author_IP>
			<wp:comment_date>2008-06-03 22:53:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[要先升级gem。
gem update --system]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fork了backup_fu 插件,将添加FTP传输支持等新特性.</title>
		<link>http://www.iceskysl.com/?p=300</link>
		<pubDate>Mon, 02 Jun 2008 12:50:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[<p>因为项目需要定时将资料打包备份到远程主机或者<strong>Amazon</strong>的<strong>S3</strong>上存储以备不测，我自己写了自动打包，备份的代码，用的也挺好的，但是一直想着可以做成插件之类的分享给更多的人。</p>
<p>今天重新看了下<a href="http://github.com/gravelpup/backup_fu/tree">backup_fu</a>这个插件，其实知道这个插件很早了，但是一直没仔细看它到底是做啥的，今天仔细看了下，原来是专门用来打包、上传到Amazon的S3的上一个插件，其使用的是<strong>aws-s3</strong>类。简单了看了下起代码，发现挺简单的，于是<strong>fork</strong>了一份回来。</p>
<p>然后我将在其基础上做一些现在可以想到的修改和完善：</p>
<p><strong>1、增加FTP远程备份功能</strong> --这个是我fork过来的主要用途，因为不是每个人都用S3的，很多人会选择通过FTP远程备份到另为的主机上；</p>
<p><strong>2、增加对RightScale gems的支持</strong>&nbsp; --尽管aws-s3的口碑不错，但是RightScale 的AWS的gems更加完备和健壮，且有产品级的支持，我自己环境用的也是这个gems，于是打算加入这个的支持。</p>
<p><strong>3、其他的一些比较的修改</strong>&nbsp;&nbsp; --按照我的习惯来修改，如果作者愿意，可以pull过去，呵呵。</p>
<p>如果您有类似的需求，请关注我fork的github：<a href="http://github.com/IceskYsl/backup_fu/tree/master">IceskYsl / backup_fu <br />
</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>因为项目需要定时将资料打包备份到远程主机或者<strong>Amazon</strong>的<strong>S3</strong>上存储以备不测，我自己写了自动打包，备份的代码，用的也挺好的，但是一直想着可以做成插件之类的分享给更多的人。</p>
<p>今天重新看了下<a href="http://github.com/gravelpup/backup_fu/tree">backup_fu</a>这个插件，其实知道这个插件很早了，但是一直没仔细看它到底是做啥的，今天仔细看了下，原来是专门用来打包、上传到Amazon的S3的上一个插件，其使用的是<strong>aws-s3</strong>类。简单了看了下起代码，发现挺简单的，于是<strong>fork</strong>了一份回来。</p>
<p>然后我将在其基础上做一些现在可以想到的修改和完善：</p>
<p><strong>1、增加FTP远程备份功能</strong> --这个是我fork过来的主要用途，因为不是每个人都用S3的，很多人会选择通过FTP远程备份到另为的主机上；</p>
<p><strong>2、增加对RightScale gems的支持</strong>&nbsp; --尽管aws-s3的口碑不错，但是RightScale 的AWS的gems更加完备和健壮，且有产品级的支持，我自己环境用的也是这个gems，于是打算加入这个的支持。</p>
<p><strong>3、其他的一些比较的修改</strong>&nbsp;&nbsp; --按照我的习惯来修改，如果作者愿意，可以pull过去，呵呵。</p>
<p>如果您有类似的需求，请关注我fork的github：<a href="http://github.com/IceskYsl/backup_fu/tree/master">IceskYsl / backup_fu </a></p>]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2008-06-02 12:50:27</wp:post_date>
		<wp:post_date_gmt>2008-06-02 12:50:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fork%e4%ba%86backup_fu-%e6%8f%92%e4%bb%b6%e5%b0%86%e6%b7%bb%e5%8a%a0ftp%e4%bc%a0%e8%be%93%e6%94%af%e6%8c%81%e7%ad%89%e6%96%b0%e7%89%b9%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Rails+Memcached,跑起来嗖嗖的</title>
		<link>http://www.iceskysl.com/?p=301</link>
		<pubDate>Wed, 04 Jun 2008 12:55:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=301</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很早前接触Rails的时候就知道<a href="http://www.danga.com/memcached/">memcached</a>了，只是在自己的服务器上尚未看到这个需求，但是真的不久将来可能出现的情况，还是提前做下功课比较靠谱。</p>
<p>今天在看一篇比较不错的文章&ldquo; <a href="http://blog.zhangjianfeng.com/article/743">从LiveJournal后台发展看大规模网站性能优化方法</a>&rdquo;，该文章说了其<strong>LiveJournal</strong>发展过程中的几个阶段，逐渐的扩展和完善架构，从一个真实的环境中看出其架构的基本趋势。文中提到了memcached，原来memcached就诞生于此，很有兴趣的再多了解一些，memcached属于<a href="http://www.danga.com/">Danga</a>，旗下还有其他几个很著名的东西，比如<a href="http://www.danga.com/mogilefs/">MogileFS</a>等。<br />
Memcached 是高效、快速的分布式内存对象缓存系统，主要用于加速 WEB 动态应用程序。关于Memcached的安装等，可以参考&ldquo;<a href="http://nio.infor96.com/php-memcached/">PHP &amp; memcached</a>&rdquo;这篇文章的说明，基本上和其他unix下的程序安装差不多，下载源码、编译等等，不再赘述。</p>
<p>其使用非常简单，直接就一个命令，连配置文件都省了，如下：</p>
<p><em>/usr/bin/memcached -d -m 128 -l 192.168.10.1 -p 11211 -u httpd</em></p>
<p>其<strong>参数</strong>分别代表：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>-d&nbsp;以守护程序（daemon）方式运行&nbsp;memcached；&nbsp;&nbsp;</span></span></li>
    <li class=""><span>-m&nbsp;设置&nbsp;memcached&nbsp;可以使用的内存大小，单位为&nbsp;M；&nbsp;&nbsp;</span></li>
    <li class="alt"><span>-l&nbsp;设置监听的&nbsp;IP&nbsp;地址，如果是本机的话，通常可以不设置此参数；&nbsp;&nbsp;</span></li>
    <li class=""><span>-p&nbsp;设置监听的端口，默认为&nbsp;11211，所以也可以不设置此参数；&nbsp;&nbsp;</span></li>
    <li class="alt"><span>-u&nbsp;指定用户，如果当前为&nbsp;root&nbsp;的话，需要使用此参数指定用户。&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>如果你想了解在Rails中如何使用，请参cai同学翻译的&rdquo;<a href="http://www.caiwangqin.com/post/297">Ruby on Rails + Memcached</a>&ldquo;，或者直接去看原文；另外，如果你和我一样比较喜欢Nginx做webserver，你可以看看我写的<a href="http://iceskysl.1sters.com/?action=show&amp;id=295">Nginx在Ubuntu上的一系列文章</a>，马上会加上Memcached的相关内容。</p>
<p>&nbsp;</p>
<pre class="code">&nbsp;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前接触Rails的时候就知道<a href="http://www.danga.com/memcached/">memcached</a>了，只是在自己的服务器上尚未看到这个需求，但是真的不久将来可能出现的情况，还是提前做下功课比较靠谱。</p>
<p>今天在看一篇比较不错的文章&ldquo; <a href="http://blog.zhangjianfeng.com/article/743">从LiveJournal后台发展看大规模网站性能优化方法</a>&rdquo;，该文章说了其<strong>LiveJournal</strong>发展过程中的几个阶段，逐渐的扩展和完善架构，从一个真实的环境中看出其架构的基本趋势。文中提到了memcached，原来memcached就诞生于此，很有兴趣的再多了解一些，memcached属于<a href="http://www.danga.com/">Danga</a>，旗下还有其他几个很著名的东西，比如<a href="http://www.danga.com/mogilefs/">MogileFS</a>等。<br />
Memcached 是高效、快速的分布式内存对象缓存系统，主要用于加速 WEB 动态应用程序。关于Memcached的安装等，可以参考&ldquo;<a href="http://nio.infor96.com/php-memcached/">PHP &amp; memcached</a>&rdquo;这篇文章的说明，基本上和其他unix下的程序安装差不多，下载源码、编译等等，不再赘述。</p>
<p>其使用非常简单，直接就一个命令，连配置文件都省了，如下：</p>
<p><em>/usr/bin/memcached -d -m 128 -l 192.168.10.1 -p 11211 -u httpd</em></p>
<p>其<strong>参数</strong>分别代表：</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>-d&nbsp;以守护程序（daemon）方式运行&nbsp;memcached；&nbsp;&nbsp;</span></span></li>
    <li class=""><span>-m&nbsp;设置&nbsp;memcached&nbsp;可以使用的内存大小，单位为&nbsp;M；&nbsp;&nbsp;</span></li>
    <li class="alt"><span>-l&nbsp;设置监听的&nbsp;IP&nbsp;地址，如果是本机的话，通常可以不设置此参数；&nbsp;&nbsp;</span></li>
    <li class=""><span>-p&nbsp;设置监听的端口，默认为&nbsp;11211，所以也可以不设置此参数；&nbsp;&nbsp;</span></li>
    <li class="alt"><span>-u&nbsp;指定用户，如果当前为&nbsp;root&nbsp;的话，需要使用此参数指定用户。&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>如果你想了解在Rails中如何使用，请参cai同学翻译的&rdquo;<a href="http://www.caiwangqin.com/post/297">Ruby on Rails + Memcached</a>&ldquo;，或者直接去看原文；另外，如果你和我一样比较喜欢Nginx做webserver，你可以看看我写的<a href="../../../?action=show&amp;id=295">Nginx在Ubuntu上的一系列文章</a>，马上会加上Memcached的相关内容。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>301</wp:post_id>
		<wp:post_date>2008-06-04 12:55:18</wp:post_date>
		<wp:post_date_gmt>2008-06-04 12:55:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railsmemcached%e8%b7%91%e8%b5%b7%e6%9d%a5%e5%97%96%e5%97%96%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在Ruby中使用WWW::Mechanize来开发爬虫程序.</title>
		<link>http://www.iceskysl.com/?p=302</link>
		<pubDate>Fri, 06 Jun 2008 10:49:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=302</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有的时候需要去一个URL上取一些文字或者简介啥的下来，或者取一些自己需要的内容下来，这个时候虽然可以直接使用<strong>http-net</strong>连到URL上，取回内容，然后自己解析等，但是这在一定程度上算是网络爬虫的范畴。</p>
<p><em><a href="http://  http://mechanize.rubyforge.org/">WWW::Mechanize</a>：The Mechanize library is used for automating interaction with websites. Mechanize automatically stores and sends cookies, follows redirects, can follow links, and submit forms. Form fields can be populated and submitted. Mechanize also keeps track of the sites that you have visited as a history.&nbsp;</em></p>
<p>啊哈，貌似不错，在这个上面构建自己的爬虫应该简单的多了，可以使用它模拟浏览器的行为，但是需要注意的一点是，他模拟浏览器的时候会按照浏览器一样记住&ldquo;历史&rdquo;，如果你不设定历史条数，wowo，请留意你的内存吧,详细的请查看&ldquo;ashchan&rdquo;的文章&rdquo;<a href="http://blog.ashchan.com/archive/2008/06/05/mechanize-memory-issue/">Mechanize的内存问题</a>&ldquo;。</p>
<p>再看段例子吧，真的很简单，他里面使用的是hpricot，大家都比较熟悉了，呵呵，看段代码，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Google</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'mechanize'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>agent&nbsp;=&nbsp;WWW::Mechanize.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>agent.user_agent_alias&nbsp;=&nbsp;<span class="string">'Mac&nbsp;Safari'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>page&nbsp;=&nbsp;agent.get(<span class="string">&quot;http://www.google.com/&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>search_form&nbsp;=&nbsp;page.forms.with.name(<span class="string">&quot;f&quot;</span><span>).first&nbsp;&nbsp;</span></span></li>
    <li class=""><span>search_form.q&nbsp;=&nbsp;<span class="string">&quot;Hello&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>search_results&nbsp;=&nbsp;agent.submit(search_form)&nbsp;&nbsp;</span></li>
    <li class=""><span>puts&nbsp;search_results.body&nbsp;&nbsp;</span></li>
</ol>
</div>
简单吧，其他的请参考他的&ldquo;<a href="http://mechanize.rubyforge.org/mechanize/files/EXAMPLES_txt.html">EXAMPLES.txt</a>&rdquo;，其他信息请到其&ldquo;<a href="http://mechanize.rubyforge.org/mechanize/">Documentation</a>&rdquo;页面上查看吧。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候需要去一个URL上取一些文字或者简介啥的下来，或者取一些自己需要的内容下来，这个时候虽然可以直接使用<strong>http-net</strong>连到URL上，取回内容，然后自己解析等，但是这在一定程度上算是网络爬虫的范畴。</p>
<p><em><a href="http://%20%20http//mechanize.rubyforge.org/">WWW::Mechanize</a>：The Mechanize library is used for automating interaction with websites. Mechanize automatically stores and sends cookies, follows redirects, can follow links, and submit forms. Form fields can be populated and submitted. Mechanize also keeps track of the sites that you have visited as a history.&nbsp;</em></p>
<p>啊哈，貌似不错，在这个上面构建自己的爬虫应该简单的多了，可以使用它模拟浏览器的行为，但是需要注意的一点是，他模拟浏览器的时候会按照浏览器一样记住&ldquo;历史&rdquo;，如果你不设定历史条数，wowo，请留意你的内存吧,详细的请查看&ldquo;ashchan&rdquo;的文章&rdquo;<a href="http://blog.ashchan.com/archive/2008/06/05/mechanize-memory-issue/">Mechanize的内存问题</a>&ldquo;。</p>
<p>再看段例子吧，真的很简单，他里面使用的是hpricot，大家都比较熟悉了，呵呵，看段代码，如下：</p>
<div class="codeText">
<div class="codeHead">Google</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'mechanize'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>agent&nbsp;=&nbsp;WWW::Mechanize.<span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>agent.user_agent_alias&nbsp;=&nbsp;<span class="string">'Mac&nbsp;Safari'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>page&nbsp;=&nbsp;agent.get(<span class="string">&quot;http://www.google.com/&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>search_form&nbsp;=&nbsp;page.forms.with.name(<span class="string">&quot;f&quot;</span><span>).first&nbsp;&nbsp;</span></span></li>
    <li class=""><span>search_form.q&nbsp;=&nbsp;<span class="string">&quot;Hello&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>search_results&nbsp;=&nbsp;agent.submit(search_form)&nbsp;&nbsp;</span></li>
    <li class=""><span>puts&nbsp;search_results.body&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>简单吧，其他的请参考他的&ldquo;<a href="http://mechanize.rubyforge.org/mechanize/files/EXAMPLES_txt.html">EXAMPLES.txt</a>&rdquo;，其他信息请到其&ldquo;<a href="http://mechanize.rubyforge.org/mechanize/">Documentation</a>&rdquo;页面上查看吧。</p>]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2008-06-06 10:49:50</wp:post_date>
		<wp:post_date_gmt>2008-06-06 10:49:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ruby%e4%b8%ad%e4%bd%bf%e7%94%a8wwwmechanize%e6%9d%a5%e5%bc%80%e5%8f%91%e7%88%ac%e8%99%ab%e7%a8%8b%e5%ba%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>182</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.54.134</wp:comment_author_IP>
			<wp:comment_date>2008-06-08 11:55:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很好很强大！  robbin有关于中文分词和类类Google Map/Reduce框架，估计你感兴趣：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>183</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.81.83</wp:comment_author_IP>
			<wp:comment_date>2008-06-09 11:27:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@dbd
robin的那篇文章我看过的，还不错，用到的时候再参考。类似技术还有很多的，：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>提升MYSQL性能可用思路和方案的技术分析</title>
		<link>http://www.iceskysl.com/?p=303</link>
		<pubDate>Fri, 06 Jun 2008 11:41:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[<p>当<strong>MYSQL</strong>成为越来越多的web2站点的选择的DB的时候，当站点越来越大，流量越来越多，用户越来越多的时候，数据库往往第一个成为系统的瓶颈，如何提升DB的性能成为系统成败的关键点，本文只是从自己的认识上说说可以从几个方面提升MYSQL的性能，以及可以采取的扩展方式。但是不会详细的阐述，详细的说明和操作，分析方法以后有时间再仔细分享。</p>
<p><strong>一、选择合适的数据库存贮引擎</strong></p>
<p>MYSQL支持的引擎很多，例如<strong>MyISAM</strong>，<strong>MEMORY</strong>，<strong>InnoDB</strong>等等类型，每个类型试用的场景是不一样的，恰当的选择存储引擎可以节省你不少时间，详细的介绍你可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/storage-engines.html">第15章：存储引擎和表类型</a>&ldquo;。</p>
<p><strong>二、优化SQL语句</strong></p>
<p>不要以为<strong>SQL</strong>语句关系不大，按照以往的经验，往往几个畸形的SQL就可以拖垮一个DB，决定不是危言耸听，在从系统优化和DB优化及其扩展之前，请仔细检查系统中用到的SQL，先解决SQL可能带来的问题，而经验是，做好这步，就可以解决很多初期的性能问题。</p>
<p><strong>三、建立索引</strong></p>
<p>这和前面的<strong>SQL优化</strong>有一定的联系，仔细查看你的SQL语言，尽可能的优化他，然后建立必须的索引，千万不要忽视了索引的威力，我们曾经有过测试，2W条的基本数据，生成页面，没有索引前，推算其全部生成需要的时间是<strong>81</strong>个小时，而加上索引后，只需要<strong>12</strong>分钟，多大的性能提升，各位可以自己那计算器粗略的算算。</p>
<p><strong>四、建立分区&amp;表空间</strong></p>
<p>很多人以为只有<strong>Oracle</strong>才有表空间，分区这些东西，不想到MYSQL中也有类似的东西吧，尽管这个东西是mysql5才引入的，尽管其还不是很成熟，但是毫无疑问，这是一个好的信号，在我们使用MYSQL的时候就有了更多的方案来提升性能了。</p>
<p>分区一般分为水平分区和垂直分区，MYSQL目前只支持水平分区，有RANGE,LIST,HASH,KEY等等分区方式，详细说明以后再说，你可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/partitioning.html">第18章：分区</a>&ldquo;，&quot;<a href="http://fanqiang.chinaunix.net/db/mysql/2006-05-08/4135.shtml">通过分区（Partition）提升MySQL性能</a>&quot;等文章。</p>
<p>表空间的相关话题，可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/ndbcluster.html">第17章：MySQL簇</a>&ldquo;，不在赘述。</p>
<p><strong>五、调整MYSQL和系统参数</strong></p>
<p>这个方案是伴随着整个性能提升过程的，你的不时的调整参数以得到更好的性能，这个比较复杂，没有啥成文的规定，都是靠经验或者实践得到的。</p>
<p><strong>六、集群或者proxy</strong></p>
<p>到这里为止，单机的MYSQL基本上可以优化调整的都涉及到了，如果这个时候还是顶不住压力，该考虑<strong><u>水平扩展</u></strong>或者<strong><u>垂直扩展</u></strong>了，垂直扩展比较容易，只要针对单机的性能得到瓶颈的所在，增加CPU或者内存或者换比较强劲的设备就可以很快得到立竿见影的效果。</p>
<p>但是垂直扩展能力有限，不可能得到无限级的扩展，风险也比较大，除了垂直扩展，大家选择较多的是<strong>水平扩展</strong>，也就是通过增加服务器，无限的得到性能的扩展，当然这个里面内容是很多的，如何做到数据库的<strong>备份</strong>，<strong>同步</strong>等都是需要考虑和解决的问题，而且还要考虑这么多机器间的数据重复成都等问题；除此之外，还有可能将数据库缓存到<strong>memcached</strong>或者使用<strong>mysql proxy</strong>等实现<em>连接池</em>之类的方案，都是需要考虑和抉择的。</p>
<p>以上每个分类都是个大的话题，这么一篇文章只是说明了优化的<u>思路</u>和<u>基本流程</u>，其中涉及到很多东西，例如<strong>诊断</strong>和<strong>分析</strong>等都是很有技术含量的，我们下次会一个专题一个专题的仔细分析，力求将MYSQL的性能达到尽可能的榜。</p>
<p>本人也只是站在自己使用的角度以及一些前人的经验上分析和分享，如果你有类似经验，还望分享，如果文章中有错误的或者不到位的地方，还望指出，谢谢。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>当<strong>MYSQL</strong>成为越来越多的web2站点的选择的DB的时候，当站点越来越大，流量越来越多，用户越来越多的时候，数据库往往第一个 成为系统的瓶颈，如何提升DB的性能成为系统成败的关键点，本文只是从自己的认识上说说可以从几个方面提升MYSQL的性能，以及可以采取的扩展方式。但 是不会详细的阐述，详细的说明和操作，分析方法以后有时间再仔细分享。</p>
<p><strong>一、选择合适的数据库存贮引擎</strong></p>
<p>MYSQL支持的引擎很多，例如<strong>MyISAM</strong>，<strong>MEMORY</strong>，<strong>InnoDB</strong>等等类型，每个类型试用的场景是不一样的，恰当的选择存储引擎可以节省你不少时间，详细的介绍你可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/storage-engines.html">第15章：存储引擎和表类型</a>&ldquo;。</p>
<p><strong>二、优化SQL语句</strong></p>
<p>不要以为<strong>SQL</strong>语句关系不大，按照以往的经验，往往几个畸形的SQL就可以拖垮一个DB，决定不是危言耸听，在从系统优化和DB优化及其扩展之前，请仔细检查系统中用到的SQL，先解决SQL可能带来的问题，而经验是，做好这步，就可以解决很多初期的性能问题。</p>
<p><strong>三、建立索引</strong></p>
<p>这和前面的<strong>SQL优化</strong>有一定的联系，仔细查看你的SQL语言，尽可能的优化他，然后建立必须的索引，千万不要忽视了索引的威力，我们曾经有过测试，2W条的基本数据，生成页面，没有索引前，推算其全部生成需要的时间是<strong>81</strong>个小时，而加上索引后，只需要<strong>12</strong>分钟，多大的性能提升，各位可以自己那计算器粗略的算算。</p>
<p><strong>四、建立分区&amp;表空间</strong></p>
<p>很多人以为只有<strong>Oracle</strong>才有表空间，分区这些东西，不想到MYSQL中也有类似的东西吧，尽管这个东西是mysql5才引入的，尽管其还不是很成熟，但是毫无疑问，这是一个好的信号，在我们使用MYSQL的时候就有了更多的方案来提升性能了。</p>
<p>分区一般分为水平分区和垂直分区，MYSQL目前只支持水平分区，有RANGE,LIST,HASH,KEY等等分区方式，详细说明以后再说，你可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/partitioning.html">第18章：分区</a>&ldquo;，&quot;<a href="http://fanqiang.chinaunix.net/db/mysql/2006-05-08/4135.shtml">通过分区（Partition）提升MySQL性能</a>&quot;等文章。</p>
<p>表空间的相关话题，可以参考&rdquo;<a href="http://dev.mysql.com/doc/refman/5.1/zh/ndbcluster.html">第17章：MySQL簇</a>&ldquo;，不在赘述。</p>
<p><strong>五、调整MYSQL和系统参数</strong></p>
<p>这个方案是伴随着整个性能提升过程的，你的不时的调整参数以得到更好的性能，这个比较复杂，没有啥成文的规定，都是靠经验或者实践得到的。</p>
<p><strong>六、集群或者proxy</strong></p>
<p>到这里为止，单机的MYSQL基本上可以优化调整的都涉及到了，如果这个时候还是顶不住压力，该考虑<strong><u>水平扩展</u></strong>或者<strong><u>垂直扩展</u></strong>了，垂直扩展比较容易，只要针对单机的性能得到瓶颈的所在，增加CPU或者内存或者换比较强劲的设备就可以很快得到立竿见影的效果。</p>
<p>但是垂直扩展能力有限，不可能得到无限级的扩展，风险也比较大，除了垂直扩展，大家选择较多的是<strong>水平扩展</strong>，也就是通过增加服务器，无限的得到性能的扩展，当然这个里面内容是很多的，如何做到数据库的<strong>备份</strong>，<strong>同步</strong>等都是需要考虑和解决的问题，而且还要考虑这么多机器间的数据重复成都等问题；除此之外，还有可能将数据库缓存到<strong>memcached</strong>或者使用<strong>mysql proxy</strong>等实现<em>连接池</em>之类的方案，都是需要考虑和抉择的。</p>
<p>以上每个分类都是个大的话题，这么一篇文章只是说明了优化的<u>思路</u>和<u>基本流程</u>，其中涉及到很多东西，例如<strong>诊断</strong>和<strong>分析</strong>等都是很有技术含量的，我们下次会一个专题一个专题的仔细分析，力求将MYSQL的性能达到尽可能的榜。</p>
<p>本人也只是站在自己使用的角度以及一些前人的经验上分析和分享，如果你有类似经验，还望分享，如果文章中有错误的或者不到位的地方，还望指出，谢谢。</p>]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2008-06-06 11:41:52</wp:post_date>
		<wp:post_date_gmt>2008-06-06 11:41:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8f%90%e5%8d%87mysql%e6%80%a7%e8%83%bd%e5%8f%af%e7%94%a8%e6%80%9d%e8%b7%af%e5%92%8c%e6%96%b9%e6%a1%88%e7%9a%84%e6%8a%80%e6%9c%af%e5%88%86%e6%9e%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>184</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.40.55</wp:comment_author_IP>
			<wp:comment_date>2008-06-09 13:46:07</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://1sters.com貌似没转到http://www.1sters.com:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>185</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.104.93</wp:comment_author_IP>
			<wp:comment_date>2008-06-09 16:26:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我这里貌似可以自动转换过去哦。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WWDC 2008中让人兴奋的那么些消息</title>
		<link>http://www.iceskysl.com/?p=304</link>
		<pubDate>Tue, 10 Jun 2008 08:14:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天夜里熬夜看<strong>欧洲杯</strong>，看<strong>WWDC2008</strong>的直播，一边写代码，实在是够爽，欧洲杯的法国和尼日利亚最终打成0:0，场面比较沉闷，而WWDC却让人非常兴奋。</p>
<p><img src="http://www.apple4.us/images/2007/iPhone3G_6D4C/iphone_3G_1_thumb.jpg" alt="" /></p>
<p>在Twitter上有WWDC的直播，但是Twitter提前就发布消息说其WWDC大会会给twitter增加了10倍的流量，造成twitter非常慢，期间还出现了&ldquo;超过&rdquo;负荷导致twitter崩溃的小片断。</p>
<p>WWDC上最令人激动的消息应该是iphone 3G的推出了，其最最让人激动的应该是其价格大降，<font color="#ff0000">8G的iPhone 3G卖199美元，16G的卖299美元（有白色版本可以选）</font>。之前的iphone价格，不晓得之前 入手的是否会骂jobs呢。。。</p>
<p>另外还有其他的的消息，大家可以<a href="http://apple4.us/2008/06/wwdc-2008-1.html">去apple4us上</a>去看，消息比较全面，这次也非常的及时。看来是时候可以入手了哦。</p>
<p>另外，怎么没看到mac book的消息呢，不是说mac book马上也有新版本的推出么？偶可一直在等呢。。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>昨天夜里熬夜看<strong>欧洲杯</strong>，看<strong>WWDC2008</strong>的直播，一边写代码，实在是够爽，欧洲杯的法国和尼日利亚最终打成0:0，场面比较沉闷，而WWDC却让人非常兴奋。</p>
<p>在Twitter上有WWDC的直播，但是Twitter提前就发布消息说其WWDC大会会给twitter增加了10倍的流量，造成twitter非常慢，期间还出现了&ldquo;超过&rdquo;负荷导致twitter崩溃的小片断。</p>
<p>WWDC上最令人激动的消息应该是iphone 3G的推出了，其最最让人激动的应该是其价格大降，<font color="#ff0000">8G的iPhone 3G卖199美元，16G的卖299美元（有白色版本可以选）</font>。之前的iphone价格，不晓得之前 入手的是否会骂jobs呢。。。</p>
<p>另外还有其他的的消息，大家可以<a href="http://apple4.us/2008/06/wwdc-2008-1.html">去apple4us上</a>去看，消息比较全面，这次也非常的及时。看来是时候可以入手了哦。</p>
<p>另外，怎么没看到mac book的消息呢，不是说mac book马上也有新版本的推出么？偶可一直在等呢。。。</p>]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2008-06-10 08:14:51</wp:post_date>
		<wp:post_date_gmt>2008-06-10 08:14:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wwdc-2008%e4%b8%ad%e8%ae%a9%e4%ba%ba%e5%85%b4%e5%a5%8b%e7%9a%84%e9%82%a3%e4%b9%88%e4%ba%9b%e6%b6%88%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>186</wp:comment_id>
			<wp:comment_author><![CDATA[yawl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://seclib.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>69.251.193.24</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 00:37:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[intel的CPU跳票了，所以暂时出不了新的mac book]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.65.168</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 01:21:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@yawl :
啊，不厚道呀，看来我的Ubuntu还得用一段时间了。
跳票不厚道。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>PayPal携手Skype网络电话，让无线运营商见鬼去吧！</title>
		<link>http://www.iceskysl.com/?p=305</link>
		<pubDate>Tue, 10 Jun 2008 09:54:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=305</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早上收到Paypal的mail，说和skype携手，提供更便宜的资费，又是一个好消息，难道不是么？</p>
<table width="520" cellspacing="1" cellpadding="10" border="0" bgcolor="#cccccc">
    <tbody>
        <tr style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">
            <td bgcolor="#666666" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">可选套餐</td>
            <td bgcolor="#e77518" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">一国通套餐</td>
            <td bgcolor="#91288d" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">亚洲通套餐</td>
            <td bgcolor="#7ab20e" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">世界通套餐</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">拨打范围</td>
            <td bgcolor="#ffffff">可选择拨打全球34个国家地区之一</td>
            <td bgcolor="#ffffff">可拨任意打亚洲4个国家地区</td>
            <td bgcolor="#ffffff">可任意拨打全球34个国家地区</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">超低资费</td>
            <td bgcolor="#ffffff">44元/10000分钟</td>
            <td bgcolor="#ffffff">50元/200分钟</td>
            <td bgcolor="#ffffff">99元/10000分钟</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">标准IP电话资费</td>
            <td bgcolor="#ffffff">
            <p>以中国大陆为例</p>
            0.3元/分钟</td>
            <td bgcolor="#ffffff">
            <p>以日本为例</p>
            3.6元/分钟</td>
            <td bgcolor="#ffffff">
            <p>以美国为例</p>
            2.4元/分钟</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">打1小时</td>
            <td bgcolor="#ffffff">可为您节省17.76元</td>
            <td bgcolor="#ffffff">可为您节省201元</td>
            <td bgcolor="#ffffff">可为您节省143.4元</td>
        </tr>
    </tbody>
</table>
<p>Good，详细信息可以看，&ldquo;<a href="http://skype.tom.com/huodong/paypal/">PayPal携手Skype网络电话&mdash;&mdash;让您直通全球客户</a>&rdquo;，在IP电话逐渐盛行的今天，在<a href="http://iceskysl.1sters.com/?action=show&amp;id=304">iphone价格暴跌</a>的现在，我想那些所谓的&ldquo;运营商&rdquo;们也该胆寒了吧，在自己围墙圈地，拿<strong>政策</strong>来发大财的时候，最后会发现，大家都绕着走，最后圈住的只是他们自己，这真是一个喜剧。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早上收到Paypal的mail，说和skype携手，提供更便宜的资费，又是一个好消息，难道不是么？</p>
<table width="520" cellspacing="1" cellpadding="10" border="0" bgcolor="#cccccc">
    <tbody>
        <tr style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">
            <td bgcolor="#666666" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">可选套餐</td>
            <td bgcolor="#e77518" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">一国通套餐</td>
            <td bgcolor="#91288d" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">亚洲通套餐</td>
            <td bgcolor="#7ab20e" align="center" style="font-size: 14px; font-weight: bold; color: rgb(255, 255, 255);">世界通套餐</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">拨打范围</td>
            <td bgcolor="#ffffff">可选择拨打全球34个国家地区之一</td>
            <td bgcolor="#ffffff">可拨任意打亚洲4个国家地区</td>
            <td bgcolor="#ffffff">可任意拨打全球34个国家地区</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">超低资费</td>
            <td bgcolor="#ffffff">44元/10000分钟</td>
            <td bgcolor="#ffffff">50元/200分钟</td>
            <td bgcolor="#ffffff">99元/10000分钟</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">标准IP电话资费</td>
            <td bgcolor="#ffffff">
            <p>以中国大陆为例</p>
            0.3元/分钟</td>
            <td bgcolor="#ffffff">
            <p>以日本为例</p>
            3.6元/分钟</td>
            <td bgcolor="#ffffff">
            <p>以美国为例</p>
            2.4元/分钟</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">打1小时</td>
            <td bgcolor="#ffffff">可为您节省17.76元</td>
            <td bgcolor="#ffffff">可为您节省201元</td>
            <td bgcolor="#ffffff">可为您节省143.4元</td>
        </tr>
    </tbody>
</table>
<p>Good，详细信息可以看，&ldquo;<a href="http://skype.tom.com/huodong/paypal/">PayPal携手Skype网络电话&mdash;&mdash;让您直通全球客户</a>&rdquo;，在IP电话逐渐盛行的今天，在<a href="../../../?action=show&amp;id=304">iphone价格暴跌</a>的现在，我想那些所谓的&ldquo;运营商&rdquo;们也该胆寒了吧，在自己围墙圈地，拿<strong>政策</strong>来发大财的时候，最后会发现，大家都绕着走，最后圈住的只是他们自己，这真是一个喜剧。</p>]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2008-06-10 09:54:37</wp:post_date>
		<wp:post_date_gmt>2008-06-10 09:54:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paypal%e6%90%ba%e6%89%8bskype%e7%bd%91%e7%bb%9c%e7%94%b5%e8%af%9d%ef%bc%8c%e8%ae%a9%e6%97%a0%e7%ba%bf%e8%bf%90%e8%90%a5%e5%95%86%e8%a7%81%e9%ac%bc%e5%8e%bb%e5%90%a7%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>HAProxy,智能分流的负载均衡方案。</title>
		<link>http://www.iceskysl.com/?p=306</link>
		<pubDate>Tue, 10 Jun 2008 17:38:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[<p>以前说过，我最喜欢的一个跑Rails的方式是Nginx在前面，后端采用mongrel或者thin，采用nginx的原因不在多说，想详细了解 nginx的参考我以前的文章，按照道理来说，这样的方案已经很不错了，如果再加上memcached做cach，应该可以顶住不小的压力了。<br />
但是其当时也说到，Nginx的负载均衡到目前为止还是比较简单的轮训算法，他不会检测后端的mongrel是否压力过大，或者是否已经down下去了，这样就会初选，如果其中的一个mongrel挂掉了，nginx还是会把请求分过去的，这样就存在一个问题。<br />
<br />
于是就有这么一个需求，能不能监控到后端的mongrel的状况，做智能分发呢？啊哈，是的，可以，<a href="http://haproxy.1wt.eu/download/1.2/doc/architecture.txt">HAProxy</a>就可以做到这点。先看个改进版的架构。<br />
<img alt="" src="http://www.igvita.com/posts/05-08/haproxy-diagram.png" /><br />
ok，比较清晰吧，Nginx接收到请求后，放到RequestQueue中，然后HAProxy从queue中取请求，智能的分发给后端的 App.Server。如此处理的好处就是HAProxy可以判断后端App.Server的负载情况以及是否down机情况，然后做智能分发。</p>
<p>OK,比较清晰了，我们再把Memcached加上，再加上智能判断一台服务器Down掉的情况，我再画个图片，如下：</p>
<p><img src="http://lh3.ggpht.com/iceskysl/SE-chiVdktI/AAAAAAAACIY/QAcLzs3Nzbc/s400/haproxy_nginx_mongrel.jpg" alt="" /></p>
<p>参考文章：<br />
1、<a href="http://chinaonrails.com/topic/view/1619/1.html">HAproxy做负载均衡</a><br />
2、<a href="http://www.opensourcery.co.za/2008/05/15/nginx-reading-the-fine-print/">nginx - Reading the fine print </a><br />
3、<a href="http://brainspl.at/articles/2007/01/03/new-nginx-conf-with-optimizations">New Nginx.conf with optimizations</a><br />
4、<a href="http://www.igvita.com/2008/05/13/load-balancing-qos-with-haproxy/">Load Balancing &amp; QoS with HAProxy</a><br />
5、<a href="http://blog.hungrymachine.com/2008/3/27/analyzing-application-performance-with-haproxy-stats">Reviewing Application Health with HAProxy Stats</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前说过，我最喜欢的一个跑Rails的方式是Nginx在前面，后端采用mongrel或者thin，采用nginx的原因不在多说，想详细了解 nginx的参考我以前的文章，按照道理来说，这样的方案已经很不错了，如果再加上memcached做cach，应该可以顶住不小的压力了。<br />
但是其当时也说到，Nginx的负载均衡到目前为止还是比较简单的轮训算法，他不会检测后端的mongrel是否压力过大，或者是否已经down下去了，这样就会初选，如果其中的一个mongrel挂掉了，nginx还是会把请求分过去的，这样就存在一个问题。<br />
<br />
于是就有这么一个需求，能不能监控到后端的mongrel的状况，做智能分发呢？啊哈，是的，可以，<a href="http://haproxy.1wt.eu/download/1.2/doc/architecture.txt">HAProxy</a>就可以做到这点。先看个改进版的架构。<br />
<img alt="" src="http://www.igvita.com/posts/05-08/haproxy-diagram.png" /><br />
ok，比较清晰吧，Nginx接收到请求后，放到RequestQueue中，然后HAProxy从queue中取请求，智能的分发给后端的 App.Server。如此处理的好处就是HAProxy可以判断后端App.Server的负载情况以及是否down机情况，然后做智能分发。</p>
<p>OK,比较清晰了，我们再把Memcached加上，再加上智能判断一台服务器Down掉的情况，我再画个图片，如下：</p>
<p><img src="http://lh3.ggpht.com/iceskysl/SE-chiVdktI/AAAAAAAACIY/QAcLzs3Nzbc/s400/haproxy_nginx_mongrel.jpg" alt="" /></p>
<p>参考文章：<br />
1、<a href="http://chinaonrails.com/topic/view/1619/1.html">HAproxy做负载均衡</a><br />
2、<a href="http://www.opensourcery.co.za/2008/05/15/nginx-reading-the-fine-print/">nginx - Reading the fine print </a><br />
3、<a href="http://brainspl.at/articles/2007/01/03/new-nginx-conf-with-optimizations">New Nginx.conf with optimizations</a><br />
4、<a href="http://www.igvita.com/2008/05/13/load-balancing-qos-with-haproxy/">Load Balancing &amp; QoS with HAProxy</a><br />
5、<a href="http://blog.hungrymachine.com/2008/3/27/analyzing-application-performance-with-haproxy-stats">Reviewing Application Health with HAProxy Stats</a></p>]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2008-06-10 17:38:09</wp:post_date>
		<wp:post_date_gmt>2008-06-10 17:38:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>haproxy%e6%99%ba%e8%83%bd%e5%88%86%e6%b5%81%e7%9a%84%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1%e6%96%b9%e6%a1%88%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[haha]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.64.71.127</wp:comment_author_IP>
			<wp:comment_date>2008-06-10 23:39:44</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[为什么haproxy前面还要有一个nginx呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.65.168</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 00:04:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@haha:
Nginx在处理静态资源的时候还是很棒的，如果再加上memcached，可以处理掉很多请求，剩下的需要Rails App server的请求再通过HA负载给后面的App.server群。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[Sparkle]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weavesky.com</wp:comment_author_url>
			<wp:comment_author_IP>218.20.14.135</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 16:26:59</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RequestQueue是什么东西？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://bjdnion@163.com</wp:comment_author_url>
			<wp:comment_author_IP>61.135.155.34</wp:comment_author_IP>
			<wp:comment_date>2008-10-13 14:40:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ha-proxy的后端宕了，能否不返回503？
我用的balance模式是url
让他直接按原url重新访就能跳到另一台后端，这个怎么配置？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>192</wp:comment_id>
			<wp:comment_author><![CDATA[mess]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.154.3</wp:comment_author_IP>
			<wp:comment_date>2009-03-27 12:10:52</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如何配置才能实现下列要求:
1、浏览器与webserver采用长连接。
2、对于同一个用户每次请求都发给同一个appserver(mongrel)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中使用will_Paginate的分页技巧</title>
		<link>http://www.iceskysl.com/?p=307</link>
		<pubDate>Wed, 11 Jun 2008 01:34:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=307</guid>
		<description></description>
		<content:encoded><![CDATA[<p>WillPaginate这个插件很棒，以至于其取代了Rails中原有的Paginate方法，虽然看上其很简单，其实还是有不少技巧的，本篇用来记录我遇到的或者使用到的一些tips。<br />
<br />
<strong>1.直接使用paginate</strong><br />
这个比较简单，也是使用的最多的，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.get_all_items_in_catelog(&nbsp;catelog_id,page,per_page=</span><span class="string">&quot;10&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;paginate&nbsp;<span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;per_page,&nbsp;</span><span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:conditions</span><span>&nbsp;=&gt;[</span><span class="string">&quot;catelog_id&nbsp;=&nbsp;?&nbsp;and&nbsp;caiji&nbsp;&gt;&nbsp;0&quot;</span><span>,catelog_id],&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:order</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'created_at&nbsp;DESC&nbsp;,updated_at&nbsp;&nbsp;DESC'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>&nbsp;2.使用Model.paginate_by_sql</strong><br />
有的时候，你需要的SQL用Rails拼的时候有些不方便，这个时候可以考虑使用paginate_by_sql来实现，这个没啥好说的，你需要什么样的SQL直接写就可以了，例如：<br />
&nbsp; #排行榜列表</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.get_all_items_in_rank(rank_id,&nbsp;page,per_page=</span><span class="string">&quot;10&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Book.paginate_by_sql&nbsp;[<span class="string">&quot;SELECT&nbsp;DISTINCT&nbsp;`books`.*&nbsp;FROM&nbsp;`books`&nbsp;LEFT&nbsp;OUTER&nbsp;JOIN&nbsp;`ranksorts` <br />
    </span></span></li>
    <li class=""><span><span class="string">ON&nbsp;(`books`.`prodid`&nbsp;=&nbsp;`ranksorts`.`prodid`)&nbsp;LEFT&nbsp;OUTER&nbsp;JOIN&nbsp;`ranks`&nbsp; <br />
    </span></span></li>
    <li class=""><span><span class="string">ON&nbsp;(`ranks`.`id`&nbsp;=&nbsp;`ranksorts`.`rank_id`)&nbsp;WHERE&nbsp;(ranks.id&nbsp;=&nbsp;?) <br />
    </span></span></li>
    <li class=""><span><span class="string">ORDER&nbsp;BY&nbsp;books.updated_at&nbsp;DESC,books.created_at&nbsp;DESC&quot;</span><span>,&nbsp;rank_id],&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;</span><span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;per_page&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>还有其他的一些小技巧，慢慢添加，你如果有类似的技巧，期待您的分享。。<br />
<br />
参考文档：<br />
1、<a href="http://errtheblog.com/posts/56-im-paginating-again">I'm Paginating Again</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>WillPaginate这个插件很棒，以至于其取代了Rails中原有的Paginate方法，虽然看上其很简单，其实还是有不少技巧的，本篇用来记录我遇到的或者使用到的一些tips。<br />
<br />
<strong>1.直接使用paginate</strong><br />
这个比较简单，也是使用的最多的，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.get_all_items_in_catelog(&nbsp;catelog_id,page,per_page=</span><span class="string">&quot;10&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;paginate&nbsp;<span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;per_page,&nbsp;</span><span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:conditions</span><span>&nbsp;=&gt;[</span><span class="string">&quot;catelog_id&nbsp;=&nbsp;?&nbsp;and&nbsp;caiji&nbsp;&gt;&nbsp;0&quot;</span><span>,catelog_id],&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:order</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'created_at&nbsp;DESC&nbsp;,updated_at&nbsp;&nbsp;DESC'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>&nbsp;2.使用Model.paginate_by_sql</strong><br />
有的时候，你需要的SQL用Rails拼的时候有些不方便，这个时候可以考虑使用paginate_by_sql来实现，这个没啥好说的，你需要什么样的SQL直接写就可以了，例如：<br />
&nbsp; #排行榜列表</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.get_all_items_in_rank(rank_id,&nbsp;page,per_page=</span><span class="string">&quot;10&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Book.paginate_by_sql&nbsp;[<span class="string">&quot;SELECT&nbsp;DISTINCT&nbsp;`books`.*&nbsp;FROM&nbsp;`books`&nbsp;LEFT&nbsp;OUTER&nbsp;JOIN&nbsp;`ranksorts` <br />
    </span></span></li>
    <li class=""><span><span class="string">ON&nbsp;(`books`.`prodid`&nbsp;=&nbsp;`ranksorts`.`prodid`)&nbsp;LEFT&nbsp;OUTER&nbsp;JOIN&nbsp;`ranks`&nbsp; <br />
    </span></span></li>
    <li class=""><span><span class="string">ON&nbsp;(`ranks`.`id`&nbsp;=&nbsp;`ranksorts`.`rank_id`)&nbsp;WHERE&nbsp;(ranks.id&nbsp;=&nbsp;?) <br />
    </span></span></li>
    <li class=""><span><span class="string">ORDER&nbsp;BY&nbsp;books.updated_at&nbsp;DESC,books.created_at&nbsp;DESC&quot;</span><span>,&nbsp;rank_id],&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:page</span><span>&nbsp;=&gt;&nbsp;page,&nbsp;</span><span class="symbol">:per_page</span><span>&nbsp;=&gt;&nbsp;per_page&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>还有其他的一些小技巧，慢慢添加，你如果有类似的技巧，期待您的分享。。</p>]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2008-06-11 01:34:21</wp:post_date>
		<wp:post_date_gmt>2008-06-11 01:34:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e4%bd%bf%e7%94%a8will_paginate%e7%9a%84%e5%88%86%e9%a1%b5%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.65.168</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 01:36:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[关于has_many等等几个API，可以参考这里：
http://www.railsapi.org:8100/activerecord-associations-classmethods-has_many]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.65.168</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 01:37:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以在页面上显示一些统计信息：
# 统计信息：
# 共<%=@books.total_entries%>条, 共<%=@books.page_count %>页,当前第<%= @books.current_page%>页.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.65.168</wp:comment_author_IP>
			<wp:comment_date>2008-06-11 01:38:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以指定显示文字：
 <%= will_paginate @books,:prev_label=> '上一页',:next_label=> '下一页' %>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[asss]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.180.254.195</wp:comment_author_IP>
			<wp:comment_date>2008-11-11 11:03:32</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有用]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Rails在MySQL的大表中add_column很慢的问题!</title>
		<link>http://www.iceskysl.com/?p=308</link>
		<pubDate>Thu, 12 Jun 2008 17:05:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=308</guid>
		<description></description>
		<content:encoded><![CDATA[<p>项目使用Rails开发，DB采用的是MySQL，有一个不算复杂的表A，记录数差不多50W条数据，现在想增加一个列属性，于是很自然的想到Rails中的<a href="http://www.railsbrain.com/api/rails-1.2.3/doc/index.html?a=M001173&amp;name=add_column">add_column</a>，然后rake迁移数据，但是等了很久未见执行完毕，诡异。<br />
初步判断是由于表里的记录太多了，查下add_column是怎杨的，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;File&nbsp;activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb,&nbsp;line&nbsp;121</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>121:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;add_column(table_name,&nbsp;column_name,&nbsp;type,&nbsp;options&nbsp;=&nbsp;{})&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>122:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_column_sql&nbsp;=&nbsp;<span class="string">&quot;ALTER&nbsp;TABLE&nbsp;#{table_name}&nbsp;ADD&nbsp;#{quote_column_name(column_name)}&nbsp;#{type_to_sql(type,&nbsp;options[:limit],&nbsp;options[:precision],&nbsp;options[:scale])}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>123:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_column_options!(add_column_sql,&nbsp;options)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>124:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execute(add_column_sql)&nbsp;&nbsp;</span></li>
    <li class=""><span>125:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>恩，挺直接的，就是：<br />
<span><span class="string"><strong>ALTER&nbsp;TABLE table_name ADD column_name </strong>，貌似没啥问题，看来是MySQL的问题，和Rails无关，Google下资料，发现&ldquo;<a href="http://forums.mysql.com/read.php?21,158101,158101#msg-158101">change index or add column in a very big table</a>&rdquo;和我遇到的问题基本一致，但是其回复中并没有说道如何解决或者如何提升性能。<br />
继续Google，找到&ldquo;<a href="http://www.mysqlperformanceblog.com/2006/06/09/why-mysql-could-be-slow-with-large-tables/#comment-1778">Why MySQL could be slow with large tables ?</a>&rdquo;这篇文章，谈到了为什么说MySQL在大表的时候会很慢，其观点是和表的结构设计有关。其有人回复说&ldquo;<em>I have a table with 35 mil records. When I wanted to add a column (alter table) I would take about 2 days.</em>&rdquo;，和我的问题一致，这个文章很好，建议各位有时间的仔细看看。<br />
但是我的这个数据表结构并不复杂，如何能提升其速度呢，还在研究中，有了思路会再更新上来。<br />
</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>项目使用Rails开发，DB采用的是MySQL，有一个不算复杂的表A，记录数差不多50W条数据，现在想增加一个列属性，于是很自然的想到Rails中的<a href="http://www.railsbrain.com/api/rails-1.2.3/doc/index.html?a=M001173&amp;name=add_column">add_column</a>，然后rake迁移数据，但是等了很久未见执行完毕，诡异。<br />
初步判断是由于表里的记录太多了，查下add_column是怎杨的，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;File&nbsp;activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb,&nbsp;line&nbsp;121</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>121:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;add_column(table_name,&nbsp;column_name,&nbsp;type,&nbsp;options&nbsp;=&nbsp;{})&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>122:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_column_sql&nbsp;=&nbsp;<span class="string">&quot;ALTER&nbsp;TABLE&nbsp;#{table_name}&nbsp;ADD&nbsp;#{quote_column_name(column_name)}&nbsp;#{type_to_sql(type,&nbsp;options[:limit],&nbsp;options[:precision],&nbsp;options[:scale])}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>123:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_column_options!(add_column_sql,&nbsp;options)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>124:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;execute(add_column_sql)&nbsp;&nbsp;</span></li>
    <li class=""><span>125:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>恩，挺直接的，就是：<br />
<span><span class="string"><strong>ALTER&nbsp;TABLE table_name ADD column_name </strong>，貌似没啥问题，看来是MySQL的问题，和Rails无关，Google下资料，发现&ldquo;<a href="http://forums.mysql.com/read.php?21,158101,158101#msg-158101">change index or add column in a very big table</a>&rdquo;和我遇到的问题基本一致，但是其回复中并没有说道如何解决或者如何提升性能。<br />
继续Google，找到&ldquo;<a href="http://www.mysqlperformanceblog.com/2006/06/09/why-mysql-could-be-slow-with-large-tables/#comment-1778">Why MySQL could be slow with large tables ?</a>&rdquo;这篇文章，谈到了为什么说MySQL在大表的时候会很慢，其观点是和表的结构设计有关。其有人回复说&ldquo;<em>I have a table with 35 mil records. When I wanted to add a column (alter table) I would take about 2 days.</em>&rdquo;，和我的问题一致，这个文章很好，建议各位有时间的仔细看看。<br />
但是我的这个数据表结构并不复杂，如何能提升其速度呢，还在研究中，有了思路会再更新上来。<br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2008-06-12 17:05:21</wp:post_date>
		<wp:post_date_gmt>2008-06-12 17:05:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8rails%e5%9c%a8mysql%e7%9a%84%e5%a4%a7%e8%a1%a8%e4%b8%adadd_column%e5%be%88%e6%85%a2%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:31:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似和上面的没关系，找了几个分析工具做了下mysql诊断。。
MySQL 5.0.51a-3ubuntu5.  uptime 0 2:6:21        Thu Jun 12 21:24:05 2008
发现如下有些诡异：
Scan              212     0.0/s %SELECT: 424.00
__ Questions ___________________________________________________________
Total             921     0.1/s
  Com_            581     0.1/s  %Total:  63.08
  QC Hits         285     0.0/s           30.94
  DMS              57     0.0/s            6.19
  -Unknown         25     0.0/s            2.71
  COM_QUIT         23     0.0/s            2.50
Slow 10 s          12     0.0/s            1.30  %DMS:  21.05  Log: OFF]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:39:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以看到，建立索引也很慢的：
iceskysl@IceskYsl:/opt/devroot/book$ rake db:migrate  --trace
(in /opt/devroot/book)
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:migrate
== 53 AddStepsToBookss: migrating ==============================================
-- add_index(:books, :shorturl)
   -> 560.3587s
-- add_index(:books, :caiji)
   -> 687.1524s
== 53 AddStepsTobooks: migrated (1247.5113s) ==================================

可以看到，建立索引也很慢的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:50:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以看到，删除列属性也挺慢的，如下：
iceskysl@IceskYsl:/opt/devroot/Taojer$ rake db:migrate VERSION=52  --trace
(in /opt/devroot/Taojer)
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:migrate
== 53 AddStepsTobooks: reverting ==============================================
-- remove_column(:books, :steps)
   -> 550.6079s
-- remove_column(:books, :visible)
   -> 549.2557s
== 53 AddStepsTobooks: reverted (1099.8639s) ==================================

** Invoke db:schema:dump (first_time)
** Invoke environment
** Execute db:schema:dump

可以看到，没增加一个列属性，基本上是消耗10分钟...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:53:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看到后台把schema_info扫了很多遍，如下：
  SQL (0.000095)   SELECT version FROM schema_info
  SQL (0.000094)   SELECT version FROM schema_info
  SQL (0.000096)   SELECT version FROM schema_info
  SQL (0.000093)   SELECT version FROM schema_info
  SQL (0.000102)   SELECT version FROM schema_info
  SQL (0.000094)   SELECT version FROM schema_info
  SQL (0.000094)   SELECT version FROM schema_info

应该就是在上面看到：
Scan              212     0.0/s %SELECT: 424.00
这个全表扫描的来源。。。不解。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 22:13:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不删索引直接添加列属性，效果如下：
iceskysl@IceskYsl:/opt/devroot/Taojer$ rake db:migrate  --trace
(in /opt/devroot/Taojer)
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:migrate
== 53 AddStepsTobooks: migrating ==============================================
-- add_column(:books, :steps, :integer)
   -> 570.8094s
-- add_column(:books, :visible, :integer, {:default=>0})
   -> 569.9124s
== 53 AddStepsTobooks: migrated (1140.7222s) ==================================

** Invoke db:schema:dump (first_time)
** Invoke environment
** Execute db:schema:dump

可以看到，默认值几乎没啥影响，如上。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ubuntu8.04安装gem install mysql 出错</title>
		<link>http://www.iceskysl.com/?p=309</link>
		<pubDate>Thu, 12 Jun 2008 20:48:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=309</guid>
		<description></description>
		<content:encoded><![CDATA[<p>问题：在ubuntu8.04中，使用</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>sudo&nbsp;gem&nbsp;install&nbsp;mysql&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">sudo gem install mysql</pre>
<p>出现：</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>ERROR:&nbsp;&nbsp;While&nbsp;executing&nbsp;gem&nbsp;...&nbsp;(RuntimeError)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;ERROR:&nbsp;Failed&nbsp;to&nbsp;build&nbsp;gem&nbsp;<span class="keyword">native</span><span>&nbsp;extension.&nbsp;&nbsp;</span></span></li>
    <li><span>Gem&nbsp;files&nbsp;will&nbsp;remain&nbsp;installed&nbsp;in&nbsp;/usr/lib/ruby/gems/<span class="number">1.8</span><span>/gems/mys&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">ERROR:  While executing gem ... (RuntimeError)     ERROR: Failed to build gem native extension. Gem files will remain installed in /usr/lib/ruby/gems/1.8/gems/mys</pre>
<p><strong>解决方案</strong> <br />
1.先运行</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>$&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;libmysqlclient15-dev&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">$ sudo apt-get install libmysqlclient15-dev</pre>
<p><em>注意</em>上面安装的库名为<span style="color: blue;">libmysqlclient15-dev</span>而非<span style="color: blue;">libmysqlclient5-dev</span> <br />
<br />
2.再运行 <br />
<span><span>sudo&nbsp;gem&nbsp;install&nbsp;mysql</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>问题：在ubuntu8.04中，使用</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>sudo&nbsp;gem&nbsp;install&nbsp;mysql&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">sudo gem install mysql</pre>
<p>出现：</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>ERROR:&nbsp;&nbsp;While&nbsp;executing&nbsp;gem&nbsp;...&nbsp;(RuntimeError)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;ERROR:&nbsp;Failed&nbsp;to&nbsp;build&nbsp;gem&nbsp;<span class="keyword">native</span><span>&nbsp;extension.&nbsp;&nbsp;</span></span></li>
    <li><span>Gem&nbsp;files&nbsp;will&nbsp;remain&nbsp;installed&nbsp;in&nbsp;/usr/lib/ruby/gems/<span class="number">1.8</span><span>/gems/mys&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">ERROR:  While executing gem ... (RuntimeError)     ERROR: Failed to build gem native extension. Gem files will remain installed in /usr/lib/ruby/gems/1.8/gems/mys</pre>
<p><strong>解决方案</strong> <br />
1.先运行</p>
<div class="dp-highlighter">
<ol start="1" class="dp-j">
    <li><span><span>$&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;libmysqlclient15-dev&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<pre class="java" name="code" style="display: none;">$ sudo apt-get install libmysqlclient15-dev</pre>
<p><em>注意</em>上面安装的库名为<span style="color: blue;">libmysqlclient15-dev</span>而非<span style="color: blue;">libmysqlclient5-dev</span> <br />
<br />
2.再运行 <br />
<span><span>sudo&nbsp;gem&nbsp;install&nbsp;mysql</span></span></p>]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2008-06-12 20:48:07</wp:post_date>
		<wp:post_date_gmt>2008-06-12 20:48:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu8-04%e5%ae%89%e8%a3%85gem-install-mysql-%e5%87%ba%e9%94%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:12:53</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[iceskysl@IceskYsl:~$ sudo apt-get install libmysqlclient15-dev
正在读取软件包列表... 完成
正在分析软件包的依赖关系树
读取状态信息... 完成
建议安装的软件包：
  mysql-doc-5.0
下列【新】软件包将被安装：
  libmysqlclient15-dev
共升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 34 个软件未被升级。
需要下载 7214kB 的软件包。
操作完成后，会消耗掉 20.7MB 的额外磁盘空间。
获取：1 http://ubuntu.csie.ntu.edu.tw hardy-updates/main libmysqlclient15-dev 5.0.51a-3ubuntu5.1 [7214kB]
下载 7214kB，耗时 1min27s (82.1kB/s)
选中了曾被取消选择的软件包 libmysqlclient15-dev。
(正在读取数据库 ... 系统当前总共安装有 216033 个文件和目录。)
正在解压缩 libmysqlclient15-dev (从 .../libmysqlclient15-dev_5.0.51a-3ubuntu5.1_i386.deb) ...
正在设置 libmysqlclient15-dev (5.0.51a-3ubuntu5.1) ...

Processing triggers for libc6 ...
ldconfig deferred processing now taking place]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.66.243</wp:comment_author_IP>
			<wp:comment_date>2008-06-12 21:20:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[iceskysl@IceskYsl:~$ gem install mysql
Bulk updating Gem source index for: http://gems.rubyforge.org/
Building native extensions.  This could take a while...
Successfully installed mysql-2.7
1 gem installed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>204</wp:comment_id>
			<wp:comment_author><![CDATA[yanghuan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.107.24.206</wp:comment_author_IP>
			<wp:comment_date>2009-06-16 18:31:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请问这个问题到底是什么引起的呢??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ubuntu:gzip: stdout: No space left on device</title>
		<link>http://www.iceskysl.com/?p=310</link>
		<pubDate>Thu, 12 Jun 2008 20:59:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=310</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>问题:</strong><br />
iceskysl@IceskYsl:/boot$ sudo dpkg --configure -a<br />
正在设置 initramfs-tools (0.85eubuntu39.1) ...<br />
update-initramfs: deferring update (trigger activated)<br />
<br />
正在设置 linux-ubuntu-modules-2.6.24-18-generic (2.6.24-18.26) ...<br />
update-initramfs: Generating /boot/initrd.img-2.6.24-18-generic<br />
<br />
正在设置 linux-image-generic (2.6.24.18.20) ...<br />
正在设置 linux-generic (2.6.24.18.20) ...<br />
Processing triggers for initramfs-tools ...<br />
update-initramfs: Generating /boot/initrd.img-2.6.24-18-generic<br />
<br />
<span style="background-color: rgb(255, 0, 0);">gzip: stdout: No space left on device</span><br />
update-initramfs: failed for /boot/initrd.img-2.6.24-18-generic<br />
dpkg: 子进程 post-installation script 返回了错误号 1<br />
<br />
<strong>解决：</strong><br />
<span class="postbody">uname -a 看自己用的什么 <br />
dpkg --get-selections|grep linux 看机器里都装了什么 <br />
sudo apt-get remove linux-image-2.6.XX 直接删  XX替代为不用的 <br />
或者用新立得搜索到不用的卸载</span><br />
<br />
<strong>实践:</strong><br />
<strong>iceskysl@IceskYsl:~$ uname -a</strong><br />
Linux IceskYsl 2.6.24-17-generic #1 SMP Thu May 1 14:31:33 UTC 2008 i686 GNU/Linux<br />
<strong>iceskysl@IceskYsl:~$ dpkg --get-selections|grep linux</strong><br />
libselinux1&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-15&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-15-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-16&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-16&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-17&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-18&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.20-15-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; deinstall<br />
linux-image-2.6.20-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.22-14-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-libc-dev&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.20-15-generic&nbsp;&nbsp;&nbsp; deinstall<br />
linux-restricted-modules-2.6.20-16-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.22-14-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-16-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-17-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-18-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-common&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-sound-base&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.22-14-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
util-linux&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
util-linux-locales&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
<strong>iceskysl@IceskYsl:~$ sudo apt-get remove linux-image-2.6.20-16-generic</strong><br />
正在读取软件包列表... 完成<br />
正在分析软件包的依赖关系树&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />
读取状态信息... 完成&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />
下列软件包将被【卸载】：<br />
&nbsp; linux-image-2.6.20-16-generic linux-restricted-modules-2.6.20-16-generic<br />
共升级了 0 个软件包，新安装了 0 个软件包，要卸载 2 个软件包，有 34 个软件未被升级。<br />
操作完成后，会释放 114MB 的磁盘空间。<br />
您希望继续执行吗？[Y/n]y<br />
(正在读取数据库 ... 系统当前总共安装有 218707 个文件和目录。)<br />
正在删除 linux-restricted-modules-2.6.20-16-generic ...<br />
FATAL: Could not open '/boot/System.map-2.6.20-16-generic': No such file or directory<br />
正在删除 linux-image-2.6.20-16-generic ...<br />
Running postrm hook script /sbin/update-grub.<br />
Searching for GRUB installation directory ... found: /boot/grub<br />
Searching for default file ... found: /boot/grub/default<br />
Testing for an existing GRUB menu.lst file ... found: /boot/grub/menu.lst<br />
Searching for splash image ... none found, skipping ...<br />
Found kernel: /vmlinuz-2.6.24-18-generic<br />
Found kernel: /memtest86+.bin<br />
Updating /boot/grub/menu.lst ... done</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>问题:</strong><br />
iceskysl@IceskYsl:/boot$ sudo dpkg --configure -a<br />
正在设置 initramfs-tools (0.85eubuntu39.1) ...<br />
update-initramfs: deferring update (trigger activated)<br />
<br />
正在设置 linux-ubuntu-modules-2.6.24-18-generic (2.6.24-18.26) ...<br />
update-initramfs: Generating /boot/initrd.img-2.6.24-18-generic<br />
<br />
正在设置 linux-image-generic (2.6.24.18.20) ...<br />
正在设置 linux-generic (2.6.24.18.20) ...<br />
Processing triggers for initramfs-tools ...<br />
update-initramfs: Generating /boot/initrd.img-2.6.24-18-generic<br />
<br />
<span style="background-color: rgb(255, 0, 0);">gzip: stdout: No space left on device</span><br />
update-initramfs: failed for /boot/initrd.img-2.6.24-18-generic<br />
dpkg: 子进程 post-installation script 返回了错误号 1<br />
<br />
<strong>解决：</strong><br />
<span class="postbody">uname -a 看自己用的什么 <br />
dpkg --get-selections|grep linux 看机器里都装了什么 <br />
sudo apt-get remove linux-image-2.6.XX 直接删  XX替代为不用的 <br />
或者用新立得搜索到不用的卸载</span><br />
<br />
<strong>实践:</strong><br />
<strong>iceskysl@IceskYsl:~$ uname -a</strong><br />
Linux IceskYsl 2.6.24-17-generic #1 SMP Thu May 1 14:31:33 UTC 2008 i686 GNU/Linux<br />
<strong>iceskysl@IceskYsl:~$ dpkg --get-selections|grep linux</strong><br />
libselinux1&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-15&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-15-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-16&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.20-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-16&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-17&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-18&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-headers-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.20-15-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; deinstall<br />
linux-image-2.6.20-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.22-14-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-image-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-libc-dev&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.20-15-generic&nbsp;&nbsp;&nbsp; deinstall<br />
linux-restricted-modules-2.6.20-16-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.22-14-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-16-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-17-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-2.6.24-18-generic&nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-common&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-restricted-modules-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-sound-base&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.22-14-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-16-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-17-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
linux-ubuntu-modules-2.6.24-18-generic&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
util-linux&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
util-linux-locales&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; install<br />
<strong>iceskysl@IceskYsl:~$ sudo apt-get remove linux-image-2.6.20-16-generic</strong><br />
正在读取软件包列表... 完成<br />
正在分析软件包的依赖关系树&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />
读取状态信息... 完成&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />
下列软件包将被【卸载】：<br />
&nbsp; linux-image-2.6.20-16-generic linux-restricted-modules-2.6.20-16-generic<br />
共升级了 0 个软件包，新安装了 0 个软件包，要卸载 2 个软件包，有 34 个软件未被升级。<br />
操作完成后，会释放 114MB 的磁盘空间。<br />
您希望继续执行吗？[Y/n]y<br />
(正在读取数据库 ... 系统当前总共安装有 218707 个文件和目录。)<br />
正在删除 linux-restricted-modules-2.6.20-16-generic ...<br />
FATAL: Could not open '/boot/System.map-2.6.20-16-generic': No such file or directory<br />
正在删除 linux-image-2.6.20-16-generic ...<br />
Running postrm hook script /sbin/update-grub.<br />
Searching for GRUB installation directory ... found: /boot/grub<br />
Searching for default file ... found: /boot/grub/default<br />
Testing for an existing GRUB menu.lst file ... found: /boot/grub/menu.lst<br />
Searching for splash image ... none found, skipping ...<br />
Found kernel: /vmlinuz-2.6.24-18-generic<br />
Found kernel: /memtest86+.bin<br />
Updating /boot/grub/menu.lst ... done</p>]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date>2008-06-12 20:59:54</wp:post_date>
		<wp:post_date_gmt>2008-06-12 20:59:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntugzip-stdout-no-space-left-on-device</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>205</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.131.121</wp:comment_author_IP>
			<wp:comment_date>2008-08-05 00:38:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://ubuntuforums.org/archive/index.php/t-750633.html
I had a similar problem. Let's try this
sudo cp /boot/System.map-2.6.24-15-generic /boot/System.map-2.6.22-14-generic
sudo mkdir /lib/modules/2.6.22-14-generic
sudo cp -R /lib/modules/2.6.24-15-generic/* /lib/modules/2.6.22-14-generic/
Now in Synaptic mark that package for Complete Removal and remove it. It should successfully remove it now.
Afterwards you can clean up the stuff we did
sudo rm /boot/System.map-2.6.22-14-generic
sudo rm -r /lib/modules/2.6.22-14-generic/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>206</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.131.121</wp:comment_author_IP>
			<wp:comment_date>2008-08-05 00:57:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://apuar.blogspot.com/2007/02/ubuntu_21.html
http://linuxtoy.org/archives/trans_purge.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.67.68</wp:comment_author_IP>
			<wp:comment_date>2008-09-09 21:25:42</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://linuxtoy.org/archives/5-tips-for-cleaning-up-ubuntu.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>208</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.67.68</wp:comment_author_IP>
			<wp:comment_date>2008-09-09 22:10:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ubuntu free以及Linux内存占用大的解释
http://www.linuxidc.com/Linux/2008-07/14418.htm]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>209</wp:comment_id>
			<wp:comment_author><![CDATA[迹天涯]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 01:09:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://ubuntuforums.org/showthread.php?t=146226
https://answers.launchpad.net/ubuntu/+source/linux/+question/40015]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>留意你的layout和filter的摆放顺序</title>
		<link>http://www.iceskysl.com/?p=311</link>
		<pubDate>Sun, 15 Jun 2008 21:48:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前几天发现Rails的log里面老是出现一些按照ID找不到记录的错误，如下：</p>
<p><em>ActiveRecord::RecordNotFound (Couldn't find User without an ID):<br />
&nbsp;&nbsp;&nbsp; /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1248:in `find_from_ids'<br />
&nbsp;&nbsp;&nbsp; /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:504:in `find'<br />
&nbsp;&nbsp;&nbsp; /app/models/right.rb:7:in `chech_right'<br />
&nbsp;&nbsp;&nbsp; /app/controllers/home_controller.rb:30:in `check_right'</em></p>
<p>奇怪了，这个是我用来做权限控制的，按照道理来说，这个如果未登录的话，应该会被before_filter定向到其他的地方去的，咋会还显示这个页面呢，原来以为Rails会丢失<strong>session</strong>中的东西，不过仔细想想可能性不大，于是仔细检查了下代码，发现问题的根源是before_filter和layout的摆放顺序有问题，竟然是这样摆放的：</p>
<blockquote><strong>&nbsp; layout &quot;back&quot; </strong><br />
&nbsp; before_filter :get_current_user<br />
&nbsp; before_filter :authorize<br />
&nbsp; before_filter :init_user<br />
&nbsp; before_filter :check_right<br />
</blockquote>
<p>看到其上面的layout竟然放在&nbsp; before_filter之前了，哦，原来如此，修改下顺序，现在为：</p>
<blockquote>&nbsp; before_filter :get_current_user<br />
&nbsp; before_filter :authorize<br />
&nbsp; before_filter :init_user<br />
&nbsp; before_filter :check_right<br />
<strong>&nbsp; layout &quot;back&quot;&nbsp;</strong></blockquote>
<p>重启服务，OK，搞定。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天发现Rails的log里面老是出现一些按照ID找不到记录的错误，如下：</p>
<p><em>ActiveRecord::RecordNotFound (Couldn't find User without an ID):<br />
&nbsp;&nbsp;&nbsp; /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1248:in `find_from_ids'<br />
&nbsp;&nbsp;&nbsp; /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:504:in `find'<br />
&nbsp;&nbsp;&nbsp; /app/models/right.rb:7:in `chech_right'<br />
&nbsp;&nbsp;&nbsp; /app/controllers/home_controller.rb:30:in `check_right'</em></p>
<p>奇怪了，这个是我用来做权限控制的，按照道理来说，这个如果未登录的话，应该会被before_filter定向到其他的地方去的，咋会还显示这个页面呢，原来以为Rails会丢失<strong>session</strong>中的东西，不过仔细想想可能性不大，于是仔细检查了下代码，发现问题的根源是before_filter和layout的摆放顺序有问题，竟然是这样摆放的：</p>
<blockquote><strong>&nbsp; layout &quot;back&quot; </strong><br />
&nbsp; before_filter :get_current_user<br />
&nbsp; before_filter :authorize<br />
&nbsp; before_filter :init_user<br />
&nbsp; before_filter :check_right<br />
</blockquote>
<p>看到其上面的layout竟然放在&nbsp; before_filter之前了，哦，原来如此，修改下顺序，现在为：</p>
<blockquote>&nbsp; before_filter :get_current_user<br />
&nbsp; before_filter :authorize<br />
&nbsp; before_filter :init_user<br />
&nbsp; before_filter :check_right<br />
<strong>&nbsp; layout &quot;back&quot;&nbsp;</strong></blockquote>
<p>重启服务，OK，搞定。</p>]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2008-06-15 21:48:52</wp:post_date>
		<wp:post_date_gmt>2008-06-15 21:48:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%95%99%e6%84%8f%e4%bd%a0%e7%9a%84layout%e5%92%8cfilter%e7%9a%84%e6%91%86%e6%94%be%e9%a1%ba%e5%ba%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>推荐两款支持Rails的服务提供商(SliceHost&amp;DreamHost)</title>
		<link>http://www.iceskysl.com/?p=312</link>
		<pubDate>Mon, 16 Jun 2008 11:01:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上次写了一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=250">谈谈我使用过的几个国外服务器提供商</a>》，不少朋友来信要我再推荐好的Rails空间和优惠码，如果你正在找寻支持Rails的空间，不妨试试我使用过的这两款，看您的需求，选择合适的。<br />
<strong>1.SliceHost</strong>（<font color="#ff0000">生产系统</font>性价比最高）<br />
SliceHost是一家很棒的VPS服务商提供诸如Ubuntu（提供好几个版本）、CentOS、Debian 4.0、Fedora 9、Gentoo好几种系统发行版选择，可以选择256M、512M、1G等好几种方案，拥有root权限，完全自主，非常稳定且价格在VPS中是最便宜 的，适合做生产环境，极力推荐。<br />
如果你感兴趣，按照如下两个方式得到最大优惠：<br />
1.点击<a href="https://manage.slicehost.com/customers/new?referrer=487673557">优惠的SliceHost</a>过去注册；<br />
2.注册时&ldquo;Referral email address&rdquo;输入&quot;iceskysl@gmail.com&quot;即可。<br />
另外，值得一提的是，其可以重新rebuild发行版（会丢失数据，切记备份），使用Slicehost的感觉就是自己除了物理接触外，完全拥有。且其相关的教材、文章非常详细，我在其上部署的Nginx+Mongrel+Vlad+MySQL非常棒。<br />
<strong>体验站点</strong>：<a href="http://iceskysl.1sters.com/">IceskYsl@1sters! | Focus on Ruby on Rails ,Security, Web2.0, Idea, Business and Beyond.</a></p>
<p><strong>2.DreamHost</strong>（<font color="#ff0000">Demo演示</font>类性价比最高）</p>
<p>DreamHost在Rails和PHP的支持上还是不错的，部署和定制都很方便，其支持无限域名绑定，500G硬盘和无限流量，虽然有赚取眼球的嫌疑，但是用来给客户做Demo演示、个人Blog等等非常适合，你可以按照如下两个中的任意方式得到其允许的最大优惠额度：<br />
1.直接按照<a href="http://www.dreamhost.com/r.cgi?369898">优惠的DreamHost</a>过去注册；<br />
2.注册时输入优惠码&quot;1STERS&quot;;<br />
<strong>体验站点：</strong>  <a href="http://www.1sters.com/">1sters! - Ruby on Rails web development(敏捷满足您个性化的需求...)!</a></p>
<p>有任何问题，请联系我，很乐意帮忙:)</p>
<p>其他的信息（例如优缺点，局限性等），请参考前面写的那篇《<a href="http://iceskysl.1sters.com/?action=show&amp;id=250">谈谈我使用过的几个国外服务器提供商</a>》，不在赘述，本文只是就自己使用感受给大家推荐的，如果你试用过其他服务商，还请分享。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>上次写了一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=250">谈谈我使用过的几个国外服务器提供商</a>》，不少朋友来信要我再推荐好的Rails空间和优惠码，如果你正在找寻支持Rails的空间，不妨试试我使用过的这两款，看您的需求，选择合适的。<br />
<strong>1.SliceHost</strong>（<font color="#ff0000">生产系统</font>性价比最高）<br />
SliceHost是一家很棒的VPS服务商提供诸如Ubuntu（提供好几个版本）、CentOS、Debian 4.0、Fedora 9、Gentoo好几种系统发行版选择，可以选择256M、512M、1G等好几种方案，拥有root权限，完全自主，非常稳定且价格在VPS中是最便宜 的，适合做生产环境，极力推荐。<br />
如果你感兴趣，按照如下两个方式得到最大优惠：<br />
1.点击<a href="https://manage.slicehost.com/customers/new?referrer=487673557">优惠的SliceHost</a>过去注册；<br />
2.注册时&ldquo;Referral email address&rdquo;输入&quot;iceskysl@gmail.com&quot;即可。<br />
另外，值得一提的是，其可以重新rebuild发行版（会丢失数据，切记备份），使用Slicehost的感觉就是自己除了物理接触外，完全拥有。且其相关的教材、文章非常详细，我在其上部署的Nginx+Mongrel+Vlad+MySQL非常棒。<br />
<strong>体验站点</strong>：<a href="../../../">IceskYsl@1sters! | Focus on Ruby on Rails ,Security, Web2.0, Idea, Business and Beyond.</a></p>
<p><strong>2.DreamHost</strong>（<font color="#ff0000">Demo演示</font>类性价比最高）</p>
<p>DreamHost在Rails和PHP的支持上还是不错的，部署和定制都很方便，其支持无限域名绑定，500G硬盘和无限流量，虽然有赚取眼球的嫌疑，但是用来给客户做Demo演示、个人Blog等等非常适合，你可以按照如下两个中的任意方式得到其允许的最大优惠额度：<br />
1.直接按照<a href="http://www.dreamhost.com/r.cgi?369898">优惠的DreamHost</a>过去注册；<br />
2.注册时输入优惠码&quot;1STERS&quot;;<br />
<strong>体验站点：</strong>  <a href="http://www.1sters.com/">1sters! - Ruby on Rails web development(敏捷满足您个性化的需求...)!</a></p>
<p>有任何问题，请联系我，很乐意帮忙:)</p>
<p>其他的信息（例如优缺点，局限性等），请参考前面写的那篇《<a href="http://iceskysl.1sters.com/?action=show&amp;id=250">谈谈我使用过的几个国外服务器提供商</a>》，不在赘述，本文只是就自己使用感受给大家推荐的，如果你试用过其他服务商，还请分享。</p>]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date>2008-06-16 11:01:06</wp:post_date>
		<wp:post_date_gmt>2008-06-16 11:01:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%a8%e8%8d%90%e4%b8%a4%e6%ac%be%e6%94%af%e6%8c%81rails%e7%9a%84%e6%9c%8d%e5%8a%a1%e6%8f%90%e4%be%9b%e5%95%86slicehostdreamhost</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>协作翻译: Ruby On Raisl 2.1新特性（第二版）</title>
		<link>http://www.iceskysl.com/?p=313</link>
		<pubDate>Mon, 16 Jun 2008 22:50:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天看到caiwangqin<a href="http://chinaonrails.com/topic/view/1713/1.html">在CoR上发了一篇帖子</a>说&ldquo;RubyOnRails 2.1 what's new&rdquo;这本书原文是葡萄牙的，由Brazilian社区翻译为英文，希望能有人组织翻译成中文版。</p>
<p>我向来希望把自己了解的东西写下里，记录成Doc文档分享给其他的人，如果你经常关注我的blog，应该了解;于是花了中午午休的时候，按照以往的经验做了一份协作约定文档《<a href="http://docs.google.com/Doc?id=dhf86kr9_328grp92qfx">协作翻译: Ruby On Raisl 2.1新特性（第二版）</a>》，然后翻译了索引篇《<a href="http://docs.google.com/Doc?id=dhf86kr9_329f9wn5gfr">Ruby On Raisl 2.1新特性介绍</a>》和第一章《<a href="http://docs.google.com/Doc?id=dhf86kr9_330f8rf8nc9">第1章: 概述(Introduction)</a>》，发布给其他成员。</p>
<p>紧接着我有挑选了几篇感兴趣的翻译，其他成员积极性相当高，仅仅一下午，所有14章全部领取完毕，晚上看GoogleDoc发现大家都在辛苦工作，实在感动，谢谢各位。</p>
<p>再次感受到社区的力量，很多朋友一般是不怎么联系的，但是这事情一发动就得到大家的积极响应，人多力量果然很大。</p>
<p>相信，这本书很快就可以和大家见面了,:)</p>
<p>这是个不错的模式，希望以后还能有机会找到好资料，大家协作完成。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>昨天看到caiwangqin<a href="http://chinaonrails.com/topic/view/1713/1.html">在CoR上发了一篇帖子</a>说&ldquo;RubyOnRails 2.1 what's new&rdquo;这本书原文是葡萄牙的，由Brazilian社区翻译为英文，希望能有人组织翻译成中文版。</p>
<p>我向来希望把自己了解的东西写下里，记录成Doc文档分享给其他的人，如果你经常关注我的blog，应该了解;于是花了中午午休的时候，按照以往的经验做了一份协作约定文档《<a href="http://docs.google.com/Doc?id=dhf86kr9_328grp92qfx">协作翻译: Ruby On Raisl 2.1新特性（第二版）</a>》，然后翻译了索引篇《<a href="http://docs.google.com/Doc?id=dhf86kr9_329f9wn5gfr">Ruby On Raisl 2.1新特性介绍</a>》和第一章《<a href="http://docs.google.com/Doc?id=dhf86kr9_330f8rf8nc9">第1章: 概述(Introduction)</a>》，发布给其他成员。</p>
<p>紧接着我有挑选了几篇感兴趣的翻译，其他成员积极性相当高，仅仅一下午，所有14章全部领取完毕，晚上看GoogleDoc发现大家都在辛苦工作，实在感动，谢谢各位。</p>
<p>再次感受到社区的力量，很多朋友一般是不怎么联系的，但是这事情一发动就得到大家的积极响应，人多力量果然很大。</p>
<p>相信，这本书很快就可以和大家见面了,:)</p>
<p>这是个不错的模式，希望以后还能有机会找到好资料，大家协作完成。</p>]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2008-06-16 22:50:45</wp:post_date>
		<wp:post_date_gmt>2008-06-16 22:50:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%8f%e4%bd%9c%e7%bf%bb%e8%af%91-ruby-on-raisl-2-1%e6%96%b0%e7%89%b9%e6%80%a7%ef%bc%88%e7%ac%ac%e4%ba%8c%e7%89%88%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>install and configuration  vsftpd ftp service on Ubuntu Linux</title>
		<link>http://www.iceskysl.com/?p=314</link>
		<pubDate>Tue, 17 Jun 2008 20:33:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=314</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="color: rgb(255, 0, 0);">Q</span>. How do I install Ubuntu ftp service or server?</p>
<p><span style="color: rgb(0, 153, 0);">A.</span> Ubuntu Linux comes with various ftp servers to setup FTP service such as:<br />
=&gt; <strong>proftpd</strong> - Versatile, virtual-hosting FTP daemon</p>
<p>=&gt; <strong>vsftpd</strong> - The Very Secure FTP Daemon</p>
<p>=&gt; <strong>ftpd</strong> - FTP server</p>
<p>=&gt; <strong>wu-ftpd</strong> - powerful and widely used FTP server</p>
<p>=&gt; <strong>wzdftpd</strong> - A portable, modular, small and efficient ftp server</p>
<p>=&gt; <strong>pure-ftpd</strong> - Pure-FTPd FTP server</p>
<p>其中vsftpd相当优秀，其配置简单方便，且非常安全，如下是其主页上的说明：</p>
<p>vsftpd is the Very Secure File Transfer Protocol Daemon. The server can be launched via a super-server such as inetd or xinetd. Alternatively, vsftpd can be launched in standalone mode, in which case vsftpd itself will listen on the network.</p>
<p>=&gt; Default ftp port : <strong>21</strong><br />
=&gt; Default configuration file : <strong>/etc/vsftpd.conf</strong></p>
<p><strong>Q：如何安装vsftpd</strong></p>
<p><strong>很简单，即可搞，如下：<br />
</strong></p>
<h3>Step # 1: Install vsftpd</h3>
<p>Type apt-get command to install vsftpd<br />
<strong><code>$ sudo apt-get install vsftpd</code></strong><br />
Output:</p>
<blockquote>
<pre>Password:<br />Reading package lists... Done<br />Building dependency tree<br />Reading state information... Done<br />The following NEW packages will be installed:<br />  vsftpd<br />0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.<br />Need to get 121kB of archives.<br />After unpacking 438kB of additional disk space will be used.<br />Get:1 http://us.archive.ubuntu.com edgy/main vsftpd 2.0.4-0ubuntu5 [121kB]<br />Fetched 121kB in 0s (246kB/s)<br />Selecting previously deselected package vsftpd.<br />(Reading database ... 31396 files and directories currently installed.)<br />Unpacking vsftpd (from .../vsftpd_2.0.4-0ubuntu5_amd64.deb) ...<br />Setting up vsftpd (2.0.4-0ubuntu5) ...<br />Adding system user `ftp' with uid 106...<br />Adding new user `ftp' (106) with group `nogroup'.<br />Not creating home directory `/home/ftp'.<br /> * Starting FTP server: vsftpd</pre>
</blockquote>
<h3>Step # 2: Configure /etc/vsftpd.conf</h3>
<p>The default vsftpd configuration file is /etc/vsftpd.conf. You need to edit this file using text editor such as vi:<br />
<strong><code>$ sudo vi /etc/vsftpd.conf</code></strong></p>
<p>Add the following line (uncomment line) to the vsftpd configuration file:<br />
<strong><code>local_enable=YES</code></strong><br />
Above config directive will allow local users to log in via ftp</p>
<p>If you would like to allow users to upload file, add the following to the file:<br />
<strong><code>write_enable=YES</code></strong></p>
<p>For security you may restrict local users to their home directories. Add the following to the file:<br />
<strong><code>chroot_local_user=YES</code></strong></p>
<p>Save and close the file.</p>
<h3>Step # 3: Restart vsftpd</h3>
<p>To restart vsftpd type the command :<br />
<strong><code>$ sudo /etc/init.d/vsftpd restart</code></strong><br />
Output:</p>
<pre>* Stopping FTP server: vsftpd                                                                                       [ ok ]<br /> * Starting FTP server: vsftpd                                                                                       [ ok ]<br /><br />add following rules to your iptables script. Assuming that default<br />incoming policy is drop. If protocol is TCP and destination port is 21<br />(ftp):<br /><br /><em><code>iptables -A INPUT -p tcp -m tcp --dport 21 -j ACCEPT</code></em><br /><br />See - <a href="http://www.cyberciti.biz/faq/iptables-open-ftp-port-21/">How do I open open ftp port 21 using iptables</a> for more information.</pre>
<p>There are a large number of other configuration options available for vsftpd that can be used to fine tune ftp server. Read vsftpd.conf man page by typing following command:<br />
<strong><code>$ man vsftpd.conf</code></strong></p>
<pre>参考文档：<br />1、http://www.cyberciti.biz/faq/ubuntu-vsftpd-ftp-service-server/<br />2、http://school.cfan.com.cn/system/unix/2008-06-16/1213603744d188509.shtml</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="color: rgb(255, 0, 0);">Q</span>. How do I install Ubuntu ftp service or server?</p>
<p><span style="color: rgb(0, 153, 0);">A.</span> Ubuntu Linux comes with various ftp servers to setup FTP service such as:<br />
=&gt; <strong>proftpd</strong> - Versatile, virtual-hosting FTP daemon</p>
<p>=&gt; <strong>vsftpd</strong> - The Very Secure FTP Daemon</p>
<p>=&gt; <strong>ftpd</strong> - FTP server</p>
<p>=&gt; <strong>wu-ftpd</strong> - powerful and widely used FTP server</p>
<p>=&gt; <strong>wzdftpd</strong> - A portable, modular, small and efficient ftp server</p>
<p>=&gt; <strong>pure-ftpd</strong> - Pure-FTPd FTP server</p>
<p>其中vsftpd相当优秀，其配置简单方便，且非常安全，如下是其主页上的说明：</p>
<p>vsftpd is the Very Secure File Transfer Protocol Daemon. The server can be launched via a super-server such as inetd or xinetd. Alternatively, vsftpd can be launched in standalone mode, in which case vsftpd itself will listen on the network.</p>
<p>=&gt; Default ftp port : <strong>21</strong><br />
=&gt; Default configuration file : <strong>/etc/vsftpd.conf</strong></p>]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2008-06-17 20:33:18</wp:post_date>
		<wp:post_date_gmt>2008-06-17 20:33:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-and-configuration-vsftpd-ftp-service-on-ubuntu-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>关于这两天blog挂掉的说明</title>
		<link>http://www.iceskysl.com/?p=315</link>
		<pubDate>Sat, 21 Jun 2008 02:59:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=315</guid>
		<description></description>
		<content:encoded><![CDATA[<p>关注我Blog的朋友，这两天由于服务器问题，down了两天，深表歉意！</p>
<p>挂掉这两天，和DH的客服反复较量了好多次，mail一封接一封，完全是我说啥，他查啥，够晕的，幸好最后我还是定位到问题了，他们就解决了，够晕的。</p>
<p>比较庆幸的是我的E文他们看的明白，他们的mail我也懂，就这样一来一去的，拉锯了好多次，最后定位到时他们新加了一块硬盘，导致对我的帐户写在那个硬盘上的文件数被限制了。</p>
<p>还在交涉赔偿事件，我倒要看看DH到底有uo难缠，多专业。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>关注我Blog的朋友，这两天由于服务器问题，down了两天，深表歉意！</p>
<p>挂掉这两天，和DH的客服反复较量了好多次，mail一封接一封，完全是我说啥，他查啥，够晕的，幸好最后我还是定位到问题了，他们就解决了，够晕的。</p>
<p>比较庆幸的是我的E文他们看的明白，他们的mail我也懂，就这样一来一去的，拉锯了好多次，最后定位到时他们新加了一块硬盘，导致对我的帐户写在那个硬盘上的文件数被限制了。</p>
<p>还在交涉赔偿事件，我倒要看看DH到底有uo难缠，多专业。</p>]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2008-06-21 02:59:54</wp:post_date>
		<wp:post_date_gmt>2008-06-21 02:59:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8e%e8%bf%99%e4%b8%a4%e5%a4%a9blog%e6%8c%82%e6%8e%89%e7%9a%84%e8%af%b4%e6%98%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>210</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.95.102.200</wp:comment_author_IP>
			<wp:comment_date>2008-06-21 20:07:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在拉锯有经验，有过一次啦，  可以考虑放到slicehost上去。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails 2.1中文文档翻译完成[已发布]</title>
		<link>http://www.iceskysl.com/?p=316</link>
		<pubDate>Sat, 21 Jun 2008 03:13:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=316</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前几天发布了一篇文章说我们正在翻译Rails 2.1文档《<a href="http://iceskysl.1sters.com/?action=show&amp;id=313">协作翻译: Ruby On Raisl 2.1新特性（第二版）</a>》，经过3天不到的时间，我们就完稿了，参与翻译的都是COR中的做Rails的朋友，大家都很积极，从那天下午我做出&ldquo;<a href="http://docs.google.com/Doc?id=dhf86kr9_328grp92qfx">协作约定</a>&rdquo;开始领取翻译任务后，半天时间就认领完毕了，不得不赞下大家的热情和速度，特别是snow同学，上来就挑了个最大块头的第二章，呵呵。</p>
<p>最后是我整理生成PDF文档的，现在已经发布出去，需要的朋友可以在这里看到&ldquo;<a href="http://chinaonrails.com/topic/view/1754.html">Ruby on Rails 2.1更新了什么？</a>&rdquo;，另外，infoQ也发布了新闻&ldquo;<a href="http://www.infoq.com/cn/news/2008/06/ruby-doc-release">Rails 2.1中文文档翻译计划完成</a>&rdquo;。</p>
<p>另外，你可以通过如下几个方式查看：</p>
<p>1、在slideshare上观看<a href="http://www.slideshare.net/Caiwangqin/chinaonrails-rubyonrails21-zh/">PPT版本</a></p>
<p>2、通过Google Site上可以查看最新版本的google Doc，地址在<a href="http://sites.google.com/site/iceskysl/acticles/ruby-on-rails-21%E6%96%B0%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D/introduction">我的GoogleSite</a>上。</p>
<p>3、Google Doc上的索引页面&quot;<a href="http://docs.google.com/View?docid=dhf86kr9_329f9wn5gfr&amp;revision=_latest">Ruby On Rails 2.1新特性介绍</a>&quot;.</p>
<p>如果你发现错误的地方，或者有其他意见，请联系我修正，谢谢。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天发布了一篇文章说我们正在翻译Rails 2.1文档《<a href="../../../?action=show&amp;id=313">协作翻译: Ruby On Raisl 2.1新特性（第二版）</a>》，经过3天不到的时间，我们就完稿了，参与翻译的都是COR中的做Rails的朋友，大家都很积极，从那天下午我做出&ldquo;<a href="http://docs.google.com/Doc?id=dhf86kr9_328grp92qfx">协作约定</a>&rdquo;开始领取翻译任务后，半天时间就认领完毕了，不得不赞下大家的热情和速度，特别是snow同学，上来就挑了个最大块头的第二章，呵呵。</p>
<p>最后是我整理生成PDF文档的，现在已经发布出去，需要的朋友可以在这里看到&ldquo;<a href="http://chinaonrails.com/topic/view/1754.html">Ruby on Rails 2.1更新了什么？</a>&rdquo;，另外，infoQ也发布了新闻&ldquo;<a href="http://www.infoq.com/cn/news/2008/06/ruby-doc-release">Rails 2.1中文文档翻译计划完成</a>&rdquo;。</p>
<p>另外，你可以通过如下几个方式查看：</p>
<p>1、在slideshare上观看<a href="http://www.slideshare.net/Caiwangqin/chinaonrails-rubyonrails21-zh/">PPT版本</a></p>
<p>2、通过Google Site上可以查看最新版本的google Doc，地址在<a href="http://sites.google.com/site/iceskysl/acticles/ruby-on-rails-21%E6%96%B0%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D/introduction">我的GoogleSite</a>上。</p>
<p>3、Google Doc上的索引页面&quot;<a href="http://docs.google.com/View?docid=dhf86kr9_329f9wn5gfr&amp;revision=_latest">Ruby On Rails 2.1新特性介绍</a>&quot;.</p>
<p>如果你发现错误的地方，或者有其他意见，请联系我修正，谢谢。</p>]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2008-06-21 03:13:09</wp:post_date>
		<wp:post_date_gmt>2008-06-21 03:13:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-2-1%e4%b8%ad%e6%96%87%e6%96%87%e6%a1%a3%e7%bf%bb%e8%af%91%e5%ae%8c%e6%88%90%e5%b7%b2%e5%8f%91%e5%b8%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>如何在Rails的controller中取得URL中的anchor值</title>
		<link>http://www.iceskysl.com/?p=317</link>
		<pubDate>Mon, 23 Jun 2008 17:12:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有人问，如何在Rails的控制器中取得URL中的锚点的值，这个需求比较奇特，以前没搞过，于是google了一把，在&ldquo;<a href="http://www.railsforum.com/viewtopic.php?pid=64483">Getting the # value</a>&rdquo;这个帖子看到有人有类似的问题，他说出了在controller中直接取不到的原因是&ldquo;For normal links/urls the #anchor is a client side feature and is often not even sent to the server as part of a request.&rdquo;，恩，确实直接取不到，只能使用类似JS的方法来取了，因为其没有将URL全部提交到服务端，所以是无法取值的。</p>
<p>另外，看了下Rails中生成anchor的方法比较简单，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>&lt;%=&nbsp;url_for(</span><span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'play'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'player'</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;=&gt;&nbsp;/messages/play/#player</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&lt;%=&nbsp;url_for(<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'checkout'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'tax&amp;ship'</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;=&gt;&nbsp;/testing/jump/#tax&amp;ship</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&lt;%=&nbsp;url_for(<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'checkout'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'tax&amp;ship'</span><span>,&nbsp;</span><span class="symbol">:escape</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;=&gt;&nbsp;/testing/jump/#tax&amp;ship</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
详细的请参考API：<a href="http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html">ActionView::Helpers::UrlHelper</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有人问，如何在Rails的控制器中取得URL中的锚点的值，这个需求比较奇特，以前没搞过，于是google了一把，在&ldquo;<a href="http://www.railsforum.com/viewtopic.php?pid=64483">Getting the # value</a>&rdquo;这 个帖子看到有人有类似的问题，他说出了在controller中直接取不到的原因是&ldquo;For normal links/urls the #anchor is a client side feature and is often not even sent to the server as part of a request.&rdquo;，恩，确实直接取不到，只能使用类似JS的方法来取了，因为其没有将URL全部提交到服务端，所以是无法取值的。</p>
<p>另外，看了下Rails中生成anchor的方法比较简单，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>&lt;%=&nbsp;url_for(</span><span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'play'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'player'</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;=&gt;&nbsp;/messages/play/#player</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&lt;%=&nbsp;url_for(<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'checkout'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'tax&amp;ship'</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;=&gt;&nbsp;/testing/jump/#tax&amp;ship</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&lt;%=&nbsp;url_for(<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'checkout'</span><span>,&nbsp;</span><span class="symbol">:anchor</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'tax&amp;ship'</span><span>,&nbsp;</span><span class="symbol">:escape</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>)&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;=&gt;&nbsp;/testing/jump/#tax&amp;ship</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>详细的请参考API：<a href="http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html">ActionView::Helpers::UrlHelper</a></p>]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2008-06-23 17:12:45</wp:post_date>
		<wp:post_date_gmt>2008-06-23 17:12:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e5%9c%a8rails%e7%9a%84controller%e4%b8%ad%e5%8f%96%e5%be%97url%e4%b8%ad%e7%9a%84anchor%e5%80%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>linux下相关信息查看</title>
		<link>http://www.iceskysl.com/?p=318</link>
		<pubDate>Tue, 24 Jun 2008 17:12:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=318</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候需要对服务器信息做比较详细的了解，需要查看一些信息，整理如下：

<strong>1、Java版本（JDK）</strong>

<span>$ java -version
<strong>java version "1.4.2_11"</strong>
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_11-b06)
Java HotSpot(TM) Client VM (build 1.4.2_11-b06, mixed mode)</span>

<strong><span>2、weblogic版本</span></strong>

<span>查看weblogic的版本信息，可以在bea\logs目录下的log.txt中查到版本信息，如下：</span>

<span>$ </span><span>cat log.txt
2004-10-20 15:00:58 -- install "WebLogic Platform" 8.1.3.0 at /opt/bea/weblogic81
release 8.1.3.0 [Added]</span>

<strong><span>3、Oracle版本</span></strong>

<span>（1）用客户端连接到数据库，执行select * from v$instance查看version项
（2）select * from product_component_version
（3）或查询V$VERSION查看组件级信息</span>

<strong><span>4、内核</span></strong>
<div><em><span>$ </span></em><span><em>uname -a</em>
Linux oj-web03 2.4.21-27.ELsmp #1 SMP Wed Dec 1 21:59:02 EST 2004 i686 i686 i386 GNU/Linux</span></div>
<div><span><span>[iceskysl@oj-web03 logs]$ cat /proc/version
Linux version 2.4.21-27.ELsmp (<a href="mailto:bhcompile@bugs.build.redhat.com">bhcompile@bugs.build.redhat.com</a>) (gcc version 3.2.3 20030502 (Red Hat Linux 3.2.3-47)) #1 SMP Wed Dec 1 21:59:02 EST 2004</span></span><strong>5、内存信息</strong><span><span>$ cat /proc/meminfo
$ free -M</span></span><strong>6、CPU信息</strong><span>$</span><span>cat /proc/cpuinfo</span><strong>7、硬盘信息</strong>
<span>$</span>df

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候需要对服务器信息做比较详细的了解，需要查看一些信息，整理如下：</p>
<p><strong>1、Java版本（JDK）</strong></p>
<p><font>$ java -version<br />
<strong>java version &quot;1.4.2_11&quot;</strong><br />
Java(TM) 2  Runtime Environment, Standard Edition (build 1.4.2_11-b06)<br />
Java HotSpot(TM)  Client VM (build 1.4.2_11-b06, mixed mode)</font></p>
<p><strong><font>2、weblogic版本</font></strong></p>
<p><font>查看weblogic的版本信息，可以在bea\logs目录下的log.txt中查到版本信息，如下：</font></p>
<p><font>$ </font><font>cat log.txt <br />
2004-10-20 15:00:58 -- install &quot;WebLogic Platform&quot; 8.1.3.0 at  /opt/bea/weblogic81<br />
&nbsp;&nbsp;&nbsp; release 8.1.3.0 [Added]</font></p>
<p><strong><font>3、Oracle版本</font></strong></p>
<p><font>（1）用客户端连接到数据库，执行select * from v$instance查看version项<br />
（2）select * from product_component_version<br />
（3）或查询V$VERSION查看组件级信息</font></p>
<p><strong><font>4、内核</font></strong></p>
<div><em><font>$ </font></em><font><em>uname -a</em><br />
Linux oj-web03 2.4.21-27.ELsmp #1 SMP Wed Dec 1 21:59:02 EST 2004  i686 i686 i386 GNU/Linux</font></div>
<div><font>[iceskysl@oj-web03 logs]$ cat /proc/version <br />
Linux version  2.4.21-27.ELsmp (<a href="mailto:bhcompile@bugs.build.redhat.com">bhcompile@bugs.build.redhat.com</a>)  (gcc version 3.2.3 20030502 (Red Hat Linux 3.2.3-47)) #1 SMP Wed Dec 1 21:59:02  EST 2004<br />
<br />
<strong>5、内存信息</strong><br />
</font><font>$ cat /proc/meminfo<br />
$ free -M<br />
<br />
<strong>6、CPU信息</strong><br />
</font><font>$</font><font>cat /proc/cpuinfo</font><br />
<br />
<strong>7、硬盘信息</strong><br />
<font>$</font>df</div>]]></excerpt:encoded>
		<wp:post_id>318</wp:post_id>
		<wp:post_date>2008-06-24 17:12:23</wp:post_date>
		<wp:post_date_gmt>2008-06-24 17:12:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e4%b8%8b%e7%9b%b8%e5%85%b3%e4%bf%a1%e6%81%af%e6%9f%a5%e7%9c%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>211</wp:comment_id>
			<wp:comment_author><![CDATA[maninred]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>119.146.68.14</wp:comment_author_IP>
			<wp:comment_date>2008-06-25 00:11:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[其实还有lspci看全部硬件接口，sudo fdisk -l看硬盘大小，udo hdparm -t /dev/sda测试硬盘，等等。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby暴出大量严重漏洞!</title>
		<link>http://www.iceskysl.com/?p=319</link>
		<pubDate>Wed, 25 Jun 2008 06:05:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[Drew Yao at Apple uncovered a handful of nasty security vulnerabilities affecting all current versions of Ruby. The details are still under wraps because an attacker can DoS you or possibly execute arbitrary code—holy crap! Better upgrade sooner than later.

According to the <a href="http://www.ruby-lang.org/en/news/2008/06/20/arbitrary-code-execution-vulnerabilities/">official Ruby security advisory</a>, the vulnerable Rubies are:

* 1.8.4 and earlier
* 1.8.5-p230 and earlier
* 1.8.6-p229 and earlier
* 1.8.7-p21 and earlier

Those of us running Ruby 1.8.4 or earlier must upgrade to 1.8.5 or later for a fix. Those on 1.8.5-7 can grab the latest patchlevel release for a fix.

(Please note: Ruby 1.8.7 breaks backward compatibility and is only compatible with Rails 2.1 and later, so don’t go overboard!)
虽然暂时还没看到具体的细节公布出来，也没看到0day放出来，但是从其描述上不难看出，这些bug是ruby一致以来都有的，或许还有更多的bug，ruby走向成熟，离不开这样的检验。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Drew Yao at Apple uncovered a handful of nasty security vulnerabilities affecting all current versions of Ruby. The details are still under wraps because an attacker can DoS you or possibly execute arbitrary code&mdash;holy crap! Better upgrade sooner than later.<br />
<br />
&nbsp;&nbsp;&nbsp; According to the <a href="http://www.ruby-lang.org/en/news/2008/06/20/arbitrary-code-execution-vulnerabilities/">official Ruby security advisory</a>, the vulnerable Rubies are:<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 1.8.4 and earlier<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 1.8.5-p230 and earlier<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 1.8.6-p229 and earlier<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 1.8.7-p21 and earlier<br />
<br />
&nbsp;&nbsp;&nbsp; Those of us running Ruby 1.8.4 or earlier must upgrade to 1.8.5 or later for a fix. Those on 1.8.5-7 can grab the latest patchlevel release for a fix.<br />
<br />
&nbsp;&nbsp;&nbsp; (Please note: Ruby 1.8.7 breaks backward compatibility and is only compatible with Rails 2.1 and later, so don&rsquo;t go overboard!)<br />
虽然暂时还没看到具体的细节公布出来，也没看到0day放出来，但是从其描述上不难看出，这些bug是ruby一致以来都有的，或许还有更多的bug，ruby走向成熟，离不开这样的检验。</p>]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date>2008-06-25 14:05:42</wp:post_date>
		<wp:post_date_gmt>2008-06-25 06:05:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e6%9a%b4%e5%87%ba%e5%a4%a7%e9%87%8f%e4%b8%a5%e9%87%8d%e6%bc%8f%e6%b4%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%85%a8"><![CDATA[安全]]></category>
		<category domain="post_tag" nicename="%e6%bc%8f%e6%b4%9e"><![CDATA[漏洞]]></category>
	</item>
	<item>
		<title>Rails全文检索最佳方案:Sphinx+libmmseg+Ultrasphinx</title>
		<link>http://www.iceskysl.com/?p=320</link>
		<pubDate>Wed, 25 Jun 2008 15:25:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[大家知道，全文检索（特别是中文全文检索）中有两个比较重要的指标，性能和中文分词技术，由于性能要求，使得其必须采用C/C++的检索引擎才有生存的空间，其二是中文分词等，这也是个难题。
在Java中lucene是绝对的权威和首选，虽然其对中文分词支持也不是很好，但是有很多第三方的程序可以集成起来实现相关功能，而在Rails中，至今尚无权威的解决方案，最开始的时候是Ferret一枝独秀，现在另外一个很优秀的Sphinx。
刚接触Rails全文检索的时候就知道<strong>Sphinx</strong>了，当时还不是很完善，而且那个时候<strong>Ferret</strong>非常流行，所以也就没有多加关注，只记得这两个全文检索都不提供中文分词技术，而全文检索中的中文分词恰恰是无法绕过去的。
前段时间，看到有人介绍了<a href="http://www.coreseek.cn/opensource/mmseg/" target="_blank">libmmseg</a>， 这个是李沫南用C++编写的开源的中文分词软件，libmmseg的分词算法采用的是“基于词库的最大匹配算法”，分词速度为每秒300KB左右，使用 libmmseg，可以和Ferret结合起来做全文检索了，这个JavaEye的Robbin有介绍过，详细情况请参看《<a href="http://www.javaeye.com/topic/196451">使用libmmseg实现Ruby的中文分词功能</a>》，其详细介绍了如何在Ruby中调用libmmseg做中文分词，进而使用Ferret做全文检索。
但是值得说的是，libmmseg本来是被作者用来实现Sphinx全文检索软件的中文分词功能，因此作者给Sphinx提供了一个补丁文件，可以让Sphinx集成libmmseg，从而支持对于中文文章的全文检索功能，关于这一点可以看《<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a>》的介绍。
所以，如果你要在Rails中做全文检索的话，我推荐您使用的是Sphinx + libmmseg + Ultrasphinx来实现，其简单高效，且支持并发，再仔细说一下：
<strong>1、Sphinx</strong>，是俄罗斯的Andrew Aksyonoff 开发的，被人叫做“狮身人面”，关于其高效的介绍，你可以参考《<a href="http://www.javaeye.com/topic/122696">JavaEye3.0开发手记之三 － 狮身人面</a>》，其性能出色，和架构清晰，学习成本很低，且其和数据库结合的很棒。其他相关介绍可以参考“<a href="http://www.coreseek.cn/index.php?page=Sphinx">coreseek对Sphinx的就介绍</a>”，也可以参考其发布的《<a href="http://www.coreseek.com/uploads/pdf/sphinx_doc_zhcn_0.9.pdf">Coreseek 全文检索服务器 2.0 (Sphinx 0.9.8)参考手册</a>》，其Coreseek就是基于Sphinx的一个全文搜索服务器。
<strong>2、libmmseg</strong>，就是前面说的中文分词程序，当前最新版本是0.73，采用C++开发，同时支持Linux平台和Windows平 台，切分速度大约在300K/s（PM-1.2G），libmmseg从0.7.2版本开始，作者提供了ruby调用的接口，所以我们可以直接在ruby 程序里面调用libmmseg进行分词，相当方便。
<strong>3、Ultrasphinx</strong>，是一个Rails插件，Rails开发人员可以使用它来很方便地调用Sphinx的功能。其他类似的插件有<a href="http://www.datanoise.com/articles/2007/3/23/acts_as_sphinx-plugin">acts_as_sphinx</a>，使用其可以很方便的在Rails中整合Sphinx。

以上三个的安全不是很复杂，推荐是在Unix上，请参考《<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a>》，这个文章就是基于以上三个组件的安装和使用说明。我会在近期发布出一些笔记和文档，以帮助需要的朋友更好的实现自己的全文检索。
<strong>
参考文档：</strong>
1、<a href="http://www.datanoise.com/articles/2007/3/23/acts_as_sphinx-plugin">acts_as_sphinx plugin</a>
2、<a href="http://www.javaeye.com/topic/122696">JavaEye3.0开发手记之三 － 狮身人面</a>
3、<a href="http://www.javaeye.com/topic/196451">使用libmmseg实现Ruby的中文分词功能</a>
4、<a href="http://agilewebdevelopment.com/plugins/ultrasphinx">Plugins - Ultrasphinx</a>
5、<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a>
6、<a href="http://www.sphinxsearch.com/downloads.html">Sphinx</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家知道，全文检索（特别是中文全文检索）中有两个比较重要的指标，性能和中文分词技术，由于性能要求，使得其必须采用C/C++的检索引擎才有生存的空间，其二是中文分词等，这也是个难题。<br />
在Java中lucene是绝对的权威和首选，虽然其对中文分词支持也不是很好，但是有很多第三方的程序可以集成起来实现相关功能，而在Rails中，至今尚无权威的解决方案，最开始的时候是Ferret一枝独秀，现在另外一个很优秀的Sphinx。<br />
刚接触Rails全文检索的时候就知道<strong>Sphinx</strong>了，当时还不是很完善，而且那个时候<strong>Ferret</strong>非常流行，所以也就没有多加关注，只记得这两个全文检索都不提供中文分词技术，而全文检索中的中文分词恰恰是无法绕过去的。<br />
前段时间，看到有人介绍了<a href="http://www.coreseek.cn/opensource/mmseg/" target="_blank">libmmseg</a>， 这个是李沫南用C++编写的开源的中文分词软件，libmmseg的分词算法采用的是&ldquo;基于词库的最大匹配算法&rdquo;，分词速度为每秒300KB左右，使用 libmmseg，可以和Ferret结合起来做全文检索了，这个JavaEye的Robbin有介绍过，详细情况请参看《<a href="http://www.javaeye.com/topic/196451">使用libmmseg实现Ruby的中文分词功能</a>》，其详细介绍了如何在Ruby中调用libmmseg做中文分词，进而使用Ferret做全文检索。<br />
但是值得说的是，libmmseg本来是被作者用来实现Sphinx全文检索软件的中文分词功能，因此作者给Sphinx提供了一个补丁文件，可以让Sphinx集成libmmseg，从而支持对于中文文章的全文检索功能，关于这一点可以看《<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a>》的介绍。<br />
所以，如果你要在Rails中做全文检索的话，我推荐您使用的是Sphinx + libmmseg + Ultrasphinx来实现，其简单高效，且支持并发，再仔细说一下：<br />
<strong>1、Sphinx</strong>，是俄罗斯的Andrew Aksyonoff 开发的，被人叫做&ldquo;狮身人面&rdquo;，关于其高效的介绍，你可以参考《<a href="http://www.javaeye.com/topic/122696">JavaEye3.0开发手记之三 － 狮身人面</a>》，其性能出色，和架构清晰，学习成本很低，且其和数据库结合的很棒。其他相关介绍可以参考&ldquo;<a href="http://www.coreseek.cn/index.php?page=Sphinx">coreseek对Sphinx的就介绍</a>&rdquo;，也可以参考其发布的《<a href="http://www.coreseek.com/uploads/pdf/sphinx_doc_zhcn_0.9.pdf">Coreseek 全文检索服务器 2.0 (Sphinx 0.9.8)参考手册</a>》，其Coreseek就是基于Sphinx的一个全文搜索服务器。<br />
<strong>2、libmmseg</strong>，就是前面说的中文分词程序，当前最新版本是0.73，采用C++开发，同时支持Linux平台和Windows平 台，切分速度大约在300K/s（PM-1.2G），libmmseg从0.7.2版本开始，作者提供了ruby调用的接口，所以我们可以直接在ruby 程序里面调用libmmseg进行分词，相当方便。<br />
<strong>3、Ultrasphinx</strong>，是一个Rails插件，Rails开发人员可以使用它来很方便地调用Sphinx的功能。其他类似的插件有<a href="http://www.datanoise.com/articles/2007/3/23/acts_as_sphinx-plugin">acts_as_sphinx</a>，使用其可以很方便的在Rails中整合Sphinx。<br />
<br />
以上三个的安全不是很复杂，推荐是在Unix上，请参考《<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a>》，这个文章就是基于以上三个组件的安装和使用说明。我会在近期发布出一些笔记和文档，以帮助需要的朋友更好的实现自己的全文检索。<br />
<strong><br />
参考文档：</strong><br />
1、<a href="http://www.datanoise.com/articles/2007/3/23/acts_as_sphinx-plugin">acts_as_sphinx plugin</a><br />
2、<a href="http://www.javaeye.com/topic/122696">JavaEye3.0开发手记之三 － 狮身人面</a><br />
3、<a href="http://www.javaeye.com/topic/196451">使用libmmseg实现Ruby的中文分词功能</a><br />
4、<a href="http://agilewebdevelopment.com/plugins/ultrasphinx">Plugins - Ultrasphinx</a><br />
5、<a href="http://www.coreseek.com/forum/index.php?action=vthread&amp;forum=2&amp;topic=17">Rails程序员Sphinx中文全文检索安装指南</a><br />
6、<a href="http://www.sphinxsearch.com/downloads.html">Sphinx</a></p>]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2008-06-25 15:25:41</wp:post_date>
		<wp:post_date_gmt>2008-06-25 15:25:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e5%85%a8%e6%96%87%e6%a3%80%e7%b4%a2%e6%9c%80%e4%bd%b3%e6%96%b9%e6%a1%88sphinxlibmmsegultrasphinx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="libmmseg"><![CDATA[libmmseg]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="sphinx"><![CDATA[Sphinx]]></category>
		<category domain="post_tag" nicename="ultrasphinx"><![CDATA[Ultrasphinx]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>212</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.131.227.147</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 21:39:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错的方向]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>213</wp:comment_id>
			<wp:comment_author><![CDATA[seo indonesia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/blog/Administrator.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 21:04:59</wp:comment_date>
			<wp:comment_date_gmt>2011-09-25 13:04:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>konsultan seo indonesia...</strong>

[...]Rails全文检索最佳方案:Sphinx+libmmseg+Ultrasphinx[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>214</wp:comment_id>
			<wp:comment_author><![CDATA[Wireless Portable Sound Syste]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.parchain.co.id/parchain.product/180/433/id/Wireless-Portable-Sound-System.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 12:39:11</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 04:39:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wireless Portable Sound Syste...</strong>

[...]Rails全文检索最佳方案:Sphinx+libmmseg+Ultrasphinx[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>同步利器rsync</title>
		<link>http://www.iceskysl.com/?p=321</link>
		<pubDate>Thu, 26 Jun 2008 03:58:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>rsync</strong> is a program that copies file from one location to another, with it you can make <strong>backups</strong> of your files, <strong>synchronize</strong> data on different locations and computers. It is commonly used by unix users to keep a safe backup of their files and is often recommended as the simplest solution for backups and safety copys.

<strong>参考资料：</strong>

1.<a href="http://blog.donews.com/zzw45/archive/2006/04/12/825039.aspx">rsync的安装和使用</a>

2. <a href="https://help.ubuntu.com/community/rsync">rsync</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>rsync</strong> is  a program that copies file from one location to another, with it you can make <strong>backups</strong> of your files, <strong>synchronize</strong> data on different locations and computers. It is commonly used by unix users to keep a safe backup of their files and is often recommended as the simplest solution for backups and safety copys.</p>
<p><strong>参考资料：</strong></p>
<p>1.<a href="http://blog.donews.com/zzw45/archive/2006/04/12/825039.aspx">rsync的安装和使用</a></p>
<p>2. <a href="https://help.ubuntu.com/community/rsync">rsync</a></p>]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2008-06-26 03:58:32</wp:post_date>
		<wp:post_date_gmt>2008-06-26 03:58:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%90%8c%e6%ad%a5%e5%88%a9%e5%99%a8rsync</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="rsync"><![CDATA[rsync]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>深圳ADSL真垃圾的说,我很失望</title>
		<link>http://www.iceskysl.com/?p=322</link>
		<pubDate>Thu, 26 Jun 2008 22:07:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=322</guid>
		<description></description>
		<content:encoded><![CDATA[一直以来，我都是忍耐力很好的，无奈的是深圳电信的ADSL真的越来越垃圾，让人失望的很呀，虽然看到月光说我的E家现在 M的提速到3M了，我下了avltool测了下，巨寒，第一次<strong>0.76M</strong>,第二次<strong>0.82M，</strong>下载速度只有4k的样子。

而我的是380包季的<strong>2M</strong>带宽，不想这个速度实在让人不爽呀，每天都不能享受ADSL快速的感觉，每天都是蜗牛一样，一个网页打开都半天，还不如当时我在学校的30元包月一个账号，买个集线器4个电脑用的速度。

另外，上面说的380包季还不包含每月<strong>20</strong>固定电话费，Y的我不用电话，也没装话机。凭什么要我交座机费，这是哪门子规定，以前没发现，上次发现了，打电话强行取消，说到，说可以去掉，办成停机留号，每月<strong>5</strong>元，当时感觉取得一定成果，就没斤斤计较了，现在想想，也不合理呀，寒。另外，当时改成5元后，说以前扣的20的也返还，真是流氓。。

用了差不多2年的ADSL，一直以来都在忍耐，最近网速越来越慢，严重影响我工作，SSH都要等，这还能叫2M么？垄断真是中国的悲哀，我非常失望。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一直以来，我都是忍耐力很好的，无奈的是深圳电信的ADSL真的越来越垃圾，让人失望的很呀，虽然看到月光说我的E家现在 M的提速到3M了，我下了avltool测了下，巨寒，第一次<strong>0.76M</strong>,第二次<strong>0.82M，</strong>下载速度只有4k的样子。<br />
<br />
而我的是380包季的<strong>2M</strong>带宽，不想这个速度实在让人不爽呀，每天都不能享受ADSL快速的感觉，每天都是蜗牛一样，一个网页打开都半天，还不如当时我在学校的30元包月一个账号，买个集线器4个电脑用的速度。<br />
<br />
另外，上面说的380包季还不包含每月<strong>20</strong>固定电话费，Y的我不用电话，也没装话机。凭什么要我交座机费，这是哪门子规定，以前没发现，上次发现了，打电话强行取消，说到，说可以去掉，办成停机留号，每月<strong>5</strong>元，当时感觉取得一定成果，就没斤斤计较了，现在想想，也不合理呀，寒。另外，当时改成5元后，说以前扣的20的也返还，真是流氓。。<br />
<br />
用了差不多2年的ADSL，一直以来都在忍耐，最近网速越来越慢，严重影响我工作，SSH都要等，这还能叫2M么？垄断真是中国的悲哀，我非常失望。</p>]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2008-06-26 22:07:07</wp:post_date>
		<wp:post_date_gmt>2008-06-26 22:07:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%b1%e5%9c%b3adsl%e7%9c%9f%e5%9e%83%e5%9c%be%e7%9a%84%e8%af%b4%e6%88%91%e5%be%88%e5%a4%b1%e6%9c%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="adsl"><![CDATA[ADSL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>215</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.131.227.147</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 21:36:34</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“下载速度只有4k的样子”。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>216</wp:comment_id>
			<wp:comment_author><![CDATA[深圳游客]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.73.30</wp:comment_author_IP>
			<wp:comment_date>2008-08-06 08:46:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你的电脑有问题吧。。。
我这下载速度嗷嗷快， 源好的话轻松上160KB/s的。
个别服务器能上200K， 也是2M的ADSL。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>movtown,Yobo要换域名了?</title>
		<link>http://www.iceskysl.com/?p=323</link>
		<pubDate>Fri, 27 Jun 2008 02:07:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=323</guid>
		<description></description>
		<content:encoded><![CDATA[晚上等着看欧洲杯，就在<a href="http://yobo.com/">Yobo</a>上听歌，顺便打探下其用户量和流行程度，无意发现其域名变了，由原来的yobo.com变成<a href="http://movtown.com">movtown.com</a>了。

有人对YOBO这个域名有意见是早有耳闻，或许movtown这个域名会替代？完全是个人感觉，hoho。。

顺手查询了下<strong>movtown</strong>的历史，以前应该是一个免费电影下载的站点，流量不是很大，从其Alex排名（1487849）上可以看到，估计是被Yobo买了的吧。

从这个域名上可以看出yobo下一步发展的趋势和动态，把这个域名扯开可以看到，以后应该会往mov方面靠拢，不应该呀，mov应该是偏向于电影才对的呀，yobo应该是做电子音乐不会做视频方面的，不晓得mov如何解释，或许有谁可以把这个域名往音乐上靠呢？

先占座，以后慢慢补充。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>晚上等着看欧洲杯，就在<a href="http://yobo.com/">Yobo</a>上听歌，顺便打探下其用户量和流行程度，无意发现其域名变了，由原来的yobo.com变成<a href="http://movtown.com/">movtown.com</a>了。<br />
<br />
有人对YOBO这个域名有意见是早有耳闻，或许movtown这个域名会替代？完全是个人感觉，hoho。。<br />
<br />
顺手查询了下<strong>movtown</strong>的历史，以前应该是一个免费电影下载的站点，流量不是很大，从其Alex排名（1487849）上可以看到，估计是被Yobo买了的吧。</p>
<p>从这个域名上可以看出yobo下一步发展的趋势和动态，把这个域名扯开可以看到，以后应该会往mov方面靠拢，不应该呀，mov应该是偏向于电影才对的呀，yobo应该是做电子音乐不会做视频方面的，不晓得mov如何解释，或许有谁可以把这个域名往音乐上靠呢？</p>
<p>先占座，以后慢慢补充。</p>]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2008-06-27 02:07:16</wp:post_date>
		<wp:post_date_gmt>2008-06-27 02:07:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>movtownyobo%e8%a6%81%e6%8d%a2%e5%9f%9f%e5%90%8d%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="yobo"><![CDATA[YOBO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.47.129</wp:comment_author_IP>
			<wp:comment_date>2008-06-27 02:11:12</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ping了下，发现IP一样，证明我没看花眼，如下：
C:\Documents and Settings\Administrator>ping www.movtown.com

Pinging www.movtown.com [211.154.166.126] with 32 bytes of data:

Reply from 211.154.166.126: bytes=32 time=57ms TTL=52
Reply from 211.154.166.126: bytes=32 time=56ms TTL=52
Reply from 211.154.166.126: bytes=32 time=56ms TTL=52

Ping statistics for 211.154.166.126:
    Packets: Sent = 3, Received = 3, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 56ms, Maximum = 57ms, Average = 56ms
Control-C
^C
C:\Documents and Settings\Administrator>ping www.yobo.com

Pinging www.yobo.com [211.154.166.126] with 32 bytes of data:

Reply from 211.154.166.126: bytes=32 time=57ms TTL=52
Reply from 211.154.166.126: bytes=32 time=55ms TTL=52]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[kamera cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.product&amp;catID=187&amp;productID=531&amp;p=1&amp;title=KS-2301</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 14:50:25</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 06:50:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>toko cctv...</strong>

[...]movtown,Yobo要换域名了?[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[cheap wedding dresses]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressiton.com</wp:comment_author_url>
			<wp:comment_author_IP>113.3.203.245</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 19:29:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 11:29:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap wedding dresses...</strong>

[...]movtown,Yobo要换域名了?[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>220</wp:comment_id>
			<wp:comment_author><![CDATA[real estate Fredericksburg]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://realestatelistingsfredericksburg.com/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 23:29:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 15:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>real estate Fredericksburg...</strong>

[...]movtown,Yobo要换域名了?[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>221</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.dealer&amp;cityID=10&amp;title=Pekan-Baru</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-10-04 13:37:05</wp:comment_date>
			<wp:comment_date_gmt>2011-10-04 05:37:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>toko cctv...</strong>

[...]movtown,Yobo要换域名了?[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[London Dance Agencies]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.unrivaledseduction.co.uk/unrivaledseduction.php?Action=4&amp;k=exotic-dancing-2005</wp:comment_author_url>
			<wp:comment_author_IP>90.199.219.253</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 12:48:28</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 04:48:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>London Dance Agencies...</strong>

[...]movtown,Yobo要换域名了?[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Gravatars,图片标识服务-多小的Idea都可以做成.</title>
		<link>http://www.iceskysl.com/?p=324</link>
		<pubDate>Fri, 27 Jun 2008 09:46:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[这个世界有意思，多大的idea都可以做成网站，以前看过缩址的网站，现在有看到一个省份标识的网站，<a href="http://gravatar.com/"> Gravatars</a>，看他的介绍：
<blockquote>A gravatar, or <strong>g</strong>lobally <strong>r</strong>ecognized <strong>avatar</strong>, is quite simply an avatar image that follows you from weblog to weblog appearing beside your name when you comment on gravatar enabled sites. Avatars help identify your posts on web forums, so why not on weblogs?</blockquote>
看明白了么，就是一个你输入自己的Email，然后上传自己的图片标识，然后在其他支持 Gravatars的网站（blog居多）中发表评论的时候输入自己的Email地址，就可以在Gravatars上找到其对应的图片来显示了。

这确实是个不错的Idea，相当简单，但是也做得有声有色的，有点意思。

使用也很方便，其在“<a href="http://en.gravatar.com/site/implement/url">How the URL is constructed</a>”上介绍了其URL的组成，中可以这么使用（来源<a href="http://overhrd.com/?p=28">Gravatars on Rails</a>）：

<!--more-->

1、首先在<code>application_helper.rb中增加一个helper方法</code>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'digest/md5'</span><span>    </span></span></li>
	<li><span><span class="comment">#增加一个Helper方法  </span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">def</span><span> gravatar_url_for(email, options = {})        </span></span></li>
	<li><span>   url_for({ <span class="symbol">:gravatar_id</span><span> =&gt; Digest::MD5.hexdigest(email), </span><span class="symbol">:host</span><span> =&gt; </span><span class="string">'www.gravatar.com'</span><span>,          </span></span></li>
	<li class="alt"><span>            <span class="symbol">:protocol</span><span> =&gt; </span><span class="string">'http://'</span><span>, </span><span class="symbol">:only_path</span><span> =&gt; </span><span class="keyword">false</span><span>, </span><span class="symbol">:controller</span><span> =&gt; </span><span class="string">'avatar.php'</span><span>        </span></span></li>
	<li><span>       }.merge(options))      </span></li>
	<li class="alt"><span><span class="keyword">end</span><span>    </span></span></li>
</ol>
</div>
&nbsp;

2、然后就可以在view里面直接使用了
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># plain old gravatar url    </span><span>  </span></span></li>
	<li><span>&lt;%= gravatar_url_for <span class="string">'iceskysl@gmail.com'</span><span> %&gt;        </span></span></li>
	<li class="alt"><span>    </span></li>
	<li><span><span class="comment"># gravatar url with a rating threshold     </span><span>  </span></span></li>
	<li class="alt"><span>&lt;%= gravatar_url_for <span class="string">'iceskysl@gmail.com'</span><span>, { </span><span class="symbol">:rating</span><span> =&gt; </span><span class="string">'R'</span><span> } %&gt;        </span></span></li>
	<li><span>    </span></li>
	<li class="alt"><span><span class="comment"># show the avatar     </span><span>  </span></span></li>
	<li><span>&lt;%= image_tag(gravatar_url_for <span class="string">'iceskysl@gmail.com'</span><span>)%&gt;       </span></span></li>
	<li class="alt"><span>    </span></li>
	<li><span><span class="comment"># show the avatar with size specified, in case it's served slowly    </span><span>  </span></span></li>
	<li class="alt"><span>&lt;%= image_tag(gravatar_url_for('iceskysl<span class="variable">@gmail</span><span>.com</span><span class="string">'), { :width =&gt; 80, :height =&gt; 80 }) %&gt;     </span> </span></li>
	<li><span><span class="string"> </span> </span></li>
	<li class="alt"><span><span class="string"># link the avatar to some/url   </span> </span></li>
	<li><span><span class="string">&lt;%= link_to(image_tag(gravatar_url_for '</span><span>iceskysl</span><span class="variable">@gmail</span><span>.com</span><span class="string">'), '</span><span>some/url')%&gt;    </span></span></li>
</ol>
</div>
PS：果然不出所料，还有Gem可以使用" <a href="http://avatar.rubyforge.org/">Ruby Avatar Gem</a>"

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这个世界有意思，多大的idea都可以做成网站，以前看过缩址的网站，现在有看到一个省份标识的网站，<a href="http://gravatar.com/"> Gravatars</a>，看他的介绍：</p>
<blockquote>
<p>A gravatar, or <strong>g</strong>lobally <strong>r</strong>ecognized <strong>avatar</strong>, is quite simply an avatar image that follows you from weblog to weblog appearing beside your name when you comment on gravatar enabled sites. Avatars help identify your posts on web forums, so why not on weblogs?</p>
</blockquote>
<p>看明白了么，就是一个你输入自己的Email，然后上传自己的图片标识，然后在其他支持 Gravatars的网站（blog居多）中发表评论的时候输入自己的Email地址，就可以在Gravatars上找到其对应的图片来显示了。</p>
<p>这确实是个不错的Idea，相当简单，但是也做得有声有色的，有点意思。</p>
<p>使用也很方便，其在&ldquo;<a href="http://en.gravatar.com/site/implement/url">How the URL is constructed</a>&rdquo;上介绍了其URL的组成，中可以这么使用（来源<a href="http://overhrd.com/?p=28">Gravatars on Rails</a>）：</p>
<p>1、首先在<code>application_helper.rb中增加一个helper方法</code></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'digest/md5'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#增加一个Helper方法&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;gravatar_url_for(email,&nbsp;options&nbsp;=&nbsp;{})&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;url_for({&nbsp;<span class="symbol">:gravatar_id</span><span>&nbsp;=&gt;&nbsp;Digest::MD5.hexdigest(email),&nbsp;</span><span class="symbol">:host</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'www.gravatar.com'</span><span>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:protocol</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'http://'</span><span>,&nbsp;</span><span class="symbol">:only_path</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>,&nbsp;</span><span class="symbol">:controller</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'avatar.php'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}.merge(options))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><code> </code></p>
<p>2、然后就可以在view里面直接使用了</p>
<p><code> </code></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;plain&nbsp;old&nbsp;gravatar&nbsp;url&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&lt;%=&nbsp;gravatar_url_for&nbsp;<span class="string">'iceskysl@gmail.com'</span><span>&nbsp;%&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;gravatar&nbsp;url&nbsp;with&nbsp;a&nbsp;rating&nbsp;threshold&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&lt;%=&nbsp;gravatar_url_for&nbsp;<span class="string">'iceskysl@gmail.com'</span><span>,&nbsp;{&nbsp;</span><span class="symbol">:rating</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'R'</span><span>&nbsp;}&nbsp;%&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;show&nbsp;the&nbsp;avatar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&lt;%=&nbsp;image_tag(gravatar_url_for&nbsp;<span class="string">'iceskysl@gmail.com'</span><span>)%&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;show&nbsp;the&nbsp;avatar&nbsp;with&nbsp;size&nbsp;specified,&nbsp;in&nbsp;case&nbsp;it's&nbsp;served&nbsp;slowly&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&lt;%=&nbsp;image_tag(gravatar_url_for('iceskysl<span class="variable">@gmail</span><span>.com</span><span class="string">'),&nbsp;{&nbsp;:width&nbsp;=&gt;&nbsp;80,&nbsp;:height&nbsp;=&gt;&nbsp;80&nbsp;})&nbsp;%&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;</span></li>
    <li class=""><span><span class="string">&nbsp;</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">#&nbsp;link&nbsp;the&nbsp;avatar&nbsp;to&nbsp;some/url&nbsp;&nbsp;&nbsp;</span>&nbsp;</span></li>
    <li class=""><span><span class="string">&lt;%=&nbsp;link_to(image_tag(gravatar_url_for&nbsp;'</span><span>iceskysl</span><span class="variable">@gmail</span><span>.com</span><span class="string">'),&nbsp;'</span><span>some/url')%&gt;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
PS：果然不出所料，还有Gem可以使用&quot; <a href="http://avatar.rubyforge.org/">Ruby Avatar Gem</a>&quot;</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2008-06-27 09:46:13</wp:post_date>
		<wp:post_date_gmt>2008-06-27 09:46:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gravatars%e5%9b%be%e7%89%87%e6%a0%87%e8%af%86%e6%9c%8d%e5%8a%a1-%e5%a4%9a%e5%b0%8f%e7%9a%84idea%e9%83%bd%e5%8f%af%e4%bb%a5%e5%81%9a%e6%88%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="gravatars"><![CDATA[Gravatars]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>223</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.131.227.147</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 21:42:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[国内有个55.la 专门做在线图片logo生成，很棒～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails2.1之前的Injection漏洞:limit,offset过滤不严.</title>
		<link>http://www.iceskysl.com/?p=325</link>
		<pubDate>Sat, 28 Jun 2008 20:43:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=325</guid>
		<description></description>
		<content:encoded><![CDATA[现在很多人应该都开始使用Rails2.1了吧，如果你还没有升级到Rails2.1版，那么看看前段时间，我和其他几个RoRer翻译的《<a href="http://iceskysl.1sters.com/?action=show&amp;id=316">Rails 2.1中文文档翻译完成[已发布]</a>》中其所增加的新功能。如果这些新功能还不能说服你升级到Rails2.1的话，那么请接着看，在Rails2.1之前，Rails1.X和Rails2.0中都存在如下漏洞。

大家可以看看Rails2.1之前的 ActiveRecord 中，其允许在<em>:offset</em>中任意构造SQL语句，也就是说，如果可能的话，我们可以利用<em>:offset</em>来构造SQL注射<em>。</em>

&nbsp;
<div class="codeText">
<div class="codeHead"><em>Ruby代码</em></div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"><em># vulnerable controller code</em></span><span><em>  </em></span></span></li>
	<li><span><em>User.find(<span class="symbol">:all</span><span>, </span><span class="symbol">:limit</span><span> =&gt; params[</span><span class="symbol">:limit</span><span>])  </span></em></span></li>
	<li class="alt"><span><em>  </em></span></li>
	<li><span><em>User.find(<span class="symbol">:all</span><span>, </span><span class="symbol">:limit</span><span> =&gt; 10, </span><span class="symbol">:offset</span><span> =&gt; params[</span><span class="symbol">:offset</span><span>])  </span></em></span></li>
	<li class="alt"><span><em>  </em></span></li>
	<li><span><span class="comment"><em># with params[:offset] or params[:limit] set to '<strong>; DROP TABLE users;</strong>'</em></span><span><em>  </em></span></span></li>
	<li class="alt"><span><span class="comment"><em># you got a big problem ...</em></span><span><em>  </em></span></span></li>
</ol>
</div>
如上<em>，</em>我们直接从<em>Http的params中取得limit或者offset参数，直接放在SQL的find中，如果在offset中构造邪恶代码的话，肯定会造成大问题。</em>

幸好，Mysql默认的是不许一次API调用执行多条SQL，但是这个问题还是存在的<em>，但是</em>PostgreSQL和 SQLite就没那么幸运了，按照上面说的，你可以自己测试下。

现在的Rails2.1版本中已经修复了PostgreSQL 和SQLite中存在的问题，但是并没有其在Mysql中存在的问题（虽然现在尚且无法利用），后面的Rails2.1.1版本中已经修复了。

参考文档：<a href="http://blog.innerewut.de/"> Why you should upgrade to Rails 2.1  0  </a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>现在很多人应该都开始使用Rails2.1了吧，如果你还没有升级到Rails2.1版，那么看看前段时间，我和其他几个RoRer翻译的《<a href="../../../?action=show&amp;id=316">Rails 2.1中文文档翻译完成[已发布]</a>》中其所增加的新功能。如果这些新功能还不能说服你升级到Rails2.1的话，那么请接着看，在Rails2.1之前，Rails1.X和Rails2.0中都存在如下漏洞。</p>
<p>大家可以看看Rails2.1之前的 ActiveRecord 中，其允许在<em>:offset</em>中任意构造SQL语句，也就是说，如果可能的话，我们可以利用<em>:offset</em>来构造SQL注射<em>。</em></p>
<p><em>
<div class="codeText">
<div class="codeHead"><em>Ruby代码</em></div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment"><em>#&nbsp;vulnerable&nbsp;controller&nbsp;code</em></span><span><em>&nbsp;&nbsp;</em></span></span></li>
    <li class=""><span><em>User.find(<span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:limit</span><span>&nbsp;=&gt;&nbsp;params[</span><span class="symbol">:limit</span><span>])&nbsp;&nbsp;</span></em></span></li>
    <li class="alt"><span><em>&nbsp;&nbsp;</em></span></li>
    <li class=""><span><em>User.find(<span class="symbol">:all</span><span>,&nbsp;</span><span class="symbol">:limit</span><span>&nbsp;=&gt;&nbsp;10,&nbsp;</span><span class="symbol">:offset</span><span>&nbsp;=&gt;&nbsp;params[</span><span class="symbol">:offset</span><span>])&nbsp;&nbsp;</span></em></span></li>
    <li class="alt"><span><em>&nbsp;&nbsp;</em></span></li>
    <li class=""><span><span class="comment"><em>#&nbsp;with&nbsp;params[:offset]&nbsp;or&nbsp;params[:limit]&nbsp;set&nbsp;to&nbsp;'<strong>;&nbsp;DROP&nbsp;TABLE&nbsp;users;</strong>'</em></span><span><em>&nbsp;&nbsp;</em></span></span></li>
    <li class="alt"><span><span class="comment"><em>#&nbsp;you&nbsp;got&nbsp;a&nbsp;big&nbsp;problem&nbsp;...</em></span><span><em>&nbsp;&nbsp;</em></span></span></li>
</ol>
</div>
</em>如上<em>，</em>我们直接从<em>Http的params中取得limit或者offset参数，直接放在SQL的find中，如果在offset中构造邪恶代码的话，肯定会造成大问题。</em></p>
<p>幸好，Mysql默认的是不许一次API调用执行多条SQL，但是这个问题还是存在的<em>，但是</em>PostgreSQL和 SQLite就没那么幸运了，按照上面说的，你可以自己测试下。</p>
<p>现在的Rails2.1版本中已经修复了PostgreSQL 和SQLite中存在的问题，但是并没有其在Mysql中存在的问题（虽然现在尚且无法利用），后面的Rails2.1.1版本中已经修复了。</p>
<p>参考文档：<a href="http://blog.innerewut.de/"> Why you should upgrade to Rails 2.1&nbsp; 0&nbsp; </a></p>]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2008-06-28 20:43:58</wp:post_date>
		<wp:post_date_gmt>2008-06-28 20:43:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-1%e4%b9%8b%e5%89%8d%e7%9a%84injection%e6%bc%8f%e6%b4%9elimitoffset%e8%bf%87%e6%bb%a4%e4%b8%8d%e4%b8%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>分析解决linux下的空间满的问题</title>
		<link>http://www.iceskysl.com/?p=326</link>
		<pubDate>Sun, 29 Jun 2008 11:08:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[家里用的本本上装ubuntu的时候是在win上格了一块硬盘装的，原来硬盘60G，分了20G给linux，这几天发现系统有些不正常，直接告诉我是空间不足了，赶紧看看：
iceskysl@IceskYsl:/opt/devroot$ df
文件系统           1K-块        已用     可用 已用% 挂载点
/dev/sda8             10309796   9547180    238900  98% /
varrun                  772952       228    772724   1% /var/run
varlock                 772952         0    772952   0% /var/lock
udev                    772952        72    772880   1% /dev
devshm                  772952         0    772952   0% /dev/shm
lrm                     772952     38176    734776   5% /lib/modules/2.6.24-18-generic/volatile
/dev/sda7                93307     92784         0 100% /boot
/dev/sda9              9614116   5557504   3568240  61% /home
/dev/sda1             14195576  12552736   1642840  89% /media/sda1
/dev/sda5             15366140  13757584   1608556  90% /media/sda5
（PS：这个是我清掉一部分日志后的，原来的/是100%的）

可以看到，空间实在是紧张，没办法，又不想格了重新装，只能看看有没有啥“软”办法来清理下空间了，找到两篇不错的文章，《<a href="http://bbs.chinaunix.net/viewthread.php?tid=422421">解决Linux磁盘空间满的“软”办法</a>》列举了10个软办法，相当不错;《<a href="http://blog.csdn.net/chinalinuxzend/archive/2007/10/20/1834728.aspx">空间满问题，请各位高手帮忙啊！</a>》这个帖子讨论了一般的思路和方法。另外还可以参考如下两个文档：
http://www-900.ibm.com/developerWorks/cn/linux/filesystem/ext2/index.shtml
http://www-900.ibm.com/developerWorks/cn/linux/filesystem/l-fs9/index.shtml]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>家里用的本本上装ubuntu的时候是在win上格了一块硬盘装的，原来硬盘60G，分了20G给linux，这几天发现系统有些不正常，直接告诉我是空间不足了，赶紧看看：<br />
iceskysl@IceskYsl:/opt/devroot$ df<br />
文件系统&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1K-块&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 已用&nbsp;&nbsp;&nbsp;&nbsp; 可用 已用% 挂载点<br />
/dev/sda8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10309796&nbsp;&nbsp; 9547180&nbsp;&nbsp;&nbsp; 238900&nbsp; 98% /<br />
varrun&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 228&nbsp;&nbsp;&nbsp; 772724&nbsp;&nbsp; 1% /var/run<br />
varlock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /var/lock<br />
udev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 72&nbsp;&nbsp;&nbsp; 772880&nbsp;&nbsp; 1% /dev<br />
devshm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /dev/shm<br />
lrm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp; 38176&nbsp;&nbsp;&nbsp; 734776&nbsp;&nbsp; 5% /lib/modules/2.6.24-18-generic/volatile<br />
/dev/sda7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 93307&nbsp;&nbsp;&nbsp;&nbsp; 92784&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 100% /boot<br />
/dev/sda9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9614116&nbsp;&nbsp; 5557504&nbsp;&nbsp; 3568240&nbsp; 61% /home<br />
/dev/sda1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 14195576&nbsp; 12552736&nbsp;&nbsp; 1642840&nbsp; 89% /media/sda1<br />
/dev/sda5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 15366140&nbsp; 13757584&nbsp;&nbsp; 1608556&nbsp; 90% /media/sda5<br />
（PS：这个是我清掉一部分日志后的，原来的/是100%的）<br />
<br />
可以看到，空间实在是紧张，没办法，又不想格了重新装，只能看看有没有啥&ldquo;软&rdquo;办法来清理下空间了，找到两篇不错的文章，《<a href="http://bbs.chinaunix.net/viewthread.php?tid=422421">解决Linux磁盘空间满的&ldquo;软&rdquo;办法</a>》列举了10个软办法，相当不错;《<a href="http://blog.csdn.net/chinalinuxzend/archive/2007/10/20/1834728.aspx">空间满问题，请各位高手帮忙啊！</a>》这个帖子讨论了一般的思路和方法。另外还可以参考如下两个文档：<br />
http://www-900.ibm.com/developerWorks/cn/linux/filesystem/ext2/index.shtml<br />
http://www-900.ibm.com/developerWorks/cn/linux/filesystem/l-fs9/index.shtml</p>]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2008-06-29 11:08:46</wp:post_date>
		<wp:post_date_gmt>2008-06-29 11:08:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%86%e6%9e%90%e8%a7%a3%e5%86%b3linux%e4%b8%8b%e7%9a%84%e7%a9%ba%e9%97%b4%e6%bb%a1%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_bea0c59ac3ba7c586670e703d03cf7da</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_06cf35ef40ad07d42dd5aebde1cb9d63</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>224</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.110.253</wp:comment_author_IP>
			<wp:comment_date>2008-07-12 21:31:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以使用以下命令清理系统垃圾
sudo apt-get autoclean 清理旧版本的软件缓存
sudo apt-get clean 清理所有软件缓存
sudo apt-get autoremove 删除系统不再使用的孤立软件]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>225</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.35.110.253</wp:comment_author_IP>
			<wp:comment_date>2008-07-12 21:41:40</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[使用 localepurge 删除无用的区域配置文件：
http://linuxtoy.org/archives/localepurge.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Rails开发支持WAP/WML的应用</title>
		<link>http://www.iceskysl.com/?p=327</link>
		<pubDate>Tue, 01 Jul 2008 14:51:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=327</guid>
		<description></description>
		<content:encoded><![CDATA[Rails在WEB开发中独树一帜，取得相当大的成功，但是其内核中尚未支持WML，于是查找了一些资料，如果你使用Rails开发的系统向添加WAP支持，这或许对你有用。

总的来看，有两个方式来实现对WML的支持，单独支持和整合支持，下面详细的说。

<strong>一、按照一般方式支持</strong>

这个方式和做PC WEB方式是一样的，有个单独的controller或者action，指定特有的layout和页面模板，而这些模板中采用WML语言编写，在请求到来的时候，按照URL中特有的特征字符（比如二级域名）或者Http Head中的标识转向Wap的action，进而显示。详细的步骤基本上是这样的：

<strong>1、在app/controllers/application.rb中增加对WAP格式输出的支持</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>before_filter </span><span class="symbol">:set_wap_content_type</span><span>, </span><span class="symbol">:only</span><span> =&gt; </span><span class="symbol">:wap</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="keyword">def</span><span> set_wap_content_type  </span></span></li>
	<li><span>  <span class="variable">@headers</span><span>[</span><span class="string">"Content-Type"</span><span>] = “text/vnd.wap.wml; charset=iso-8859-1″  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>2、添加一个WAP的全局布局模板app/views/layouts/wap.rhtm</strong>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span class="tag">&lt;?</span><span class="tag-name">xml</span><span> </span><span class="attribute">version</span><span>=”1.0″</span><span class="tag">?&gt;</span><span>  </span></span></li>
	<li><span>&lt;!DOCTYPE wml PUBLIC “-//WAPFORUM//DTD WML 1.1//EN” “http://www.wapforum.org/DTD/wml_1.1.xml”<span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">wml</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span><span class="tag">&lt;</span><span class="tag-name">card</span><span> </span><span class="attribute">title</span><span>=”</span><span class="tag">&lt;</span><span>%= @title %</span><span class="tag">&gt;</span><span>”</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p</span><span> </span><span class="attribute">align</span><span>=”center”</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span><span class="tag">&lt;</span><span>%= @content_for_layout %</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">p</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span><span class="tag">&lt;/</span><span class="tag-name">card</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">wml</span><span class="tag">&gt;</span><span>  </span></span></li>
</ol>
</div>
<strong>3、在我的controller中（index）中增加一个action用来响应WAP请求。</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">def</span><span> wap  </span></span></li>
	<li><span>  <span class="variable">@title</span><span> = </span><span class="string">"San Francisco Sailing Weather"</span><span>  </span></span></li>
	<li class="alt"><span>  render(<span class="symbol">:layout</span><span> =&gt; </span><span class="string">"wml"</span><span>)  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>4、添加相应的view模板app/views/index/wap.rhtml</strong>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span class="tag">&lt;</span><span>%= link_to 'NOAA Marine Forecast', { </span><span class="attribute">:controller</span><span> =</span><span class="tag">&gt;</span><span> '/marine/forecast', </span><span class="attribute">:action</span><span> =</span><span class="tag">&gt;</span><span> 'wap' } %</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span class="tag-name">br</span><span class="tag">/&gt;</span><span>  </span></span></li>
	<li><span><span class="tag">&lt;</span><span>%= link_to 'Wind Readings', { </span><span class="attribute">:controller</span><span> =</span><span class="tag">&gt;</span><span> '/marine/wind', </span><span class="attribute">:action</span><span> =</span><span class="tag">&gt;</span><span> 'wap' } %</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span class="tag-name">br</span><span class="tag">/&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;</span><span>%= link_to 'Current Predictions', { </span><span class="attribute">:controller</span><span> =</span><span class="tag">&gt;</span><span> '/marine/tide', </span><span class="attribute">:action</span><span> =</span><span class="tag">&gt;</span><span> 'wap' } %</span><span class="tag">&gt;</span><span>  </span></span></li>
</ol>
</div>
&nbsp;

<strong>二、使用Rails2支持的多模板类型支持</strong>

在Rails2以后，Rails支持多种格式的输出，比如Html，RSS，JS等，当然你还可以定制自己的格式，比如我们这里说的WML，Iphone等，使用起来更简单、自然。

<strong>1、添加MIME格式支持</strong>

在config/environment.rb中增加MIME的格式支持，方式如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>Mime::Type.register </span><span class="string">"text/vnd.wap.wml"</span><span>, </span><span class="symbol">:wml</span><span>  </span></span></li>
</ol>
</div>
<pre style="font-size: 90%;">
<strong>2、判断请求类型</strong></pre>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># application.rb</span><span>  </span></span></li>
	<li><span>before_filter <span class="symbol">:adjust_format_for_beta</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>...  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="keyword">def</span><span> adjust_format_for_beta  </span></span></li>
	<li class="alt"><span>  request.format = <span class="symbol">:beta</span><span> </span><span class="keyword">if</span><span> beta_request?   </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="keyword">def</span><span> beta_request?  </span></span></li>
	<li class="alt"><span>  <span class="keyword">return</span><span> (request.subdomains.first == </span><span class="string">"beta"</span><span> || params[</span><span class="symbol">:format</span><span>] == </span><span class="string">"beta"</span><span>)  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<pre style="font-size: 90%;">
<strong>3、添加相应的view代码</strong>比较简单，就是写XML或者WML模板<strong>show.wml.erb</strong></pre>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>xml.instruct! :xml, </span><span class="attribute">:version</span><span> =</span><span class="tag">&gt;</span><span> "1.0"  </span></span></li>
	<li><span>xml.wml "xml:lang" =<span class="tag">&gt;</span><span> "en-gb" do  </span></span></li>
	<li class="alt"><span>  xml.card <span class="attribute">:title</span><span> =</span><span class="tag">&gt;</span><span> "My title here" do  </span></span></li>
	<li><span>    xml.p "Something interesting here"  </span></li>
	<li class="alt"><span>    xml.p "Something else interesting here."  </span></li>
	<li><span>  end  </span></li>
	<li class="alt"><span>end  </span></li>
</ol>
</div>
<pre style="font-size: 90%;">
<strong>4、添加输出类型支持</strong></pre>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">def</span><span> index  </span></span></li>
	<li><span>  respond_to <span class="keyword">do</span><span> |format|  </span></span></li>
	<li class="alt"><span>    format.html  </span></li>
	<li><span>    format.wml  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<pre style="font-size: 90%;">
以上两中方式，我个人更加喜欢Rails2的多模板支持模式，更加自然和清晰。<strong>实用工具：</strong><a href="http://addons.mozilla.org/firefox/addon/62">wmlbrowser add-on for Firefox</a> ：可以在FF下直接查看WML网页<a href="http://cn.opera.com/">Opera</a>：支持WML格式显示</pre>
<strong>参考资文章：</strong>

1、<a href="http://gabrito.com/post/making-your-rails-app-mobile-with-wap-and-wml">Making your Rails app mobile with WAP and WML</a>
2、<a href="http://surfingincognito.com/index.php?hl=f5&amp;q=uggc%3A%2F%2Fqnirc-zhzoyvat.oybtfcbg.pbz%2F2008%2F05%2Fehol-ba-envyf-naq-fbzr-jnc.ugzy">Ruby on Rails (and some WAP)</a>
3、<a href="http://locomotivation.com/2008/06/28/redesign-your-site-in-place-using-rails-custom-mime-types">Redesign your site in place using Rails custom mime types</a>

<strong>参考资料：</strong>

<a href="http://www.w3schools.com/wap/">W3schools WAP tutorial</a>
<a href="http://www.w3schools.com/wap/wml_reference.asp">W3schools WML reference</a>
<a href="http://webcab.de/wcl.htm">Web based WAP Emulator</a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails在WEB开发中独树一帜，取得相当大的成功，但是其内核中尚未支持WML，于是查找了一些资料，如果你使用Rails开发的系统向添加WAP支持，这或许对你有用。</p>
<p>总的来看，有两个方式来实现对WML的支持，单独支持和整合支持，下面详细的说。</p>
<p><strong>一、按照一般方式支持</strong></p>
<p>这个方式和做PC WEB方式是一样的，有个单独的controller或者action，指定特有的layout和页面模板，而这些模板中采用WML语言编写，在请求到来 的时候，按照URL中特有的特征字符（比如二级域名）或者Http Head中的标识转向Wap的action，进而显示。详细的步骤基本上是这样的：</p>
<p><strong>1、在app/controllers/application.rb中增加对WAP格式输出的支持</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>before_filter&nbsp;</span><span class="symbol">:set_wap_content_type</span><span>,&nbsp;</span><span class="symbol">:only</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:wap</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;set_wap_content_type&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="variable">@headers</span><span>[</span><span class="string">&quot;Content-Type&quot;</span><span>]&nbsp;=&nbsp;&ldquo;text/vnd.wap.wml;&nbsp;charset=iso-8859-1&Prime;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>2、添加一个WAP的全局布局模板app/views/layouts/wap.rhtm</strong></p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;?</span><span class="tag-name">xml</span><span>&nbsp;</span><span class="attribute">version</span><span>=&rdquo;1.0&Prime;</span><span class="tag">?&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&lt;!DOCTYPE&nbsp;wml&nbsp;PUBLIC&nbsp;&ldquo;-//WAPFORUM//DTD&nbsp;WML&nbsp;1.1//EN&rdquo;&nbsp;&ldquo;http://www.wapforum.org/DTD/wml_1.1.xml&rdquo;<span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">wml</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span class="tag-name">card</span><span>&nbsp;</span><span class="attribute">title</span><span>=&rdquo;</span><span class="tag">&lt;</span><span>%=&nbsp;@title&nbsp;%</span><span class="tag">&gt;</span><span>&rdquo;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p</span><span>&nbsp;</span><span class="attribute">align</span><span>=&rdquo;center&rdquo;</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%=&nbsp;@content_for_layout&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">p</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;/</span><span class="tag-name">card</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">wml</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>3、在我的controller中（index）中增加一个action用来响应WAP请求。</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;wap&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="variable">@title</span><span>&nbsp;=&nbsp;</span><span class="string">&quot;San&nbsp;Francisco&nbsp;Sailing&nbsp;Weather&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;render(<span class="symbol">:layout</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;wml&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>4、添加相应的view模板app/views/index/wap.rhtml</strong></p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span>%=&nbsp;link_to&nbsp;'NOAA&nbsp;Marine&nbsp;Forecast',&nbsp;{&nbsp;</span><span class="attribute">:controller</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'/marine/forecast',&nbsp;</span><span class="attribute">:action</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'wap'&nbsp;}&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span class="tag-name">br</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="tag">&lt;</span><span>%=&nbsp;link_to&nbsp;'Wind&nbsp;Readings',&nbsp;{&nbsp;</span><span class="attribute">:controller</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'/marine/wind',&nbsp;</span><span class="attribute">:action</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'wap'&nbsp;}&nbsp;%</span><span class="tag">&gt;</span><span class="tag">&lt;</span><span class="tag-name">br</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span>%=&nbsp;link_to&nbsp;'Current&nbsp;Predictions',&nbsp;{&nbsp;</span><span class="attribute">:controller</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'/marine/tide',&nbsp;</span><span class="attribute">:action</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;'wap'&nbsp;}&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>
<p><strong>二、使用Rails2支持的多模板类型支持</strong></p>
<p>在Rails2以后，Rails支持多种格式的输出，比如Html，RSS，JS等，当然你还可以定制自己的格式，比如我们这里说的WML，Iphone等，使用起来更简单、自然。</p>
<p><strong>1、添加MIME格式支持</strong></p>
<p>在config/environment.rb中增加MIME的格式支持，方式如下：</p>
<pre style="font-size: 90%;"><div class="codeText"><div class="codeHead">Ruby代码</div><ol class="dp-rb" start="1"><li class="alt"><span><span>Mime::Type.register&nbsp;</span><span class="string">&quot;text/vnd.wap.wml&quot;</span><span>,&nbsp;</span><span class="symbol">:wml</span><span>&nbsp;&nbsp;</span></span></li></ol></div><strong>2、判断请求类型</strong><br /><div class="codeText"><div class="codeHead">Ruby代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span class="comment">#&nbsp;application.rb</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>before_filter&nbsp;<span class="symbol">:adjust_format_for_beta</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>...&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">def</span><span>&nbsp;adjust_format_for_beta&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;request.format&nbsp;=&nbsp;<span class="symbol">:beta</span><span>&nbsp;</span><span class="keyword">if</span><span>&nbsp;beta_request?&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">def</span><span>&nbsp;beta_request?&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;(request.subdomains.first&nbsp;==&nbsp;</span><span class="string">&quot;beta&quot;</span><span>&nbsp;||&nbsp;params[</span><span class="symbol">:format</span><span>]&nbsp;==&nbsp;</span><span class="string">&quot;beta&quot;</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div><strong>3、添加相应的view代码</strong><br />比较简单，就是写XML或者WML模板<strong>show.wml.erb</strong><div class="codeText"><div class="codeHead">XML/HTML代码</div><ol class="dp-xml" start="1"><li class="alt"><span><span>xml.instruct!&nbsp;:xml,&nbsp;</span><span class="attribute">:version</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;1.0&quot;&nbsp;&nbsp;</span></span></li><li class=""><span>xml.wml&nbsp;&quot;xml:lang&quot;&nbsp;=<span class="tag">&gt;</span><span>&nbsp;&quot;en-gb&quot;&nbsp;do&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;xml.card&nbsp;<span class="attribute">:title</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;&quot;My&nbsp;title&nbsp;here&quot;&nbsp;do&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;xml.p&nbsp;&quot;Something&nbsp;interesting&nbsp;here&quot;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;xml.p&nbsp;&quot;Something&nbsp;else&nbsp;interesting&nbsp;here.&quot;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;end&nbsp;&nbsp;</span></li><li class="alt"><span>end&nbsp;&nbsp;</span></li></ol></div><strong>4、添加输出类型支持</strong><br /><div class="codeText"><div class="codeHead">Ruby代码</div><ol class="dp-rb" start="1"><li class="alt"><span><span class="keyword">def</span><span>&nbsp;index&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;respond_to&nbsp;<span class="keyword">do</span><span>&nbsp;|format|&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;format.html&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;format.wml&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li></ol></div>以上两中方式，我个人更加喜欢Rails2的多模板支持模式，更加自然和清晰。<br /><strong><br />实用工具：</strong><br /><a href="http://addons.mozilla.org/firefox/addon/62">wmlbrowser add-on for Firefox</a> ：可以在FF下直接查看WML网页<br /><a href="http://cn.opera.com/">Opera</a>：支持WML格式显示</pre>
<p><strong>参考资文章：</strong></p>
<p>1、<a href="http://gabrito.com/post/making-your-rails-app-mobile-with-wap-and-wml">Making your Rails app mobile with WAP and WML</a><br />
2、<a href="http://surfingincognito.com/index.php?hl=f5&amp;q=uggc%3A%2F%2Fqnirc-zhzoyvat.oybtfcbg.pbz%2F2008%2F05%2Fehol-ba-envyf-naq-fbzr-jnc.ugzy">Ruby on Rails (and some WAP)</a><br />
3、<a href="http://locomotivation.com/2008/06/28/redesign-your-site-in-place-using-rails-custom-mime-types">Redesign your site in place using Rails custom mime types</a></p>
<p><strong>参考资料：</strong></p>
<p><a href="http://www.w3schools.com/wap/">W3schools WAP tutorial</a><br />
<a href="http://www.w3schools.com/wap/wml_reference.asp">W3schools WML reference</a><br />
<a href="http://webcab.de/wcl.htm">Web based WAP Emulator</a></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>327</wp:post_id>
		<wp:post_date>2008-07-01 14:51:55</wp:post_date>
		<wp:post_date_gmt>2008-07-01 14:51:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8rails%e5%bc%80%e5%8f%91%e6%94%af%e6%8c%81wapwml%e7%9a%84%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="wap"><![CDATA[WAP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>下午启程去北京,有请饭的没？</title>
		<link>http://www.iceskysl.com/?p=328</link>
		<pubDate>Wed, 02 Jul 2008 14:16:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=328</guid>
		<description></description>
		<content:encoded><![CDATA[工作需要，出差北京，晚上7点飞机，深圳到北京。

第一次去北京，充满期待，有请我吃饭的没？]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>工作需要，出差北京，晚上7点飞机，深圳到北京。<br />
<br />
第一次去北京，充满期待，有请我吃饭的没？</p>]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date>2008-07-02 14:16:36</wp:post_date>
		<wp:post_date_gmt>2008-07-02 14:16:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8b%e5%8d%88%e5%90%af%e7%a8%8b%e5%8e%bb%e5%8c%97%e4%ba%ac%e6%9c%89%e8%af%b7%e9%a5%ad%e7%9a%84%e6%b2%a1%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e5%8c%97%e4%ba%ac"><![CDATA[北京]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>226</wp:comment_id>
			<wp:comment_author><![CDATA[cash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>221.10.30.211</wp:comment_author_IP>
			<wp:comment_date>2008-07-02 23:56:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[北京？亲爱的首都啊。
肯定很多人抢着请你。哈哈
一路平安！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>227</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.127.131.250</wp:comment_author_IP>
			<wp:comment_date>2008-07-03 11:10:42</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[顺利到达北京。。
可惜的是下的士的时候手机摔了下，屏幕看不到咯，囧～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RatProxy:Google提供的开源web应用安全工具</title>
		<link>http://www.iceskysl.com/?p=329</link>
		<pubDate>Mon, 07 Jul 2008 10:02:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=329</guid>
		<description></description>
		<content:encoded><![CDATA[网络安全永远都是一个值得深究的领域，随着技术的不断发展，越来越多的技术手段被利用在网络安全中；而这其中，web安全越来越被人重视，攻击方式不断革新，技术手法层数不穷，但是目前的状况是，攻击和利用越来越自动化，但是防护和检查都还是偏向人工审核的方式，效率实在一般，但是基于web攻击手段的多样性和复杂性，一直没有一款比较不错的安全检查工具诞生。
<a href="http://code.google.com/p/ratproxy/"><strong>RatProxy</strong></a>是Google信息安全技术团队所研发的程序安全侦测工具，一向为Google 内部所使用。用于<a href="http://computerworld.com/action/article.do?command=viewArticleBasic&amp;articleId=9106758">评估基于Web的应用程序的安全性</a>。<a href="http://www.webappsec.org/">Web Application Security Consortium</a>在2006年的调查发现，31,373个被调查网站中有85.57%容易遭受跨站点脚本攻击，26.38%面临SQL注入攻击，15.70%有一些其它问题，可能导致数据丢失。
Google信息安全工程师Michal Zalewski表示，Google决定将该工具免费开放是因为他们认为这将对信息安全社群有价值，强化社群理解与Web技术有关的安全问题。RatProxy能够分析诸如跨站威胁、防御伪装的跨站请求，以及侦测到快取问题或是潜在的信息泄露问题等。
<img src="http://ratproxy.googlecode.com/files/ratproxy-screen.png" alt="" />
Google在文件中表示，RatProxy为一半自动、多数是被动的网络应用程序安全侦测工具，它同时补足了传统主动爬寻及手动侦测的缺点，而且特别针对潜在的问题及安全相关设计的精确侦测与自动批注进行优化。

至于比起传统安全侦测工具，Google亦列出几项 RatProxy 的优势，包括在默认的操作模式中不会引起仿真攻击所带来的庞大流量，可避免正在使用的系统的瓦解，而且它提供直觉式的操作，并降低时间及带宽的使用，并能找出产品的问题与潜在的漏洞等。

Ratproxy采用Apache 2.0软件许可证，可以查找Web应用程序中的多种代码问题，支持Linux、FreeBSD、Mac OS X、Windows(Cygwin)等操作系统，特别适用于用户为先的Web 2.0环境。
如果你感兴趣，请参考“<a href="http://code.google.com/p/ratproxy/wiki/RatproxyDoc">RatproxyDoc</a> ”]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>网络安全永远都是一个值得深究的领域，随着技术的不断发展，越来越多的技术手段被利用在网络安全中；而这其中，web安全越来越被人重视，攻击方式不断革 新，技术手法层数不穷，但是目前的状况是，攻击和利用越来越自动化，但是防护和检查都还是偏向人工审核的方式，效率实在一般，但是基于web攻击手段的多 样性和复杂性，一直没有一款比较不错的安全检查工具诞生。<br />
<a href="http://code.google.com/p/ratproxy/"><strong>RatProxy</strong></a>是Google信息安全技术团队所研发的程序安全侦测工具，一向为Google 内部所使用。用于<a href="http://computerworld.com/action/article.do?command=viewArticleBasic&amp;articleId=9106758">评估基于Web的应用程序的安全性</a>。<a href="http://www.webappsec.org/">Web Application Security Consortium</a>在2006年的调查发现，31,373个被调查网站中有85.57%容易遭受跨站点脚本攻击，26.38%面临SQL注入攻击，15.70%有一些其它问题，可能导致数据丢失。<br />
Google信息安全工程师Michal Zalewski表示，Google决定将该工具免费开放是因为他们认为这将对信息安全社群有价值，强化社群理解与Web技术有关的安全问题。 RatProxy能够分析诸如跨站威胁、防御伪装的跨站请求，以及侦测到快取问题或是潜在的信息泄露问题等。<br />
Google在文件中表示，RatProxy为一半自动、多数是被动的网络应用程序安全侦测工具，它同时补足了传统主动爬寻及手动侦测的缺点，而且特别针对潜在的问题及安全相关设计的精确侦测与自动批注进行优化。<br />
<br />
至于比起传统安全侦测工具，Google亦列出几项 RatProxy 的优势，包括在默认的操作模式中不会引起仿真攻击所带来的庞大流量，可避免正在使用的系统的瓦解，而且它提供直觉式的操作，并降低时间及带宽的使用，并能找出产品的问题与潜在的漏洞等。<br />
<br />
Ratproxy采用Apache 2.0软件许可证，可以查找Web应用程序中的多种代码问题，支持Linux、FreeBSD、Mac OS X、Windows(Cygwin)等操作系统，特别适用于用户为先的Web 2.0环境。 		<br />
如果你感兴趣，请参考&ldquo;<a href="http://code.google.com/p/ratproxy/wiki/RatproxyDoc">RatproxyDoc</a> &rdquo;</p>]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2008-07-07 10:02:55</wp:post_date>
		<wp:post_date_gmt>2008-07-07 10:02:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ratproxygoogle%e6%8f%90%e4%be%9b%e7%9a%84%e5%bc%80%e6%ba%90web%e5%ba%94%e7%94%a8%e5%ae%89%e5%85%a8%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Amoeba:分布式数据库Proxy解决方案</title>
		<link>http://www.iceskysl.com/?p=330</link>
		<pubDate>Tue, 08 Jul 2008 15:02:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Amoeba</strong> 座落与Client、Database Server(s)之间。 具有负载均衡、高可用性、sql过滤、可承受高并发、读写分离、Query Route（解析sql query语句，并且根据条件与预先设定的规则，请求到指定的目标数据库。可并发请求多台数据库合并结果）、对客户端透明。
主要降低 数据切分带来的复杂多数据库结构、数据切分规则 给应用带来的影响，能够轻易实现:
<ul>
	<li>读写分离</li>
	<li>Failover</li>
	<li>负载均衡</li>
	<li>数据切分</li>
</ul>
这个和<span class="hilite2"><span class="hilite2">mysql</span></span> proxy是有一些差别的，按照其作者的说法为：“在 <span class="hilite2"><span class="hilite2">mysql</span></span> proxy 上面如果想要读写分离并且 读集群、写集群 机器比较多情况下，用<span class="hilite2"><span class="hilite2">mysql</span></span> proxy 需要相当大的工作量，目前<span class="hilite2"><span class="hilite2">mysql</span></span> proxy没有现成的 lua脚本。<span class="hilite2"><span class="hilite2">mysql</span></span> proxy根本没有配置文件，lua脚本就是它的全部，当然可以是相当方便的。那么同样这种东西需要编写大量的lua脚本才能完成一个复杂的配置“

按照其说明文档中的”<a href="http://amoeba.sourceforge.net/amoeba.pdf">Amoeba:分布式数据库Proxy解决</a>“说法，其主要也就扮演proxy的角色，目前已经发布了对mysql的proxy功能，其主要是为了支持分布式的DB系统，从读写、数据切分几个方面，来做到负载均衡并伴有故障转移等功能。

想法好似很好的，但是其文件http://www.sourceforge.net/projects/<span class="hilite1"><span class="hilite1">amoeba我现在无法下载，没时间尝试，有时间可以再试试。</span></span>

<strong><span class="hilite1"><span class="hilite1">参考文档：</span></span></strong>

<span class="hilite1"><span class="hilite1">1、http://www.javaeye.com/topic/188598
</span></span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>Amoeba</strong> 座落与Client、Database Server(s)之间。 具有负载均衡、高可用性、sql过滤、可承受高并发、读写分离、Query Route（解析sql query语句，并且根据条件与预先设定的规则，请求到指定的目标数据库。可并发请求多台数据库合并结果）、对客户端透明。<br />
主要降低 数据切分带来的复杂多数据库结构、数据切分规则 给应用带来的影响，能够轻易实现:</p>
<ul>
    <li>读写分离</li>
    <li>Failover</li>
    <li>负载均衡</li>
    <li>数据切分</li>
</ul>
<p>这个和<span class="hilite2"><span class="hilite2">mysql</span></span> proxy是有一些差别的，按照其作者的说法为：&ldquo;在 <span class="hilite2"><span class="hilite2">mysql</span></span> proxy 上面如果想要读写分离并且 读集群、写集群 机器比较多情况下，用<span class="hilite2"><span class="hilite2">mysql</span></span> proxy 需要相当大的工作量，目前<span class="hilite2"><span class="hilite2">mysql</span></span> proxy没有现成的 lua脚本。<span class="hilite2"><span class="hilite2">mysql</span></span> proxy根本没有配置文件，lua脚本就是它的全部，当然可以是相当方便的。那么同样这种东西需要编写大量的lua脚本才能完成一个复杂的配置&ldquo;</p>
<p>按照其说明文档中的&rdquo;<a href="http://amoeba.sourceforge.net/amoeba.pdf">Amoeba:分布式数据库Proxy解决</a>&ldquo;说法，其主要也就扮演proxy的角色，目前已经发布了对mysql的proxy功能，其主要是为了支持分布式的DB系统，从读写、数据切分几个方面，来做到负载均衡并伴有故障转移等功能。</p>
<p>想法好似很好的，但是其文件http://www.sourceforge.net/projects/<span class="hilite1"><span class="hilite1">amoeba我现在无法下载，没时间尝试，有时间可以再试试。</span></span></p>
<p><strong><span class="hilite1"><span class="hilite1">参考文档：</span></span></strong></p>
<p><span class="hilite1"><span class="hilite1">1、http://www.javaeye.com/topic/188598<br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2008-07-08 15:02:08</wp:post_date>
		<wp:post_date_gmt>2008-07-08 15:02:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amoeba%e5%88%86%e5%b8%83%e5%bc%8f%e6%95%b0%e6%8d%ae%e5%ba%93proxy%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails: How to use helper inside a controller &amp; model</title>
		<link>http://www.iceskysl.com/?p=331</link>
		<pubDate>Thu, 10 Jul 2008 16:33:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[前几天一个朋友问我如何在Controller中使用helper，我当时说helper是view层的东西，C层没法使用，当时有点忙，虽然知道这个说法也过得去，但是一棍子打死的说法肯定不对。

今天另外一个朋友问我如何在Model里面使用helper，我开始也说没法使用，并说以前我都是直接在model里面在copy一遍helper的东西。然后还是觉得应该是可以使用的，于是google到一篇tips，但是其访问不了了，还好使用google caceh还是看到了其内容，现在记录如下：

This is an easy to <strong style="color: black; background-color: #ffff66;">use</strong> any helpers that rails provides in any other place besides views and view helpers
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># create a new file inside lib/ and call it helpers.rb</span><span>  </span></span></li>
	<li><span><span class="comment"># paste the following:</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="keyword">def</span><span> help  </span></span></li>
	<li class="alt"><span>    Helper.instance  </span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>   </span></li>
	<li><span><span class="keyword">class</span><span> Helper  </span></span></li>
	<li class="alt"><span>    include Singleton  </span></li>
	<li><span>    <span class="comment"># look inside ActionView::Helpers to include any other helpers that you might need</span><span>  </span></span></li>
	<li class="alt"><span>    include ActionView::Helpers::DateHelper  </span></li>
	<li><span>    include ActionView::Helpers::TextHelper  </span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
	<li><span>   </span></li>
	<li class="alt"><span><span class="comment"># then in any model or controller:</span><span>  </span></span></li>
	<li><span>require <span class="string">'lib/helpers'</span><span>  </span></span></li>
	<li class="alt"><span>   </span></li>
	<li><span><span class="comment"># to use:</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment"># help.name_of_helper</span><span>  </span></span></li>
	<li><span><span class="comment"># EX: help.pluralize 10, "person"</span><span>  </span></span></li>
</ol>
</div>
然后又找到一篇类似的文档：http://snippets.dzone.com/posts/show/1799，摘个方法如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">def</span><span> check_for_max_donkeys  </span></span></li>
	<li><span>  <span class="keyword">if</span><span> Donkey.find_fit_donkeys.size == APP_SETTINGS[</span><span class="string">'max_fit_donkeys'</span><span>]  </span></span></li>
	<li class="alt"><span>    flash_error <span class="string">"The maximum of #{help.pluralize(APP_SETTINGS['max_fit_donkeys'], 'donkey')} has been reached."</span><span>  </span></span></li>
	<li><span>    redirect_to_index  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
PS：Don't use the method name "helper" because Rails already uses that. Just "help" works fine.]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天一个朋友问我如何在Controller中使用helper，我当时说helper是view层的东西，C层没法使用，当时有点忙，虽然知道这个说法也过得去，但是一棍子打死的说法肯定不对。</p>
<p>今天另外一个朋友问我如何在Model里面使用helper，我开始也说没法使用，并说以前我都是直接在model里面在copy一遍helper 的东西。然后还是觉得应该是可以使用的，于是google到一篇tips，但是其访问不了了，还好使用google caceh还是看到了其内容，现在记录如下：</p>
<p>This is an easy to <strong style="color: black; background-color: rgb(255, 255, 102);">use</strong> any helpers that rails provides in any other place besides views and view helpers</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;create&nbsp;a&nbsp;new&nbsp;file&nbsp;inside&nbsp;lib/&nbsp;and&nbsp;call&nbsp;it&nbsp;helpers.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;paste&nbsp;the&nbsp;following:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">def</span><span>&nbsp;help&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Helper.instance&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">class</span><span>&nbsp;Helper&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;Singleton&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;look&nbsp;inside&nbsp;ActionView::Helpers&nbsp;to&nbsp;include&nbsp;any&nbsp;other&nbsp;helpers&nbsp;that&nbsp;you&nbsp;might&nbsp;need</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;ActionView::Helpers::DateHelper&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;ActionView::Helpers::TextHelper&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;then&nbsp;in&nbsp;any&nbsp;model&nbsp;or&nbsp;controller:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'lib/helpers'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;to&nbsp;use:</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;help.name_of_helper</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;EX:&nbsp;help.pluralize&nbsp;10,&nbsp;&quot;person&quot;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>然后又找到一篇类似的文档：http://snippets.dzone.com/posts/show/1799，摘个方法如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;check_for_max_donkeys&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;Donkey.find_fit_donkeys.size&nbsp;==&nbsp;APP_SETTINGS[</span><span class="string">'max_fit_donkeys'</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;flash_error&nbsp;<span class="string">&quot;The&nbsp;maximum&nbsp;of&nbsp;#{help.pluralize(APP_SETTINGS['max_fit_donkeys'],&nbsp;'donkey')}&nbsp;has&nbsp;been&nbsp;reached.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;redirect_to_index&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>PS：Don't use the method name &quot;helper&quot; because Rails already uses that. Just &quot;help&quot; works fine.</p>]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2008-07-10 16:33:29</wp:post_date>
		<wp:post_date_gmt>2008-07-10 16:33:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-how-to-use-helper-inside-a-controller-model</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby中的Mixin特性</title>
		<link>http://www.iceskysl.com/?p=332</link>
		<pubDate>Thu, 10 Jul 2008 18:01:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=332</guid>
		<description></description>
		<content:encoded><![CDATA[在<span class="hilite1">Ruby</span>中，我们可以把一个模块混入（<span class="hilite2">Mixin</span>）到对象中，从而达到类似多重继承的效果。看几个例子：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">module</span><span> Mixin1  </span></span></li>
	<li><span>  <span class="keyword">def</span><span> fun1  </span></span></li>
	<li class="alt"><span>    puts <span class="string">"I am fun1 from Mixin1"</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  <span class="keyword">def</span><span> fun2  </span></span></li>
	<li class="alt"><span>    puts <span class="string">"I am fun2 from Mixin1. I’ll call a member function of the class which includes me"</span><span>  </span></span></li>
	<li><span>    mem_fun  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> fun3  </span></span></li>
	<li><span>    puts <span class="string">"I am fun3 from Mixin1. I’ll puts out a member variable of the class which includes me"</span><span>  </span></span></li>
	<li class="alt"><span>    puts <span class="variable">@mem_var</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="keyword">class</span><span> A  </span></span></li>
	<li><span>  include Mixin1  </span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> mem_fun  </span></span></li>
	<li><span>    puts <span class="string">"I am a member fun of class A"</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> initialize  </span></span></li>
	<li><span>    <span class="variable">@mem_var</span><span> =</span><span class="string">"I am a member varaible of class A"</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
调用一下试试看：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>a = A.</span><span class="keyword">new</span><span>  </span></span></li>
	<li><span>a.fun1  </span></li>
	<li class="alt"><span>a.fun2  </span></li>
	<li><span>a.fun3  </span></li>
</ol>
</div>
结果如下：
I am fun1 from Mixin1
I am fun2 from Mixin1. I’ll call a member function of the class which includes me
I am a member fun of class A
I am fun3 from Mixin1. I’ll puts out a member variable of the class which includes me
I am a member varaible of class A

很明显了，不赘述。

<strong>参考文档：</strong>
http://thinkinginruby.javaeye.com/blog/148967
http://my.donews.com/idlecat/2006/10/21/UDDxaYBkNCABNXNVgmIMuMwuKJMHiRXduBBu/
http://www.juixe.com/techknow/index.php/2006/06/15/mixins-in-ruby/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在<span class="hilite1">Ruby</span>中，我们可以把一个模块混入（<span class="hilite2">Mixin</span>）到对象中，从而达到类似多重继承的效果。看几个例子：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Mixin1&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;fun1&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;I&nbsp;am&nbsp;fun1&nbsp;from&nbsp;Mixin1&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;fun2&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;I&nbsp;am&nbsp;fun2&nbsp;from&nbsp;Mixin1.&nbsp;I&rsquo;ll&nbsp;call&nbsp;a&nbsp;member&nbsp;function&nbsp;of&nbsp;the&nbsp;class&nbsp;which&nbsp;includes&nbsp;me&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;mem_fun&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;fun3&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;I&nbsp;am&nbsp;fun3&nbsp;from&nbsp;Mixin1.&nbsp;I&rsquo;ll&nbsp;puts&nbsp;out&nbsp;a&nbsp;member&nbsp;variable&nbsp;of&nbsp;the&nbsp;class&nbsp;which&nbsp;includes&nbsp;me&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="variable">@mem_var</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;A&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;include&nbsp;Mixin1&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;mem_fun&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;I&nbsp;am&nbsp;a&nbsp;member&nbsp;fun&nbsp;of&nbsp;class&nbsp;A&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;initialize&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@mem_var</span><span>&nbsp;=</span><span class="string">&quot;I&nbsp;am&nbsp;a&nbsp;member&nbsp;varaible&nbsp;of&nbsp;class&nbsp;A&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>调用一下试试看：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>a&nbsp;=&nbsp;A.</span><span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>a.fun1&nbsp;&nbsp;</span></li>
    <li class="alt"><span>a.fun2&nbsp;&nbsp;</span></li>
    <li class=""><span>a.fun3&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>结果如下：<br />
I am fun1 from Mixin1<br />
I am fun2 from Mixin1. I&rsquo;ll call a member function of the class which includes me<br />
I am a member fun of class A<br />
I am fun3 from Mixin1. I&rsquo;ll puts out a member variable of the class which includes me<br />
I am a member varaible of class A<br />
<br />
很明显了，不赘述。<br />
<br />
<strong>参考文档：</strong><br />
http://thinkinginruby.javaeye.com/blog/148967<br />
http://my.donews.com/idlecat/2006/10/21/UDDxaYBkNCABNXNVgmIMuMwuKJMHiRXduBBu/<br />
http://www.juixe.com/techknow/index.php/2006/06/15/mixins-in-ruby/</p>]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date>2008-07-10 18:01:42</wp:post_date>
		<wp:post_date_gmt>2008-07-10 18:01:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e4%b8%ad%e7%9a%84mixin%e7%89%b9%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d7591e7204e381ce5ffb0ffd8be71137</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_26ca0b460ec041a1fbc4c352f167d974</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_51b3a7b5f4f794ad935ceec765881a8f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>228</wp:comment_id>
			<wp:comment_author><![CDATA[Exotic Dancing London]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.unrivaledseduction.co.uk/unrivaledseduction.php?Action=2&amp;k=exotic-dancing-2005</wp:comment_author_url>
			<wp:comment_author_IP>90.199.219.253</wp:comment_author_IP>
			<wp:comment_date>2011-09-19 03:13:03</wp:comment_date>
			<wp:comment_date_gmt>2011-09-18 19:13:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Dancing Jobs London...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>229</wp:comment_id>
			<wp:comment_author><![CDATA[quality backlinking]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.6.148.146</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 14:15:37</wp:comment_date>
			<wp:comment_date_gmt>2011-09-20 06:15:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>back link building...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>230</wp:comment_id>
			<wp:comment_author><![CDATA[male enhancement]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ccacad.org</wp:comment_author_url>
			<wp:comment_author_IP>64.186.147.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-10 13:17:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 05:17:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>penis enhancement...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>231</wp:comment_id>
			<wp:comment_author><![CDATA[Fashion Jewelry]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://kari-kat.com/products/Strong-Sea-CZ-Ring.html</wp:comment_author_url>
			<wp:comment_author_IP>50.128.168.231</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 05:28:15</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 21:28:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap Jewelry...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[bilo weekly ad]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://biloweeklyad.com</wp:comment_author_url>
			<wp:comment_author_IP>66.30.173.212</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 12:26:30</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 04:26:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bilo weekly ad...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>233</wp:comment_id>
			<wp:comment_author><![CDATA[cheap rhinestone jewelry,wholesale cheap jewelry]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nnbbwo.freevar.com/?tag=chinese-jade</wp:comment_author_url>
			<wp:comment_author_IP>69.22.186.17</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 18:27:04</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 10:27:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap rhinestone jewelry,wholesale cheap jewelry...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>234</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.142</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 14:36:18</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 06:36:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

[...]Ruby中的Mixin特性[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>手机摔坏了，一个星期没开机</title>
		<link>http://www.iceskysl.com/?p=333</link>
		<pubDate>Mon, 14 Jul 2008 15:09:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=333</guid>
		<description></description>
		<content:encoded><![CDATA[上次去北京出差的时候，下的士的时候没注意把手机摔下，结果屏幕黑了，啥也看不见了，于是回来这个星期一直在找手机。

由于用了一段时间的BB，习惯了BB的键盘和强大的功能，其他手机我都不喜欢了，所以选了这么久也没选到合适的。

本来打算再买一个BB的，心理有阴影了，因为看过一次拆机，发现其可靠的屏保其实很简单就可以贴上去，里面的配件，显示屏啥的都很简单就换了，实在是不咋放心。。

需要联系我的朋友请发mail或者通过Gtalk，我基本上都在网上的。

估计选中合适的手机，还得有段时日～]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>上次去北京出差的时候，下的士的时候没注意把手机摔下，结果屏幕黑了，啥也看不见了，于是回来这个星期一直在找手机。</p>
<p>由于用了一段时间的BB，习惯了BB的键盘和强大的功能，其他手机我都不喜欢了，所以选了这么久也没选到合适的。</p>
<p>本来打算再买一个BB的，心理有阴影了，因为看过一次拆机，发现其可靠的屏保其实很简单就可以贴上去，里面的配件，显示屏啥的都很简单就换了，实在是不咋放心。。</p>
<p>需要联系我的朋友请发mail或者通过Gtalk，我基本上都在网上的。</p>
<p>估计选中合适的手机，还得有段时日～</p>]]></excerpt:encoded>
		<wp:post_id>333</wp:post_id>
		<wp:post_date>2008-07-14 15:09:49</wp:post_date>
		<wp:post_date_gmt>2008-07-14 15:09:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%89%8b%e6%9c%ba%e6%91%94%e5%9d%8f%e4%ba%86%ef%bc%8c%e4%b8%80%e4%b8%aa%e6%98%9f%e6%9c%9f%e6%b2%a1%e5%bc%80%e6%9c%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Protocol Buffers:更简洁有效的数据交换格式！</title>
		<link>http://www.iceskysl.com/?p=334</link>
		<pubDate>Tue, 15 Jul 2008 11:20:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=334</guid>
		<description></description>
		<content:encoded><![CDATA[“<a id="What_is_it?">Protocol Buffers are a way of encoding structured data in an efficient yet extensible format. Google uses Protocol Buffers for almost all of its internal RPC protocols and file formats.”</a>

Google公司与本月初宣布其内部数据交换格式Protocol Buffers正式开源，基于Apache软件证书2.0发布，相关文档、实例和代码已经可以从<a id="stwl" title="Google Code" href="http://code.google.com/p/protobuf/">Google Code</a>上 访问到。

<strong>Protocol Buffers</strong>被定义为一种数据描述语言（Data Description Language，DDL），广泛的应用于Google内部，用于结构化数据的描述、传输和存储。尽管其功能和用途与XML基本相似，但是 Protocol Buffers更为轻便。Google宣称其效率对于XML有很大提升，文本比XML要小3-10倍，而解析效率却提升至20-100倍。

这真是和好消息，XML慢的诟病相比大家都非常清楚，JSON格式的又无法取代XML的强大地位，虽然Ruby中有Hpricot这样的XML解析利器，但是在大批量的解析中还是会有瓶颈出现，而Google此次放出的Protocol Buffers比XML小，且解析速度很快，足够引起广泛的关注了。

InfoQ上有篇报道“<a href="http://www.infoq.com/cn/news/2008/07/google-protobuf">Google开源数据交换格式Protocol Buffers</a>”比较详细，你也可以在"<a href="http://code.google.com/p/protobuf/">Protocol Buffers</a>"上查看。

目前已经看到C++，Java，Python格式的API，但是没看到基于Ruby的API，何时会出现 ，应该很快就有了。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>&ldquo;<a id="What_is_it?">Protocol Buffers are a way of encoding structured data in an efficient yet extensible format. Google uses Protocol Buffers for almost all of its internal RPC protocols and file formats.&rdquo;</a></p>
<p>Google公司与本月初宣布其内部数据交换格式Protocol Buffers正式开源，基于Apache软件证书2.0发布，相关文档、实例和代码已经可以从<a id="stwl" title="Google Code" href="http://code.google.com/p/protobuf/">Google Code</a>上 访问到。</p>
<p><strong>Protocol Buffers</strong>被定义为一种数据描述语言（Data Description Language，DDL），广泛的应用于Google内部，用于结构化数据的描述、传输和存储。尽管其功能和用途与XML基本相似，但是 Protocol Buffers更为轻便。Google宣称其效率对于XML有很大提升，文本比XML要小3-10倍，而解析效率却提升至20-100倍。</p>
<p>这真是和好消息，XML慢的诟病相比大家都非常清楚，JSON格式的又无法取代XML的强大地位，虽然Ruby中有Hpricot这样的XML解析 利器，但是在大批量的解析中还是会有瓶颈出现，而Google此次放出的Protocol Buffers比XML小，且解析速度很快，足够引起广泛的关注了。</p>
<p>InfoQ上有篇报道&ldquo;<a href="http://www.infoq.com/cn/news/2008/07/google-protobuf">Google开源数据交换格式Protocol Buffers</a>&rdquo;比较详细，你也可以在&quot;<a href="http://code.google.com/p/protobuf/">Protocol Buffers</a>&quot;上查看。</p>
<p>目前已经看到C++，Java，Python格式的API，但是没看到基于Ruby的API，何时会出现 ，应该很快就有了。</p>]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date>2008-07-15 11:20:15</wp:post_date>
		<wp:post_date_gmt>2008-07-15 11:20:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>protocol-buffers%e6%9b%b4%e7%ae%80%e6%b4%81%e6%9c%89%e6%95%88%e7%9a%84%e6%95%b0%e6%8d%ae%e4%ba%a4%e6%8d%a2%e6%a0%bc%e5%bc%8f%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>235</wp:comment_id>
			<wp:comment_author><![CDATA[风行]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.xaxbzx.com.cn</wp:comment_author_url>
			<wp:comment_author_IP>218.87.190.221</wp:comment_author_IP>
			<wp:comment_date>2008-07-15 11:35:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Google很强悍啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>236</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.51.146</wp:comment_author_IP>
			<wp:comment_date>2008-07-18 11:25:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good news! 看过。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>生日呢喃，我的一年又过完了！</title>
		<link>http://www.iceskysl.com/?p=335</link>
		<pubDate>Tue, 15 Jul 2008 17:50:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=335</guid>
		<description></description>
		<content:encoded><![CDATA[忙完手上的事情，想想明天还要做的事情，再看看时间，wo，凌晨1点40了，再看看日历，哦，我的生日到了，我的一年又过去了。

一年来，又是一个工作的一年，这是我的本命年，都说本命年事多不顺，我曾经很不屑，但是回头看看过去的半年，似乎真的不是很顺利，经过过程很顺利，很美好，但是结果真的不竟如我意。

同伴早都熟睡了，我才刚刚忙完手上的事情，这是充实还是忙瞎，呵呵。。追求过程的美好，又怎能预测结果的美好呢？有种声音在说：改变吧，丢掉过去才能创早更美好的未来。

我在等什么....

或许是忙晕了，脑袋晕晕的，还没洗澡，粘粘的，呢呢喃喃迎来我自己的节日，洗洗睡吧，明天会有大惊喜。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>忙完手上的事情，想想明天还要做的事情，再看看时间，wo，凌晨1点40了，再看看日历，哦，我的生日到了，我的一年又过去了。</p>
<p>一年来，又是一个工作的一年，这是我的本命年，都说本命年事多不顺，我曾经很不屑，但是回头看看过去的半年，似乎真的不是很顺利，经过过程很顺利，很美好，但是结果真的不竟如我意。</p>
<p>同伴早都熟睡了，我才刚刚忙完手上的事情，这是充实还是忙瞎，呵呵。。追求过程的美好，又怎能预测结果的美好呢？有种声音在说：改变吧，丢掉过去才能创早更美好的未来。</p>
<p>我在等什么....</p>
<p>或许是忙晕了，脑袋晕晕的，还没洗澡，粘粘的，呢呢喃喃迎来我自己的节日，洗洗睡吧，明天会有大惊喜。</p>]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date>2008-07-16 01:50:53</wp:post_date>
		<wp:post_date_gmt>2008-07-15 17:50:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%9f%e6%97%a5%e5%91%a2%e5%96%83%ef%bc%8c%e6%88%91%e7%9a%84%e4%b8%80%e5%b9%b4%e5%8f%88%e8%bf%87%e5%ae%8c%e4%ba%86%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e6%97%a5"><![CDATA[生日]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>237</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.51.146</wp:comment_author_IP>
			<wp:comment_date>2008-07-18 11:23:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[生日快乐！开心过好每一天就好， one step advance every day！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Java获取IP地址:request.getRemoteAddr()警惕</title>
		<link>http://www.iceskysl.com/?p=336</link>
		<pubDate>Wed, 16 Jul 2008 04:01:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[项目中需要和第三方平台接口，加了来源IP鉴权功能，测试时发现没有问题，但是部署以后发现存在问题，一直鉴权不通过，一群人抓瞎。

我找到那块的代码，跟了一遍流程发现逻辑没有啥问题，但是最终的结果却还是鉴权不通过，实在有些诡异。其基本逻辑为先取得配置的IP列表，然后通过<strong>request.getRemoteAddr()</strong>取得客户端的IP地址，做鉴权和校验，逻辑没问题，那么肯定是request.getRemoteAddr()出了问题，google下，发现有人遇到类似的问题。

最终定位为request.getRemoteAddr()这种方法在大部分情况下都是有效的。但是在通过了Apache,Squid等反向代理软件就不能获取到客户端的真实IP地址了。

如果使用了反向代理软件，将<span style="text-decoration: underline;"><a href="http://192.168.1.110:2046/">http://192.168.1.110:2046/</a></span> 的URL反向代理为<span style="text-decoration: underline;">http://www.xxx.com/</span> 的URL时，用<strong>request.getRemoteAddr()</strong>方法获取的IP地址是：127.0.0.1　或　<span style="text-decoration: underline;"><span style="color: #0000ff;">192.168.1.110</span></span>，而并不是客户端的真实ＩＰ。

经过代理以后，由于在客户端和服务之间增加了中间层，因此服务器无法直接拿到客户端的IP，服务器端应用也无法直接通过转发请求的地址返回给客户端。但是在转发请求的HTTP头信息中，增加了<span style="text-decoration: underline;"><strong>X－FORWARDED－FOR</strong></span>信息用以跟踪原有的客户端IP地址和原来客户端请求的服务器地址。
原来如此，我们的项目中正好是有前置apache，将一些请求转发给后端的weblogic，看来就是这样导致的咯。

给出一份还算靠谱的代码，如下：
<div class="codeText">
<div class="codeHead">Java代码</div>
<ol class="dp-j">
	<li class="alt"><span><span class="keyword">public</span><span> String getIpAddr(HttpServletRequest request) { </span></span></li>
	<li><span> String ip = request.getHeader(<span class="string">"x-forwarded-for"</span><span>); </span></span></li>
	<li class="alt"><span> <span class="keyword">if</span><span>(ip == </span><span class="keyword">null</span><span> || ip.length() == </span><span class="number">0</span><span> || </span><span class="string">"unknown"</span><span>.equalsIgnoreCase(ip)) { </span></span></li>
	<li><span> ip = request.getHeader(<span class="string">"Proxy-Client-IP"</span><span>); </span></span></li>
	<li class="alt"><span> } </span></li>
	<li><span> <span class="keyword">if</span><span>(ip == </span><span class="keyword">null</span><span> || ip.length() == </span><span class="number">0</span><span> || </span><span class="string">"unknown"</span><span>.equalsIgnoreCase(ip)) { </span></span></li>
	<li class="alt"><span> ip = request.getHeader(<span class="string">"WL-Proxy-Client-IP"</span><span>); </span></span></li>
	<li><span> } </span></li>
	<li class="alt"><span> <span class="keyword">if</span><span>(ip == </span><span class="keyword">null</span><span> || ip.length() == </span><span class="number">0</span><span> || </span><span class="string">"unknown"</span><span>.equalsIgnoreCase(ip)) { </span></span></li>
	<li><span> ip = request.getRemoteAddr(); </span></li>
	<li class="alt"><span> } </span></li>
	<li><span> <span class="keyword">return</span><span> ip; </span></span></li>
	<li class="alt"><span>} </span></li>
</ol>
</div>
如果有人遇到类似问题，请多加留意，呵呵。

PS：可是，如果通过了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串Ｉｐ值，究竟哪个才是真正的用户端的真实IP呢？
答案是取X-Forwarded-For中第一个非unknown的有效IP字符串。如：X-Forwarded-For：192.168.1.110, 192.168.1.120, 192.168.1.130, 192.168.1.100,用户真实IP为： 192.168.1.110

<strong>参考文章：</strong>http://blog.sina.com.cn/s/blog_407a68fc01000ai7.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>项目中需要和第三方平台接口，加了来源IP鉴权功能，测试时发现没有问题，但是部署以后发现存在问题，一直鉴权不通过，一群人抓瞎。</p>
<p>我找到那块的代码，跟了一遍流程发现逻辑没有啥问题，但是最终的结果却还是鉴权不通过，实在有些诡异。其基本逻辑为先取得配置的IP列表，然后通过<strong>request.getRemoteAddr()</strong>取得客户端的IP地址，做鉴权和校验，逻辑没问题，那么肯定是request.getRemoteAddr()出了问题，google下，发现有人遇到类似的问题。</p>
<p>最终定位为request.getRemoteAddr()这种方法在大部分情况下都是有效的。但是在通过了Apache,Squid等反向代理软件就不能获取到客户端的真实IP地址了。</p>
<p>如果使用了反向代理软件，将<u><a href="http://192.168.1.110:2046/">http://192.168.1.110:2046/</a></u> 的URL反向代理为<u>http://www.xxx.com/</u> 的URL时，用<strong>request.getRemoteAddr()</strong>方法获取的IP地址是：127.0.0.1　或　<u><font color="#0000ff">192.168.1.110</font></u>，而并不是客户端的真实ＩＰ。</p>
<p>经过代理以后，由于在客户端和服务之间增加了中间层，因此服务器无法直接拿到客户端的IP，服务器端应用也无法直接通过转发请求的地址返回给客户端。但是在转发请求的HTTP头信息中，增加了<u><strong>X－FORWARDED－FOR</strong></u>信息用以跟踪原有的客户端IP地址和原来客户端请求的服务器地址。<br />
原来如此，我们的项目中正好是有前置apache，将一些请求转发给后端的weblogic，看来就是这样导致的咯。</p>
<p>给出一份还算靠谱的代码，如下：</p>
<div class="codeText">
<div class="codeHead">Java代码</div>
<ol class="dp-j" start="1">
    <li class="alt"><span><span>&nbsp;&nbsp;</span><span class="keyword">public</span><span>&nbsp;String&nbsp;getIpAddr(HttpServletRequest&nbsp;request)&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ip&nbsp;=&nbsp;request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span><span>);&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(ip&nbsp;==&nbsp;</span><span class="keyword">null</span><span>&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;</span><span class="number">0</span><span>&nbsp;||&nbsp;</span><span class="string">&quot;unknown&quot;</span><span>.equalsIgnoreCase(ip))&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span><span>);&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(ip&nbsp;==&nbsp;</span><span class="keyword">null</span><span>&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;</span><span class="number">0</span><span>&nbsp;||&nbsp;</span><span class="string">&quot;unknown&quot;</span><span>.equalsIgnoreCase(ip))&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span><span>);&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(ip&nbsp;==&nbsp;</span><span class="keyword">null</span><span>&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;</span><span class="number">0</span><span>&nbsp;||&nbsp;</span><span class="string">&quot;unknown&quot;</span><span>.equalsIgnoreCase(ip))&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getRemoteAddr();&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;ip;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>如果有人遇到类似问题，请多加留意，呵呵。</p>
<p>PS：可是，如果通过了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串Ｉｐ值，究竟哪个才是真正的用户端的真实IP呢？<br />
答案是取X-Forwarded-For中第一个非unknown的有效IP字符串。如：X-Forwarded-For：192.168.1.110, 192.168.1.120, 192.168.1.130, 192.168.1.100,用户真实IP为： 192.168.1.110</p>]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2008-07-16 12:01:01</wp:post_date>
		<wp:post_date_gmt>2008-07-16 04:01:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e8%8e%b7%e5%8f%96ip%e5%9c%b0%e5%9d%80request-getremoteaddr%e8%ad%a6%e6%83%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="getremoteaddr"><![CDATA[getRemoteAddr]]></category>
		<category domain="post_tag" nicename="ip"><![CDATA[ip]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>238</wp:comment_id>
			<wp:comment_author><![CDATA[读者]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.95.109.62</wp:comment_author_IP>
			<wp:comment_date>2009-06-12 13:32:02</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，我正需要这些代码，谢谢搂住提供。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>239</wp:comment_id>
			<wp:comment_author><![CDATA[xiaole]]></wp:comment_author>
			<wp:comment_author_email>chen369035906@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.134.92.109</wp:comment_author_IP>
			<wp:comment_date>2010-02-08 07:48:58</wp:comment_date>
			<wp:comment_date_gmt>2010-02-08 07:48:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[X－FORWARDED－FOR是可以客户端自己设置的，那检查X－FORWARDED－FOR好像不太可靠？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>http_load:压力测试小工具</title>
		<link>http://www.iceskysl.com/?p=337</link>
		<pubDate>Thu, 17 Jul 2008 16:30:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=337</guid>
		<description></description>
		<content:encoded><![CDATA[命令行工具<a href="http://www.acme.com/software/http_load/">http_load</a>看上去和<a href="http://www.ooso.net/?tag=apache">apache</a>的ab很相似，用来做网站的压力测试。其主要用法为：

<span style="text-decoration: underline;">1.http_load -parallel 5 -fetches 1000 urls.txt
2.http_load -rate 2 -seconds 300 urls.txt</span>
例子只是个参考，参数其实可以自由组合，参数之间的选择并没有什么限制。比如你写成http_load -parallel 5 -seconds 300 urls.txt也是可以的。我们把参数给大家简单说明一下。
-parallel 简写-p ：含义是并发的用户进程数。
-fetches 简写-f ：含义是总计的访问次数
-rate    简写-p ：含义是每秒的访问频率
-seconds简写-s ：含义是总计的访问时间

url 是你要访问的网址名，参数可以是单个的网址也可以使包含网址的文件。文件格式如下
<blockquote>http://iceskysl.1sters.com/?action=show&amp;id=336
http://iceskysl.1sters.com/?action=show&amp;id=335
http://iceskysl.1sters.com/?action=show&amp;id=332
http://iceskysl.1sters.com/?action=show&amp;id=32</blockquote>
参数了解了，我们来看运行一条命令来看看它的返回结果

命令：% <strong><em>./http_load -rate 5 -seconds 10 urls</em></strong>
说明执行了一个持续时间10秒的测试，每秒的频率为5。
<blockquote>49 fetches, 2 max parallel, 289884 bytes, in 10.0148 seconds
5916 mean bytes/connection
4.89274 fetches/sec, 28945.5 bytes/sec
msecs/connect: 28.8932 mean, 44.243 max, 24.488 min
msecs/first-response: 63.5362 mean, 81.624 max, 57.803 min
HTTP response codes:
code 200 -- 49</blockquote>
<strong>结果分析：</strong>
1．49 fetches, 2 max parallel, 289884 bytes, in 10.0148 seconds
说明在上面的测试中运行了49个请求，最大的并发进程数是2，总计传输的数据是289884bytes，运行的时间是10.0148秒
2．5916 mean bytes/connection
说明每一连接平均传输的数据量289884/49=5916
3．4.89274 fetches/sec, 28945.5 bytes/sec
说明每秒的响应请求为4.89274，每秒传递的数据为28945.5 bytes/sec
4．msecs/connect: 28.8932 mean, 44.243 max, 24.488 min
说明每连接的平均响应时间是28.8932 msecs，最大的响应时间44.243 msecs，最小的响应时间24.488 msecs
5．msecs/first-response: 63.5362 mean, 81.624 max, 57.803 min
6、HTTP response codes: code 200 -- 49

说明打开响应页面的类型，如果403的类型过多，那可能要注意是否系统遇到了瓶颈。
特殊说明：这里，我们一般会关注到的指标是fetches/sec、msecs/connect
他们分别对应的常用性能指标参数
Qpt-每秒响应用户数和response time，每连接响应用户时间。
测试的结果主要也是看这两个值。当然仅有这两个指标并不能完成对性能的分析，我们还需要对服务器的cpu、men进行分析，才能得出结论

参考文档：

http://www.ooso.net/index.php/archives/219

http://www.acme.com/software/http_load/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>命令行工具<a href="http://www.acme.com/software/http_load/">http_load</a>看上去和<a href="http://www.ooso.net/?tag=apache">apache</a>的ab很相似，用来做网站的压力测试。其主要用法为：</p>
<p><u>1.http_load -parallel 5 -fetches 1000 urls.txt<br />
2.http_load -rate 2 -seconds 300 urls.txt</u><br />
例子只是个参考，参数其实可以自由组合，参数之间的选择并没有什么限制。比如你写成http_load -parallel 5 -seconds 300 urls.txt也是可以的。我们把参数给大家简单说明一下。<br />
-parallel 简写-p ：含义是并发的用户进程数。<br />
-fetches 简写-f ：含义是总计的访问次数<br />
-rate&nbsp;&nbsp;&nbsp; 简写-p ：含义是每秒的访问频率<br />
-seconds简写-s ：含义是总计的访问时间</p>
<p>url 是你要访问的网址名，参数可以是单个的网址也可以使包含网址的文件。文件格式如下</p>
<blockquote>http://iceskysl.1sters.com/?action=show&amp;id=336<br />
http://iceskysl.1sters.com/?action=show&amp;id=335<br />
http://iceskysl.1sters.com/?action=show&amp;id=332<br />
http://iceskysl.1sters.com/?action=show&amp;id=32<br />
</blockquote>
<p>参数了解了，我们来看运行一条命令来看看它的返回结果<br />
<br />
命令：% <strong><em>./http_load -rate 5 -seconds 10 urls</em></strong></p>]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2008-07-17 16:30:26</wp:post_date>
		<wp:post_date_gmt>2008-07-17 16:30:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>http_load%e5%8e%8b%e5%8a%9b%e6%b5%8b%e8%af%95%e5%b0%8f%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a669010d0244ad5c891c7416821ef2d9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e44df37b79bb6f6c9a725eb077f631b7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8ac6d2aaa7ef7ac44ccc9e04e95ddd69</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_313b16c46d0d4a76bc99f393c4b1ada3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_51e85c628629c6e2e93ef866f9cd0f98</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>240</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.67.149</wp:comment_author_IP>
			<wp:comment_date>2008-07-17 22:35:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[iceskysl@IceskYsl:/opt/tools/http_load-12mar2006$ ./http_load --help
usage:  ./http_load [-checksum] [-throttle] [-proxy host:port] [-verbose] [-timeout secs] [-sip sip_file]
            -parallel N | -rate N [-jitter]
            -fetches N | -seconds N
            url_file
One start specifier, either -parallel or -rate, is required.
One end specifier, either -fetches or -seconds, is required.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>241</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.67.149</wp:comment_author_IP>
			<wp:comment_date>2008-07-17 22:39:57</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[iceskysl@IceskYsl:/opt/tools/http_load-12mar2006$ ./http_load -parallel 200 -seconds 10 1sters
46 fetches, 200 max parallel, 331372 bytes, in 10.0041 seconds
7203.74 mean bytes/connection
4.5981 fetches/sec, 33123.5 bytes/sec
msecs/connect: 670.214 mean, 903.314 max, 480.5 min
msecs/first-response: 2994.68 mean, 6593.77 max, 586.371 min
HTTP response codes:
  code 200 -- 46]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>242</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.34.67.149</wp:comment_author_IP>
			<wp:comment_date>2008-07-17 22:42:20</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[iceskysl@IceskYsl:/opt/tools/http_load-12mar2006$ ./http_load -parallel 200 -fetches 1000 1sters
http://www.1sters.com/services: timed out
http://www.1sters.com/services: byte count wrong
http://www.1sters.com/services: timed out
http://www.1sters.com/services: byte count wrong
http://www.1sters.com/products: timed out
http://www.1sters.com/products: byte count wrong
http://www.1sters.com/products: timed out
http://www.1sters.com/products: byte count wrong
http://www.1sters.com/services: timed out
http://www.1sters.com/services: byte count wrong
http://www.1sters.com/: timed out
http://www.1sters.com/: byte count wrong
http://www.1sters.com/services: timed out
http://www.1sters.com/services: byte count wrong
http://www.1sters.com/products: timed out
http://www.1sters.com/products: byte count wrong
http://www.1sters.com/products: timed out
http://www.1sters.com/products: byte count wrong
http://www.1sters.com/: timed out
http://www.1sters.com/: byte count wrong
http://www.1sters.com/services: timed out
http://www.1sters.com/services: byte count wrong
1000 fetches, 200 max parallel, 7.22902e+06 bytes, in 139.018 seconds
7229.02 mean bytes/connection
7.19333 fetches/sec, 52000.7 bytes/sec
msecs/connect: 2376.68 mean, 22260.8 max, 448.749 min
msecs/first-response: 6490.55 mean, 57705.5 max, 530.36 min
11 timeouts
11 bad byte counts
HTTP response codes:
  code 200 -- 996]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>243</wp:comment_id>
			<wp:comment_author><![CDATA[yawl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xruby.javaeye.com</wp:comment_author_url>
			<wp:comment_author_IP>69.255.234.150</wp:comment_author_IP>
			<wp:comment_date>2008-07-18 01:55:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[比’久‘经考验的httperf好在那里？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>潘多拉(Pandora)受限，谁来顶起这片天</title>
		<link>http://www.iceskysl.com/?p=338</link>
		<pubDate>Tue, 22 Jul 2008 09:39:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[很多人都说<a href="http://www.pandora.com">Pandora</a>是目前最好的歌曲智能推荐的应用，其历时8年之久汇总的音乐DNA分类可以比较准确的推荐一些你喜欢的歌曲给你；其iphone版本也相当成功，详细的可以看“<a href="http://apple4.us/2008/07/iphone-pandora-1.html">iPhone 软件介绍之潘多拉（Pandora）</a>”，非常不错。

当我一次次的打开其网站准备体验一把的时候，遇到的却是一篇致歉信，大概瞄了一遍，其说不对US之外的用户提供服务（自然是许可证原因），正好看到yeeyan上有篇翻译“<a href="http://www.yeeyan.com/articles/view/20237/5060">Pandora Internet Radio的道歉信</a>”，懒得看E文的可以去瞧瞧。

很明显，Pandora受限后，其他做音乐的会有一个比较好的机会来迅速填补这个空缺，强占一定的用户，但问题是，谁有能力顶起这片天呢？让我们看看在中国的情况。

中国的在线音乐网站非常多，但是形式都普遍的很单一，主要有三种形式：

1、大部分都是首页上横七竖八的堆一堆排行榜，点了直接就听歌，其代表者有一听，九天等。

2、另外一个代表者是Baidu MP3下载，虽然人气不错，但是其损害的是唱片公司或者是艺人的利益，一直以来都是官司缠身。

3、还有一种是新兴的web2模式的音乐网站，有<a href="http://yobo.com">yobo.com</a>，<a href="http://8box.cn">8box</a>等等网站，其加入社区和互动，yobo甚至还有点Pandora的味道，主推音乐DNA。就目前我用到的，我最看好的还是YOBO，虽然最近他们也遇到一些问题。

<a href="http://yobo.com">YOBO</a>成立于2006年12月，从1.0到2.0到3.0，和现在正在开发的4.0版本中，在一步步的完善，用户口碑也越来越好。其上的电台和频道功能相当不错，很多定制化的东西可以很容易的找到需要的歌曲，如果你习惯Pandora的智能推荐模式，那么你可以设置让其自动推荐，虽然有的时候结果可能并不能让你满意，但是，请注意，YOBO还不到2岁，他还在不断的完善。

另外就是最近老是遇到服务器不能及时响应的事情，就我感觉，不排除有人使坏，还是流量真的大的顶不住。

对了，还有一个<a href="http://last.fm">last.fm</a>，其现在推出的中版主打中国市场，但是其和其他舶来品差不多，有点水土不服，加上速度一直被人诟病，中文歌曲质量不高等，暂时还不是很看好。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很多人都说<a href="http://www.pandora.com/">Pandora</a>是目前最好的歌曲智能推荐的应用，其历时8年之久汇总的音乐DNA分类可以比较准确的推荐一些你喜欢的歌曲给你；其iphone版本也相当成功，详细的可以看&ldquo;<a href="http://apple4.us/2008/07/iphone-pandora-1.html">iPhone 软件介绍之潘多拉（Pandora）</a>&rdquo;，非常不错。</p>
<p>当我一次次的打开其网站准备体验一把的时候，遇到的却是一篇致歉信，大概瞄了一遍，其说不对US之外的用户提供服务（自然是许可证原因），正好看到yeeyan上有篇翻译&ldquo;<a href="http://www.yeeyan.com/articles/view/20237/5060">Pandora Internet Radio的道歉信</a>&rdquo;，懒得看E文的可以去瞧瞧。</p>
<p>很明显，Pandora受限后，其他做音乐的会有一个比较好的机会来迅速填补这个空缺，强占一定的用户，但问题是，谁有能力顶起这片天呢？让我们看看在中国的情况。</p>
<p>中国的在线音乐网站非常多，但是形式都普遍的很单一，主要有三种形式：</p>
<p>1、大部分都是首页上横七竖八的堆一堆排行榜，点了直接就听歌，其代表者有一听，九天等。</p>
<p>2、另外一个代表者是Baidu MP3下载，虽然人气不错，但是其损害的是唱片公司或者是艺人的利益，一直以来都是官司缠身。</p>
<p>3、还有一种是新兴的web2模式的音乐网站，有<a href="http://yobo.com/">yobo.com</a>，<a href="http://8box.cn/">8box</a>等等网站，其加入社区和互动，yobo甚至还有点Pandora的味道，主推音乐DNA。就目前我用到的，我最看好的还是YOBO，虽然最近他们也遇到一些问题。</p>
<p><a href="http://yobo.com/">YOBO</a>成立于2006年12月，从1.0到2.0到3.0，和现在正在开发的4.0版本中，在一步步的完善，用户口碑也越来越好。其上的电台和频道功能相当不错，很多定制化的东西可以很容易的找到需要的歌曲，如果你习惯Pandora的智能推荐模式，那么你可以设置让其自动推荐，虽然有的时候结果可能并不能让你满意，但是，请注意，YOBO还不到2岁，他还在不断的完善。</p>
<p>另外就是最近老是遇到服务器不能及时响应的事情，就我感觉，不排除有人使坏，还是流量真的大的顶不住。</p>
<p>对了，还有一个<a href="http://last.fm/">last.fm</a>，其现在推出的中版主打中国市场，但是其和其他舶来品差不多，有点水土不服，加上速度一直被人诟病，中文歌曲质量不高等，暂时还不是很看好。</p>]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2008-07-22 09:39:35</wp:post_date>
		<wp:post_date_gmt>2008-07-22 09:39:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%bd%98%e5%a4%9a%e6%8b%89pandora%e5%8f%97%e9%99%90%ef%bc%8c%e8%b0%81%e6%9d%a5%e9%a1%b6%e8%b5%b7%e8%bf%99%e7%89%87%e5%a4%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>244</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.53.200</wp:comment_author_IP>
			<wp:comment_date>2008-07-24 21:24:34</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yobo.com  相当的不错！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>245</wp:comment_id>
			<wp:comment_author><![CDATA[guest]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.32.211.209</wp:comment_author_IP>
			<wp:comment_date>2008-08-04 00:11:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我不看好yobo.我和我的同学试用过，我们的品位居然全部是一样的，无语到极点。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Starling: 消息队列服务器</title>
		<link>http://www.iceskysl.com/?p=339</link>
		<pubDate>Tue, 22 Jul 2008 10:24:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=339</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://rubyforge.org/projects/starling/">Starling</a> is a light-weight persistent queue server that speaks the MemCache protocol. It was built to drive Twitter's backend, and is in production across Twitter's cluster.

<strong>参考文章：</strong>
1、http://rubyforge.org/projects/starling/
2、The complete guide to setting up Starling：http://rubypond.com/articles/2008/07/17/the-complete-guide-to-setting-up-starling/
3、http://github.com/IceskYsl/starling/tree/master
4、http://myspacesurfer.hee-ro.net/index.php?q=uggc%3A%2F%2Fjjj.eholvafvqr.pbz%2Ffgneyvat-naq-ehqrd-crefvfgrag-ehol-dhrhrf-958.ugzy]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://rubyforge.org/projects/starling/">Starling</a> is a light-weight persistent queue server that speaks the MemCache protocol. It was built to drive Twitter's backend, and is in production across Twitter's cluster.<br />
<br />
<br />
<strong>参考文章：</strong><br />
1、http://rubyforge.org/projects/starling/<br />
2、The complete guide to setting up Starling：http://rubypond.com/articles/2008/07/17/the-complete-guide-to-setting-up-starling/<br />
3、http://github.com/IceskYsl/starling/tree/master<br />
4、http://myspacesurfer.hee-ro.net/index.php?q=uggc%3A%2F %2Fjjj.eholvafvqr.pbz%2Ffgneyvat-naq-ehqrd-crefvfgrag-ehol-dhrhrf-958.ugzy</p>]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2008-07-22 10:24:50</wp:post_date>
		<wp:post_date_gmt>2008-07-22 10:24:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>starling-%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e6%9c%8d%e5%8a%a1%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>原来我还不够果断</title>
		<link>http://www.iceskysl.com/?p=340</link>
		<pubDate>Mon, 28 Jul 2008 15:29:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[一直以为自己是个想做就做，行动第一的人，但是有些时候还是有些犹豫和不果断，非要把一切都把握在自己手里，才敢做，犹犹豫豫的，一拖再拖，这不是我希望的。

立此文章为标，果断点，做回自己！]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一直以为自己是个想做就做，行动第一的人，但是有些时候还是有些犹豫和不果断，非要把一切都把握在自己手里，才敢做，犹犹豫豫的，一拖再拖，这不是我希望的。<br />
<br />
立此文章为标，果断点，做回自己！</p>]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2008-07-28 15:29:20</wp:post_date>
		<wp:post_date_gmt>2008-07-28 15:29:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8e%9f%e6%9d%a5%e6%88%91%e8%bf%98%e4%b8%8d%e5%a4%9f%e6%9e%9c%e6%96%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fleximage:Rails图片处理新选择</title>
		<link>http://www.iceskysl.com/?p=341</link>
		<pubDate>Tue, 29 Jul 2008 10:54:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=341</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://github.com/Squeegy/fleximage/tree/master">Fleximage </a>is a Rails plugin that tries to make image uploading and rendering super easy.
There are 2 pieces involved in making Rails image handling easy.
1. Image Uploads
2. Image Rendering
其使用的是Magick

参考文档：
<a href="http://www.javaeye.com/topic/214661">1.让rails处理图片再简单一点</a>
<a href="http://github.com/Squeegy/fleximage/tree">2.fleximage</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://github.com/Squeegy/fleximage/tree/master">Fleximage </a>is a Rails plugin that tries to make image uploading and rendering super easy.<br />
There are 2 pieces involved in making Rails image handling easy.<br />
1. Image Uploads<br />
2. Image Rendering<br />
其使用的是Magick<br />
<br />
参考文档：<br />
<a href="http://www.javaeye.com/topic/214661">1.让rails处理图片再简单一点</a><br />
<a href="http://github.com/Squeegy/fleximage/tree">2.fleximage</a></p>]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2008-07-29 10:54:14</wp:post_date>
		<wp:post_date_gmt>2008-07-29 10:54:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fleximagerails%e5%9b%be%e7%89%87%e5%a4%84%e7%90%86%e6%96%b0%e9%80%89%e6%8b%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>收到《开源技术选型手册》，谢谢diuera</title>
		<link>http://www.iceskysl.com/?p=342</link>
		<pubDate>Tue, 29 Jul 2008 17:26:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=342</guid>
		<description></description>
		<content:encoded><![CDATA[收到博文的diuera送的《开源技术选型手册》，还有段小故事，呵呵。大概翻了一下，内容虽然不是很深，但是涉及到的内容还是不错的，有预算的朋友可以买本放那，有时间翻阅下。

<img src="http://bbs.chinaunix.net/attachments/month_0807/20080701_451de72d3c3d6ab9550aeDbv5jLcc9zf.jpg" alt="" />

另外，有我参与的一本书正在撰写中，希望早早完稿，出版；另外还在策划一本书，希望早早策划好，开始撰写。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>收到博文的diuera送的《开源技术选型手册》，还有段小故事，呵呵。大概翻了一下，内容虽然不是很深，但是涉及到的内容还是不错的，有预算的朋友可以买本放那，有时间翻阅下。</p>
<p><img src="http://bbs.chinaunix.net/attachments/month_0807/20080701_451de72d3c3d6ab9550aeDbv5jLcc9zf.jpg" alt="" /></p>
<p>另外，有我参与的一本书正在撰写中，希望早早完稿，出版；另外还在策划一本书，希望早早策划好，开始撰写。</p>]]></excerpt:encoded>
		<wp:post_id>342</wp:post_id>
		<wp:post_date>2008-07-29 17:26:09</wp:post_date>
		<wp:post_date_gmt>2008-07-29 17:26:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%94%b6%e5%88%b0%e3%80%8a%e5%bc%80%e6%ba%90%e6%8a%80%e6%9c%af%e9%80%89%e5%9e%8b%e6%89%8b%e5%86%8c%e3%80%8b%ef%bc%8c%e8%b0%a2%e8%b0%a2diuera</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>246</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.175.192.224</wp:comment_author_IP>
			<wp:comment_date>2008-07-30 01:08:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恭喜！ 恭喜！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>vi/vim命令大全壁纸</title>
		<link>http://www.iceskysl.com/?p=343</link>
		<pubDate>Sat, 02 Aug 2008 09:30:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[我一直苦恼记不住VI的那么多的命令，每次都要翻宝典，实在是效率低下，看到有人做了一份壁纸，挺好的，分享给大家。
<img src="http://www.phecda.org/uploads/2008/07/vi.png" alt="" align="left" />]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>我一直苦恼记不住VI的那么多的命令，每次都要翻宝典，实在是效率低下，看到有人做了一份壁纸，挺好的，分享给大家。</p>]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2008-08-02 09:30:57</wp:post_date>
		<wp:post_date_gmt>2008-08-02 09:30:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vivim%e5%91%bd%e4%bb%a4%e5%a4%a7%e5%85%a8%e5%a3%81%e7%ba%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安装QQ的linux版本</title>
		<link>http://www.iceskysl.com/?p=344</link>
		<pubDate>Sat, 02 Aug 2008 11:21:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=344</guid>
		<description></description>
		<content:encoded><![CDATA[以前是ubuntu下的使用gaim和eva都不是很好用QQ，7.31号QQ发布了linux版本，一直没来得及试试，今天搞好宽带后终于可以试试了，还行，还讲的过去。

======安装过程===

iceskysl@IceskYsl:/home/software$ wget http://dl_dir.qq.com/linuxqq/linuxqq_1.0-Preview1_i386.deb
--11:07:14--  http://dl_dir.qq.com/linuxqq/linuxqq_1.0-Preview1_i386.deb
=&gt; `linuxqq_1.0-Preview1_i386.deb'
正在解析主机 dl_dir.qq.com... 121.11.68.3, 202.104.241.135, 202.104.241.136, ...
正在连接 dl_dir.qq.com|121.11.68.3|:80... 已连接。
已发出 HTTP 请求，正在等待回应... 200 OK
长度： 4,870,522 (4.6M) [application/octet-stream]

100%[====================================&gt;] 4,870,522    122.24K/s    ETA 00:00

11:08:05 (94.06 KB/s) - `linuxqq_1.0-Preview1_i386.deb' 已经保存 [4870522/4870522]

iceskysl@IceskYsl:/home/software$ dpkg -i linuxqq_1.0-Preview1_i386.deb
dpkg: 该操作需要超级用户权限
iceskysl@IceskYsl:/home/software$ sudo dpkg -i linuxqq_1.0-Preview1_i386.deb
选中了曾被取消选择的软件包 linuxqq。
(正在读取数据库 ... 系统当前总共安装有 225548 个文件和目录。)
正在解压缩 linuxqq (从 linuxqq_1.0-Preview1_i386.deb) ...
正在设置 linuxqq (1.0-Preview1) ...
iceskysl@IceskYsl:/home/software$

就不截图了，需要了解详细的去他官方了解吧：http://im.qq.com/qq/linux/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前是ubuntu下的使用gaim和eva都不是很好用QQ，7.31号QQ发布了linux版本，一直没来得及试试，今天搞好宽带后终于可以试试了，还行，还讲的过去。</p>
<p>======安装过程===</p>
<p>iceskysl@IceskYsl:/home/software$ wget http://dl_dir.qq.com/linuxqq/linuxqq_1.0-Preview1_i386.deb<br />
--11:07:14--&nbsp; http://dl_dir.qq.com/linuxqq/linuxqq_1.0-Preview1_i386.deb<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =&gt; `linuxqq_1.0-Preview1_i386.deb'<br />
正在解析主机 dl_dir.qq.com... 121.11.68.3, 202.104.241.135, 202.104.241.136, ...<br />
正在连接 dl_dir.qq.com|121.11.68.3|:80... 已连接。<br />
已发出 HTTP 请求，正在等待回应... 200 OK<br />
长度： 4,870,522 (4.6M) [application/octet-stream]<br />
<br />
100%[====================================&gt;] 4,870,522&nbsp;&nbsp;&nbsp; 122.24K/s&nbsp;&nbsp;&nbsp; ETA 00:00<br />
<br />
11:08:05 (94.06 KB/s) - `linuxqq_1.0-Preview1_i386.deb' 已经保存 [4870522/4870522]<br />
<br />
iceskysl@IceskYsl:/home/software$ dpkg -i linuxqq_1.0-Preview1_i386.deb <br />
dpkg: 该操作需要超级用户权限<br />
iceskysl@IceskYsl:/home/software$ sudo dpkg -i linuxqq_1.0-Preview1_i386.deb <br />
选中了曾被取消选择的软件包 linuxqq。<br />
(正在读取数据库 ... 系统当前总共安装有 225548 个文件和目录。)<br />
正在解压缩 linuxqq (从 linuxqq_1.0-Preview1_i386.deb) ...<br />
正在设置 linuxqq (1.0-Preview1) ...<br />
iceskysl@IceskYsl:/home/software$</p>
<p>就不截图了，需要了解详细的去他官方了解吧：http://im.qq.com/qq/linux/</p>]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2008-08-02 11:21:11</wp:post_date>
		<wp:post_date_gmt>2008-08-02 11:21:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e8%a3%85qq%e7%9a%84linux%e7%89%88%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>247</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.63.199</wp:comment_author_IP>
			<wp:comment_date>2008-09-26 23:44:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[安装 linuxqq_v1.0-preview2：
iceskysl@IceskYsl:/home/software$ sudo dpkg -i  linuxqq_v1.0-preview2_i386.deb
[sudo] password for iceskysl:
tar: ./conffiles: time stamp 2008-09-27 00:27:23 is 2693.585439862 s in the future
tar: ./control: time stamp 2008-09-27 00:27:23 is 2693.559637417 s in the future
tar: .: time stamp 2008-09-27 00:27:23 is 2693.559513442 s in the future
(正在读取数据库 ... 系统当前总共安装有 207189 个文件和目录。)
正预备替换 linuxqq 1.0-Preview1 (使用 linuxqq_v1.0-preview2_i386.deb) ...
正在解压缩将用于更替的包文件 linuxqq ...
正在设置 linuxqq (v1.0-preview2) ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>248</wp:comment_id>
			<wp:comment_author><![CDATA[liulangrei]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.40.235.62</wp:comment_author_IP>
			<wp:comment_date>2008-10-03 12:54:54</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bangjile]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>249</wp:comment_id>
			<wp:comment_author><![CDATA[liulangrei]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.40.235.62</wp:comment_author_IP>
			<wp:comment_date>2008-10-03 12:55:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[henhao]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[卢青]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.91.209.70</wp:comment_author_IP>
			<wp:comment_date>2008-12-27 22:29:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>DNS缓存投毒以及其他相关安全问题</title>
		<link>http://www.iceskysl.com/?p=345</link>
		<pubDate>Tue, 05 Aug 2008 12:59:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=345</guid>
		<description></description>
		<content:encoded><![CDATA[前些日子，<strong>DNS缓存投毒</strong>的漏洞可行性被讨论的沸沸扬扬的，就我订阅的几个安全相关的RSS上就看到不少篇相关的文章，虽然有些细节都遮遮掩掩的，但是可以肯定的是DNS缓存机制确实存在相关的漏洞可以利用。

关于DNS的工作机制和原理就不细说了，非三言两语可以说清楚的，大家还是google下好了，这里说的DNS投毒的基本思路是想办法构造和伪造一些域名对应的IP地址，设法修改DNS缓存，致使其他访问者到此DNS服务器查询的时候，将其带入你精心构造的页面，用来钓鱼或者其他用途。

“比如我们要攻击www.google.com.首先向目的DNS服务器查询根本不存在的二级域名，比如：aaa.google.com. DNS服务器在缓存中查找aaa.google.com,没有找到，则会向上级DNS或者权威DNS查询 。这时我们可以生成伪造的DNS Response数据包并发送这些的伪造DNS Response数据包给目的服务器。让目的DNS在上级DNS或者权威DNS服务器响应到达之前，接受到恶意的应答。”

关于该问题，绿盟科技发布了一篇公告“<a href="http://www.nsfocus.net/vulndb/12124">多家厂商DNS实现缓存中毒漏洞</a>”，也有人发布Ruby版本的EXP“<a href="http://www.milw0rm.com/exploits/6122">Kaminsky DNS Cache Poisoning Flaw Exploit for Domains</a>”,另外一些安全爱好者也发表了自己的看法，如“<a href="http://www.icylife.net/yunshu/show.php?id=586">DNS缓存中毒漏洞的一点推测</a>”，“<a href="http://www.neeao.com/blog/article-5299.html">DNS缓存投毒细节泄露</a>”等。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前些日子，<strong>DNS缓存投毒</strong>的漏洞可行性被讨论的沸沸扬扬的，就我订阅的几个安全相关的RSS上就看到不少篇相关的文章，虽然有些细节都遮遮掩掩的，但是可以肯定的是DNS缓存机制确实存在相关的漏洞可以利用。</p>
<p>关于DNS的工作机制和原理就不细说了，非三言两语可以说清楚的，大家还是google下好了，这里说的DNS投毒的基本思路是想办法构造和伪造一 些域名对应的IP地址，设法修改DNS缓存，致使其他访问者到此DNS服务器查询的时候，将其带入你精心构造的页面，用来钓鱼或者其他用途。</p>
<p>&ldquo;比如我们要攻击www.google.com.首先向目的DNS服务器查询根本不存在的二级域名，比如：aaa.google.com. DNS服务器在缓存中查找aaa.google.com,没有找到，则会向上级DNS或者权威DNS查询 。这时我们可以生成伪造的DNS Response数据包并发送这些的伪造DNS Response数据包给目的服务器。让目的DNS在上级DNS或者权威DNS服务器响应到达之前，接受到恶意的应答。&rdquo;</p>
<p>关于该问题，绿盟科技发布了一篇公告&ldquo;<a href="http://www.nsfocus.net/vulndb/12124">多家厂商DNS实现缓存中毒漏洞</a>&rdquo;，也有人发布Ruby版本的EXP&ldquo;<a href="http://www.milw0rm.com/exploits/6122">Kaminsky DNS Cache Poisoning Flaw Exploit for Domains</a>&rdquo;,另外一些安全爱好者也发表了自己的看法，如&ldquo;<a href="http://www.icylife.net/yunshu/show.php?id=586">DNS缓存中毒漏洞的一点推测</a>&rdquo;，&ldquo;<a href="http://www.neeao.com/blog/article-5299.html">DNS缓存投毒细节泄露</a>&rdquo;等。</p>]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2008-08-05 12:59:21</wp:post_date>
		<wp:post_date_gmt>2008-08-05 12:59:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dns%e7%bc%93%e5%ad%98%e6%8a%95%e6%af%92%e4%bb%a5%e5%8f%8a%e5%85%b6%e4%bb%96%e7%9b%b8%e5%85%b3%e5%ae%89%e5%85%a8%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>把Ajax文件寄放在Google，Yahoo！</title>
		<link>http://www.iceskysl.com/?p=346</link>
		<pubDate>Thu, 07 Aug 2008 12:53:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[在中国，电信，网通，联通等南北分化问题相当突出，电线的线路网通的访问可能会慢的无法忍受，解决这个问题的办法中，<strong>CDN</strong>比较靠谱，但是价格不是一般的贵，一般人玩不起，呵呵。一般会搞双线或者在每个网络中部署一套以提高用户体验。
而在页面上，一般来说，AJAX用的JS库表会比较大，这个时候就可以考虑直接使用Google或者Yahoo的JS库，Google的“<a href="http://code.google.com/apis/ajaxlibs/">AJAX Libraries API</a>  ”库包含了常见的jQuery, prototype, script.aculo.us, MooTools, and dojo.等等。
这样一来可以省去不少的网络流量，也提高了各地的速度。而且是免费的，何乐而不为呢？
还有类似YUI的UI库，也可以这样考虑。可以提高不少性能。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在中国，电信，网通，联通等南北分化问题相当突出，电线的线路网通的访问可能会慢的无法忍受，解决这个问题的办法中，<strong>CDN</strong>比较靠谱，但是价格不是一般的贵，一般人玩不起，呵呵。一般会搞双线或者在每个网络中部署一套以提高用户体验。<br />
而在页面上，一般来说，AJAX用的JS库表会比较大，这个时候就可以考虑直接使用Google或者Yahoo的JS库，Google的&ldquo;<a href="http://code.google.com/apis/ajaxlibs/">AJAX Libraries API</a>&nbsp; &rdquo;库包含了常见的jQuery, prototype, script.aculo.us, MooTools, and dojo.等等。<br />
这样一来可以省去不少的网络流量，也提高了各地的速度。而且是免费的，何乐而不为呢？<br />
还有类似YUI的UI库，也可以这样考虑。可以提高不少性能。</p>]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2008-08-07 12:53:09</wp:post_date>
		<wp:post_date_gmt>2008-08-07 12:53:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%8aajax%e6%96%87%e4%bb%b6%e5%af%84%e6%94%be%e5%9c%a8google%ef%bc%8cyahoo%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>251</wp:comment_id>
			<wp:comment_author><![CDATA[77]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.135.172</wp:comment_author_IP>
			<wp:comment_date>2008-08-10 02:11:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ed2k://|file|Beijing_Olympics_Opening_Ceremony_The_Show.avi|1096942896|C3F0814C0DE921ACBDD615A48A619B7C|/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Apache Tomcat Directory Traversal Vulnerability</title>
		<link>http://www.iceskysl.com/?p=347</link>
		<pubDate>Mon, 11 Aug 2008 17:51:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=347</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>Title: Apache Tomcat Directory Traversal VulnerabilityAuthor: Simon Ryeo(bar4mi (at) gmail.com, barami (at) ahnlab.com)Severity: HighImpact: Remote File DisclosureVulnerable Version: prior to 6.0.18Solution: - Best Choice: Upgrade to 6.0.18 (http://tomcat.apache.org) - Hot fix: Disable allowLinking or do not set URIencoding to utf8 in order to avoid this vulnerability. - Tomcat 5.5.x and 4.1.x Users: The fix will be included in the next releases. Please apply the hot fix until next release.References: - http://tomcat.apache.org/security.html - http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-2938History: - 07.17.2008: Initiate notify (To Apache Security Team) - 08.02.2008: Responsed this problem fixed and released new version - 08.05.2008: Notify disclosure (To Apache Tomcat Security Team) - 08.10.2008: Responsed with some suggestions.

DescriptionAs Apache Security Team, this problem occurs because of JAVA side.If your context.xml or server.xml allows 'allowLinking'and 'URIencoding' as'UTF-8', an attacker can obtain your important system files.(e.g.  /etc/passwd)

ExploitIf your webroot directory has three depth(e.g /usr/local/wwwroot), Anattacker can access arbitrary files as below. (Proof-of-concept)

http://www.target.com/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/foo/bar

# milw0rm.com [2008-08-11]</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<pre>Description<br />As Apache Security Team, this problem occurs because of JAVA side.<br />If your context.xml or server.xml allows 'allowLinking'and 'URIencoding' as<br />'UTF-8', an attacker can obtain your important system files.(e.g.  /etc/passwd)<br /><br />Exploit<br />If your webroot directory has three depth(e.g /usr/local/wwwroot), An<br />attacker can access arbitrary files as below. (Proof-of-concept)<br /><br />http://www.target.com/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/foo/bar</pre>]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2008-08-11 17:51:56</wp:post_date>
		<wp:post_date_gmt>2008-08-11 17:51:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-tomcat-directory-traversal-vulnerability</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f8c3c8a4c7e6c7bf6af875e62b1c1495</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>中国网民都在做什么？</title>
		<link>http://www.iceskysl.com/?p=348</link>
		<pubDate>Wed, 13 Aug 2008 11:24:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=348</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://lh5.ggpht.com/iceskysl/SKJTwNiqs3I/AAAAAAAACNA/7nX16V9bEc4/s400/2008-08-13_112006.png" alt="" />

有时间的看看其他人对中国网民的调查、分析、报告还是有好处的，至少可以让自己在一个宏观和趋势是了解中国网民在做什么和喜欢做什么，在08年1月的时候，在一篇《<a href="http://www.cwrblog.net/976/what-do-chinese-internet-users-do-online.html">What Do Chinese Internet Users Do Online?</a>》文章中看到《中国互联网络发展状况统计报告》，比较详细的说明了中国网民的构成，分布等等，非常不错。

时隔半年，《<a href="http://www.cwrblog.net/1112/trendsspotting-handbook-of-online-china.html">TrendsSpotting Handbook Of Online China</a>》这篇文章中又看到一个《<a href="http://www.slideshare.net/TrendsSpotting/handbook-of-online-china">Handbook of Online China</a>》的PPT，该PPT分析了中国互联网用户的行为特征，从应用、搜索、web2等方面分析、比较了中国当下比较大的应用。

在该报告中，我们可以看到，互联网应用中网络音乐，IM和在线视频，在线游戏都是热门，详细的可以进一步的查看该PPT。
<div id="__ss_547284" style="width: 425px; text-align: left;"><a style="margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline;" title="Handbook of Online China" href="http://www.slideshare.net/TrendsSpotting/handbook-of-online-china?src=embed">Handbook of Online China</a><object style="margin: 0px;" width="425" height="355" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slideshare.net/swf/ssplayer2.swf?doc=handbook-to-china-1218214502023105-9&amp;stripped_title=handbook-of-online-china" /><param name="allowscriptaccess" value="always" /><param name="allowfullscreen" value="true" /><embed style="margin: 0px;" width="425" height="355" type="application/x-shockwave-flash" src="http://static.slideshare.net/swf/ssplayer2.swf?doc=handbook-to-china-1218214502023105-9&amp;stripped_title=handbook-of-online-china" allowFullScreen="true" allowScriptAccess="always" allowscriptaccess="always" allowfullscreen="true" /></object>
<div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;">View SlideShare <a style="text-decoration: underline;" title="View Handbook of Online China on SlideShare" href="http://www.slideshare.net/TrendsSpotting/handbook-of-online-china?src=embed">presentation</a> (tags: <a style="text-decoration: underline;" href="http://slideshare.net/tag/web-trend">web trend</a> <a style="text-decoration: underline;" href="http://slideshare.net/tag/trends">trends</a> <a style="text-decoration: underline;" href="http://slideshare.net/tag/powerpoint">powerpoint</a> <a style="text-decoration: underline;" href="http://slideshare.net/tag/olympics">olympics</a>)</div>
</div>
<img style="visibility: hidden; width: 0px; height: 0px;" src="http://counters.gigya.com/wildfire/IMP/CXNID=2000002.0NXC/bT*xJmx*PTEyMTg1OTc2NjgzMDAmcHQ9MTIxODU5NzY4NTA5MiZwPTEwMTkxJmQ9Jm49Jmc9Mg==.gif" alt="" width="0" height="0" border="0" />]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有时间的看看其他人对中国网民的调查、分析、报告还是有好处的，至少可以让自己在一个宏观和趋势是了解中国网民在做什么和喜欢做什么，在08年1月的时候，在一篇《<a href="http://www.cwrblog.net/976/what-do-chinese-internet-users-do-online.html">What Do Chinese Internet Users Do Online?</a>》文章中看到《中国互联网络发展状况统计报告》，比较详细的说明了中国网民的构成，分布等等，非常不错。</p>
<p>时隔半年，《<a href="http://www.cwrblog.net/1112/trendsspotting-handbook-of-online-china.html">TrendsSpotting Handbook Of Online China</a>》这篇文章中又看到一个《<a href="http://www.slideshare.net/TrendsSpotting/handbook-of-online-china">Handbook of Online China</a>》的PPT，该PPT分析了中国互联网用户的行为特征，从应用、搜索、web2等方面分析、比较了中国当下比较大的应用。</p>
<p>在该报告中，我们可以看到，互联网应用中网络音乐，IM和在线视频，在线游戏都是热门，详细的可以进一步的查看该PPT。</p>]]></excerpt:encoded>
		<wp:post_id>348</wp:post_id>
		<wp:post_date>2008-08-13 11:24:20</wp:post_date>
		<wp:post_date_gmt>2008-08-13 11:24:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ad%e5%9b%bd%e7%bd%91%e6%b0%91%e9%83%bd%e5%9c%a8%e5%81%9a%e4%bb%80%e4%b9%88%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用UUID做ActiveRecord主键</title>
		<link>http://www.iceskysl.com/?p=349</link>
		<pubDate>Thu, 14 Aug 2008 10:43:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[大家都知道，在Rails中比较常见的做法是使用“<strong>auto increment</strong>”的id做为主键，虽然很便捷，但是也存在以下问题：

1）敏感信息泄漏 --比如注册用户数，发表文章数等，内行一眼就看出你系统的规模；

2）分布式DB存在冲突 --一个DB不够了，需要多个DB的时候，可能会存在ID冲突的情况；

3）旧数据库影响  --导入、导出的时候可能存在一些问题（rake db:schema:dump）

由于这些问题都是很关键的，所以很有必要做一些改变，思路很简单，使用UUID做主键，可以保证主键的唯一性（类似12f186e6-687e-11ad-843e-001b632783f1，全世界唯一），又能隐藏敏感信息，且实现很简单，如下：

<strong>1、创建表，去掉ID属性，增加UUID属性</strong>

&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>create_table </span><span class="symbol">:posts</span><span>, </span><span class="symbol">:id</span><span> =&gt; </span><span class="keyword">false</span><span> </span><span class="keyword">do</span><span> |t|  </span></span></li>
	<li><span>  t.string <span class="symbol">:uuid</span><span>, </span><span class="symbol">:limit</span><span> =&gt; 36, </span><span class="symbol">:primary</span><span> =&gt; </span><span class="keyword">true</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>2、在Model中设置主键为UUID</strong>

&nbsp;

&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> Post &lt; ActiveRecord::Base  </span></span></li>
	<li><span>  set_primary_key <span class="string">"uuid"</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>3、安装UUID的gem</strong>

&nbsp;

&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>sudo gem install uuidtools  </span></span></li>
</ol>
</div>
<strong>4、创建lib/uuid_helper.rb </strong>

&nbsp;

&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'rubygems'</span><span>  </span></span></li>
	<li><span>require <span class="string">'uuidtools'</span><span>  </span></span></li>
	<li class="alt"><span>   </span></li>
	<li><span><span class="keyword">module</span><span> UUIDHelper  </span></span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> before_create()  </span></span></li>
	<li><span>    <span class="keyword">self</span><span>.uuid = UUID.timestamp_create().to_s  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>5、使用<span>UUIDHelper</span></strong>

&nbsp;

&nbsp;
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> Post &lt; ActiveRecord::Base  </span></span></li>
	<li><span>  set_primary_key <span class="string">"uuid"</span><span>  </span></span></li>
	<li class="alt"><span>  include UUIDHelper  </span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
OK，新建一个post，就可以看到，该字段被自动填入了。

&nbsp;

PS：需要注意的是，需要留意<span><span>before_create是否有冲突。</span></span>

参考文章：

http://ariejan.net/2008/08/12/ruby-on-rails-uuid-as-your-activerecord-primary-key/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家都知道，在Rails中比较常见的做法是使用&ldquo;<strong>auto increment</strong>&rdquo;的id做为主键，虽然很便捷，但是也存在以下问题：</p>
<p>1）敏感信息泄漏 --比如注册用户数，发表文章数等，内行一眼就看出你系统的规模；</p>
<p>2）分布式DB存在冲突 --一个DB不够了，需要多个DB的时候，可能会存在ID冲突的情况；</p>
<p>3）旧数据库影响&nbsp; --导入、导出的时候可能存在一些问题（rake db:schema:dump）</p>
<p>由于这些问题都是很关键的，所以很有必要做一些改变，思路很简单，使用UUID做主键，可以保证主键的唯一性（类似12f186e6-687e-11ad-843e-001b632783f1，全世界唯一），又能隐藏敏感信息，且实现很简单，如下：</p>
<p><strong>1、创建表，去掉ID属性，增加UUID属性</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>create_table&nbsp;</span><span class="symbol">:posts</span><span>,&nbsp;</span><span class="symbol">:id</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">false</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|t|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;t.string&nbsp;<span class="symbol">:uuid</span><span>,&nbsp;</span><span class="symbol">:limit</span><span>&nbsp;=&gt;&nbsp;36,&nbsp;</span><span class="symbol">:primary</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">true</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>2、在Model中设置主键为UUID</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Post&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;set_primary_key&nbsp;<span class="string">&quot;uuid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>3、安装UUID的gem</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>sudo&nbsp;gem&nbsp;install&nbsp;uuidtools&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>4、创建lib/uuid_helper.rb </strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'uuidtools'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">module</span><span>&nbsp;UUIDHelper&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;before_create()&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.uuid&nbsp;=&nbsp;UUID.timestamp_create().to_s&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>5、使用<span>UUIDHelper</span></strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Post&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;set_primary_key&nbsp;<span class="string">&quot;uuid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;include&nbsp;UUIDHelper&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>OK，新建一个post，就可以看到，该字段被自动填入了。</p>
<p>PS：需要注意的是，需要留意<span><span>before_create是否有冲突。</span></span></p>
<p>参考文章：</p>
<p>http://ariejan.net/2008/08/12/ruby-on-rails-uuid-as-your-activerecord-primary-key/</p>]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date>2008-08-14 10:43:06</wp:post_date>
		<wp:post_date_gmt>2008-08-14 10:43:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8uuid%e5%81%9aactiverecord%e4%b8%bb%e9%94%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d44dd0b00cedbd53e9bdfaec3606a5aa</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用UUID隐藏系统敏感信息</title>
		<link>http://www.iceskysl.com/?p=350</link>
		<pubDate>Thu, 14 Aug 2008 10:53:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=350</guid>
		<description></description>
		<content:encoded><![CDATA[在前面一篇文章中已经说了如何使用“<a href="http://iceskysl.1sters.com/?action=show&amp;id=349">使用UUID做ActiveRecord主键</a>”，其说到使用Rails默认的id做为自增变量的几个缺点，其中一条就是“敏感信息泄漏 ”，这个是很致命的，可以让您的竞争对手很清楚的了解到你的系统的数据量，比如多少注册用户，发布了多少个帖子等等，还可以根据这个计算出你系统的增长率，做趋势预测，总之，把这些敏感信息暴露出来非常危险（搞社工的都明白）。

更可怕的是，同质化竞争对手可以按照URL中后面这个ID来遍历您的DB中的内容，写个小<strong>爬虫</strong>把你的页面上的关键信息顺次爬下来也不是什么难事，这样的话，你就非常被动了。

而采用UUID来做逐渐，因为其每次生成的都是唯一的、类似<em>12f186e6-687e-11ad-843e-001b632783f1</em>这样的串，所以可以很大程度上避免敏感信息的泄露。也可以防止自动采集的发生。
具体使用方法，请参考前面一篇文章“<a href="../../../?action=show&amp;id=349">使用UUID做ActiveRecord主键</a>”。安全意识还是要有的，切记。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在前面一篇文章中已经说了如何使用&ldquo;<a href="../../../?action=show&amp;id=349">使用UUID做ActiveRecord主键</a>&rdquo;， 其说到使用Rails默认的id做为自增变量的几个缺点，其中一条就是&ldquo;敏感信息泄漏 &rdquo;，这个是很致命的，可以让您的竞争对手很清楚的了解到你的系统的数据量，比如多少注册用户，发布了多少个帖子等等，还可以根据这个计算出你系统的增长 率，做趋势预测，总之，把这些敏感信息暴露出来非常危险（搞社工的都明白）。<br />
<br />
更可怕的是，同质化竞争对手可以按照URL中后面这个ID来遍历您的DB中的内容，写个小<strong>爬虫</strong>把你的页面上的关键信息顺次爬下来也不是什么难事，这样的话，你就非常被动了。<br />
<br />
而采用UUID来做逐渐，因为其每次生成的都是唯一的、类似<em>12f186e6-687e-11ad-843e-001b632783f1</em>这样的串，所以可以很大程度上避免敏感信息的泄露。也可以防止自动采集的发生。<br />
具体使用方法，请参考前面一篇文章&ldquo;<a href="../../../?action=show&amp;id=349">使用UUID做ActiveRecord主键</a>&rdquo;。安全意识还是要有的，切记。</p>]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date>2008-08-14 10:53:05</wp:post_date>
		<wp:post_date_gmt>2008-08-14 10:53:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8uuid%e9%9a%90%e8%97%8f%e7%b3%bb%e7%bb%9f%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>252</wp:comment_id>
			<wp:comment_author><![CDATA[dbd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.63.49.30</wp:comment_author_IP>
			<wp:comment_date>2008-08-17 13:30:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[明白了  ，怪不得那么多淘宝宝贝网址是这样的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Yahoo! Music 放出API，音乐平台开放趋势凸显</title>
		<link>http://www.iceskysl.com/?p=351</link>
		<pubDate>Fri, 15 Aug 2008 14:32:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[在<a href="http://Last.fm">Last.fm</a>宣布其开放API后，<a href="http://new.music.yahoo.com/">Yahoo! Music</a>也宣布其开放<a href="http://developer.yahoo.com/music/api_guide/">API</a>。直接看一段英文描述，不废话了，大家都看得懂，如下：
<blockquote>The music API gives developers access to Yahoo!’s “catalog of artists, albums, tracks, videos, ratings and more,” according to the company. It allows developers to interface with Yahoo! Music’s database via “charts, search, similarities, genres, artists, and user recommendations and ratings.”

The REST-based API returns data in XML, JSON, and RSS and uses BBAuth to allow user authentication for Yahoo! Music users to access their personal data via external apps. Use of the API is currently limited to 5k queries per day.</blockquote>
采用REST格式的API，使用Ruby来调用非常简单，看一段代码：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'yahoo-music'</span><span>  </span></span></li>
	<li><span>include Yahoo::Music  </span></li>
	<li class="alt"><span>Yahoo::Music.app_id = <span class="string">"..."</span><span> </span><span class="comment"># Put Your App ID Here</span><span>  </span></span></li>
	<li><span>artist = Artist.<span class="keyword">new</span><span>(</span><span class="string">"Beirut"</span><span>) </span><span class="comment"># Searches by name and uses first result</span><span>  </span></span></li>
	<li class="alt"><span>album = artist.releases.detect{|r| r.title == <span class="string">"Flying Club Cup"</span><span>}  </span></span></li>
	<li><span>puts album.title  </span></li>
	<li class="alt"><span>puts album.artist  </span></li>
	<li><span>puts <span class="string">"Release Date:"</span><span> + album.released_on.strftime(</span><span class="string">"%m/%d/%Y"</span><span>)  </span></span></li>
	<li class="alt"><span>puts  </span></li>
	<li><span>puts <span class="string">"Tracks"</span><span>  </span></span></li>
	<li class="alt"><span>artist.tracks.each_with_index <span class="keyword">do</span><span> |track, i|  </span></span></li>
	<li><span>puts <span class="string">"\t%d %s \t%2d:%2d"</span><span> % [i, track.title, track.duration / 60, track.duration % 60]  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
详细资料，请参考：

http://developer.yahoo.net/blog/archives/2008/08/y_music_battle_of_the_apis.html

http://developer.yahoo.com/music/

http://www.sitepoint.com/blogs/2008/08/05/yahoo-releases-music-api/

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在<a href="http://last.fm/">Last.fm</a>宣布其开放API后，<a href="http://new.music.yahoo.com/">Yahoo! Music</a>也宣布其开放<a href="http://developer.yahoo.com/music/api_guide/">API</a>。直接看一段英文描述，不废话了，大家都看得懂，如下：</p>
<blockquote>
<p>The music API gives developers access to Yahoo!&rsquo;s &ldquo;catalog of artists, albums, tracks, videos, ratings and more,&rdquo; according to the company. It allows developers to interface with Yahoo! Music&rsquo;s database via &ldquo;charts, search, similarities, genres, artists, and user recommendations and ratings.&rdquo;</p>
<p>The REST-based API returns data in XML, JSON, and RSS and uses BBAuth to allow user authentication for Yahoo! Music users to access their personal data via external apps. Use of the API is currently limited to 5k queries per day.</p>
</blockquote>
<p>采用REST格式的API，使用Ruby来调用非常简单，看一段代码：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'yahoo-music'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>include&nbsp;Yahoo::Music&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Yahoo::Music.app_id&nbsp;=&nbsp;<span class="string">&quot;...&quot;</span><span>&nbsp;</span><span class="comment">#&nbsp;Put&nbsp;Your&nbsp;App&nbsp;ID&nbsp;Here</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>artist&nbsp;=&nbsp;Artist.<span class="keyword">new</span><span>(</span><span class="string">&quot;Beirut&quot;</span><span>)&nbsp;</span><span class="comment">#&nbsp;Searches&nbsp;by&nbsp;name&nbsp;and&nbsp;uses&nbsp;first&nbsp;result</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>album&nbsp;=&nbsp;artist.releases.detect{|r|&nbsp;r.title&nbsp;==&nbsp;<span class="string">&quot;Flying&nbsp;Club&nbsp;Cup&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>puts&nbsp;album.title&nbsp;&nbsp;</span></li>
    <li class="alt"><span>puts&nbsp;album.artist&nbsp;&nbsp;</span></li>
    <li class=""><span>puts&nbsp;<span class="string">&quot;Release&nbsp;Date:&quot;</span><span>&nbsp;+&nbsp;album.released_on.strftime(</span><span class="string">&quot;%m/%d/%Y&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>puts&nbsp;&nbsp;</span></li>
    <li class=""><span>puts&nbsp;<span class="string">&quot;Tracks&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>artist.tracks.each_with_index&nbsp;<span class="keyword">do</span><span>&nbsp;|track,&nbsp;i|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>puts&nbsp;<span class="string">&quot;\t%d&nbsp;%s&nbsp;\t%2d:%2d&quot;</span><span>&nbsp;%&nbsp;[i,&nbsp;track.title,&nbsp;track.duration&nbsp;/&nbsp;60,&nbsp;track.duration&nbsp;%&nbsp;60]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>详细资料，请参考：</p>
<p>http://developer.yahoo.net/blog/archives/2008/08/y_music_battle_of_the_apis.html</p>
<p>http://developer.yahoo.com/music/</p>
<p>http://www.sitepoint.com/blogs/2008/08/05/yahoo-releases-music-api/</p>]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2008-08-15 14:32:02</wp:post_date>
		<wp:post_date_gmt>2008-08-15 14:32:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yahoo-music-%e6%94%be%e5%87%baapi%ef%bc%8c%e9%9f%b3%e4%b9%90%e5%b9%b3%e5%8f%b0%e5%bc%80%e6%94%be%e8%b6%8b%e5%8a%bf%e5%87%b8%e6%98%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_45552842e8a8d54e8350c8a9617c7047</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_43c0a80a45b5e0d8a24a7e51e187fa9d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8c5f9e357bdeaa3ce436666740eaa02a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>253</wp:comment_id>
			<wp:comment_author><![CDATA[繁体字]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.fantizi520.cn</wp:comment_author_url>
			<wp:comment_author_IP>60.175.212.252</wp:comment_author_IP>
			<wp:comment_date>2008-08-21 12:32:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[支持一下YAHOO]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>254</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.144.32.156</wp:comment_author_IP>
			<wp:comment_date>2009-05-07 08:58:15</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[今天仔细看了一下，发现其开放的很不彻底，比如如搜索得到的歌曲的地址是没有提供的，反正我是没找到的，在那提了个问题，期待有人回答。
http://developer.yahoo.net/forum/index.php?showtopic=1406]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Rails Plugins]dnsbl_check过滤来源IP</title>
		<link>http://www.iceskysl.com/?p=352</link>
		<pubDate>Fri, 15 Aug 2008 17:02:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=352</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://spacebabies.nl/dnsbl_check/">dnsbl_check</a>是个很有意思的插件，它其实就是一个前置过滤器，在请求第一次到来的时候，会根据<a href="http://en.wikipedia.org/wiki/DNSBL">DNS Blackhole Lists</a>来判断来源IP是否合法，如果合法，放行，并在其session中标识已经被checked，而后再来源就不会再去校验（省了不少资源）；如果来源IP在DBL内，就会显示“Access denied”页面，同时阻止其进一步访问。

安装和使用：
<ol>
	<li>在Rails项目的根目录下执行"script/plugin install http://www.spacebabies.nl/svn/<strong style="color: black; background-color: #ffff66;">dnsbl_check</strong>" ；</li>
	<li>在需要早检查的controllers 中添加"before_filter :<strong style="color: black; background-color: #ffff66;">dnsbl_check</strong>" ；</li>
	<li>重启应用程序.</li>
</ol>
在 vendor/plugins 目录下需要包含如下结构文件：

&lt;site name&gt;/vendor/plugins/dnsbl_check/
|-- 403.html
|-- README
|-- init.rb
|-- install.rb
`-- lib
`-- dnsbl_check.rb

<strong>代码示例：</strong>
<code></code>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> CommentsController &lt; ApplicationController  </span></span></li>
	<li><span>  before_filter <span class="symbol">:dnsbl_check</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  <span class="comment"># Let users submit comments.</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> submit  </span></span></li>
	<li><span>    ...  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>参考：</strong>
http://agilewebdevelopment.com/plugins/rbl_check
http://spacebabies.nl/dnsbl_check/
http://spacebabies.nl/svn/dnsbl_check/

PS：其主页貌似无法访问了，不晓得哪里有代码下载。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://spacebabies.nl/dnsbl_check/">dnsbl_check</a>是个很有意思的插件，它其实就是一个前置过滤器，在请求第一次到来的时候，会根据<a href="http://en.wikipedia.org/wiki/DNSBL">DNS Blackhole Lists</a>来判断来源IP是否合法，如果合法，放行，并在其session中标识已经被checked，而后再来源就不会再去校验（省了不少资源）；如果来源IP在DBL内，就会显示&ldquo;Access denied&rdquo;页面，同时阻止其进一步访问。<br />
<br />
安装和使用：</p>
<ol>
    <li>在Rails项目的根目录下执行&quot;script/plugin install http://www.spacebabies.nl/svn/<strong style="color: black; background-color: rgb(255, 255, 102);">dnsbl_check</strong>&quot; ；</li>
    <li>在需要早检查的controllers 中添加&quot;before_filter :<strong style="color: black; background-color: rgb(255, 255, 102);">dnsbl_check</strong>&quot; ；</li>
    <li>重启应用程序.</li>
</ol>
<p>在 vendor/plugins 目录下需要包含如下结构文件：<br />
<br />
&lt;site name&gt;/vendor/plugins/dnsbl_check/<br />
|-- 403.html<br />
|-- README<br />
|-- init.rb<br />
|-- install.rb<br />
`-- lib<br />
&nbsp;&nbsp;&nbsp; `-- dnsbl_check.rb<br />
<br />
<strong>代码示例：</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;CommentsController&nbsp;&lt;&nbsp;ApplicationController&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;before_filter&nbsp;<span class="symbol">:dnsbl_check</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="comment">#&nbsp;Let&nbsp;users&nbsp;submit&nbsp;comments.</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;submit&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
<strong>参考：</strong><br />
http://agilewebdevelopment.com/plugins/rbl_check<br />
http://spacebabies.nl/dnsbl_check/<br />
http://spacebabies.nl/svn/dnsbl_check/</p>]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2008-08-15 17:02:06</wp:post_date>
		<wp:post_date_gmt>2008-08-15 17:02:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-pluginsdnsbl_check%e8%bf%87%e6%bb%a4%e6%9d%a5%e6%ba%90ip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d2ebe09baeae04dbad60af98bd9abccf</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e455d20d0ff80bfafc798e6b1c81ee49</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1291aa81049c1cacc5388689ad8c20b3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ulimit:修改和检查文件句柄数限制</title>
		<link>http://www.iceskysl.com/?p=353</link>
		<pubDate>Tue, 19 Aug 2008 16:37:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[在Linux下面部署应用的时候，有时候会遇上<em>Socket/File: Can’t open so many files</em>的问题，其实Linux是有文件句柄限制的，而且默认不是很高，一般都是1024，作为一台生产服务器，其实很容易就达到这个数量，因此我们需 要把这个值改大一些。

我们可以用<strong>ulimit -a</strong>来查看所有限制值，我只关心文件句柄数量的问题
<strong>open files (-n) 1024</strong>
这个就是限制数量 ，其指的是当前用户准备要运行的程序的限制。比较推荐的修改方法是：

正确的做法，应该是修改<strong>/etc/security/limits.conf</strong>
里面有很详细的注释，比如
* soft nofile 2048
* hard nofile 32768

<strong>检查：</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment">#check file descriptor</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>echo  </span></li>
	<li><span>echo <span class="string">"-----------------------------------------------"</span><span>  </span></span></li>
	<li class="alt"><span>echo <span class="string">"Begin to check the file descriptor limit"</span><span>  </span></span></li>
	<li><span>fd=`ulimit -n`  </span></li>
	<li class="alt"><span><span class="keyword">if</span><span> [ </span><span class="variable">$fd</span><span> -lt 8192 ];  </span></span></li>
	<li><span>   <span class="keyword">then</span><span>  </span></span></li>
	<li class="alt"><span>   echo <span class="string">"Fatal Error!"</span><span>  </span></span></li>
	<li><span>   echo <span class="string">"The file descriptor limit is only '"</span><span class="variable">$fd</span><span class="string">"'!"</span><span>  </span></span></li>
	<li class="alt"><span>   echo <span class="string">"Please make it more than 8192!"</span><span>  </span></span></li>
	<li><span>   exit  </span></li>
	<li class="alt"><span>fi  </span></li>
	<li><span>echo <span class="string">"OK, the file descriptor limit is"</span><span> </span><span class="variable">$fd</span><span>  </span></span></li>
	<li class="alt"><span>echo <span class="string">"-----------------------------------------------"</span><span>  </span></span></li>
	<li><span>echo  </span></li>
	<li class="alt"><span>echo
</span></li>
</ol>
</div>
<strong>参考文章：</strong>
http://blog.chinaunix.net/u2/64804/showart_1019246.html
http://hi.baidu.com/leshy/blog/item/f57f4a903fb0898ea877a452.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在Linux下面部署应用的时候，有时候会遇上<em>Socket/File: Can&rsquo;t open so many files</em>的问题，其实Linux是有文件句柄限制的，而且默认不是很高，一般都是1024，作为一台生产服务器，其实很容易就达到这个数量，因此我们需 要把这个值改大一些。<br />
<br />
我们可以用<strong>ulimit -a</strong>来查看所有限制值，我只关心文件句柄数量的问题<br />
<strong>open files (-n) 1024</strong><br />
这个就是限制数量 ，其指的是当前用户准备要运行的程序的限制。比较推荐的修改方法是：<br />
<br />
正确的做法，应该是修改<strong>/etc/security/limits.conf</strong><br />
里面有很详细的注释，比如<br />
* soft nofile 2048<br />
* hard nofile 32768 <br />
<br />
<strong>检查：</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#check&nbsp;file&nbsp;descriptor</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>echo&nbsp;&nbsp;</span></li>
    <li class=""><span>echo&nbsp;<span class="string">&quot;-----------------------------------------------&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>echo&nbsp;<span class="string">&quot;Begin&nbsp;to&nbsp;check&nbsp;the&nbsp;file&nbsp;descriptor&nbsp;limit&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>fd=`ulimit&nbsp;-n`&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">if</span><span>&nbsp;[&nbsp;</span><span class="variable">$fd</span><span>&nbsp;-lt&nbsp;8192&nbsp;];&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">then</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;echo&nbsp;<span class="string">&quot;Fatal&nbsp;Error!&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;echo&nbsp;<span class="string">&quot;The&nbsp;file&nbsp;descriptor&nbsp;limit&nbsp;is&nbsp;only&nbsp;'&quot;</span><span class="variable">$fd</span><span class="string">&quot;'!&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;echo&nbsp;<span class="string">&quot;Please&nbsp;make&nbsp;it&nbsp;more&nbsp;than&nbsp;8192!&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;exit&nbsp;&nbsp;</span></li>
    <li class="alt"><span>fi&nbsp;&nbsp;</span></li>
    <li class=""><span>echo&nbsp;<span class="string">&quot;OK,&nbsp;the&nbsp;file&nbsp;descriptor&nbsp;limit&nbsp;is&quot;</span><span>&nbsp;</span><span class="variable">$fd</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>echo&nbsp;<span class="string">&quot;-----------------------------------------------&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>echo&nbsp;&nbsp;</span></li>
    <li class="alt"><span>echo&nbsp; <br />
    </span></li>
</ol>
</div>
<p><br />
<strong>参考文章：</strong><br />
http://blog.chinaunix.net/u2/64804/showart_1019246.html<br />
http://hi.baidu.com/leshy/blog/item/f57f4a903fb0898ea877a452.html</p>]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2008-08-19 16:37:18</wp:post_date>
		<wp:post_date_gmt>2008-08-19 16:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ulimit%e4%bf%ae%e6%94%b9%e5%92%8c%e6%a3%80%e6%9f%a5%e6%96%87%e4%bb%b6%e5%8f%a5%e6%9f%84%e6%95%b0%e9%99%90%e5%88%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7dfda2b04f8b933205c53e80ed20b6be</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_05af5581f4e41666617a8033d074e0ee</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>255</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>124.42.68.37</wp:comment_author_IP>
			<wp:comment_date>2010-08-10 00:06:32</wp:comment_date>
			<wp:comment_date_gmt>2010-08-10 00:06:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://loamy.javaeye.com/blog/380150
http://www.javaeye.com/topic/74164
http://blog.chinaunix.net/u2/64804/showart_1019246.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>查看MYSQL表占用空间状态</title>
		<link>http://www.iceskysl.com/?p=354</link>
		<pubDate>Tue, 19 Aug 2008 17:08:34 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=354</guid>
		<description></description>
		<content:encoded><![CDATA[比如需要查询库占用的空间和索引占用的空间：

<strong>查整个库的状态：</strong>
select concat(truncate(sum(data_length)/1024/1024,2),'MB') as data_size,
concat(truncate(sum(max_data_length)/1024/1024,2),'MB') as max_data_size,
concat(truncate(sum(data_free)/1024/1024,2),'MB') as data_free,
concat(truncate(sum(index_length)/1024/1024,2),'MB') as index_size
from information_schema.tables where TABLE_SCHEMA = 'databasename';

<strong>查单表：</strong>
select concat(truncate(sum(data_length)/1024/1024,2),'MB') as data_size,
concat(truncate(sum(max_data_length)/1024/1024,2),'MB') as max_data_size,
concat(truncate(sum(data_free)/1024/1024,2),'MB') as data_free,
concat(truncate(sum(index_length)/1024/1024,2),'MB') as index_size
from information_schema.tables where TABLE_NAME = 'tablename';]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>比如需要查询库占用的空间和索引占用的空间：<br />
<br />
<strong>查整个库的状态：</strong><br />
select concat(truncate(sum(data_length)/1024/1024,2),'MB') as data_size,<br />
concat(truncate(sum(max_data_length)/1024/1024,2),'MB') as max_data_size,<br />
concat(truncate(sum(data_free)/1024/1024,2),'MB') as data_free,<br />
concat(truncate(sum(index_length)/1024/1024,2),'MB') as index_size<br />
from information_schema.tables where TABLE_SCHEMA = 'databasename';<br />
<br />
<strong>查单表：</strong><br />
select concat(truncate(sum(data_length)/1024/1024,2),'MB') as data_size,<br />
concat(truncate(sum(max_data_length)/1024/1024,2),'MB') as max_data_size,<br />
concat(truncate(sum(data_free)/1024/1024,2),'MB') as data_free,<br />
concat(truncate(sum(index_length)/1024/1024,2),'MB') as index_size<br />
from information_schema.tables where TABLE_NAME = 'tablename';</p>]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date>2008-08-19 17:08:34</wp:post_date>
		<wp:post_date_gmt>2008-08-19 17:08:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9f%a5%e7%9c%8bmysql%e8%a1%a8%e5%8d%a0%e7%94%a8%e7%a9%ba%e9%97%b4%e7%8a%b6%e6%80%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prawn：Ruby生成PDF更简捷的选择</title>
		<link>http://www.iceskysl.com/?p=355</link>
		<pubDate>Wed, 20 Aug 2008 11:39:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=355</guid>
		<description></description>
		<content:encoded><![CDATA[在InfoQ上看到《<a href="http://www.infoq.com/cn/news/2008/08/ruby-pdf-generation-prawn">Prawn：使用Ruby生成PDF更简捷</a>》，其说到的<strong>Prawn</strong>可以更加快捷的在Ruby中生成PDF文件。因为之前使用过很多版本的PDF生成类库都不尽如人意，有的太复杂，有的太慢，于是对这个做了测试。

<strong>1、安装</strong>

安装很简单，直接使用<em>gem install prawn</em>即可安装完成；

<strong>2、使用</strong>

比较简单，详细的参考其文档，我直接贴一段我测试用的代码，如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># coding: utf-8</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="variable">$LOAD_PATH</span><span> &lt;&lt; </span><span class="builtin">File</span><span>.join(</span><span class="builtin">File</span><span>.dirname(__FILE__), </span><span class="string">'..'</span><span>, </span><span class="string">'lib'</span><span>)  </span></span></li>
	<li><span>require <span class="string">"prawn"</span><span>  </span></span></li>
	<li class="alt"><span>start = <span class="builtin">Time</span><span>.now  </span></span></li>
	<li><span>Prawn::Document.generate(<span class="string">"utf8_text_flow.pdf"</span><span>) </span><span class="keyword">do</span><span>  </span></span></li>
	<li class="alt"><span>  font <span class="string">"#{Prawn::BASEDIR}/data/fonts/simfang.ttf"</span><span>  </span></span></li>
	<li><span>  text <span class="string">"我是中文，还有数字+yingwen+898"</span><span>* 2  </span></span></li>
	<li class="alt"><span>  text <span class="string">"This is a english text, and i will be here ..."</span><span>  </span></span></li>
	<li><span>  text <span class="string">"This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,This is a long text ,"</span><span>  </span></span></li>
	<li class="alt"><span>    </span></li>
	<li><span>  font_size!(16)  </span></li>
	<li class="alt"><span>  text <span class="string">"At size 16"</span><span>  </span></span></li>
	<li><span>    </span></li>
	<li class="alt"><span>  font_size!(16)  </span></li>
	<li><span>  text <span class="string">"\nIceskYsl@1sters!"</span><span>  </span></span></li>
	<li class="alt"><span>  font_size!(10)  </span></li>
	<li><span>  text <span class="string">"不考虑安全的开发过程就是不完整的过程,而我只是个懂点安全对于互联网充满期待的程序员…"</span><span>  </span></span></li>
	<li class="alt"><span>  font_size!(12)  </span></li>
	<li><span>  text <span class="string">"更可怕的是，同质化竞争对手可以按照URL中后面这个ID来遍历您的DB中的内容，写个小爬虫把你的页面上的关键信息顺次爬下来也不是什么难事，这样的话，你就非常被动了。"</span><span>  </span></span></li>
	<li class="alt"><span>
</span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>puts <span class="string">"Spend #{Time.now-start}s"</span><span>  </span></span></li>
	<li><span>                                  </span></li>
	<li class="alt"><span>        </span></li>
	<li><span>        </span></li>
</ol>
</div>
生成的PDF效果还是比较让人满意的，如下是效果图：

&nbsp;

<img src="http://lh4.ggpht.com/iceskysl/SKuM4hyi9VI/AAAAAAAACNQ/9scaVGvI6aI/s400/2008-08-20_111728.png" alt="" />

<strong>3、优缺点</strong>
<ul>
	<li>使用比较方便，API都比较简单；</li>
	<li>相对来水比较快，从上面代码可以看到，生成如上这份PDF需要的时候是”Spend 4.36s“；</li>
	<li>其本身支持14种内在字体，另外可以使用TTF字体文件来添加自己需要的字体；</li>
	<li>支持UTF8字体，对中文等字体支持比较好</li>
	<li>英文可以自动换行，但是我测试中文就不能自动换行了，如上图的红圈地方就是溢出的；<span style="color: #ff0000;">--已经修复</span></li>
	<li>定位方便；</li>
	<li>支持图片插入；</li>
	<li>支持表格，cell等等。</li>
</ul>
<strong>4、其他</strong>

上面说的那个Bug我已经提交给作者，详细的参考这里”<a href="http://prawn.lighthouseapp.com/projects/9398/tickets/67-chinese-text-can-not-flow-well#ticket-67-1">chinese text can not flow well </a>“，应该很快就可以修复和完善了；

让我惊奇的是其<a href="http://prawn.majesticseacreature.com/index.html">主页 </a>上竟然有 <a href="http://prawn.majesticseacreature.com/prawn-Chinese.html">中文版页面</a>，难道有国人参与？

其代码库在：http://github.com/sandal/prawn/tree/master

<strong>5、更新</strong>

上面说到的一个对中文自动换行的BUG，提交给作者后，他就修复了，现在我测试的效果非常棒，是我见过的最棒的一个PDF生成类库了，如下是效果图，可以和上面的那个比较下。

<img src="http://lh5.ggpht.com/iceskysl/SKzKMmjOXdI/AAAAAAAACNY/j2CaOzKZRGU/s400/2008-08-21_094749.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在InfoQ上看到《<a href="http://www.infoq.com/cn/news/2008/08/ruby-pdf-generation-prawn">Prawn：使用Ruby生成PDF更简捷</a>》，其说到的<strong>Prawn</strong>可以更加快捷的在Ruby中生成PDF文件。因为之前使用过很多版本的PDF生成类库都不尽如人意，有的太复杂，有的太慢，于是对这个做了测试。</p>
<p><strong>1、安装</strong></p>
<p>安装很简单，直接使用<em>gem install prawn</em>即可安装完成；</p>
<p><strong>2、使用</strong></p>
<p>比较简单，详细的参考其文档，我直接贴一段我测试用的代码，如下：</p>
<p><strong>3、优缺点</strong></p>
<ul>
    <li>使用比较方便，API都比较简单；</li>
    <li>相对来水比较快，从上面代码可以看到，生成如上这份PDF需要的时候是&rdquo;Spend 4.36s&ldquo;；</li>
    <li>其本身支持14种内在字体，另外可以使用TTF字体文件来添加自己需要的字体；</li>
    <li>支持UTF8字体，对中文等字体支持比较好</li>
    <li>英文可以自动换行，但是我测试中文就不能自动换行了，如上图的红圈地方就是溢出的；</li>
    <li>定位方便；</li>
    <li>支持图片插入；</li>
    <li>支持表格，cell等等。</li>
</ul>
<p><strong>4、其他</strong></p>
<p>上面说的那个Bug我已经提交给作者，详细的参考这里&rdquo;<a href="http://prawn.lighthouseapp.com/projects/9398/tickets/67-chinese-text-can-not-flow-well#ticket-67-1">chinese text can not flow well </a>&ldquo;，应该很快就可以修复和完善了；</p>
<p>让我惊奇的是其<a href="http://prawn.majesticseacreature.com/index.html">主页 </a>上竟然有 <a href="http://prawn.majesticseacreature.com/prawn-Chinese.html">中文版页面</a>，难道有国人参与？</p>
<p>其代码库在：http://github.com/sandal/prawn/tree/master</p>
<p><strong>5、更新</strong></p>
<p>上面说到的一个对中文自动换行的BUG，提交给作者后，他就修复了，现在我测试的效果非常棒，是我见过的最棒的一个PDF生成类库了，如下是效果图，可以和上面的那个比较下。</p>]]></excerpt:encoded>
		<wp:post_id>355</wp:post_id>
		<wp:post_date>2008-08-20 11:39:42</wp:post_date>
		<wp:post_date_gmt>2008-08-20 11:39:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prawn%ef%bc%9aruby%e7%94%9f%e6%88%90pdf%e6%9b%b4%e7%ae%80%e6%8d%b7%e7%9a%84%e9%80%89%e6%8b%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>256</wp:comment_id>
			<wp:comment_author><![CDATA[maninred]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>119.146.68.27</wp:comment_author_IP>
			<wp:comment_date>2008-08-20 23:38:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good。

之前用Ruport不支持中文。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>257</wp:comment_id>
			<wp:comment_author><![CDATA[cash]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cashplk.com</wp:comment_author_url>
			<wp:comment_author_IP>172.17.4.130</wp:comment_author_IP>
			<wp:comment_date>2008-08-21 11:06:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，不错！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>258</wp:comment_id>
			<wp:comment_author><![CDATA[yeah]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.243.164.167</wp:comment_author_IP>
			<wp:comment_date>2008-12-07 11:47:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[为什么我使用了
font_size!(16)
就出现
prawn/graphics/color.rb:59:in `method_missing'
: undefined method `font_size!' for #<Prawn::Document:0xb7eb7bf4> (NoMethodError)
        from z.rb:9
        from /root/ruby/lib/ruby/gems/1.8/gems/prawn-0.2.3/lib/prawn/document.rb:107:in `instance_eval'
        from /root/ruby/lib/ruby/gems/1.8/gems/prawn-0.2.3/lib/prawn/document.rb:107:in `initialize'
        from /root/ruby/lib/ruby/gems/1.8/gems/prawn-0.2.3/lib/prawn/document.rb:54:in `new'
        from /root/ruby/lib/ruby/gems/1.8/gems/prawn-0.2.3/lib/prawn/document.rb:54:in `generate'的错误]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>259</wp:comment_id>
			<wp:comment_author><![CDATA[yeah]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.243.164.167</wp:comment_author_IP>
			<wp:comment_date>2008-12-07 13:09:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[估计是自己使用了simfang.ttf的原因，生成下来的pdf有2.44MB
不知道你用了javaeye的电子书生成功能了没有？
我生成了一个三页的Pdf，有中文，才80多k]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>260</wp:comment_id>
			<wp:comment_author><![CDATA[yeah]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.243.164.167</wp:comment_author_IP>
			<wp:comment_date>2008-12-07 13:33:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[奇怪，为什么我的代码，就还是要超出？
# coding: utf-8
$LOAD_PATH << \"/root/ruby/lib/ruby/gems/1.8/gems/prawn-0.2.3/lib/\"
require \"prawn\"
start = Time.now
Prawn::Document.generate(\"utf8_text_flow.pdf\") do
	font \"#{Prawn::BASEDIR}/data/fonts/simfang.ttf\"
	text \"ssssssssssssssssssssssssssssssssss\" * 20
	text \"Eatfun.cn\"
end
puts \"Spend #{Time.now-start}s\"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>261</wp:comment_id>
			<wp:comment_author><![CDATA[tangyuanjian]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.71.121.170</wp:comment_author_IP>
			<wp:comment_date>2009-04-29 22:10:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1.font_size!(16) 报错？
2.发现文字断了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>262</wp:comment_id>
			<wp:comment_author><![CDATA[leo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://sq.hn.com</wp:comment_author_url>
			<wp:comment_author_IP>125.46.31.2</wp:comment_author_IP>
			<wp:comment_date>2009-05-05 16:26:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[楼主，你好，上面所说的中文换行BUG已修正，是指中文字符串中包含\\n(\"换行符\")，如果不包含呢？

经我测试，使用下面的代码时，prawn并不能自动将其换行。楼主有好的解决办法吗？

text = \"中文自动换行\"*100]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>263</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.226.111</wp:comment_author_IP>
			<wp:comment_date>2009-05-05 21:30:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi,leo
我上面说的中文自动换行不是指中文字符串包含\n的串，而就是一般的中文字符串。

我测试的时候用的就是“更可怕的是，同质化竞争对手可以按照URL中后面这个ID来遍历您的DB中的内容，写个小爬虫把你的页面上的关键信息顺次爬下来也不是什么难事，这样的话，你就非常被动了。”这串。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>264</wp:comment_id>
			<wp:comment_author><![CDATA[六翼]]></wp:comment_author>
			<wp:comment_author_email>hexawing@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.183.222.58</wp:comment_author_IP>
			<wp:comment_date>2010-06-25 03:53:32</wp:comment_date>
			<wp:comment_date_gmt>2010-06-25 03:53:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在还有的问题就是在表格中不会自动换行，不过可以凑合用“\n”来解决
另外一个稍微严重点的问题是，貌似不支持上下标(因为同一行的文字只有一种大小……)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5059</wp:comment_id>
			<wp:comment_author><![CDATA[ldc]]></wp:comment_author>
			<wp:comment_author_email>ldc@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.143.60.85</wp:comment_author_IP>
			<wp:comment_date>2011-11-24 08:29:43</wp:comment_date>
			<wp:comment_date_gmt>2011-11-24 08:29:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[# coding: utf-8
require "prawn"
class ToPdf
  def hello_word()
    Prawn::Document.generate("hello.pdf") do
      text "Hello World!"
    end
  end

end
t = ToPdf.new()
t.hello_word()
我的报错呀：]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325473953.6256";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476362.3129";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476319.5936";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475847.5811";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475795.3482";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325474608.3003";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5060</wp:comment_id>
			<wp:comment_author><![CDATA[ldc]]></wp:comment_author>
			<wp:comment_author_email>ldc@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.143.60.85</wp:comment_author_IP>
			<wp:comment_date>2011-11-24 08:30:02</wp:comment_date>
			<wp:comment_date_gmt>2011-11-24 08:30:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[错误如下：
Encoding::CompatibilityError: incompatible character encodings: UTF-8 and UTF-16BE
       concat at org/jruby/RubyString.java:2431
    PdfObject at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/pdf_object.rb:74
    PdfObject at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/pdf_object.rb:90
         each at org/jruby/RubyHash.java:1175
    PdfObject at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/pdf_object.rb:85
       object at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/reference.rb:27
  render_body at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/document_state.rb:71
         each at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/object_store.rb:74
         each at org/jruby/RubyArray.java:1603
         each at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/object_store.rb:73
  render_body at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/core/document_state.rb:69
  render_body at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/document/internals.rb:140
       render at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/document.rb:358
  render_file at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/document.rb:372
         open at org/jruby/RubyIO.java:1111
  render_file at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/document.rb:372
     generate at C:/jruby-1.6.4/lib/ruby/gems/1.8/gems/prawn-0.12.0/lib/prawn/document.rb:122
   hello_word at E:\eclipse-ws\helloword-ruby\to_pdf.rb:5
       (root) at E:\eclipse-ws\helloword-ruby\to_pdf.rb:12]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1325473953.89";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1325476366.155";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476319.7272";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1325475847.852";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475795.6739";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325474608.4792";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>BOSSMan: 用Ruby利用yahoo！Boss打造自己的搜索引擎</title>
		<link>http://www.iceskysl.com/?p=356</link>
		<pubDate>Wed, 20 Aug 2008 14:50:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[yahoo的<a href="http://developer.yahoo.com/search/boss/">BOSS web</a>服务比之前Yahoo! Search API更加方便灵活，取消了诸多限制，比如检索的次数等等，其介绍如下：
<blockquote>BOSS (Build your Own Search Service) is Yahoo!'s open search web services platform. The goal of BOSS is simple: to foster innovation in the search industry. Developers, start-ups, and large Internet companies can use BOSS to build and launch web-scale search products that utilize the entire Yahoo! Search index. BOSS gives you access to Yahoo!'s investments in crawling and indexing, ranking and relevancy algorithms, and powerful infrastructure. By combining your unique assets and ideas with our search technology assets, BOSS is a platform for the next generation of search innovation, serving hundreds of millions of users across the Web.</blockquote>
<img src="http://l.yimg.com/a/i/ydn/boss/boss_info4.gif" alt="" />
Jay Pignata已经用Ruby写了一个类库<a href="http://github.com/jpignata/bossman-gem/tree/master">BOSSMan</a>,使用非常方便，步骤如下：
<strong>1、安装gem</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>gem sources -a http://gems.github.com  </span></span></li>
	<li><span>gem install jpignata-bossman
</span></li>
</ol>
</div>
<strong>2、编写代码</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'rubygems'</span><span>  </span></span></li>
	<li><span>require <span class="string">'bossman'</span><span>  </span></span></li>
	<li class="alt"><span>include BOSSMan  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>BOSSMan.application_id = <span class="string">"Your Application ID here"</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>news = BOSSMan::Search.news(<span class="string">"IceskYsl"</span><span>, 0, 3)  </span></span></li>
	<li><span>news.results.<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |result|  </span></span></li>
	<li class="alt"><span>  puts <span class="string">"#{result.title} [from #{result.source}]"</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>   </span></span></li>
</ol>
</div>
<strong>参考文档：</strong>
BOSSMan: Build Your Own Search Engine With Yahoo And Ruby： <a class="tpc" href="http://www.rubyinside.com/ruby-and-yahoo-boss-with-bossman-1047.html" rel="nofollow external">http://www.rubyinside.com/ruby-and-yahoo-boss-with-bossman-1047.html</a>
插件BOSSman：<a class="tpc" href="http://github.com/jpignata/bossman-gem/tree/master" rel="nofollow external">http://github.com/jpignata/bossman-gem/tree/master</a>
看视频介绍：<a class="tpc" href="http://developer.yahoo.com/search/boss/" rel="nofollow external">http://developer.yahoo.com/search/boss/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>yahoo的<a href="http://developer.yahoo.com/search/boss/">BOSS web</a>服务比之前Yahoo! Search API更加方便灵活，取消了诸多限制，比如检索的次数等等，其介绍如下：</p>
<blockquote> BOSS (Build your Own Search Service) is Yahoo!'s open search web services platform. The goal of BOSS is simple: to  foster innovation in the search industry. Developers, start-ups, and large Internet companies can use BOSS to  build and launch web-scale search products that utilize the entire Yahoo! Search index. BOSS gives you access  to Yahoo!'s investments in crawling and indexing, ranking and relevancy algorithms, and powerful  infrastructure. By combining your unique assets and ideas with our search technology assets, BOSS is  a platform for the next generation of search innovation, serving hundreds of millions  of users across the Web.<br />
</blockquote>
<p>Jay Pignata已经用Ruby写了一个类库<a href="http://github.com/jpignata/bossman-gem/tree/master">BOSSMan</a>,使用非常方便，步骤如下：<br />
<strong>1、安装gem</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>gem&nbsp;sources&nbsp;-a&nbsp;http://gems.github.com&nbsp;&nbsp;</span></span></li>
    <li class=""><span>gem&nbsp;install&nbsp;jpignata-bossman&nbsp; <br />
    </span></li>
</ol>
</div>
<p><strong>2、编写代码</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'bossman'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>include&nbsp;BOSSMan&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>BOSSMan.application_id&nbsp;=&nbsp;<span class="string">&quot;Your&nbsp;Application&nbsp;ID&nbsp;here&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>news&nbsp;=&nbsp;BOSSMan::Search.news(<span class="string">&quot;IceskYsl&quot;</span><span>,&nbsp;0,&nbsp;3)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>news.results.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|result|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{result.title}&nbsp;[from&nbsp;#{result.source}]&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
<strong>参考文档：</strong><br />
BOSSMan: Build Your Own Search Engine With Yahoo And Ruby： <a class="tpc" rel="nofollow external" href="http://www.rubyinside.com/ruby-and-yahoo-boss-with-bossman-1047.html">http://www.rubyinside.com/ruby-and-yahoo-boss-with-bossman-1047.html</a><br />
插件BOSSman：<a class="tpc" rel="nofollow external" href="http://github.com/jpignata/bossman-gem/tree/master">http://github.com/jpignata/bossman-gem/tree/master</a><br />
看视频介绍：<a class="tpc" rel="nofollow external" href="http://developer.yahoo.com/search/boss/">http://developer.yahoo.com/search/boss/</a></p>]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2008-08-20 14:50:33</wp:post_date>
		<wp:post_date_gmt>2008-08-20 14:50:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bossman-%e7%94%a8ruby%e5%88%a9%e7%94%a8yahoo%ef%bc%81boss%e6%89%93%e9%80%a0%e8%87%aa%e5%b7%b1%e7%9a%84%e6%90%9c%e7%b4%a2%e5%bc%95%e6%93%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>265</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.226.111</wp:comment_author_IP>
			<wp:comment_date>2009-05-06 16:32:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.rubyinside.com/yahoo-video-library-for-ruby-released-321.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Connection refused: SliceHost上SSH登录问题</title>
		<link>http://www.iceskysl.com/?p=357</link>
		<pubDate>Wed, 20 Aug 2008 21:29:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=357</guid>
		<description></description>
		<content:encoded><![CDATA[N久前买的slicehost上一个VPN，上面跑了一个mysql，和mongrel，好久没SSH上去了，今天SSH的时候老是被拒绝<em>“port 22: Connection refused”</em>，真是怪异，开始以为是我把sshd的端口改了，赶紧使用web console连上去看看，先<code>nano /etc/ssh/sshd_config看到的端口还是22，并没有修改。</code>

<code>接着看是不是限制了登录，发现也没有，再检查iptables发现也没有阻拦22端口，怪异哦。最后使用netstat -antp看下端口，发现没有22,寒，难道sshd没启动，赶紧启动下：</code><strong><span class="f15 b0">/etc/init.d/ssh start</span></strong>

然后再查下端口，有了：
<pre class="term"><span class="f15 b0">root@iceskysl:/var/log# /etc/init.d/ssh start</span><span class="f7 b0">                                                                             </span><span class="f15 b0"> * Starting OpenBSD Secure Shell server sshd       </span><span class="f7 b0">                      </span><span class="f15 b0">[ OK ] </span><span class="f7 b0">                                        </span><span class="f15 b0">root@iceskysl:/var/log# netstat -antp</span><span class="f7 b0">                                                                                     </span><span class="f15 b0">Active Internet connections (servers and established)</span><span class="f7 b0">                                                                   </span><span class="f15 b0">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      6427/ruby1.8    </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 127.0.0.1:9001          0.0.0.0:*               LISTEN      6430/ruby1.8    </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      8985/mysqld     </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      8561/nginx      </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 127.0.0.1:7000          0.0.0.0:*               LISTEN      9191/ruby1.8    </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 127.0.0.1:7001          0.0.0.0:*               LISTEN      9194/ruby1.8    </span><span class="f7 b0">                        </span><span class="f15 b0">tcp        0      0 0.0.0.0:25              0.0.0.0:*               LISTEN      3266/master     </span><span class="f7 b0">                        </span><span class="f15 b0">tcp6       0      0 :::22                   :::*                    LISTEN      15682/sshd      </span><span class="f7 b0">                        </span><span class="f15 b0">root@iceskysl:/var/log# </span><span class="f7 b1"> </span><span class="f7 b0">  再试试，可以SSH连上去了，真够折腾的。幸好slicehost还有个web console，要不然咋整？ 紧接着做下iptables，限制下登录。                                                          </span></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>N久前买的slicehost上一个VPN，上面跑了一个mysql，和mongrel，好久没SSH上去了，今天SSH的时候老是被拒绝<em>&ldquo;port 22: Connection refused&rdquo;</em>，真是怪异，开始以为是我把sshd的端口改了，赶紧使用web console连上去看看，先<code>nano /etc/ssh/sshd_config看到的端口还是22，并没有修改。</code></p>
<p><code>接着看是不是限制了登录，发现也没有，再检查iptables发现也没有阻拦22端口，怪异哦。最后使用netstat -antp看下端口，发现没有22,寒，难道sshd没启动，赶紧启动下：</code><strong><span class="f15 b0">/etc/init.d/ssh&nbsp;start</span></strong></p>
<p>然后再查下端口，有了：</p>
<pre class="term"><span class="f15 b0">root@iceskysl:/var/log#&nbsp;/etc/init.d/ssh&nbsp;start</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">&nbsp;*&nbsp;Starting&nbsp;OpenBSD&nbsp;Secure&nbsp;Shell&nbsp;server&nbsp;sshd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f15 b0">[&nbsp;OK&nbsp;]&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">root@iceskysl:/var/log#&nbsp;netstat&nbsp;-antp</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">Active&nbsp;Internet&nbsp;connections&nbsp;(servers&nbsp;and&nbsp;established)</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">Proto&nbsp;Recv-Q&nbsp;Send-Q&nbsp;Local&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foreign&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PID/Program&nbsp;name</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:9000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6427/ruby1.8&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:9001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6430/ruby1.8&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:3306&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8985/mysqld&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8561/nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:7000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9191/ruby1.8&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:7001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9194/ruby1.8&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3266/master&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">tcp6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;:::22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:::*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15682/sshd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f7 b0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /></span><span class="f15 b0">root@iceskysl:/var/log#&nbsp;</span><span class="f7 b1">&nbsp;</span><span class="f7 b0">&nbsp; <br />再试试，可以SSH连上去了，真够折腾的。幸好slicehost还有个web console，要不然咋整？ </span></pre>]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2008-08-20 21:29:56</wp:post_date>
		<wp:post_date_gmt>2008-08-20 21:29:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>connection-refused-slicehost%e4%b8%8assh%e7%99%bb%e5%bd%95%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在win下使用Git</title>
		<link>http://www.iceskysl.com/?p=358</link>
		<pubDate>Thu, 21 Aug 2008 10:23:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[以前说过“与时俱进,使用Git”，在自己的本本上，已经Ubuntu好久了，Git也是有的非常好，但是有的时候在其他机器上，是个weindows，需要使用Git的时候，就只能找找有没有wein版本的git客户端了。
找到一个<a href="http://code.google.com/p/msysgit/">msysgit</a> ，按照里面的说明下载安装就OK了，下面看看如何使用：
-----------------使用---------------
<span class="tpc_content">好,下面来个简单教程.标准的 git 教程是行不通的(要加些东西),因为这是windows.主要是没有用户信息.好我的git安装在 c:\git 以下为命令行.
<strong>
1.创建git的数据库</strong>
C:\Git\bin&gt;git init-db</span>

<strong>2.生成一个文件xxx并加入到git中</strong>
C:\Git\bin&gt;echo hello &gt; xxx
C:\Git\bin&gt;git add xxx

<strong>3.提交[以上两步与标准教程还是一样的,关键是这一步]</strong>
C:\Git\bin&gt;set home=c:\
C:\Git\bin&gt;git config --global user.name "clq"
C:\Git\bin&gt;git commit -m "test"

一共三个命令,其中第1个是设置用户路径,第2个是设置用户名.而且是每次打开dos命令行后都要有这两个命令,当然你可以写成 bat 文件.第3个才是提交,不能直接写 git commit 因为这个版本好象一定要有注释,那个 "test" 就是我加的注释了.

<strong>4.改一下xxx文件</strong>
echo world &gt;&gt; xxx

<strong>5.查看一下它和我们原来对比的有什么不同</strong>
C:\Git\bin&gt;git diff

结果如下
diff --git a/xxx b/xxx
index 907cd4b..360c7f4 100644
--- a/xxx
+++ b/xxx
@@ -1 +1,2 @@
hello
+world
(END)

用过cvs的都明白了吧.另外这个显示的还得退出,退出命令和vi一样
提交可以用一个命令来完成
git commit -m "" -a xxx

省去git add

C:\Git\bin&gt;git show xxx
查看最近一次提交的信息.

C:\Git\bin&gt;git commit -a -m"aa"

提交全部更改过的文件.]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前说过&ldquo;与时俱进,使用Git&rdquo;，在自己的本本上，已经Ubuntu好久了，Git也是有的非常好，但是有的时候在其他机器上，是个weindows，需要使用Git的时候，就只能找找有没有wein版本的git客户端了。<br />
找到一个<a href="http://code.google.com/p/msysgit/">msysgit</a> ，按照里面的说明下载安装就OK了，下面看看如何使用：<br />
-----------------使用---------------<br />
<span class="tpc_content">好,下面来个简单教程.标准的 git 教程是行不通的(要加些东西),因为这是windows.主要是没有用户信息.好我的git安装在 c:\git 以下为命令行.<br />
<strong><br />
1.创建git的数据库</strong><br />
C:\Git\bin&gt;git init-db<br />
<br />
<strong>2.生成一个文件xxx并加入到git中</strong><br />
C:\Git\bin&gt;echo hello &gt; xxx<br />
C:\Git\bin&gt;git add xxx<br />
<br />
<strong>3.提交[以上两步与标准教程还是一样的,关键是这一步]</strong><br />
C:\Git\bin&gt;set home=c:\<br />
C:\Git\bin&gt;git config --global user.name &quot;clq&quot;<br />
C:\Git\bin&gt;git commit -m &quot;test&quot;<br />
<br />
一共三个命令,其中第1个是设置用户路径,第2个是设置用户名.而且是每次打开dos命令行后都要有这两个命令,当然你可以写成 bat 文件.第3个才是提交,不能直接写 git commit 因为这个版本好象一定要有注释,那个 &quot;test&quot; 就是我加的注释了.<br />
<br />
<strong>4.改一下xxx文件</strong><br />
echo world &gt;&gt; xxx<br />
<br />
<strong>5.查看一下它和我们原来对比的有什么不同</strong><br />
C:\Git\bin&gt;git diff<br />
<br />
结果如下<br />
diff --git a/xxx b/xxx<br />
index 907cd4b..360c7f4 100644<br />
--- a/xxx<br />
+++ b/xxx<br />
@@ -1 +1,2 @@<br />
hello<br />
+world<br />
(END)<br />
<br />
用过cvs的都明白了吧.另外这个显示的还得退出,退出命令和vi一样</span><br />
提交可以用一个命令来完成<br />
git commit -m &quot;&quot; -a xxx<br />
<br />
省去git add<br />
<br />
C:\Git\bin&gt;git show xxx<br />
查看最近一次提交的信息.<br />
<br />
C:\Git\bin&gt;git commit -a -m&quot;aa&quot;<br />
<br />
提交全部更改过的文件.</p>]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2008-08-21 10:23:09</wp:post_date>
		<wp:post_date_gmt>2008-08-21 10:23:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8win%e4%b8%8b%e4%bd%bf%e7%94%a8git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>266</wp:comment_id>
			<wp:comment_author><![CDATA[bugx]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.82.57.22</wp:comment_author_IP>
			<wp:comment_date>2008-09-15 12:25:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[大家可以试试国内提供git服务的
http://www.githost.cn]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>267</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.3.189</wp:comment_author_IP>
			<wp:comment_date>2008-12-11 00:42:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在Windows环境中使用版本管理工具Git
http://aideehorn.javaeye.com/blog/284797]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>268</wp:comment_id>
			<wp:comment_author><![CDATA[ddd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.89.2.104</wp:comment_author_IP>
			<wp:comment_date>2009-02-21 22:14:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在已经有了tortoiseGit, http://code.google.com/p/tortoisegit
跟tortoisesvn的用法差不多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>《The Rails Way》召集railser协作翻译</title>
		<link>http://www.iceskysl.com/?p=359</link>
		<pubDate>Thu, 21 Aug 2008 11:05:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://ecx.images-amazon.com/images/I/51QMXWhhVjL._SL500_BO2,204,203,200_PIsitb-dp-500-arrow,TopRight,45,-64_OU01_AA240_SH20_.jpg" alt="" />

引用<a href="https://groups.google.com/group/shanghaionrails/browse_thread/thread/7e613d4c6c765d40?hl=en">YiTan帖子</a>：
<blockquote>The Rails Way是一本数一数二的Rails书籍，系统并全面地介绍Rails的使用和开发。也是那位写了 Mongrel，后来又暴走的Zed大牛唯一推荐的一本Rails书。</blockquote>
<a href="http://blog.libinpan.com/">Libin</a>说：
<blockquote>Obie 是我非常敬重的 Rubyist , The Rails Way 也是我最爱的 Ruby 书之一。</blockquote>
最近将由人邮出版社引进。书比较厚，900+页 共22章。我们想找几个有兴趣参与的朋友，每人领取几章，共同翻译。

目前已经有5个人(我，YiTan、陈恺、Libin、xue.yudi等)参与了，有时间，有兴趣的Railser，赶快确认。我这里有PDF版本，想了解内容的可以在Gtalk上找我要。报名后，YiTan会把相关说明和规范发给大家。

PS：
有稿费，但是偶个人比较看重的是翻译使我更仔细的去阅读和体会原文的意思，会收获更多。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>引用<a href="https://groups.google.com/group/shanghaionrails/browse_thread/thread/7e613d4c6c765d40?hl=en">YiTan帖子</a>：</p>
<blockquote>The Rails Way是一本数一数二的Rails书籍，系统并全面地介绍Rails的使用和开发。也是那位写了 Mongrel，后来又暴走的Zed大牛唯一推荐的一本Rails书。<br />
</blockquote>
<p><a href="http://blog.libinpan.com/">Libin</a>说：</p>
<blockquote>
<p>Obie 是我非常敬重的 Rubyist , The Rails Way 也是我最爱的 Ruby 书之一。</p>
</blockquote>
<p>最近将由人邮出版社引进。书比较厚，900+页 共22章。我们想找几个有兴趣参与的朋友，每人领取几章，共同翻译。</p>
<p>目前已经有5个人(我，YiTan、陈恺、Libin、xue.yudi等)参与了，有时间，有兴趣的Railser，赶快确认。我这里有PDF版本，想了解内容的可以在Gtalk上找我要。报名后，YiTan会把相关说明和规范发给大家。<br />
<br />
PS：<br />
有稿费，但是偶个人比较看重的是翻译使我更仔细的去阅读和体会原文的意思，会收获更多。</p>]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2008-08-21 11:05:20</wp:post_date>
		<wp:post_date_gmt>2008-08-21 11:05:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%8athe-rails-way%e3%80%8b%e5%8f%ac%e9%9b%86railser%e5%8d%8f%e4%bd%9c%e7%bf%bb%e8%af%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>269</wp:comment_id>
			<wp:comment_author><![CDATA[maninred]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>119.146.68.21</wp:comment_author_IP>
			<wp:comment_date>2008-08-21 14:35:59</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[人数基本上饱和了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>270</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.86.173</wp:comment_author_IP>
			<wp:comment_date>2008-08-23 08:38:15</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OK,谢谢大家这么积极相应，让我再一次的感受到国内Railser的强大。
由于出版社方面的限制，人数已经饱和了，想参与类似翻译任务的可以给我留下mail，下次有机会我第一时间mail通知，谢谢。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>271</wp:comment_id>
			<wp:comment_author><![CDATA[ning]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.27.188.194</wp:comment_author_IP>
			<wp:comment_date>2008-08-31 20:24:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[也是那位写了 Mongrel，后来又暴走的Zed大牛唯一推荐的一本Rails书。
==
其实Zed和Obie曾经是同事来的，并且Obie对Rails Ghetto Rant的意见很中性呢。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>cssh/DSH：ssh之cluster 管理工具</title>
		<link>http://www.iceskysl.com/?p=360</link>
		<pubDate>Thu, 21 Aug 2008 14:24:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[由于系统用到了很多的服务器，大致分成下面几组：
<ul>
	<li>A组是做web服务器；</li>
	<li>B组是App服务器；</li>
	<li>C组是DB服务器；</li>
</ul>
每组服务器都有多台，APP服务器最多，有10多台，DB有5台，每次升级或者查询系统状况都是逐个的SSH登录，比较麻烦，一直在找一个可以按组管理多台服务器脚本或者客户端。
在linuxtoy上看到对<a href="http://www.netfort.gr.jp/~dancer/software/dsh.html.en">dsh</a>和<a href="http://cssh.sourceforge.net/">cssh</a>的介绍，正好满足我的需求，记录一下。
1、<a href="http://linuxtoy.org/archives/cssh.html">cssh：cluster 管理工具 (ssh)</a>
2、<a href="http://linuxtoy.org/archives/dsh.html">dsh：分布式 shell</a>
需要了解的，按照上面的链接了解。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于系统用到了很多的服务器，大致分成下面几组：</p>
<ul>
    <li>A组是做web服务器；</li>
    <li>B组是App服务器；</li>
    <li>C组是DB服务器；</li>
</ul>
<p>每组服务器都有多台，APP服务器最多，有10多台，DB有5台，每次升级或者查询系统状况都是逐个的SSH登录，比较麻烦，一直在找一个可以按组管理多台服务器脚本或者客户端。<br />
在linuxtoy上看到对<a href="http://www.netfort.gr.jp/%7Edancer/software/dsh.html.en">dsh</a>和<a href="http://cssh.sourceforge.net/">cssh</a>的介绍，正好满足我的需求，记录一下。<br />
1、<a href="http://linuxtoy.org/archives/cssh.html">cssh：cluster 管理工具 (ssh)</a><br />
2、<a href="http://linuxtoy.org/archives/dsh.html">dsh：分布式 shell</a><br />
需要了解的，按照上面的链接了解。</p>]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2008-08-21 14:24:06</wp:post_date>
		<wp:post_date_gmt>2008-08-21 14:24:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>csshdsh%ef%bc%9assh%e4%b9%8bcluster-%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>272</wp:comment_id>
			<wp:comment_author><![CDATA[Cheap wedding dresses]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressiton.com</wp:comment_author_url>
			<wp:comment_author_IP>126.15.0.82</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 16:14:43</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 08:14:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap wedding dresses...</strong>

[...]cssh/DSH：ssh之cluster 管理工具[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用named_scope在Model中添加finder方法</title>
		<link>http://www.iceskysl.com/?p=361</link>
		<pubDate>Fri, 22 Aug 2008 00:33:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=361</guid>
		<description></description>
		<content:encoded><![CDATA[在<a href="http://www.rubyfleebie.com/use-named_scope-to-add-elegant-finders-to-your-models/">rubyfleebie</a>上看到这篇文章，里面有个不错的技巧，在Rails 2.1中添加了named_scope特性，看下面这个例子：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> Story &lt; ActiveRecord::Base  </span></span></li>
	<li><span>  named_scope <span class="symbol">:hilarious</span><span>, </span><span class="symbol">:conditions</span><span> =&gt; [</span><span class="string">"type = ?"</span><span>,</span><span class="string">"comedy"</span><span>]  </span></span></li>
	<li class="alt"><span>  named_scope <span class="symbol">:popular</span><span>, </span><span class="symbol">:conditions</span><span> =&gt; [</span><span class="string">"popularity_level &gt; ?"</span><span>, 3]  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
使用方法如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>funny_stories = </span><span class="variable">@all_stories</span><span>.hilarious  </span></span></li>
	<li><span>funny_and_popular = <span class="variable">@all_stories</span><span>.hilarious.popular  </span></span></li>
</ol>
</div>
很好很强大。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在<a href="http://www.rubyfleebie.com/use-named_scope-to-add-elegant-finders-to-your-models/">rubyfleebie</a>上看到这篇文章，里面有个不错的技巧，在Rails 2.1中添加了named_scope特性，看下面这个例子：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Story&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;named_scope&nbsp;<span class="symbol">:hilarious</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;type&nbsp;=&nbsp;?&quot;</span><span>,</span><span class="string">&quot;comedy&quot;</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;named_scope&nbsp;<span class="symbol">:popular</span><span>,&nbsp;</span><span class="symbol">:conditions</span><span>&nbsp;=&gt;&nbsp;[</span><span class="string">&quot;popularity_level&nbsp;&gt;&nbsp;?&quot;</span><span>,&nbsp;3]&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>使用方法如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>funny_stories&nbsp;=&nbsp;</span><span class="variable">@all_stories</span><span>.hilarious&nbsp;&nbsp;</span></span></li>
    <li class=""><span>funny_and_popular&nbsp;=&nbsp;<span class="variable">@all_stories</span><span>.hilarious.popular&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>很好很强大。</p>]]></excerpt:encoded>
		<wp:post_id>361</wp:post_id>
		<wp:post_date>2008-08-22 00:33:42</wp:post_date>
		<wp:post_date_gmt>2008-08-22 00:33:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8named_scope%e5%9c%a8model%e4%b8%ad%e6%b7%bb%e5%8a%a0finder%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby再曝REXML库的DOS漏洞</title>
		<link>http://www.iceskysl.com/?p=362</link>
		<pubDate>Mon, 25 Aug 2008 09:24:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[大家应该都还记得，前不久《<a href="http://iceskysl.1sters.com/?action=show&amp;id=319">Ruby暴出大量严重漏洞!</a>》，当时我说“ruby走向成熟，离不开这样的检验。”,时间过去不久，又发现其REXML库存在漏洞，被利用的话可以导致DOS攻击。

详细介绍在“<a href="http://www.ruby-lang.org/en/news/2008/08/23/dos-vulnerability-in-rexml/">DoS vulnerability in REXML</a>”，中文翻译在“<a href="http://www.javaeye.com/news/3310">Ruby的REXML库缺陷将导致DOS攻击</a>”。

值得注意的是，Ruby的所有版本都存在这个问题，需要修复的安全前面文章中的方法啊修复；凡是在Rails中解析到XML用到REXML的都存在这个问题，但是个人认为使用REXML来解析XML的并不算很多，其速度不够快。很多人用的是<a href="http://iceskysl.1sters.com/?action=tags&amp;item=hpricot">hpricot</a>。

漏洞并不可怕，可怕的是被藏着掖着，期待Ruby的日趋成熟和完善。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家应该都还记得，前不久《<a href="../../../?action=show&amp;id=319">Ruby暴出大量严重漏洞!</a>》，当时我说&ldquo;ruby走向成熟，离不开这样的检验。&rdquo;,时间过去不久，又发现其REXML库存在漏洞，被利用的话可以导致DOS攻击。</p>
<p>详细介绍在&ldquo;<a href="http://www.ruby-lang.org/en/news/2008/08/23/dos-vulnerability-in-rexml/">DoS vulnerability in REXML</a>&rdquo;，中文翻译在&ldquo;<a href="http://www.javaeye.com/news/3310">Ruby的REXML库缺陷将导致DOS攻击</a>&rdquo;。</p>
<p>值得注意的是，Ruby的所有版本都存在这个问题，需要修复的安全前面文章中的方法啊修复；凡是在Rails中解析到XML用到REXML的都存在这个问题，但是个人认为使用REXML来解析XML的并不算很多，其速度不够快。很多人用的是<a href="../../../?action=tags&amp;item=hpricot">hpricot</a>。</p>
<p>漏洞并不可怕，可怕的是被藏着掖着，期待Ruby的日趋成熟和完善。</p>]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2008-08-25 09:24:50</wp:post_date>
		<wp:post_date_gmt>2008-08-25 09:24:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e5%86%8d%e6%9b%9drexml%e5%ba%93%e7%9a%84dos%e6%bc%8f%e6%b4%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>解决/var空间不足导致的无法登录问题</title>
		<link>http://www.iceskysl.com/?p=363</link>
		<pubDate>Tue, 26 Aug 2008 11:37:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=363</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>现象描述</strong><br id="og5d0" />
项目中有台服务器，其操作系统为RHEL 3 ，主要用途是实验室环境以及和第三方系统的FTP服务器，最近出现经常出现“假死”的情况，具体表现是<span id="dbxk">Ping的通，但是ssh、ftp、telnet等都无法登陆</span>，从lan console上看服务器运行正常。每次都是远程重启暂时解决问题。<br id="yi-7" />
<strong id="aosk"><br id="jkfi0" />
深入分析</strong><br id="o:nd" />
今天，另外一个负责主机维护的同事发现其<span id="kb6n" class="694285000-26022007"><span id="kb6n0" style="font-size: x-small;"><span id="kb6n1" style="color: #0000ff;"><span id="kb6n2" style="color: #000102;">/var/log/messages.x中有如下信息：<br id="zphx" />
</span></span></span></span>
<blockquote id="gc7q"><span id="gc7q0" class="694285000-26022007"><span id="gc7q1" style="font-size: x-small;"><span id="gc7q2" style="color: #0000ff;"><span id="gc7q3" style="color: #000102;">Jul 30 17:36:15 www login(pam_unix)[11819]: session opened for user siteview by (uid=0)</span></span></span></span><br id="nic2" />
<span id="gc7q4" class="694285000-26022007"><span id="gc7q5" style="font-size: x-small;"><span id="gc7q6" style="color: #0000ff;"><span id="gc7q7" style="color: #000102;">Jul 30 17:36:15 www  -- siteview[11819]: LOGIN ON pts/0 BY siteview FROM 192.168.168.42</span></span></span></span><br id="nic20" />
<span id="gc7q8" class="694285000-26022007"><span id="gc7q9" style="font-size: x-small;"><span id="gc7q10" style="color: #0000ff;"><span id="gc7q11" style="color: #000102;">Jul 30 17:36:15 www login(pam_unix)[11819]: session closed for user siteview</span></span></span></span><br id="nic21" />
<span id="gc7q12" class="694285000-26022007"><span id="gc7q13" style="font-size: x-small;"><span id="gc7q14" style="color: #0000ff;"><span id="gc7q15" style="color: #000102;">Jul 30 17:47:17 www syslogd: /var/log/secure: No space left on device</span></span></span></span><br id="nic22" />
<span id="gc7q16" class="694285000-26022007"><span id="gc7q17" style="font-size: x-small;"><span id="gc7q18" style="color: #0000ff;"><span id="gc7q19" style="color: #000102;">Jul 30 19:11:58 www PAM-securetty[1611]: Couldn't open /etc/securetty</span></span></span></span></blockquote>
<span id="gc7q24" class="694285000-26022007"><span id="gc7q25" style="font-size: x-small;"><span id="gc7q26" style="color: #0000ff;"><span id="gc7q27" style="color: #000102;"> 经过查找发现其原因是</span></span></span></span><span id="hxwj" class="694285000-26022007"><span id="hxwj0" style="font-size: x-small;"><span id="hxwj1" style="color: #0000ff;"><span id="hxwj2" style="color: #000102;">内核中开启的审核子系统LauS (Linux Auditing System)</span></span></span></span>写的日志太多，把/var空间占了，再次登陆的时候，由于无法写日志导致挂在那里，出现假死现象。<br id="xk7y" />
<br id="u4rh" />
<strong id="aosk0">解决方法：</strong><br id="u4rh0" />
定位到问题以后，就可以想办法解决了，目前可行的办法由四种，分别如下：<br id="aosk1" />
1、定期手工删除/var/log/audit.d下的日志文件
<blockquote id="gi-e">#删除7天前的<br id="g.lc" />
find ./ -mtime +7 -type f -exec rm {} \;</blockquote>
2、配置crob自动删除或者备份
<blockquote id="k1o-">SEVEN_DAYS_OLD=`/usr/locale/ebin/date '+%d' --date '7 days ago'`<br id="z.::0" />
if [ -f /var/log/audit/bin/bin.${SEVEN_DAYS_OLD} ]<br id="z.::1" />
then<br id="z.::2" />
rm /var/log/audit/bin.${SEVEN_DAYS_OLD}<br id="z.::3" />
fi</blockquote>
<br id="br8b0" />
3、修改/etc/audit/audit.conf配置文件<br id="dqa7" />
可以通过修改audit.conf来配置，让其自动处理<br id="lp.v" />
1）修改为自动删除的<span id="obd0" class="694285000-26022007"><span id="obd00" style="font-size: x-small;">：<br id="nesr" />
</span></span><span id="nesr0" style="color: #ff0000;">notify = "/usr/sbin/audbin -S /var/log/audit.d/save.%u -C -T 20% -N 'rm -f %f'";</span><br id="k:vm" />
<span id="v0-4" style="font-family: Verdana;">[</span><span id="k:vm0" style="font-family: Verdana;">The notify line as above should (according to the docs) remove old 'save' files when the filesystem comes within 20% of full (change the figure after -T to specify how close to full you want to start deleting old files).</span>]<br id="xxk3" />
<span id="nesr1" class="694285000-26022007"><span id="nesr2" style="font-size: x-small;"><br id="lp.v1" />
</span></span>2）修改为自动备份的：<span id="id2g3" class="694285000-26022007"><span id="id2g4" style="font-size: x-small;">（/backup 是另外您想保存数据的分区）</span></span>
<div id="id2g2" dir="ltr" align="left"><span id="bcaj" class="694285000-26022007"><span id="bcaj0" style="font-size: x-small;">notify = "/usr/sbin/audbin -S /var/log/audit.d/save.%u -C -T 20% -N 'mv %f /backup'"; <br id="c43d" />
<br id="c43d0" />
4、</span></span><span id="dron" style="font-size: x-small;"><span id="dron0" class="694285000-26022007"><span id="dron1" style="color: #0000ff;"><span id="dron2" style="color: #000102;">禁用audtid服务<br id="hl_h" />
如 果您不需要审核信息，禁用audtid服务 ("chkconfig --del auditd"),系统性能会有所提高. 如果想要彻底禁用内核中的audit，可以删除 /dev/audit文件，重新启动。以后可以通过在grub.conf 里kernel行最后加入audit=1来启用。<br id="hl_h0" />
</span></span></span></span></div>
<br id="wlzk" />
<br id="wlzk0" />
<strong>参考文档 :</strong>
<ul id="vh4e">
	<li id="vh4e0">lAus相关: http://blog.chinaunix.net/u/6303/showart_275806.html</li>
	<li id="vh4e1">console login hangs RHEL 3：http://www.linuxquestions.org/questions/linux-general-1/console-login-hangs-rhel-3-348072/</li>
	<li id="vh4e2">Linux Console Hangs：http://www.usenet-forums.com/linux-networking/68241-linux-console-hangs-2.html</li>
	<li id="d:3j">/目录空间不足,清理/var/log/audit.d：http://blog.zhangjianfeng.com/article/386</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>现象描述</strong><br id="og5d0" />
项目中有台服务器，其操作系统为RHEL 3 ，主要用途是实验室环境以及和第三方系统的FTP服务器，最近出现经常出现&ldquo;假死&rdquo;的情况，具体表现是<font id="dbxk">Ping的通，但是ssh、ftp、telnet等都无法登陆</font>，从lan console上看服务器运行正常。每次都是远程重启暂时解决问题。<br id="yi-7" />
<strong id="aosk"><br id="jkfi0" />
深入分析</strong><br id="o:nd" />
今天，另外一个负责主机维护的同事发现其<span class="694285000-26022007" id="kb6n"><font size="2" id="kb6n0"><font color="#0000ff" id="kb6n1"><span style="color: rgb(0, 1, 2);" id="kb6n2">/var/log/messages.x中有如下信息：<br id="zphx" />
</span></font></font></span></p>
<blockquote id="gc7q"><span class="694285000-26022007" id="gc7q0"><font size="2" id="gc7q1"><font color="#0000ff" id="gc7q2"><span style="color: rgb(0, 1, 2);" id="gc7q3">Jul 30 17:36:15 www login(pam_unix)[11819]: session opened for user siteview by (uid=0)</span></font></font></span><br id="nic2" />
<span class="694285000-26022007" id="gc7q4"><font size="2" id="gc7q5"><font color="#0000ff" id="gc7q6"><span style="color: rgb(0, 1, 2);" id="gc7q7">Jul 30 17:36:15 www&nbsp; -- siteview[11819]: LOGIN ON pts/0 BY siteview FROM 192.168.168.42</span></font></font></span><br id="nic20" />
<span class="694285000-26022007" id="gc7q8"><font size="2" id="gc7q9"><font color="#0000ff" id="gc7q10"><span style="color: rgb(0, 1, 2);" id="gc7q11">Jul 30 17:36:15 www login(pam_unix)[11819]: session closed for user siteview</span></font></font></span><br id="nic21" />
<span class="694285000-26022007" id="gc7q12"><font size="2" id="gc7q13"><font color="#0000ff" id="gc7q14"><span style="color: rgb(0, 1, 2);" id="gc7q15">Jul 30 17:47:17 www syslogd: /var/log/secure: No space left on device</span></font></font></span><br id="nic22" />
<span class="694285000-26022007" id="gc7q16"><font size="2" id="gc7q17"><font color="#0000ff" id="gc7q18"><span style="color: rgb(0, 1, 2);" id="gc7q19">Jul 30 19:11:58 www PAM-securetty[1611]: Couldn't open /etc/securetty</span></font></font></span><br id="nic23" />
</blockquote>
<p><span class="694285000-26022007" id="gc7q24"><font size="2" id="gc7q25"><font color="#0000ff" id="gc7q26"><span style="color: rgb(0, 1, 2);" id="gc7q27">&nbsp;经过查找发现其原因是</span></font></font></span><span class="694285000-26022007" id="hxwj"><font size="2" id="hxwj0"><font color="#0000ff" id="hxwj1"><span style="color: rgb(0, 1, 2);" id="hxwj2">内核中开启的审核子系统LauS (Linux Auditing System)</span></font></font></span>写的日志太多，把/var空间占了，再次登陆的时候，由于无法写日志导致挂在那里，出现假死现象。<br id="xk7y" />
<br id="u4rh" />
<strong id="aosk0">解决方法：</strong><br id="u4rh0" />
定位到问题以后，就可以想办法解决了，目前可行的办法由四种，分别如下：<br id="aosk1" />
1、定期手工删除/var/log/audit.d下的日志文件</p>
<blockquote id="gi-e">#删除7天前的<br id="g.lc" />
find ./ -mtime +7 -type f -exec rm {} \;<br id="oefq" />
</blockquote>
<p>2、配置crob自动删除或者备份</p>
<blockquote id="k1o-">SEVEN_DAYS_OLD=`/usr/locale/ebin/date '+%d' --date '7 days ago'`<br id="z.::0" />
if [ -f /var/log/audit/bin/bin.${SEVEN_DAYS_OLD} ]<br id="z.::1" />
then<br id="z.::2" />
rm /var/log/audit/bin.${SEVEN_DAYS_OLD}<br id="z.::3" />
fi<br id="cb3n" />
</blockquote>
<p><br id="br8b0" />
3、修改/etc/audit/audit.conf配置文件<br id="dqa7" />
可以通过修改audit.conf来配置，让其自动处理<br id="lp.v" />
1）修改为自动删除的<span class="694285000-26022007" id="obd0"><font size="2" id="obd00">：<br id="nesr" />
</font></span><font color="#ff0000" id="nesr0">notify = &quot;/usr/sbin/audbin -S /var/log/audit.d/save.%u -C  -T 20% -N 'rm -f %f'&quot;;</font><br id="k:vm" />
<font face="Verdana" id="v0-4">[</font><font face="Verdana" id="k:vm0">The notify line as above should (according to the docs)  remove old 'save' files when the filesystem comes within 20% of full (change the  figure after -T to specify how close to full you want to start deleting old  files).</font>]<br id="xxk3" />
<span class="694285000-26022007" id="nesr1"><font size="2" id="nesr2"><br id="lp.v1" />
</font></span>2）修改为自动备份的：<span class="694285000-26022007" id="id2g3"><font size="2" id="id2g4">（/backup 是另外您想保存数据的分区）</font></span></p>
<div align="left" dir="ltr" id="id2g2"><span class="694285000-26022007" id="bcaj"><font size="2" id="bcaj0">notify = &quot;/usr/sbin/audbin -S /var/log/audit.d/save.%u -C -T 20% -N 'mv %f /backup'&quot;; <br id="c43d" />
<br id="c43d0" />
4、</font></span><font size="2" id="dron"><span class="694285000-26022007" id="dron0"><font color="#0000ff" id="dron1"><span style="color: rgb(0, 1, 2);" id="dron2">禁用audtid服务<br id="hl_h" />
如 果您不需要审核信息，禁用audtid服务 (&quot;chkconfig --del auditd&quot;),系统性能会有所提高. 如果想要彻底禁用内核中的audit，可以删除 /dev/audit文件，重新启动。以后可以通过在grub.conf 里kernel行最后加入audit=1来启用。<br id="hl_h0" />
</span></font></span></font></div>
<p><br id="wlzk" />
<br id="wlzk0" />
<strong>参考文档 :</strong></p>
<ul id="vh4e">
    <li id="vh4e0">lAus相关: http://blog.chinaunix.net/u/6303/showart_275806.html</li>
    <li id="vh4e1">console login hangs RHEL 3：http://www.linuxquestions.org/questions/linux-general-1/console-login-hangs-rhel-3-348072/</li>
    <li id="vh4e2">Linux Console Hangs：http://www.usenet-forums.com/linux-networking/68241-linux-console-hangs-2.html</li>
    <li id="d:3j">/目录空间不足,清理/var/log/audit.d：http://blog.zhangjianfeng.com/article/386</li>
</ul>]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date>2008-08-26 11:37:04</wp:post_date>
		<wp:post_date_gmt>2008-08-26 11:37:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3var%e7%a9%ba%e9%97%b4%e4%b8%8d%e8%b6%b3%e5%af%bc%e8%87%b4%e7%9a%84%e6%97%a0%e6%b3%95%e7%99%bb%e5%bd%95%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>God: 比Monit更好用的monitoring</title>
		<link>http://www.iceskysl.com/?p=364</link>
		<pubDate>Tue, 26 Aug 2008 15:50:47 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=364</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://god.rubyforge.org/">God</a>是一个使用Ruby写成的用于监视任务运行状态的可扩展框架，它的配置脚本采用Ruby来编写。因此，比起它的前辈<a href="http://www.tildeslash.com/monit/">Monit</a>，God更为简单，灵活且易于扩展（尤其对于Ruby使用者），你可以很轻易的添加一些自定义规则。
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>MINIONS = [  </span></span></li>
	<li><span>  { <span class="symbol">:rails_root</span><span> =&gt; </span><span class="string">"/home/mycoolapp/staging/current"</span><span>,  </span></span></li>
	<li class="alt"><span>    <span class="symbol">:mongrel_ports</span><span> =&gt; [4001,4002,4003,4004,4005],  </span></span></li>
	<li><span>    <span class="symbol">:uid</span><span> =&gt; </span><span class="string">'mycoolapp'</span><span>,  </span></span></li>
	<li class="alt"><span>    <span class="symbol">:gid</span><span> =&gt; </span><span class="string">'mycoolapp'</span><span>,  </span></span></li>
	<li><span>    <span class="symbol">:pid_path</span><span> =&gt; </span><span class="string">'/home/mycoolapp/staging/shared/tmp/pids'</span><span> }  </span></span></li>
	<li class="alt"><span>]  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>MINIONS.<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |minion|  </span></span></li>
	<li><span>  minion[<span class="symbol">:mongrel_ports</span><span>].</span><span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |port|  </span></span></li>
	<li class="alt"><span>    God.watch <span class="keyword">do</span><span> |w|  </span></span></li>
	<li><span>      w.name = <span class="string">"mongrel-#{port}"</span><span>  </span></span></li>
	<li class="alt"><span>      w.uid = minion[<span class="symbol">:uid</span><span>]  </span></span></li>
	<li><span>      w.gid = minion[<span class="symbol">:gid</span><span>]  </span></span></li>
	<li class="alt"><span>      w.interval = 30.seconds <span class="comment"># default      </span><span>  </span></span></li>
	<li><span>      w.start = <span class="string">"mongrel_rails start -c #{minion[:rails_root]} -p #{port} \</span> </span></li>
	<li class="alt"><span><span class="string">        -P #{minion[:pid_path]}/mongrel.#{port}.pid -e production -d"</span><span>  </span></span></li>
	<li><span>      w.stop = <span class="string">"mongrel_rails stop -P #{minion[:pid_path]}/mongrel.#{port}.pid"</span><span>  </span></span></li>
	<li class="alt"><span>      w.restart = <span class="string">"mongrel_rails restart -P #{minion[:pid_path]}/mongrel.#{port}.pid"</span><span>  </span></span></li>
	<li><span>      w.start_grace = 10.seconds  </span></li>
	<li class="alt"><span>      w.restart_grace = 10.seconds  </span></li>
	<li><span>      w.pid_file = <span class="string">"#{minion[:pid_path]}/mongrel.#{port}.pid"</span><span>  </span></span></li>
	<li class="alt"><span>      </span></li>
	<li><span>      w.behavior(<span class="symbol">:clean_pid_file</span><span>)  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>      w.start_if <span class="keyword">do</span><span> |start|  </span></span></li>
	<li class="alt"><span>        start.condition(<span class="symbol">:process_running</span><span>) </span><span class="keyword">do</span><span> |c|  </span></span></li>
	<li><span>          c.interval = 5.seconds  </span></li>
	<li class="alt"><span>          c.running = <span class="keyword">false</span><span>  </span></span></li>
	<li><span>        <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>      <span class="keyword">end</span><span>  </span></span></li>
	<li><span>      </span></li>
	<li class="alt"><span>      w.restart_if <span class="keyword">do</span><span> |restart|  </span></span></li>
	<li><span>        restart.condition(<span class="symbol">:memory_usage</span><span>) </span><span class="keyword">do</span><span> |c|  </span></span></li>
	<li class="alt"><span>          c.above = 150.megabytes  </span></li>
	<li><span>          c.times = [3, 5] <span class="comment"># 3 out of 5 intervals</span><span>  </span></span></li>
	<li class="alt"><span>        <span class="keyword">end</span><span>  </span></span></li>
	<li><span>      </span></li>
	<li class="alt"><span>        restart.condition(<span class="symbol">:cpu_usage</span><span>) </span><span class="keyword">do</span><span> |c|  </span></span></li>
	<li><span>          c.above = 50.percent  </span></li>
	<li class="alt"><span>          c.times = 5  </span></li>
	<li><span>        <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>      <span class="keyword">end</span><span>  </span></span></li>
	<li><span>      </span></li>
	<li class="alt"><span>      <span class="comment"># lifecycle</span><span>  </span></span></li>
	<li><span>      w.lifecycle <span class="keyword">do</span><span> |on|  </span></span></li>
	<li class="alt"><span>        on.condition(<span class="symbol">:flapping</span><span>) </span><span class="keyword">do</span><span> |c|  </span></span></li>
	<li><span>          c.to_state = [<span class="symbol">:start</span><span>, </span><span class="symbol">:restart</span><span>]  </span></span></li>
	<li class="alt"><span>          c.times = 5  </span></li>
	<li><span>          c.within = 5.minute  </span></li>
	<li class="alt"><span>          c.transition = <span class="symbol">:unmonitored</span><span>  </span></span></li>
	<li><span>          c.retry_in = 10.minutes  </span></li>
	<li class="alt"><span>          c.retry_times = 5  </span></li>
	<li><span>          c.retry_within = 2.hours  </span></li>
	<li class="alt"><span>        <span class="keyword">end</span><span>  </span></span></li>
	<li><span>      <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
要了解更多资料，请参考如下文档:
http://god.rubyforge.org/
http://ihower.idv.tw/blog/archives/1762
http://ezinearticles.com/?Why-Rails-Developers-Need-God&amp;id=845672
http://www.letrails.cn/archives/46]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://god.rubyforge.org/">God</a>是一个使用Ruby写成的用于监视任务运行状态的可扩展框架，它的配置脚本采用Ruby来编写。因此，比起它的前辈<a href="http://www.tildeslash.com/monit/">Monit</a>，God更为简单，灵活且易于扩展（尤其对于Ruby使用者），你可以很轻易的添加一些自定义规则。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>MINIONS&nbsp;=&nbsp;[&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;{&nbsp;<span class="symbol">:rails_root</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;/home/mycoolapp/staging/current&quot;</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:mongrel_ports</span><span>&nbsp;=&gt;&nbsp;[4001,4002,4003,4004,4005],&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:uid</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'mycoolapp'</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:gid</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'mycoolapp'</span><span>,&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="symbol">:pid_path</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">'/home/mycoolapp/staging/shared/tmp/pids'</span><span>&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>MINIONS.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|minion|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;minion[<span class="symbol">:mongrel_ports</span><span>].</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|port|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;God.watch&nbsp;<span class="keyword">do</span><span>&nbsp;|w|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.name&nbsp;=&nbsp;<span class="string">&quot;mongrel-#{port}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.uid&nbsp;=&nbsp;minion[<span class="symbol">:uid</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.gid&nbsp;=&nbsp;minion[<span class="symbol">:gid</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.interval&nbsp;=&nbsp;30.seconds&nbsp;<span class="comment">#&nbsp;default&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.start&nbsp;=&nbsp;<span class="string">&quot;mongrel_rails&nbsp;start&nbsp;-c&nbsp;#{minion[:rails_root]}&nbsp;-p&nbsp;#{port}&nbsp;\</span>&nbsp;</span></li>
    <li class="alt"><span><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-P&nbsp;#{minion[:pid_path]}/mongrel.#{port}.pid&nbsp;-e&nbsp;production&nbsp;-d&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.stop&nbsp;=&nbsp;<span class="string">&quot;mongrel_rails&nbsp;stop&nbsp;-P&nbsp;#{minion[:pid_path]}/mongrel.#{port}.pid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.restart&nbsp;=&nbsp;<span class="string">&quot;mongrel_rails&nbsp;restart&nbsp;-P&nbsp;#{minion[:pid_path]}/mongrel.#{port}.pid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.start_grace&nbsp;=&nbsp;10.seconds&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.restart_grace&nbsp;=&nbsp;10.seconds&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.pid_file&nbsp;=&nbsp;<span class="string">&quot;#{minion[:pid_path]}/mongrel.#{port}.pid&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.behavior(<span class="symbol">:clean_pid_file</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.start_if&nbsp;<span class="keyword">do</span><span>&nbsp;|start|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start.condition(<span class="symbol">:process_running</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|c|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.interval&nbsp;=&nbsp;5.seconds&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.running&nbsp;=&nbsp;<span class="keyword">false</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.restart_if&nbsp;<span class="keyword">do</span><span>&nbsp;|restart|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart.condition(<span class="symbol">:memory_usage</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|c|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.above&nbsp;=&nbsp;150.megabytes&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.times&nbsp;=&nbsp;[3,&nbsp;5]&nbsp;<span class="comment">#&nbsp;3&nbsp;out&nbsp;of&nbsp;5&nbsp;intervals</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart.condition(<span class="symbol">:cpu_usage</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|c|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.above&nbsp;=&nbsp;50.percent&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.times&nbsp;=&nbsp;5&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;lifecycle</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w.lifecycle&nbsp;<span class="keyword">do</span><span>&nbsp;|on|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on.condition(<span class="symbol">:flapping</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|c|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.to_state&nbsp;=&nbsp;[<span class="symbol">:start</span><span>,&nbsp;</span><span class="symbol">:restart</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.times&nbsp;=&nbsp;5&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.within&nbsp;=&nbsp;5.minute&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.transition&nbsp;=&nbsp;<span class="symbol">:unmonitored</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.retry_in&nbsp;=&nbsp;10.minutes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.retry_times&nbsp;=&nbsp;5&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.retry_within&nbsp;=&nbsp;2.hours&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>要了解更多资料，请参考如下文档:<br />
http://god.rubyforge.org/<br />
http://ihower.idv.tw/blog/archives/1762<br />
http://ezinearticles.com/?Why-Rails-Developers-Need-God&amp;id=845672<br />
http://www.letrails.cn/archives/46</p>]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date>2008-08-26 15:50:47</wp:post_date>
		<wp:post_date_gmt>2008-08-26 15:50:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>god-%e6%af%94monit%e6%9b%b4%e5%a5%bd%e7%94%a8%e7%9a%84monitoring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_33b87276cd3de17abaee5fc2c5122db4</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6ea0256a921a6789234f2c31193eb724</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_310cd1ba2ae6e3b846b0f46ff6533d9c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ed57226cfe5ede9803d7348341dfb77d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL存储引擎选择和比较</title>
		<link>http://www.iceskysl.com/?p=365</link>
		<pubDate>Wed, 27 Aug 2008 14:36:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=365</guid>
		<description></description>
		<content:encoded><![CDATA[大家都知道MYSQL有很多的存储引擎机制，有人曾说过“多个引擎说明这是MYSQL的软肋，它不能像oracle那样搞出一个通用的”，这句话的具体意思自己揣摩，我就不瞎解读了。

今天看到一篇文章，是关于其存储引擎的，虽然不长，但是写的很不错，里面有些tips值得学习，不再翻译，其原文地址为《<a href="http://www.softwareprojects.com/resources/programming/t-mysql-storage-engines-1470.html">MySQL Storage Engines</a>》。

<img src="http://www.softwareprojects.com/blogimages/4w8SqRsqldiagram.png" alt="" />

<span class="TextMedium">Tip: <em>A well designed MySQL-powered application will use different storage engines for different tables. If you're still stuck with all MyISAM tables, now may be a good time to revisit.</em></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家都知道MYSQL有很多的存储引擎机制，有人曾说过&ldquo;多个引擎说明这是MYSQL的软肋，它不能像oracle那样搞出一个通用的&rdquo;，这句话的具体意思自己揣摩，我就不瞎解读了。</p>
<p>今天看到一篇文章，是关于其存储引擎的，虽然不长，但是写的很不错，里面有些tips值得学习，不再翻译，其原文地址为《<a href="http://www.softwareprojects.com/resources/programming/t-mysql-storage-engines-1470.html">MySQL Storage Engines</a>》。</p>
<p><img src="http://www.softwareprojects.com/blogimages/4w8SqRsqldiagram.png" alt="" /></p>
<p><span class="TextMedium">Tip: <em>A well designed MySQL-powered application will use different storage engines for different tables. If you're still stuck with all MyISAM tables, now may be a good time to revisit.</em></span></p>]]></excerpt:encoded>
		<wp:post_id>365</wp:post_id>
		<wp:post_date>2008-08-27 14:36:06</wp:post_date>
		<wp:post_date_gmt>2008-08-27 14:36:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e%e9%80%89%e6%8b%a9%e5%92%8c%e6%af%94%e8%be%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>基于CookieStore的session存储机制的安全话题</title>
		<link>http://www.iceskysl.com/?p=366</link>
		<pubDate>Thu, 28 Aug 2008 10:42:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[最近在看一本《<a href="http://iceskysl.1sters.com/?action=show&amp;id=359">The Rails way</a>》的书，其中关于session存贮机制一章中，对基于CookieStore的session存储机制持否定态度，认为其存在被破解和<a href="http://en.wikipedia.org/wiki/Replay_attack">Replay attack</a>的可能。就我了解的信息来看，这个观点是不妥的。
最详细的一篇文章是写的laigongli写的这篇“<a href="http://izumi.plan99.net/blog/index.php/2007/11/25/rails-20-cookie-session-store-and-security/#comments">Rails 2.0, cookie session store and security</a>”，文章比较长，说的很详细，感兴趣的可以过去看看。其中主要观点为：
<ol>
	<li>The problems with PStore are significant enough to warrant a replacement <em>default</em> implementation.</li>
	<li>It’s a bad idea anyway to store sensitive information (like passwords) in the session. It doesn’t matter whether the session data can be seen by the client or not, it’s something nobody should ever do.</li>
	<li>Forging session data is only possible if cracking the secret is feasible.</li>
</ol>
文中，其针对Rails的采用CookieStore机制时，其针对“449fe2e7daee471bffae2fd8dc02313d”这样一个密码是，按照其机型：
“<em>My machine, an Intel Core 2 Duo T5300, can try 285840.1 passwords per second with 2 threads.</em>”
破解下来需要的时间是：
<pre>16^32/2 / 285840.1= 5.952*10^32 seconds= 1.886*10^25 years</pre>
这是个什么概念？

但是其也提到了由于Rails采用的<span style="color: red;"> Ruby’s CGI::Session的session Id生成器中</span>存在一个缺陷，导致其算法是可以被破解的，不过“<span style="color: #ff0000;">Update November 28: The key generation security problem has been fixed.</span>”已经修复了。所以，我也认为基于CookieStore的session存储机制是安全可靠的。

参考：
<ul>
	<li><a href="http://izumi.plan99.net/blog/index.php/2007/11/25/rails-20-cookie-session-store-and-security/#comments">Rails 2.0, cookie session store and security</a></li>
	<li><a href="http://blog.phishme.com/wp-content/uploads/BustRailsCookie.rb">BustRailsCookie.rb </a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近在看一本《<a href="http://iceskysl.1sters.com/?action=show&amp;id=359">The Rails way</a>》的书，其中关于session存贮机制一章中，对基于CookieStore的session存储机制持否定态度，认为其存在被破解和<a href="http://en.wikipedia.org/wiki/Replay_attack">Replay attack</a>的可能。就我了解的信息来看，这个观点是不妥的。<br />
最详细的一篇文章是写的laigongli写的这篇&ldquo;<a href="http://izumi.plan99.net/blog/index.php/2007/11/25/rails-20-cookie-session-store-and-security/#comments">Rails 2.0, cookie session store and security</a>&rdquo;，文章比较长，说的很详细，感兴趣的可以过去看看。其中主要观点为：</p>
<ol>
    <li>The problems with PStore are significant enough to warrant a replacement <em>default</em> implementation.</li>
    <li>It&rsquo;s a bad idea anyway to store sensitive information (like passwords) in the session. It doesn&rsquo;t matter whether the session data can be seen by the client or not, it&rsquo;s something nobody should ever do.</li>
    <li>Forging session data is only possible if cracking the secret is feasible.</li>
</ol>
<p>文中，其针对Rails的采用CookieStore机制时，其针对&ldquo;449fe2e7daee471bffae2fd8dc02313d&rdquo;这样一个密码是，按照其机型：<br />
&ldquo;<em>My machine, an Intel Core 2 Duo T5300, can try 285840.1 passwords per second with 2 threads.</em>&rdquo;<br />
破解下来需要的时间是：</p>
<pre>16^32/2 / 285840.1<br />= 5.952*10^32 seconds<br />= 1.886*10^25 years</pre>
<p>这是个什么概念？<br />
<br />
但是其也提到了由于Rails采用的<span style="color: red;"> Ruby&rsquo;s CGI::Session的session Id生成器中</span>存在一个缺陷，导致其算法是可以被破解的，不过&ldquo;<font color="#ff0000">Update November 28: The key generation security problem has been fixed.</font>&rdquo;已经修复了。所以，我也认为基于CookieStore的session存储机制是安全可靠的。<br />
<br />
参考：</p>
<ul>
    <li><a href="http://izumi.plan99.net/blog/index.php/2007/11/25/rails-20-cookie-session-store-and-security/#comments">Rails 2.0, cookie session store and security</a></li>
    <li><a href="http://blog.phishme.com/wp-content/uploads/BustRailsCookie.rb">BustRailsCookie.rb </a></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date>2008-08-28 10:42:18</wp:post_date>
		<wp:post_date_gmt>2008-08-28 10:42:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9f%ba%e4%ba%8ecookiestore%e7%9a%84session%e5%ad%98%e5%82%a8%e6%9c%ba%e5%88%b6%e7%9a%84%e5%ae%89%e5%85%a8%e8%af%9d%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>273</wp:comment_id>
			<wp:comment_author><![CDATA[wayne_deng]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wayne.deng.cn@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>116.227.105.27</wp:comment_author_IP>
			<wp:comment_date>2008-08-29 16:23:52</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[说CookiesStore安全可靠，我持保留态度。至少这种方法将关键数据暴露在不可控制的非安全的区域，肯定存在安全隐患。
仅仅就加密解密而言，可以想想md5的现状，使用md5加密的数据现在基本上已经没有安全性可言了。任何一种加密的算法的破解都只是个时间问题。
所以如果要使用CookieStore，最好不要在session里面保存重要的信息。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>274</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.27</wp:comment_author_IP>
			<wp:comment_date>2008-08-29 22:15:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对于敏感数据，前面我的观点和你一致的，看文章中有句话：
It’s a bad idea anyway to store sensitive information (like passwords) in the session. It doesn’t matter whether the session data can be seen by the client or not, it’s something nobody should ever do.
关于加密的问题，现在破解MD5比较可行的除了暴力完，就数在线查询的了，这样的话，也没办法，但是现在能查询出来的还是比较弱的密码，象32位的还是有比较好的安全性的。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>275</wp:comment_id>
			<wp:comment_author><![CDATA[securesession]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.216.152.63</wp:comment_author_IP>
			<wp:comment_date>2009-06-15 20:05:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Session安全性参见
http://secure-session.appspot.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>276</wp:comment_id>
			<wp:comment_author><![CDATA[Kajaks]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.fair-news.de/news/DerKajakshopDeutschlandabsofortgeoeffnet-419694.html</wp:comment_author_url>
			<wp:comment_author_IP>92.231.176.8</wp:comment_author_IP>
			<wp:comment_date>2011-09-11 02:47:57</wp:comment_date>
			<wp:comment_date_gmt>2011-09-10 18:47:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... Iceskysl.1sters.com...</strong>

[...] Informations on that Topic: iceskysl.1sters.com/?p=366 [...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Thin: A fast and very simple Ruby web server</title>
		<link>http://www.iceskysl.com/?p=367</link>
		<pubDate>Thu, 28 Aug 2008 16:21:34 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[知道<a href="http://code.macournoyer.com/thin/">Thin</a>这个东西很久了，记忆中的还是下面这张和mongrel的性能比较图片，但是一直没深入进去了解其到底如何。
<img src="http://chart.apis.google.com/chart?cht=bvg&amp;chd=t:14.98,54.8723076923077,48.9184615384615,79.9276923076923|14.8692307692308,65.0615384615385,70.4446153846154,89.5553846153846|14.9476923076923,35.1123076923077,70.18,88.6769230769231&amp;chbh=16&amp;chs=350x150&amp;chl=WEBrick|Mongrel|Evented%20M.|Thin&amp;chco=000000,666666,cccccc&amp;chdl=1%20c%20req.|10%20c%20req.|100%20c%20req." alt="" />
从图上可以看到，除了<strong>总体性能</strong>好于mongrel以外，最大的区别在于其在<strong><span style="color: #ff0000;">100个并发</span></strong>的时候还能保证高性能，而100个并发的时候mongrel的性能非常差（且消耗很多的资源，经常由此导致请求无法处理，而出现503）。
今天花了点时间，把Thin从头到尾的看了一遍，然后连到一个服务器上试验了下，总体感觉如下：
<ul>
	<li>安装方便，和mongrel差不多，一条命令就搞定；如果你需要还可以install到init下；</li>
	<li>使用方便，嫌麻烦的直接thin start就OK了；</li>
	<li>配置丰富，提供了很多可以配置的东西，比如max-conns，max-persistent-conns等;</li>
	<li>可以集群，也非常方便，指定开始端口和实例的个数；</li>
	<li>支持写配置文件，配置文件可以修改，重载。</li>
	<li>支持做backend，前置nginx，配置和mongrel差不多。</li>
	<li>可以走UNIX domain sockets；</li>
	<li>节省资源，提供性能</li>
</ul>
使用过程大概如下，详细的参考资料：
1、安装
sudo gem install thin
2、启动测试
cd to/your/rails/app
thin start
3、配置集群
thin config -C 1sters.yml -s2 -p 7000
4、启动
thin start -C 1sters.yml

<strong>参考资料：</strong>
<ul>
	<li>http://code.macournoyer.com/thin/</li>
	<li>http://articles.slicehost.com/2008/5/27/ubuntu-hardy-nginx-rails-and-thin</li>
	<li>http://articles.slicehost.com/2008/5/6/ubuntu-hardy-thin-web-server-for-ruby</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>知道<a href="http://code.macournoyer.com/thin/">Thin</a>这个东西很久了，记忆中的还是下面这张和mongrel的性能比较图片，但是一直没深入进去了解其到底如何。<br />
<img alt="" src="http://chart.apis.google.com/chart?cht=bvg&amp;chd=t:14.98,54.8723076923077,48.9184615384615,79.9276923076923|14.8692307692308,65.0615384615385,70.4446153846154,89.5553846153846|14.9476923076923,35.1123076923077,70.18,88.6769230769231&amp;chbh=16&amp;chs=350x150&amp;chl=WEBrick|Mongrel|Evented%20M.|Thin&amp;chco=000000,666666,cccccc&amp;chdl=1%20c%20req.|10%20c%20req.|100%20c%20req." /><br />
从图上可以看到，除了<strong>总体性能</strong>好于mongrel以外，最大的区别在于其在<strong><font color="#ff0000">100个并发</font></strong>的时候还能保证高性能，而100个并发的时候mongrel的性能非常差（且消耗很多的资源，经常由此导致请求无法处理，而出现503）。<br />
今天花了点时间，把Thin从头到尾的看了一遍，然后连到一个服务器上试验了下，总体感觉如下：</p>
<ul>
    <li>安装方便，和mongrel差不多，一条命令就搞定；如果你需要还可以install到init下；</li>
    <li>使用方便，嫌麻烦的直接thin start就OK了；</li>
    <li>配置丰富，提供了很多可以配置的东西，比如max-conns，max-persistent-conns等;</li>
    <li>可以集群，也非常方便，指定开始端口和实例的个数；</li>
    <li>支持写配置文件，配置文件可以修改，重载。</li>
    <li>支持做backend，前置nginx，配置和mongrel差不多。</li>
    <li>可以走UNIX domain sockets；</li>
    <li>节省资源，提供性能</li>
</ul>
<p>使用过程大概如下，详细的参考资料：<br />
1、安装<br />
sudo gem install thin<br />
2、启动测试<br />
cd to/your/rails/app<br />
thin start<br />
3、配置集群<br />
thin config -C 1sters.yml -s2 -p 7000 <br />
4、启动<br />
thin start -C 1sters.yml<br />
<br />
<strong>参考资料：</strong></p>
<ul>
    <li>http://code.macournoyer.com/thin/</li>
    <li>http://articles.slicehost.com/2008/5/27/ubuntu-hardy-nginx-rails-and-thin</li>
    <li>http://articles.slicehost.com/2008/5/6/ubuntu-hardy-thin-web-server-for-ruby</li>
</ul>]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date>2008-08-28 16:21:34</wp:post_date>
		<wp:post_date_gmt>2008-08-28 16:21:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thin-a-fast-and-very-simple-ruby-web-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>277</wp:comment_id>
			<wp:comment_author><![CDATA[Sparkle]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weavesky.com</wp:comment_author_url>
			<wp:comment_author_IP>116.21.161.99</wp:comment_author_IP>
			<wp:comment_date>2008-09-01 11:40:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mongrel应该1个并发来使用。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Merb处理Rails中大文件上传难题</title>
		<link>http://www.iceskysl.com/?p=368</link>
		<pubDate>Fri, 29 Aug 2008 10:13:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=368</guid>
		<description></description>
		<content:encoded><![CDATA[做Rails的应该知道，在Rails中处理大文件上传是很头疼的事情，比如你允许用户上传图片，那么其有的时候分辨率高的文件有1-2M的大小，这个时候rails的上传处理是很慢的，也不难理解，看段经典的上传代码：
<div class="codeText">
<div class="codeHead">Rails代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">def</span><span> upload  </span></span></li>
	<li><span>  <span class="builtin">File</span><span>.open(RAILS_ROOT+"/uploads/</span><span class="comment">#{params[:file].original_filename}.#{next_count}”, “w”) { |f| f.write(params[:file].read) }</span><span>  </span></span></li>
	<li class="alt"><span>  render <span class="symbol">:action</span><span> =&gt; ‘index’  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
加上Rails是单线程的，这个时候处理大的IO非常慢，慢的后果是什么？拖死你的服务器，比如你使用mongrel，开了10个进程在跑，这个时候，用户上传一个文件要花2分钟，就会占着这个进程不放，导致其他的请求无法响应（好怀念weblogic的队列机制），所以你的系统抛给用户的可能就是503，504之类的错误。
有人推荐，这个情况下可以使用<a href="http://merbivore.com/index.html">merb</a>，这东西也不会很陌生，从rails大红大紫后，其一直在后面追赶，其基本特性就是线程安全的，所以对一个请求可以多线程处理，会加快处理速度，看段类似处理上传的代码：
<div class="codeText">
<div class="codeHead">Merb代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">def</span><span> upload  </span></span></li>
	<li><span>  FileUtils.mv params[<span class="symbol">:file</span><span>][</span><span class="symbol">:tempfile</span><span>].path, MERB_ROOT+”/uploads/</span><span class="comment">#{params[:file][:filename]}.#{next_count}”</span><span>  </span></span></li>
	<li class="alt"><span>  render <span class="symbol">:action</span><span> =&gt; ‘index’  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
详细的测试比较，请参考“<a href="http://www.mikeperham.com/2007/10/02/file-uploads-in-merb-versus-rails/">File Uploads in Merb versus Rails</a>”这里文章，其结论差不多是这样的“<em>Merb’s average response time is 16 ms while Rails’s average is 205 ms (over 10x faster), yet the throughput is 3000 vs 2000 req/min (only 50% greater).</em>”，针对其throughput提高不多的情况，merb的人给出的方案是add":use_mutex: false"in merb.yml，其原因说因为AR是非线程安全的才需要这个选项，设置成fasle后可以大大的提高性能。

<strong>参考文章：</strong>
<ul>
	<li><a href="http://www.mikeperham.com/2007/10/02/file-uploads-in-merb-versus-rails/">File Uploads in Merb versus Rails</a></li>
	<li><a href="http://rubyforge.org/pipermail/mongrel-users/2006-November/002265.html">[Mongrel] Uploading Large (100mb+) files</a></li>
	<li><a href="http://depixelate.com/2007/5/31/taking-merb-for-a-spin">Taking Merb for a Spin</a></li>
	<li><a href="http://devblog.rorcraft.com/2008/8/25/uploading-large-files-to-rails-with-merb">Uploading large files to Rails with Merb</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>做Rails的应该知道，在Rails中处理大文件上传是很头疼的事情，比如你允许用户上传图片，那么其有的时候分辨率高的文件有1-2M的大小，这个时候rails的上传处理是很慢的，也不难理解，看段经典的上传代码：</p>
<div class="codeText">
<div class="codeHead">Rails代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;upload&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="builtin">File</span><span>.open(RAILS_ROOT+&quot;/uploads/</span><span class="comment">#{params[:file].original_filename}.#{next_count}&rdquo;,&nbsp;&ldquo;w&rdquo;)&nbsp;{&nbsp;|f|&nbsp;f.write(params[:file].read)&nbsp;}</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;render&nbsp;<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;&lsquo;index&rsquo;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>加 上Rails是单线程的，这个时候处理大的IO非常慢，慢的后果是什么？拖死你的服务器，比如你使用mongrel，开了10个进程在跑，这个时候，用户 上传一个文件要花2分钟，就会占着这个进程不放，导致其他的请求无法响应（好怀念weblogic的队列机制），所以你的系统抛给用户的可能就是 503，504之类的错误。<br />
有人推荐，这个情况下可以使用<a href="http://merbivore.com/index.html">merb</a>，这东西也不会很陌生，从rails大红大紫后，其一直在后面追赶，其基本特性就是线程安全的，所以对一个请求可以多线程处理，会加快处理速度，看段类似处理上传的代码：</p>
<div class="codeText">
<div class="codeHead">Merb代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;upload&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;FileUtils.mv&nbsp;params[<span class="symbol">:file</span><span>][</span><span class="symbol">:tempfile</span><span>].path,&nbsp;MERB_ROOT+&rdquo;/uploads/</span><span class="comment">#{params[:file][:filename]}.#{next_count}&rdquo;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;render&nbsp;<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;&lsquo;index&rsquo;&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>详细的测试比较，请参考&ldquo;<a href="http://www.mikeperham.com/2007/10/02/file-uploads-in-merb-versus-rails/">File Uploads in Merb versus Rails</a>&rdquo;这里文章，其结论差不多是这样的&ldquo;<em>Merb&rsquo;s average response time is 16 ms while Rails&rsquo;s average is 205 ms (over 10x faster), yet the throughput is 3000 vs 2000 req/min (only 50% greater).</em>&rdquo;，针对其throughput提高不多的情况，merb的人给出的方案是add&quot;:use_mutex: false&quot;in merb.yml，其原因说因为AR是非线程安全的才需要这个选项，设置成fasle后可以大大的提高性能。<br />
<br />
<strong>参考文章：</strong></p>
<ul>
    <li><a href="http://www.mikeperham.com/2007/10/02/file-uploads-in-merb-versus-rails/">File Uploads in Merb versus Rails</a></li>
    <li><a href="http://rubyforge.org/pipermail/mongrel-users/2006-November/002265.html">[Mongrel] Uploading Large (100mb+) files</a></li>
    <li><a href="http://depixelate.com/2007/5/31/taking-merb-for-a-spin">Taking Merb for a Spin</a></li>
    <li><a href="http://devblog.rorcraft.com/2008/8/25/uploading-large-files-to-rails-with-merb">Uploading large files to Rails with Merb</a></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2008-08-29 10:13:33</wp:post_date>
		<wp:post_date_gmt>2008-08-29 10:13:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8merb%e5%a4%84%e7%90%86rails%e4%b8%ad%e5%a4%a7%e6%96%87%e4%bb%b6%e4%b8%8a%e4%bc%a0%e9%9a%be%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>278</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.0.45</wp:comment_author_IP>
			<wp:comment_date>2008-11-08 17:36:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Upload progress with Nginx
http://blog.new-bamboo.co.uk/2007/11/23/upload-progress-with-nginx

http://www.slideshare.net/vishnu/merb/

File Uploads in Merb versus Rails
http://www.mikeperham.com/2007/10/02/file-uploads-in-merb-versus-rails/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>279</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 02:07:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Use Merb to handle file upload for Rails
http://jan.ycool.com/post.3043158.html

[Mongrel] Uploading Large (100mb+) files
http://rubyforge.org/pipermail/mongrel-users/2006-November/002265.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>280</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 02:26:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在Rails中上传多个文件：
http://www.practicalecommerce.com/blogs/post/432-Multiple-Attachments-in-Rails]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>281</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.25.217</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 19:09:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://michaelshadle.com/2008/08/26/large-file-uploads-over-http-the-final-solution-i-think/
--这篇大文件上传的观点值得借鉴。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>NeverBlock: 非常值得期待的一组类库</title>
		<link>http://www.iceskysl.com/?p=369</link>
		<pubDate>Sat, 30 Aug 2008 19:16:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=369</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://bp0.blogger.com/_XFDHsTWrvBY/SJTYtPOmWBI/AAAAAAAAACE/HisrXjBz3dQ/s400/http_serving_performance.png" alt="" />
<a href="http://www.espace.com.eg/neverblock">NeverBlock</a> is a Ruby library that allows developers to write non-blocking, concurrent code in a transparent manner. Meaning that you will keep coding in your traditional ways while you get the benefit of non-blocking IO operations.

Ruby的伪线程，Rails的非线程安全性导致其性能始终上不去，前端时间发布的ruby1.9有多处修改，后面的Rails2.2也号称要做线程安全了，如果以上两个条件都满足，Rails的性能将得到大幅的提高。

由于Rails的AR是非线程安全的，导致其IO性能不是很好，其Mysql驱动一直是单线，不能很好的提高性能，做个Oracle的应该很怀念Oracle，weblogic中的线程池，java5中的concurrent包用来写同步等处理非常方便和高效。

很高兴看到Ruby世界也有类似的东西出现了，他就是NeverBlock，在其放出PostgreSQL的适配驱动后，近日有发布了<a href="http://www.espace.com.eg/neverblock/blog/2008/08/28/neverblock-mysql-support/">针对MYSQL的版本</a>，名字为<a href="http://github.com/espace/mysqlplus/tree/master">mysqlplus</a>，非常值得期待。

另外，关于“<a href="http://zhanjun.net/?q=node/7">同步、异步、阻塞和非阻塞的概念</a>”，请参考其链接上的文章。

参考文章：

http://chinaonrails.com/topic/view/1974.html

http://www.espace.com.eg/neverblock/blog/2008/08/28/neverblock-mysql-support/

http://github.com/espace/mysqlplus/tree/master

http://zhanjun.net/?q=node/7

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><img src="http://bp0.blogger.com/_XFDHsTWrvBY/SJTYtPOmWBI/AAAAAAAAACE/HisrXjBz3dQ/s400/http_serving_performance.png" alt="" /><br />
<a href="http://www.espace.com.eg/neverblock">NeverBlock</a> is a Ruby library that allows developers to write non-blocking, concurrent code in a transparent manner. Meaning that you will keep coding in your traditional ways while you get the benefit of non-blocking IO operations.</p>
<p>Ruby的伪线程，Rails的非线程安全性导致其性能始终上不去，前端时间发布的ruby1.9有多处修改，后面的Rails2.2也号称要做线程安全了，如果以上两个条件都满足，Rails的性能将得到大幅的提高。</p>
<p>由于Rails的AR是非线程安全的，导致其IO性能不是很好，其Mysql驱动一直是单线，不能很好的提高性能，做个Oracle的应该很怀念Oracle，weblogic中的线程池，java5中的concurrent包用来写同步等处理非常方便和高效。</p>
<p>很高兴看到Ruby世界也有类似的东西出现了，他就是NeverBlock，在其放出PostgreSQL的适配驱动后，近日有发布了<a href="http://www.espace.com.eg/neverblock/blog/2008/08/28/neverblock-mysql-support/">针对MYSQL的版本</a>，名字为<a href="http://github.com/espace/mysqlplus/tree/master">mysqlplus</a>，非常值得期待。</p>
<p>另外，关于&ldquo;<a href="http://zhanjun.net/?q=node/7">同步、异步、阻塞和非阻塞的概念</a>&rdquo;，请参考其链接上的文章。</p>
<p>参考文章：</p>
<p>http://chinaonrails.com/topic/view/1974.html</p>
<p>http://www.espace.com.eg/neverblock/blog/2008/08/28/neverblock-mysql-support/</p>
<p>http://github.com/espace/mysqlplus/tree/master</p>
<p>http://zhanjun.net/?q=node/7</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>369</wp:post_id>
		<wp:post_date>2008-08-30 19:16:35</wp:post_date>
		<wp:post_date_gmt>2008-08-30 19:16:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neverblock-%e9%9d%9e%e5%b8%b8%e5%80%bc%e5%be%97%e6%9c%9f%e5%be%85%e7%9a%84%e4%b8%80%e7%bb%84%e7%b1%bb%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_deab528cc9c77ed6bf77df6a7303ea8e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_da2cc07f922673ec0937a62423a58128</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_55eaa2a08b06d654fd3b80b1b9e1e62b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1d281e86d8665f2c088ae7bb1237d846</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>282</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.27</wp:comment_author_IP>
			<wp:comment_date>2008-08-30 19:56:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[infoQ上有篇介绍：
http://www.infoq.com/articles/fibers-neverblock-revactor]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Rails2.2] 值得期待的internationalization</title>
		<link>http://www.iceskysl.com/?p=370</link>
		<pubDate>Sun, 31 Aug 2008 01:10:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Rails2.2</strong>的脚步越来越近了，虽然Rails2.1才放出来没多久，不可否认的是Rails2.2的脚本也越来越近了，近期可以看到一些在Rails2.2中可能会包含的功能，值得期待和预先了解下。

除了上次说到的Rails2.2中会实现<a href="http://weblog.rubyonrails.org/2008/8/16/josh-peek-officially-joins-the-rails-core">线程安全</a>外，今天在其weblog上看到，将包含另外一个很值得期待的功能：<strong>internationalization</strong>。

Rails2.2中将提供<a href="http://weblog.rubyonrails.org/2008/8/27/demo-of-rails-2-2-internationalization">internationalization</a>这个功能，有了这个功能，就可以更加方便的制作国际化的网站了，非常棒。以前我们都是使用插件的方式解决这个问题，可以选择的插件也挺多，各有优缺点，有的也有些bug，需要自己hack下，以后rails2.2中包含了i18n后，该有多方便呀。

Clemens Kofler’s已经做了个<a href="http://i18n-demo.phusion.nl/pages/setup">demo的演示</a>，也提供了其<a href="http://github.com/karmi/rails_i18n_demo_app/tree/master">代码</a>，感兴趣的可以体检熟悉下。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><strong>Rails2.2</strong>的脚步越来越近了，虽然Rails2.1才放出来没多久，不可否认的是Rails2.2的脚本也越来越近了，近期可以看到一些在Rails2.2中可能会包含的功能，值得期待和预先了解下。</p>
<p>除了上次说到的Rails2.2中会实现<a href="http://weblog.rubyonrails.org/2008/8/16/josh-peek-officially-joins-the-rails-core">线程安全</a>外，今天在其weblog上看到，将包含另外一个很值得期待的功能：<strong>internationalization</strong>。</p>
<p>Rails2.2中将提供<a href="http://weblog.rubyonrails.org/2008/8/27/demo-of-rails-2-2-internationalization">internationalization</a>这个功能，有了这个功能，就可以更加方便的制作国际化的网站了，非常棒。以前我们都是使用插件的方式解决这个问题，可以选择的插件也挺多，各有优缺点，有的也有些bug，需要自己hack下，以后rails2.2中包含了i18n后，该有多方便呀。</p>
<p>Clemens Kofler&rsquo;s已经做了个<a href="http://i18n-demo.phusion.nl/pages/setup">demo的演示</a>，也提供了其<a href="http://github.com/karmi/rails_i18n_demo_app/tree/master">代码</a>，感兴趣的可以体检熟悉下。</p>]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2008-08-31 01:10:00</wp:post_date>
		<wp:post_date_gmt>2008-08-31 01:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-2-%e5%80%bc%e5%be%97%e6%9c%9f%e5%be%85%e7%9a%84internationalization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Rails2.2] Josh Peek,thread safety?</title>
		<link>http://www.iceskysl.com/?p=371</link>
		<pubDate>Sun, 31 Aug 2008 01:29:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://weblog.rubyonrails.org/">Rails</a>上说有个叫做<a href="http://weblog.rubyonrails.org/2008/8/16/josh-peek-officially-joins-the-rails-core">Josh Peek</a>的家伙加入core，将带来thread safety，这无疑是个重磅炸弹，因为才Rails0.6到现在的Rails2.1都是非线程安全的，以至于其一些无法解决的问题，性能也一直被人诟病，其实也不能怪Rails，Ruby本身这个方面做的也不是很好。

随着<strong>Ruby1.9</strong>的逐步推广，Rails2.2应该会对Ruby1.9广泛支持了吧，这个时候将会有很多新的东西加进来的吧，除了这里说的“<a href="http://iceskysl.1sters.com/?action=show&amp;id=371">线程安全</a>”，还有前面说到的“<a href="http://iceskysl.1sters.com/?action=show&amp;id=370">国际化</a>”，以及<a href="http://iceskysl.1sters.com/?action=show&amp;id=369">NeverBlock</a>实现的一组同步组件包，其性能将会得到大幅的提高。

另外，还有值得期待的就是Ruby的<strong>VM</strong>是否有改善？目前的<strong>GC</strong>还是问题大大的有，内存泄露也并不稀罕，希望有新的VM出来；另外，其Ruby的一些app服务器最近好像停止不前了，自从Zed A. Shaw闹脾气后，<a href="http://mongrel.rubyforge.org/">mongrel</a>就很少有啥更新了，其maillist也冷冷清清的。<a href="http://code.macournoyer.com/thin/">thin</a>还好，有些小的更新，这些server要针对Rails2.2和Ruby1.9做些大动作了。

Ruby的世界，前途无量。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://weblog.rubyonrails.org/">Rails</a>上说有个叫做<a href="http://weblog.rubyonrails.org/2008/8/16/josh-peek-officially-joins-the-rails-core">Josh Peek</a>的家伙加入core，将带来thread safety，这无疑是个重磅炸弹，因为才Rails0.6到现在的Rails2.1都是非线程安全的，以至于其一些无法解决的问题，性能也一直被人诟病，其实也不能怪Rails，Ruby本身这个方面做的也不是很好。</p>
<p>随着<strong>Ruby1.9</strong>的逐步推广，Rails2.2应该会对Ruby1.9广泛支持了吧，这个时候将会有很多新的东西加进来的吧，除了这里说的&ldquo;<a href="../../../?action=show&amp;id=371">线程安全</a>&rdquo;，还有前面说到的&ldquo;<a href="../../../?action=show&amp;id=370">国际化</a>&rdquo;，以及<a href="../../../?action=show&amp;id=369">NeverBlock</a>实现的一组同步组件包，其性能将会得到大幅的提高。</p>
<p>另外，还有值得期待的就是Ruby的<strong>VM</strong>是否有改善？目前的<strong>GC</strong>还是问题大大的有，内存泄露也并不稀罕，希望有新的VM出来；另外，其Ruby的一些app服务器最近好像停止不前了，自从Zed A. Shaw闹脾气后，<a href="http://mongrel.rubyforge.org/">mongrel</a>就很少有啥更新了，其maillist也冷冷清清的。<a href="http://code.macournoyer.com/thin/">thin</a>还好，有些小的更新，这些server要针对Rails2.2和Ruby1.9做些大动作了。</p>
<p>Ruby的世界，前途无量。</p>]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2008-08-31 01:29:28</wp:post_date>
		<wp:post_date_gmt>2008-08-31 01:29:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-2-josh-peekthread-safety</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>283</wp:comment_id>
			<wp:comment_author><![CDATA[浩翔（Alex）]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.71.30.30</wp:comment_author_IP>
			<wp:comment_date>2008-08-31 21:02:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个Josh Peek 很niubility的，才19岁。
http://joshpeek.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>284</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.66.230</wp:comment_author_IP>
			<wp:comment_date>2008-08-31 21:53:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[寒，这么牛呀，起步早就是好，我19岁刚会了QQ。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Gem&#124;plugin]Configatron&amp;SimpleConfig: 在Rails中添加需要的配置</title>
		<link>http://www.iceskysl.com/?p=372</link>
		<pubDate>Sun, 31 Aug 2008 11:45:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=372</guid>
		<description></description>
		<content:encoded><![CDATA[搞Java的人应该很习惯把一些配置（数据库连接、个性化配置等）写到配置文件中，一般会使用XML或者TXT文件中，在启动的时候读取配置，初始化等等。
Rails中也可以实现类似的功能，虽然Rails提倡“<strong>零配置</strong>”，但有的时候开发一个系统，比如Blog系统等还是需要一些个性化的配置，我们原来的实现方式是：增加一个配置文件，启动的时候读取，并保存为全局变量，用的时候直接使用。也很方便。
其实还可以使用插件或者gem来做，<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a>就是这么一个gem，另外还有一个插件版的<a href="http://github.com/lukeredpath/simpleconfig/tree/master">SimpleConfig</a>，两者还是有些不同的，按照<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a> 作者的说法，其不同点在于：
<blockquote>SimpleConfig looks nice, but it definitely has a few differences from Configatron. The first big difference is that SimpleConfig is limited to use with Rails. Configatron can be used with any framework, any application, and any script. Configatron also seems a bit easier to use. There are no mixins needed to use it. The configatron method lives in Kernel, which means it’s available everywhere, no ‘configuration’ needed. <img class="wp-smiley" src="http://www.mackframework.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" /> Different strokes, eh? There are a few other configuration systems out there, I always encourage people to check out the options before they decide on a piece of software to use.</blockquote>
其实我们自己也可以写，只是没有必要再搞一套，功能上来说，上述这两个足够了，下面简单的看看<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a> 的用法：
<strong>1、安装</strong>
$ sudo gem install configatron
<strong>2、定义（支持namespace）</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>configatron </span><span class="keyword">do</span><span> |config|  </span></span></li>
	<li><span>  config.website_url = <span class="string">"http://www.1sters.com"</span><span>  </span></span></li>
	<li class="alt"><span>  config.namespace(<span class="symbol">:mems</span><span>) </span><span class="keyword">do</span><span> |mem|  </span></span></li>
	<li><span>    email.namespace(<span class="symbol">:iceskysl</span><span>) </span><span class="keyword">do</span><span> |iceskysl|  </span></span></li>
	<li class="alt"><span>      iceskysl.email = <span class="string">"iceskysl@1sters.com"</span><span>  </span></span></li>
	<li><span>      pop.blog_url = <span class="string">"http://iceskysl.1sters.com"</span><span>  </span></span></li>
	<li class="alt"><span>      <span class="comment"># etc ...</span><span>  </span></span></li>
	<li><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    email.namespace(<span class="symbol">:shine</span><span>) </span><span class="keyword">do</span><span> |shine|  </span></span></li>
	<li><span>      smtp.email = <span class="string">"shine@1sters.com"</span><span>  </span></span></li>
	<li class="alt"><span>      smtp.blog_url = <span class="string">"http://shine.1sters.com"</span><span>  </span></span></li>
	<li><span>      <span class="comment"># etc ...</span><span>  </span></span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="comment"># etc...</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>3、使用</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>configatron.mems.iceskysl.email </span><span class="comment"># =&gt; "iceskysl@1sters.com"</span><span>  </span></span></li>
	<li><span>configatron.mems.shine.blog_url <span class="comment"># =&gt; "http://shine.1sters.com"</span><span>  </span></span></li>
	<li class="alt"><span>configatron.website_url <span class="comment"># =&gt; "http://www.1sters.com"</span><span>  </span></span></li>
</ol>
</div>
<strong>4、重写</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>configatron </span><span class="keyword">do</span><span> |config|  </span></span></li>
	<li><span>  config.website_url = <span class="string">"http://www.1sters.com/index"</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>PS：</strong>
如果你是在自己的Rails里使用，可能<strong><a href="http://github.com/lukeredpath/simpleconfig/tree">simpleconfig</a></strong>会更加适合你，请参考其链接上的Readme。<strong></strong>

参考文档：
http://www.mackframework.com/2008/08/29/configatron-100-released/
http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html
http://github.com/lukeredpath/simpleconfig/tree/master]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>搞Java的人应该很习惯把一些配置（数据库连接、个性化配置等）写到配置文件中，一般会使用XML或者TXT文件中，在启动的时候读取配置，初始化等等。<br />
Rails中也可以实现类似的功能，虽然Rails提倡&ldquo;<strong>零配置</strong>&rdquo;，但有的时候开发一个系统，比如Blog系统等还是需要一些个性化的配置，我们原来的实现方式是：增加一个配置文件，启动的时候读取，并保存为全局变量，用的时候直接使用。也很方便。<br />
其实还可以使用插件或者gem来做，<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a>就是这么一个gem，另外还有一个插件版的<a href="http://github.com/lukeredpath/simpleconfig/tree/master">SimpleConfig</a>，两者还是有些不同的，按照<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a> 作者的说法，其不同点在于：</p>
<blockquote>SimpleConfig looks nice, but it definitely has a few differences from Configatron. The first big difference is that SimpleConfig is limited to use with Rails. Configatron can be used with any framework, any application, and any script. Configatron also seems a bit easier to use. There are no mixins needed to use it. The configatron method lives in Kernel, which means it&rsquo;s available everywhere, no &lsquo;configuration&rsquo; needed. <img class="wp-smiley" alt=":)" src="http://www.mackframework.com/wp-includes/images/smilies/icon_smile.gif" /> Different strokes, eh? There are a few other configuration systems out there, I always encourage people to check out the options before they decide on a piece of software to use.<br />
</blockquote>
<p>其实我们自己也可以写，只是没有必要再搞一套，功能上来说，上述这两个足够了，下面简单的看看<a href="http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html">Configatron</a> 的用法：<br />
<strong>1、安装</strong><br />
$ sudo gem install configatron<br />
<strong>2、定义（支持namespace）</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>configatron&nbsp;</span><span class="keyword">do</span><span>&nbsp;|config|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;config.website_url&nbsp;=&nbsp;<span class="string">&quot;http://www.1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;config.namespace(<span class="symbol">:mems</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|mem|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;email.namespace(<span class="symbol">:iceskysl</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|iceskysl|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iceskysl.email&nbsp;=&nbsp;<span class="string">&quot;iceskysl@1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pop.blog_url&nbsp;=&nbsp;<span class="string">&quot;http://iceskysl.1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;etc&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;email.namespace(<span class="symbol">:shine</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|shine|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smtp.email&nbsp;=&nbsp;<span class="string">&quot;shine@1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;smtp.blog_url&nbsp;=&nbsp;<span class="string">&quot;http://shine.1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">#&nbsp;etc&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;etc...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>3、使用</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>configatron.mems.iceskysl.email&nbsp;</span><span class="comment">#&nbsp;=&gt;&nbsp;&quot;iceskysl@1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>configatron.mems.shine.blog_url&nbsp;<span class="comment">#&nbsp;=&gt;&nbsp;&quot;http://shine.1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>configatron.website_url&nbsp;<span class="comment">#&nbsp;=&gt;&nbsp;&quot;http://www.1sters.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>4、重写</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>configatron&nbsp;</span><span class="keyword">do</span><span>&nbsp;|config|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;config.website_url&nbsp;=&nbsp;<span class="string">&quot;http://www.1sters.com/index&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>PS：</strong><br />
如果你是在自己的Rails里使用，可能<strong><a href="http://github.com/lukeredpath/simpleconfig/tree">simpleconfig</a></strong>会更加适合你，请参考其链接上的Readme。<strong><br />
<br />
参考文档：</strong><br />
http://www.mackframework.com/2008/08/29/configatron-100-released/<br />
http://www.rubyinside.com/configatron-ruby-app-configuration-library-1130.html<br />
http://github.com/lukeredpath/simpleconfig/tree/master</p>]]></excerpt:encoded>
		<wp:post_id>372</wp:post_id>
		<wp:post_date>2008-08-31 11:45:45</wp:post_date>
		<wp:post_date_gmt>2008-08-31 11:45:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gempluginconfigatronsimpleconfig-%e5%9c%a8rails%e4%b8%ad%e6%b7%bb%e5%8a%a0%e9%9c%80%e8%a6%81%e7%9a%84%e9%85%8d%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_eff09f81eabbc6d69f23017ffd3c27c0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_26123c9771227fba157d1ef78cc0512e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0189f28e24f1c7d4969d99b54d6f8532</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>285</wp:comment_id>
			<wp:comment_author><![CDATA[louis vuitton handbags]]></wp:comment_author>
			<wp:comment_author_email>Me.sterlla@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.discount-louis-vuitton.com</wp:comment_author_url>
			<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
			<wp:comment_date>2010-07-20 08:04:57</wp:comment_date>
			<wp:comment_date_gmt>2010-07-20 08:04:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well , the view of the passage is totally correct ,your details is really  reasonable and  you guy give us  valuable  informative post, I totally agree the standpoint of upstairs. I often surfing on this forum when I m free and I find there are so much good <a href="http://www.boots-store.co.uk" rel="nofollow">ugg boots</a>  information we can learn in this forum!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Gem&#124;plugin]log4r&amp;Logging: 替代Rails中logger的日志记录库</title>
		<link>http://www.iceskysl.com/?p=373</link>
		<pubDate>Sun, 31 Aug 2008 12:59:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=373</guid>
		<description></description>
		<content:encoded><![CDATA[Rail本身自带的<strong>logger</strong>虽然好用，但是还是有点太简易了，针对一些特殊的业务需求（比如需要记录一些业务日志供后续的报表系统分析、解析等）就显得有点力不从心了。这个时候可以找找其他的替代品。
<strong>1、log4r</strong>
做java的应该对这样的名字相当熟悉，大名鼎鼎的log4j在java的世界里非常流行和实用，看这个log4r的名字就可以感受到其强大的功能。
<blockquote><a href="http://log4r.sourceforge.net/index.html">Log4r</a> is a comprehensive and flexible logging library written in Ruby for use in Ruby programs. It features a hierarchical logging system of any number of levels, custom level names, logger inheritance, multiple output destinations, execution tracing, custom formatting, thread safteyness, XML and YAML configuration, and more.</blockquote>
但是截至到目前为止的其log4r-1.0.5版本中和Rails2的版本还存在一个冲突，详细的可以参考“<a href="http://dev.rubyonrails.org/ticket/3512">Ticket #3512</a>” (reopened defect)。
<blockquote>ActionView::TemplateError (Expected kind of Outputter, got NilClass) c:/ruby/lib/ruby/gems/1.8/gems/log4r-1.0.5/src/log4r/logger.rb:115:in `each' c:/ruby/lib/ruby/gems/1.8/gems/log4r-1.0.5/src/log4r/logger.rb:115:in `add' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_controller/benchmarking.rb:30:in `benchmark' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_view/partials.rb:57:in `render_partial' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_view/base.rb:230:in `render'</blockquote>
但是其从March 2004开始到现在都没人有维护和更新，看来需要寻找新的解决方案了。
<strong>2、Logging</strong>
<a href="http://logging.rubyforge.org/classes/Logging.html">Logging</a> is a flexible logging library for use in Ruby programs based on the design of Java‘s log4j library. It features a hierarchical logging system, custom level names, multiple output destinations per log event, custom formatting, and more.
关于Logging的详细API可以参考其doc文档，其详细的用法和注意事项，可以参考“<a href="http://wiki.rubyonrails.org/rails/pages/HowtoConfigureLogging">HowtoConfigureLogging</a>”，下面看个例子：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'logging'</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>logger = Logging::Logger[<span class="string">'example_logger'</span><span>]  </span></span></li>
	<li><span>logger.add_appenders(  </span></li>
	<li class="alt"><span>    Logging::Appender.stdout,  </span></li>
	<li><span>    Logging::Appenders::<span class="builtin">File</span><span>.</span><span class="keyword">new</span><span>(</span><span class="string">'example.log'</span><span>)  </span></span></li>
	<li class="alt"><span>)  </span></li>
	<li><span>logger.level = <span class="symbol">:info</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>logger.debug <span class="string">"this debug message will not be output by the logger"</span><span>  </span></span></li>
	<li class="alt"><span>logger.info <span class="string">"just some friendly advice"</span><span>  </span></span></li>
</ol>
</div>
<strong>参考文章：</strong>
http://wiki.rubyonrails.org/rails/pages/HowtoConfigureLogging
http://logging.rubyforge.org/
http://log4r.sourceforge.net/index.html
http://007surfing.com/index.php?hl=f5&amp;q=uggc%3A%2F%2Fapupenvyf.oybtfcbg.pbz%2F2007%2F04%2Fybt.ugzy]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rail本身自带的<strong>logger</strong>虽然好用，但是还是有点太简易了，针对一些特殊的业务需求（比如需要记录一些业务日志供后续的报表系统分析、解析等）就显得有点力不从心了。这个时候可以找找其他的替代品。<br />
<strong>1、log4r</strong><br />
做java的应该对这样的名字相当熟悉，大名鼎鼎的log4j在java的世界里非常流行和实用，看这个log4r的名字就可以感受到其强大的功能。</p>
<blockquote><a href="http://log4r.sourceforge.net/index.html">Log4r</a> is a comprehensive and flexible logging library written in Ruby for use in Ruby programs. It features a hierarchical logging system of any number of levels, custom level names, logger inheritance, multiple output destinations, execution tracing, custom formatting, thread safteyness, XML and YAML configuration, and more.   <br />
</blockquote>
<p>但是截至到目前为止的其log4r-1.0.5版本中和Rails2的版本还存在一个冲突，详细的可以参考&ldquo;<a href="http://dev.rubyonrails.org/ticket/3512">Ticket #3512</a>&rdquo; (reopened defect)。</p>
<blockquote>ActionView::TemplateError (Expected kind of Outputter, got NilClass) c:/ruby/lib/ruby/gems/1.8/gems/log4r-1.0.5/src/log4r/logger.rb:115:in `each' c:/ruby/lib/ruby/gems/1.8/gems/log4r-1.0.5/src/log4r/logger.rb:115:in `add' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_controller/benchmarking.rb:30:in `benchmark' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_view/partials.rb:57:in `render_partial' c:/ruby/lib/ruby/gems/1.8/gems/actionpack-1.11.2/lib/action_view/base.rb:230:in `render'   <br />
</blockquote>
<p>但是其从March 2004开始到现在都没人有维护和更新，看来需要寻找新的解决方案了。<br />
<strong>2、Logging</strong><br />
<a href="http://logging.rubyforge.org/classes/Logging.html">Logging</a> is a flexible logging library for use in Ruby programs based on the design of Java&lsquo;s log4j library. It features a hierarchical logging system, custom level names, multiple output destinations per log event, custom formatting, and more. <br />
关于Logging的详细API可以参考其doc文档，其详细的用法和注意事项，可以参考&ldquo;<a href="http://wiki.rubyonrails.org/rails/pages/HowtoConfigureLogging">HowtoConfigureLogging</a>&rdquo;，下面看个例子：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'logging'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>logger&nbsp;=&nbsp;Logging::Logger[<span class="string">'example_logger'</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>logger.add_appenders(&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Logging::Appender.stdout,&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Logging::Appenders::<span class="builtin">File</span><span>.</span><span class="keyword">new</span><span>(</span><span class="string">'example.log'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>)&nbsp;&nbsp;</span></li>
    <li class=""><span>logger.level&nbsp;=&nbsp;<span class="symbol">:info</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>logger.debug&nbsp;<span class="string">&quot;this&nbsp;debug&nbsp;message&nbsp;will&nbsp;not&nbsp;be&nbsp;output&nbsp;by&nbsp;the&nbsp;logger&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>logger.info&nbsp;<span class="string">&quot;just&nbsp;some&nbsp;friendly&nbsp;advice&quot;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>参考文章：</strong><br />
http://wiki.rubyonrails.org/rails/pages/HowtoConfigureLogging<br />
http://logging.rubyforge.org/<br />
http://log4r.sourceforge.net/index.html<br />
http://007surfing.com/index.php?hl=f5&amp;q=uggc%3A%2F%2Fapupenvyf.oybtfcbg.pbz%2F2007%2F04%2Fybt.ugzy</p>]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date>2008-08-31 12:59:20</wp:post_date>
		<wp:post_date_gmt>2008-08-31 12:59:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gempluginlog4rlogging-%e6%9b%bf%e4%bb%a3rails%e4%b8%adlogger%e7%9a%84%e6%97%a5%e5%bf%97%e8%ae%b0%e5%bd%95%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1fcc44604bb8112f700d22cba76eb7ad</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a9845580019292dc8bbb742a40343871</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a5b899d9076863e832fe033b1a641a7e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_adb6bb2c1dda741759b47cf84d4ed692</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>286</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.133.129</wp:comment_author_IP>
			<wp:comment_date>2008-09-06 09:46:41</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Logging in Ruby on Rails
http://www.martyandrews.net/blog/2007/09/logging_in_ruby_on_rails.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>287</wp:comment_id>
			<wp:comment_author><![CDATA[Kindle Fire]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.kindle-ebook-reader.de/amazon-kindle-fire-kaufen/</wp:comment_author_url>
			<wp:comment_author_IP>92.230.193.216</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 05:00:07</wp:comment_date>
			<wp:comment_date_gmt>2011-10-05 21:00:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... [Trackback]...</strong>

[...] Informations on that Topic: iceskysl.1sters.com/?p=373 [...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Gem&#124;plugin]Flash Message Conductor :在Rails中整合各类消息提示</title>
		<link>http://www.iceskysl.com/?p=374</link>
		<pubDate>Mon, 01 Sep 2008 11:09:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=374</guid>
		<description></description>
		<content:encoded><![CDATA[Rails中特有的falsh消息提示机制非常好用，其三种消息（error，message，notice）针对不同的应用场景提示用户，非常方便。
但是由于其三种消息提示的含义不一样，UI制作人员经常会使用不同的CSS来展示（比如error的就用红色，notice就用黄色等等），这样就存在一个问题，当在一个共用页面上需要展示几种可能的消息时，就不是很好处理，这个时候，对通用型的UI是个挑战。

如果能把三种消息自动区分，使用各种的样式表，该多方便！确实，已经有人这么做了， <a href="http://www.robbyonrails.com/articles/2008/08/29/flash-message-conductor">Robby</a>给出了一个plugin，“<a href="http://github.com/planetargon/flash-message-conductor/tree/master">Flash Message Conductor</a>”，看其介绍：
<pre>A simple pattern for managing flash messages in your Ruby on Rails application.

<strong>1、安装</strong>script/plugin install git://github.com/planetargon/flash-message-conductor.git<strong>2、使用</strong></pre>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># Controller helpers</span><span>  </span></span></li>
	<li><span>add_message( <span class="string">'foo'</span><span> )  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>is the equivalent of  </span></li>
	<li class="alt"><span>flash[<span class="symbol">:message</span><span>] = </span><span class="string">'foo'</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Controller helpers included:  </span></li>
	<li><span>add_message( message )   </span></li>
	<li class="alt"><span>add_notice( message )  </span></li>
	<li><span>add_error( message )  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="comment"># View helpers</span><span>  </span></span></li>
	<li class="alt"><span>&lt;%= render_flash_messages %&gt;  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>produces:  </span></li>
	<li><span>&lt;div id=<span class="string">"flash_messages"</span><span>&gt;  </span></span></li>
	<li class="alt"><span>  &lt;p <span class="keyword">class</span><span>=</span><span class="string">"message"</span><span>&gt;You have successfully done XYZ...&lt;/p&gt;  </span></span></li>
	<li><span>&lt;/div&gt;  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="comment"># or... if you set an error</span><span>  </span></span></li>
	<li class="alt"><span>&lt;div id=<span class="string">"flash_messages"</span><span>&gt;  </span></span></li>
	<li><span>  &lt;p <span class="keyword">class</span><span>=</span><span class="string">"error"</span><span>&gt;Oops! Something went bonkers!&lt;/p&gt;  </span></span></li>
	<li class="alt"><span>&lt;/div&gt;  </span></li>
</ol>
</div>
<pre>
详细信息，参考上面给出的Github上的地址查看，谢谢！</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails中特有的falsh消息提示机制非常好用，其三种消息（error，message，notice）针对不同的应用场景提示用户，非常方便。<br />
但是由于其三种消息提示的含义不一样，UI制作人员经常会使用不同的CSS来展示（比如error的就用红色，notice就用黄色等等），这样就存在一个问题，当在一个共用页面上需要展示几种可能的消息时，就不是很好处理，这个时候，对通用型的UI是个挑战。</p>
<p>如果能把三种消息自动区分，使用各种的样式表，该多方便！确实，已经有人这么做了， <a href="http://www.robbyonrails.com/articles/2008/08/29/flash-message-conductor">Robby</a>给出了一个plugin，&ldquo;<a href="http://github.com/planetargon/flash-message-conductor/tree/master">Flash Message Conductor</a>&rdquo;，看其介绍：</p>
<pre>A simple pattern for managing flash messages in your Ruby on Rails application.<br /><br /><strong>1、安装</strong><br />script/plugin install git://github.com/planetargon/flash-message-conductor.git<br /><strong>2、使用</strong><br /><div class="codeText"><div class="codeHead">Ruby代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span class="comment">#&nbsp;Controller&nbsp;helpers</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>add_message(&nbsp;<span class="string">'foo'</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>is&nbsp;the&nbsp;equivalent&nbsp;of&nbsp;&nbsp;</span></li><li class="alt"><span>flash[<span class="symbol">:message</span><span>]&nbsp;=&nbsp;</span><span class="string">'foo'</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>Controller&nbsp;helpers&nbsp;included:&nbsp;&nbsp;</span></li><li class=""><span>add_message(&nbsp;message&nbsp;)&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>add_notice(&nbsp;message&nbsp;)&nbsp;&nbsp;</span></li><li class=""><span>add_error(&nbsp;message&nbsp;)&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">#&nbsp;View&nbsp;helpers</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&lt;%=&nbsp;render_flash_messages&nbsp;%&gt;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>produces:&nbsp;&nbsp;</span></li><li class=""><span>&lt;div&nbsp;id=<span class="string">&quot;flash_messages&quot;</span><span>&gt;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&lt;p&nbsp;<span class="keyword">class</span><span>=</span><span class="string">&quot;message&quot;</span><span>&gt;You&nbsp;have&nbsp;successfully&nbsp;done&nbsp;XYZ...&lt;/p&gt;&nbsp;&nbsp;</span></span></li><li class=""><span>&lt;/div&gt;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">#&nbsp;or...&nbsp;if&nbsp;you&nbsp;set&nbsp;an&nbsp;error</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&lt;div&nbsp;id=<span class="string">&quot;flash_messages&quot;</span><span>&gt;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&lt;p&nbsp;<span class="keyword">class</span><span>=</span><span class="string">&quot;error&quot;</span><span>&gt;Oops!&nbsp;Something&nbsp;went&nbsp;bonkers!&lt;/p&gt;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&lt;/div&gt;&nbsp;&nbsp;</span></li></ol></div>详细信息，参考上面给出的Github上的地址查看，谢谢！</pre>]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2008-09-01 11:09:56</wp:post_date>
		<wp:post_date_gmt>2008-09-01 11:09:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gempluginflash-message-conductor-%e5%9c%a8rails%e4%b8%ad%e6%95%b4%e5%90%88%e5%90%84%e7%b1%bb%e6%b6%88%e6%81%af%e6%8f%90%e7%a4%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Google手机现身: 值得期待</title>
		<link>http://www.iceskysl.com/?p=375</link>
		<pubDate>Mon, 01 Sep 2008 12:58:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=375</guid>
		<description></description>
		<content:encoded><![CDATA[今天在Donews上终于看到GooglePhone出现了，样式如下：
<img src="http://img.hexun.com/2008-09-01/108501397.jpg" alt="" />

<em>在发售时间上，这款采用Android系统的HTC Dream手机将于9月17日面向T-Mobile用户进行预售，而手机型号则会被命名为G1，并提供白色、棕色和黑色等三种色彩款式选择，而正式面向其他地区的发售时间则在今年10月。</em>

说句实在话，我不是很喜欢iphone，虽然也试了下，但是我还是不是很喜欢，因为我生活中用到的Mac的东西太少了，与之相比，我认为在iphone和blackberry之间选择的话，我会选择BB，虽然我的第一款BB8100寿命不长，但是我非常喜欢，近期已经在联系入手一款升级版的BB8110。
相比BB和iphone，我更加期待GooglePhone的上市，虽然Iphone在大陆上市一波三折，可能Gphone会吸取教训，更迅速的打开国内市场。
为什么更加期待Google Phone，应该归于与生活中使用到Google的东西太多了，GoogleReader，GoogleDoc，Gmail，Google日历等等，都是必不可少的东西，若干Google手机上可以很好的把这些东西都整合进来，又能保证不会太笨重的话，我会买一部。
期待赶快来吧，详细介绍请移步“<a href="http://www.donews.com/Content/200809/faf4ef50-7ae6-4110-945c-f79765a685e7.shtm">iPhone也得低头 万众期待超炫Google手机现身</a>”.]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>今天在Donews上终于看到GooglePhone出现了，样式如下：<br />
<img alt="" src="http://img.hexun.com/2008-09-01/108501397.jpg" /><br />
<br />
<em>在发售时间上，这款采用Android系统的HTC Dream手机将于9月17日面向T-Mobile用户进行预售，而手机型号则会被命名为G1，并提供白色、棕色和黑色等三种色彩款式选择，而正式面向其他地区的发售时间则在今年10月。</em><br />
<br />
说句实在话，我不是很喜欢iphone，虽然也试了下，但是我还是不是很喜欢，因为我生活中用到的Mac的东西太少了，与之相比，我认为在iphone和 blackberry之间选择的话，我会选择BB，虽然我的第一款BB8100寿命不长，但是我非常喜欢，近期已经在联系入手一款升级版的BB8110。<br />
相比BB和iphone，我更加期待GooglePhone的上市，虽然Iphone在大陆上市一波三折，可能Gphone会吸取教训，更迅速的打开国内市场。<br />
为什么更加期待Google Phone，应该归于与生活中使用到Google的东西太多了，GoogleReader，GoogleDoc，Gmail，Google日历等等，都是 必不可少的东西，若干Google手机上可以很好的把这些东西都整合进来，又能保证不会太笨重的话，我会买一部。<br />
期待赶快来吧，详细介绍请移步&ldquo;<a href="http://www.donews.com/Content/200809/faf4ef50-7ae6-4110-945c-f79765a685e7.shtm">iPhone也得低头 万众期待超炫Google手机现身</a>&rdquo;.</p>]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2008-09-01 12:58:51</wp:post_date>
		<wp:post_date_gmt>2008-09-01 12:58:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google%e6%89%8b%e6%9c%ba%e7%8e%b0%e8%ba%ab-%e5%80%bc%e5%be%97%e6%9c%9f%e5%be%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>开发Rails插件的方法和步骤</title>
		<link>http://www.iceskysl.com/?p=376</link>
		<pubDate>Mon, 01 Sep 2008 16:56:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=376</guid>
		<description></description>
		<content:encoded><![CDATA[Rails丰富的插件真是强大，幻想着把各个功能都做出插件，以后开发系统就像搭积木一样堆积就好啦，呵呵。
开发个Rails插件其实不难，或者说很简单，流程基本如下：
<strong>1、生成骨架</strong>
在Rails的script下有个generate，可以直接生成骨架，执行：
# ruby script/generate plugin foo
就会在$RAILS_ROOT/vendor/plugins下生成一个foo目录，如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>/1stlog</span><span class="variable">$ruby</span><span> script/generate plugin foo  </span></span></li>
	<li><span>      create  vendor/plugins/foo/lib  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/tasks  </span></li>
	<li><span>      create  vendor/plugins/foo/test  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/README  </span></li>
	<li><span>      create  vendor/plugins/foo/MIT-LICENSE  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/Rakefile  </span></li>
	<li><span>      create  vendor/plugins/foo/init.rb  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/install.rb  </span></li>
	<li><span>      create  vendor/plugins/foo/uninstall.rb  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/lib/foo.rb  </span></li>
	<li><span>      create  vendor/plugins/foo/tasks/foo_tasks.rake  </span></li>
	<li class="alt"><span>      create  vendor/plugins/foo/test/foo_test.rb  </span></li>
</ol>
</div>
<strong>2、编写相关代码</strong>
在lib/foo.rb 下编写你的插件代码即可。
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">module</span><span> Foo  </span></span></li>
	<li><span>  <span class="keyword">def</span><span> say_hello name  </span></span></li>
	<li class="alt"><span>    <span class="string">"hello #{name}"</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<strong>3、混入到core中去</strong>
在init.rb中编写混入代码即可。
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'foo'</span><span>    </span></span></li>
	<li><span>ActionController::Base.send <span class="symbol">:include</span><span>, Foo
</span></span></li>
</ol>
</div>
<strong>参考文档：</strong>
http://blog.ericsk.org/archives/769
http://blog.railschina.com/637/viewspace-236
http://kyoleelqh.javaeye.com/blog/215090]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails丰富的插件真是强大，幻想着把各个功能都做出插件，以后开发系统就像搭积木一样堆积就好啦，呵呵。<br />
开发个Rails插件其实不难，或者说很简单，流程基本如下：<br />
<strong>1、生成骨架</strong><br />
在Rails的script下有个generate，可以直接生成骨架，执行：<br />
# ruby script/generate plugin foo<br />
就会在$RAILS_ROOT/vendor/plugins下生成一个foo目录，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>/1stlog</span><span class="variable">$ruby</span><span>&nbsp;script/generate&nbsp;plugin&nbsp;foo&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/lib&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/tasks&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/test&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/README&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/MIT-LICENSE&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/Rakefile&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/init.rb&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/install.rb&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/uninstall.rb&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/lib/foo.rb&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/tasks/foo_tasks.rake&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;&nbsp;vendor/plugins/foo/test/foo_test.rb&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><strong>2、编写相关代码</strong><br />
在lib/foo.rb 下编写你的插件代码即可。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Foo&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;say_hello&nbsp;name&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;hello&nbsp;#{name}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>3、混入到core中去</strong><br />
在init.rb中编写混入代码即可。</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'foo'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>ActionController::Base.send&nbsp;<span class="symbol">:include</span><span>,&nbsp;Foo&nbsp;&nbsp;&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>参考文档：</strong><br />
http://blog.ericsk.org/archives/769<br />
http://blog.railschina.com/637/viewspace-236<br />
http://kyoleelqh.javaeye.com/blog/215090</p>]]></excerpt:encoded>
		<wp:post_id>376</wp:post_id>
		<wp:post_date>2008-09-01 16:56:56</wp:post_date>
		<wp:post_date_gmt>2008-09-01 16:56:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bc%80%e5%8f%91rails%e6%8f%92%e4%bb%b6%e7%9a%84%e6%96%b9%e6%b3%95%e5%92%8c%e6%ad%a5%e9%aa%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_034900d3f31ee0b99a26948dae6cb0ff</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e0e9331d15ba7c768300a0536767cfd7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8d0c1f69d51956f87dbb51181193129a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Chrome: Google推浏览器正面迎战IE8</title>
		<link>http://www.iceskysl.com/?p=377</link>
		<pubDate>Tue, 02 Sep 2008 09:45:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=377</guid>
		<description></description>
		<content:encoded><![CDATA[昨天说到“<a href="http://iceskysl.1sters.com/?action=show&amp;id=375">Google手机现身: 值得期待</a>”，然而今天又看到另外一个更让你期待的东西——<strong>Chrome</strong>，Google推出的浏览器。
<img src="http://lh3.ggpht.com/webleon/SLwapYIl7WI/AAAAAAAABhg/_t6wAvmMKfw/s400/google-chrome.png" alt="" />
相比<strong>GooglePhone</strong>，Chrome或许更让人们期待，因为它是免费的，也无需等待，只有发布就可以下载使用的，同样，是整合了大量google应用的。
Chrome的诞生肯定不是偶然，按照google的实力，别说搞个浏览器，搞个操作系统出来也不是不可能。相传N年前就流传Google要推出自己的浏览器，但是一直没有下文，按照现在的说法，Chrome已经开发了差不多两年时间，也就是说这么段时间内，Chrome都是在进行中的。
为何选择现在放出来，偶自己认为<strong>IE8</strong>的发布刺疼了Google的神经，虽然说Google的商业价值并不是IE8中那些伎俩可以打倒的，但是IE8表达的是微软的一个态度，微软使出杀手锏，可见其无奈和无助。
另外一个原因，近几年，firefox的成功让google有足够的信心推出自己的浏览器，firefox靠google的赞助和一些广告点击支付，占到了firefox每年85%的收入，如果google推出自己的浏览器，在性能和界面上可以匹敌firefox的话，在google强大的占用率上，推广肯定不是难事。近年来，马桶或者其他基于IE浏览器的成功都说明一个问题：浏览器只有做好浏览器的本职工作，又足够快速即可，如果google能加强对其浏览器安全性的推广，将其做为一个卖点的话，相信不少深受IE8安全问题的用户会转投其怀抱。
另外一个就是firefox可能会受到影响，因为firefox的用户相对高端，讲求速度和简洁，google的风格肯定是这个方向，肯定会吸引众多firefox的用户前来试水，如果满意的话，也有不少人会转投google怀抱。
至于消息是否准确，应该是差不多了，看其他地方的一些报道：
http://googleblog.blogspot.com/2008/09/fresh-take-on-browser.html
http://it.sohu.com/20080902/n259325162.shtml
http://webleon.org/2008/09/googlechrome.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>昨天说到&ldquo;<a href="../../../?action=show&amp;id=375">Google手机现身: 值得期待</a>&rdquo;，然而今天又看到另外一个更让你期待的东西&mdash;&mdash;<strong>Chrome</strong>，Google推出的浏览器。<br />
<img src="http://lh3.ggpht.com/webleon/SLwapYIl7WI/AAAAAAAABhg/_t6wAvmMKfw/s400/google-chrome.png" alt="" /><br />
相比<strong>GooglePhone</strong>，Chrome或许更让人们期待，因为它是免费的，也无需等待，只有发布就可以下载使用的，同样，是整合了大量google应用的。<br />
Chrome的诞生肯定不是偶然，按照google的实力，别说搞个浏览器，搞个操作系统出来也不是不可能。相传N年前就流传Google要推出自己的浏 览器，但是一直没有下文，按照现在的说法，Chrome已经开发了差不多两年时间，也就是说这么段时间内，Chrome都是在进行中的。<br />
为何选择现在放出来，偶自己认为<strong>IE8</strong>的发布刺疼了Google的神经，虽然说Google的商业价值并不是IE8中那些伎俩可以打倒的，但是IE8表达的是微软的一个态度，微软使出杀手锏，可见其无奈和无助。<br />
另外一个原因，近几年，firefox的成功让google有足够的信心推出自己的浏览器，firefox靠google的赞助和一些广告点击支付，占到 了firefox每年85%的收入，如果google推出自己的浏览器，在性能和界面上可以匹敌firefox的话，在google强大的占用率上，推广 肯定不是难事。近年来，马桶或者其他基于IE浏览器的成功都说明一个问题：浏览器只有做好浏览器的本职工作，又足够快速即可，如果google能加强对其 浏览器安全性的推广，将其做为一个卖点的话，相信不少深受IE8安全问题的用户会转投其怀抱。<br />
另外一个就是firefox可能会受到影响，因为firefox的用户相对高端，讲求速度和简洁，google的风格肯定是这个方向，肯定会吸引众多firefox的用户前来试水，如果满意的话，也有不少人会转投google怀抱。<br />
至于消息是否准确，应该是差不多了，看其他地方的一些报道：<br />
http://googleblog.blogspot.com/2008/09/fresh-take-on-browser.html<br />
http://it.sohu.com/20080902/n259325162.shtml<br />
http://webleon.org/2008/09/googlechrome.html</p>]]></excerpt:encoded>
		<wp:post_id>377</wp:post_id>
		<wp:post_date>2008-09-02 09:45:09</wp:post_date>
		<wp:post_date_gmt>2008-09-02 09:45:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chrome-google%e6%8e%a8%e6%b5%8f%e8%a7%88%e5%99%a8%e6%ad%a3%e9%9d%a2%e8%bf%8e%e6%88%98ie8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_dc82ab8b861e17792d3f9cc23ac6b7a8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_89a3b986cfa53480deaa16af796faaf5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6dafdea595d23d6bcbad5235e5f818dd</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Download Chrome: 可以开始下载chrome</title>
		<link>http://www.iceskysl.com/?p=378</link>
		<pubDate>Wed, 03 Sep 2008 00:58:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=378</guid>
		<description></description>
		<content:encoded><![CDATA[充满期待的<a href="../../../?action=show&amp;id=377">chrome</a>，希望不要让大家失望，仔细的看了他的那本连环画，觉得还不错，最主要功能看点将是其如何整合已有的Google应用。

按照其发布说法，将在美国时间，周二开始提供下载，也就是中国的9.3号了，现在已经凌晨1点啦啦，貌似2点可以下载，偶是不等了，明天起来再试试。

推测下载地址：<a href="http://gears.google.com/chrome/?hl=en">http://gears.google.com/chrome/?hl=en</a>  或者是 <a href="http://www.google.com/chrome">http://www.google.com/chrome</a>

<strong>ps:</strong><em>网上很多钓鱼的网站已经出来了，冒充chrome的下载，有的是恶作剧，有的是木马，请大家耐心等下下，一定记得从上面这个主页上下，切记！</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>充满期待的<a href="../../../?action=show&amp;id=377">chrome</a>，希望不要让大家失望，仔细的看了他的那本连环画，觉得还不错，最主要功能看点将是其如何整合已有的Google应用。</p>
<p>按照其发布说法，将在美国时间，周二开始提供下载，也就是中国的9.3号了，现在已经凌晨1点啦啦，貌似2点可以下载，偶是不等了，明天起来再试试。</p>
<p>推测下载地址：<a href="http://gears.google.com/chrome/?hl=en">http://gears.google.com/chrome/?hl=en</a>&nbsp; 或者是 <a href="http://www.google.com/chrome">http://www.google.com/chrome</a></p>
<p><strong>ps:</strong><em>网上很多钓鱼的网站已经出来了，冒充chrome的下载，有的是恶作剧，有的是木马，请大家耐心等下下，一定记得从上面这个主页上下，切记！</em></p>]]></excerpt:encoded>
		<wp:post_id>378</wp:post_id>
		<wp:post_date>2008-09-03 00:58:03</wp:post_date>
		<wp:post_date_gmt>2008-09-03 00:58:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>download-chrome-%e5%8f%af%e4%bb%a5%e5%bc%80%e5%a7%8b%e4%b8%8b%e8%bd%bdchrome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>喔唷,崩溃啦! Chrome启动异常解决方法</title>
		<link>http://www.iceskysl.com/?p=379</link>
		<pubDate>Thu, 04 Sep 2008 09:32:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[前面说到了，<a href="../../../?action=show&amp;id=378">Google的浏览器</a>Chrome在我工作环境下启动不成功，一启动就报告说XXX初始化失败，然后就显示“喔唷,崩溃啦!”，导致不可用。
查了下原因，有如下几个可能：
1、我是内网 ；
2、我使用了一个安全软件SPA；
3、我是windows xp sp3
分析了下原因，很多人的XP SP3可以跑，说明3不是问题，有人是内网可以使用，说明1一哦不是问题，那么就剩下2这个原因了。
经过多方查找，找到原因：
<em>由于采用了sandbox技术，被spa无情的干掉了，即使在SPA被干掉的情况下，chrome也无法正常启动。 </em>

<strong>解决方法：</strong>
手工在command界面里面执行 <strong>chrome.exe -no-sandbox </strong>
或者在你的快捷方式-右键-属性，在“目标”里面最后加上-no-sandbox 类似这样
"C:\Documents and Settings\iceskysl\Local Settings\Application Data\Google\Chrome\Application\chrome.exe" -no-sandbox]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面说到了，<a href="http://iceskysl.1sters.com/?action=show&amp;id=378">Google的浏览器</a>Chrome在我工作环境下启动不成功，一启动就报告说XXX初始化失败，然后就显示&ldquo;喔唷,崩溃啦!&rdquo;，导致不可用。<br />
查了下原因，有如下几个可能：<br />
1、我是内网 ；<br />
2、我使用了一个安全软件SPA； <br />
3、我是windows xp sp3  <br />
分析了下原因，很多人的XP SP3可以跑，说明3不是问题，有人是内网可以使用，说明1一哦不是问题，那么就剩下2这个原因了。 <br />
经过多方查找，找到原因： <br />
<em>由于采用了sandbox技术，被spa无情的干掉了，即使在SPA被干掉的情况下，chrome也无法正常启动。  </em><br />
<br />
<strong>解决方法：</strong><br />
手工在command界面里面执行 <strong>chrome.exe -no-sandbox </strong><br />
或者在你的快捷方式-右键-属性，在&ldquo;目标&rdquo;里面最后加上-no-sandbox 类似这样<br />
&quot;C:\Documents and Settings\iceskysl\Local Settings\Application Data\Google\Chrome\Application\chrome.exe&quot; -no-sandbox</p>]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2008-09-04 09:32:20</wp:post_date>
		<wp:post_date_gmt>2008-09-04 09:32:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%96%94%e5%94%b7%e5%b4%a9%e6%ba%83%e5%95%a6-chrome%e5%90%af%e5%8a%a8%e5%bc%82%e5%b8%b8%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>288</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2008-09-05 09:09:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再次出现漏洞：
Security of Google\'s browser gets mixed marks
http://www.securityfocus.com/news/11533?ref=rss]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>289</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.65.202</wp:comment_author_IP>
			<wp:comment_date>2008-09-06 02:26:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[又暴一个漏洞：
http://www.milw0rm.com/exploits/6372
（Google Chrome Browser 0.2.149.27 Remote DoS）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>NeverBlock到底有多快,对比测试说明问题</title>
		<link>http://www.iceskysl.com/?p=380</link>
		<pubDate>Thu, 04 Sep 2008 10:18:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=380</guid>
		<description></description>
		<content:encoded><![CDATA[前面写过一篇《<a href="http://iceskysl.1sters.com/?action=show&amp;id=369&amp;page=1#cm409">NeverBlock: 非常值得期待的一组类库</a>》，其中说到了采用NeverBlock的non-blocking, concurrent机制，可以很大程度上提高mysql或者PostgreSQL的使用率，很多限度的提高性能。
但是没有给出具体的对比测试数据，今天看到有个哥们已经使用Thin，Rails和PostgreSQL做了一次对比测试，相关环境如下：
<div class="codeText">
<div class="codeHead">服务器配置</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>1 - 1 Thin server, normal postgreSQL Adapter  </span></span></li>
	<li><span>2 - 2 Thin servers (behind nginx), normal postgreSQL Adapter  </span></li>
	<li class="alt"><span>3 - 4 Thin servers (behind nginx), normal postgreSQL Adapter  </span></li>
	<li><span>4 - 1 Thin server, neverblock postgreSQL Adapter  </span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">压力配置</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>1 - Very light  work load,  every 200 requests, one "select sleep(1)" would be issued  </span></span></li>
	<li><span>2 - Light work load,        every 100 requests, one "select sleep(1)" would be issued  </span></li>
	<li class="alt"><span>3 - Moderate work load,     every 50  requests, one "select sleep(1)" would be issued  </span></li>
	<li><span>4 - Heavy work load,        every 20  requests, one "select sleep(1)" would be issued  </span></li>
	<li class="alt"><span>5 - Very heavy work load,   every 10  requests, one "select sleep(1)" would be issued  </span></li>
</ol>
</div>
其结果对比如下：
<img src="http://www.espace.com.eg/assets/neverblock/images/charts/1.gif" alt="" />

再来一张并发量的对比测试：
<img src="http://www.espace.com.eg/assets/neverblock/images/charts/2.gif" alt="" />

接下来，，需要等待Ruby1.9和Rails2.2的到来，加上如上的测试对比，可以想象得到，Rails的性能会上很大一个台阶的。

<strong>参考文档：</strong>
<a href="http://oldmoe.blogspot.com/2008/09/building-never-blocking-rails-making.html">http://oldmoe.blogspot.com/2008/09/building-never-blocking-rails-making.html</a>
http://chinaonrails.com/topic/view/1974.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面写过一篇《<a href="../../../?action=show&amp;id=369&amp;page=1#cm409">NeverBlock: 非常值得期待的一组类库</a>》，其中说到了采用NeverBlock的non-blocking, concurrent机制，可以很大程度上提高mysql或者PostgreSQL的使用率，很多限度的提高性能。<br />
但是没有给出具体的对比测试数据，今天看到有个哥们已经使用Thin，Rails和PostgreSQL做了一次对比测试，相关环境如下：</p>
<div class="codeText">
<div class="codeHead">服务器配置</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>1&nbsp;-&nbsp;1&nbsp;Thin&nbsp;server,&nbsp;normal&nbsp;postgreSQL&nbsp;Adapter&nbsp;&nbsp;</span></span></li>
    <li class=""><span>2&nbsp;-&nbsp;2&nbsp;Thin&nbsp;servers&nbsp;(behind&nbsp;nginx),&nbsp;normal&nbsp;postgreSQL&nbsp;Adapter&nbsp;&nbsp;</span></li>
    <li class="alt"><span>3&nbsp;-&nbsp;4&nbsp;Thin&nbsp;servers&nbsp;(behind&nbsp;nginx),&nbsp;normal&nbsp;postgreSQL&nbsp;Adapter&nbsp;&nbsp;</span></li>
    <li class=""><span>4&nbsp;-&nbsp;1&nbsp;Thin&nbsp;server,&nbsp;neverblock&nbsp;postgreSQL&nbsp;Adapter&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">压力配置</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>1&nbsp;-&nbsp;Very&nbsp;light&nbsp;&nbsp;work&nbsp;load,&nbsp;&nbsp;every&nbsp;200&nbsp;requests,&nbsp;one&nbsp;&quot;select&nbsp;sleep(1)&quot;&nbsp;would&nbsp;be&nbsp;issued&nbsp;&nbsp;</span></span></li>
    <li class=""><span>2&nbsp;-&nbsp;Light&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;every&nbsp;100&nbsp;requests,&nbsp;one&nbsp;&quot;select&nbsp;sleep(1)&quot;&nbsp;would&nbsp;be&nbsp;issued&nbsp;&nbsp;</span></li>
    <li class="alt"><span>3&nbsp;-&nbsp;Moderate&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;every&nbsp;50&nbsp;&nbsp;requests,&nbsp;one&nbsp;&quot;select&nbsp;sleep(1)&quot;&nbsp;would&nbsp;be&nbsp;issued&nbsp;&nbsp;</span></li>
    <li class=""><span>4&nbsp;-&nbsp;Heavy&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;every&nbsp;20&nbsp;&nbsp;requests,&nbsp;one&nbsp;&quot;select&nbsp;sleep(1)&quot;&nbsp;would&nbsp;be&nbsp;issued&nbsp;&nbsp;</span></li>
    <li class="alt"><span>5&nbsp;-&nbsp;Very&nbsp;heavy&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;every&nbsp;10&nbsp;&nbsp;requests,&nbsp;one&nbsp;&quot;select&nbsp;sleep(1)&quot;&nbsp;would&nbsp;be&nbsp;issued&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>其结果对比如下：<br />
<img src="http://www.espace.com.eg/assets/neverblock/images/charts/1.gif" alt="" /><br />
<br />
再来一张并发量的对比测试：<br />
<img src="http://www.espace.com.eg/assets/neverblock/images/charts/2.gif" alt="" /><br />
<br />
接下来，，需要等待Ruby1.9和Rails2.2的到来，加上如上的测试对比，可以想象得到，Rails的性能会上很大一个台阶的。<br />
<br />
<strong>参考文档：</strong><br />
<a href="http://oldmoe.blogspot.com/2008/09/building-never-blocking-rails-making.html">http://oldmoe.blogspot.com/2008/09/building-never-blocking-rails-making.html</a><br />
http://chinaonrails.com/topic/view/1974.html</p>]]></excerpt:encoded>
		<wp:post_id>380</wp:post_id>
		<wp:post_date>2008-09-04 10:18:08</wp:post_date>
		<wp:post_date_gmt>2008-09-04 10:18:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neverblock%e5%88%b0%e5%ba%95%e6%9c%89%e5%a4%9a%e5%bf%ab%e5%af%b9%e6%af%94%e6%b5%8b%e8%af%95%e8%af%b4%e6%98%8e%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_deab528cc9c77ed6bf77df6a7303ea8e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>290</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2008-09-05 09:12:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再次看到好消息，其通过Aman Gupta's Poor Man's Fibers，NeverBlock 可以支持Ruby1.8了，这非常棒。如下是新的特性：（我等下会测试一下）
Today marks a milestone in the short history of NeverBlock. We have pushed a new release with lots of new features, mainly:

   1. NeverBlock now supports Ruby1.8.
   2. NeverBlock support for Thin and Mongrel servers.
   3. NeverBlock now supports Ruby on Rails.
期待。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>291</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2008-09-05 09:24:44</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看到其他人的反馈，貌似在find_by_sql 的时候还存在一些bug，oldmoe  正在定位和解决。
应该问题不大，因为很多人已经用上了，大家的反馈是很棒，看来是个好东西。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>292</wp:comment_id>
			<wp:comment_author><![CDATA[Ice]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.135.88</wp:comment_author_IP>
			<wp:comment_date>2008-09-05 12:23:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[配置很简单：
adapter: neverblock_mysql
connections: 12

require 'never_block/frameworks/rails'
require 'never_block/servers/thin']]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Xsstc: 通过CSS跨站运行script</title>
		<link>http://www.iceskysl.com/?p=381</link>
		<pubDate>Thu, 04 Sep 2008 10:50:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[Xsstc: <em>Cross-site scripting through CSS data</em>，看名字就看出来了，通过CSS跨站运行script，使用方法:
<ul>
	<li>导入<a onclick="javascript:pageTracker._trackPageview('/outgoing/www.tralfamadore.com/xsstcx.js');" href="http://www.tralfamadore.com/xsstcx.js" target="_blank">xsstcx.js</a>(未压缩版<a onclick="javascript:pageTracker._trackPageview('/outgoing/www.tralfamadore.com/xsstc.js');" href="http://www.tralfamadore.com/xsstc.js" target="_blank">xsstc.js</a>)</li>
	<li>添加一个id=”Xsstc”的空DIV。</li>
	<li>在JS中调用Xsstc.exec(functionURL, callback)，使用的内容作为callback的参数传入callback中</li>
</ul>
其中CSS的定义也有要求，下面是Hello World中CSS的定义
<div class="codeText">
<div class="codeHead">CSS代码</div>
<div class="codeHead">
<pre><code>&lt;pre lang="css"&gt; </code>
Xsstc {
 background-image: url('about:blank#Hello%20World');
}</pre>
<pre><code>&lt;/pre&gt;</code></pre>
</div>
</div>
<div class="codeText">
<div class="codeHead">JavaScript代码</div>
<ol class="dp-c" start="1">
	<li class="alt"><span><span>Xsstc.exec(</span><span class="string">'http://lbs.tralfamadore.com/test.css'</span><span>, showResponse)  </span></span></li>
</ol>
</div>
<strong>参考文档：</strong>

原文说明: http://ajaxian.com/archives/xsstc-cross-site-scripting-through-css-data
测试页面:http://www.tralfamadore.com/test-xsstc.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Xsstc: <em>Cross-site scripting through CSS data</em>，看名字就看出来了，通过CSS跨站运行script，使用方法:</p>
<ul>
    <li>导入<a target="_blank" href="http://www.tralfamadore.com/xsstcx.js" onclick="javascript:pageTracker._trackPageview('/outgoing/www.tralfamadore.com/xsstcx.js');">xsstcx.js</a>(未压缩版<a target="_blank" href="http://www.tralfamadore.com/xsstc.js" onclick="javascript:pageTracker._trackPageview('/outgoing/www.tralfamadore.com/xsstc.js');">xsstc.js</a>)</li>
    <li>添加一个id=&rdquo;Xsstc&rdquo;的空DIV。</li>
    <li>在JS中调用Xsstc.exec(functionURL, callback)，使用的内容作为callback的参数传入callback中</li>
</ul>
<p>其中CSS的定义也有要求，下面是Hello World中CSS的定义</p>
<div class="codeText">
<div class="codeHead">CSS代码</div>
<ol start="1" class="dp-css">
    <li class="alt"><span><span>Xsstc&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;<span class="keyword">background-image</span><span>:&nbsp;</span><span class="string">url</span><span>(</span><span class="string">'about:blank#Hello%20World'</span><span>);&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">JavaScript代码</div>
<ol start="1" class="dp-c">
    <li class="alt"><span><span>Xsstc.exec(</span><span class="string">'http://lbs.tralfamadore.com/test.css'</span><span>,&nbsp;showResponse)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><strong>参考文档：</strong></p>
<p>原文说明: http://ajaxian.com/archives/xsstc-cross-site-scripting-through-css-data</p>
<p>测试页面:http://www.tralfamadore.com/test-xsstc.html</p>]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2008-09-04 10:50:53</wp:post_date>
		<wp:post_date_gmt>2008-09-04 10:50:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xsstc-%e9%80%9a%e8%bf%87css%e8%b7%a8%e7%ab%99%e8%bf%90%e8%a1%8cscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="htmlcssjs"><![CDATA[Html/css/js]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Rails]Rails 2.1.1发布，包括众多更新</title>
		<link>http://www.iceskysl.com/?p=382</link>
		<pubDate>Sat, 06 Sep 2008 01:50:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=382</guid>
		<description></description>
		<content:encoded><![CDATA[Rails2.1.1版本发布，修复了前面说到的<a href="../../../?action=show&amp;id=362">REXML的漏洞</a>，其他都是一些小修小补，不值一提，但是令人期待的是后续的Rails2.2版本，按照DHH的说法：<em><span class="Apple-style-span" style="border-collapse: separate; color: #333333; font-family: georgia; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">Next upcoming release will be Rails 2.2 beta which is quite close.</span></em>

<span class="Apple-style-span" style="border-collapse: separate; color: #333333; font-family: georgia; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">Rails2.2的一些特性，比如<a href="../../../?action=show&amp;id=370">全球化支持</a>，增加<a href="../../../?action=show&amp;id=371">线程安全</a>等几个是我们已经知道的，其他还会有哪些改进呢，非常值得期待。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails2.1.1版本发布，修复了前面说到的<a href="http://iceskysl.1sters.com/?action=show&amp;id=362">REXML的漏洞</a>，其他都是一些小修小补，不值一提，但是令人期待的是后续的Rails2.2版本，按照DHH的说法：<em><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: georgia; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">Next upcoming release will be Rails 2.2 beta which is quite close.</span></em></p>
<p><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: georgia; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">Rails2.2的一些特性，比如<a href="../../../?action=show&amp;id=370">全球化支持</a>，增加<a href="../../../?action=show&amp;id=371">线程安全</a>等几个是我们已经知道的，其他还会有哪些改进呢，非常值得期待。</span></p>]]></excerpt:encoded>
		<wp:post_id>382</wp:post_id>
		<wp:post_date>2008-09-06 01:50:56</wp:post_date>
		<wp:post_date_gmt>2008-09-06 01:50:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railsrails-2-1-1%e5%8f%91%e5%b8%83%ef%bc%8c%e5%8c%85%e6%8b%ac%e4%bc%97%e5%a4%9a%e6%9b%b4%e6%96%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NEVERBLOCK支持Ruby1.8,性能对比测试,提升非常显著</title>
		<link>http://www.iceskysl.com/?p=383</link>
		<pubDate>Sat, 06 Sep 2008 02:20:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=383</guid>
		<description></description>
		<content:encoded><![CDATA[前面有篇文章介绍了NeverBlock，其一篇是<a href="http://iceskysl.1sters.com/?action=show&amp;id=369">关于NeverBlock 原理介绍</a>的，另外一篇是<a href="http://iceskysl.1sters.com/?action=show&amp;id=380">在ruby1.9下做的对比测</a>试，当时我们说：接下来，，需要等待Ruby1.9和Rails2.2的到来，加上如上的测试对比，可以想象得到，Rails的性能会上很大一个台阶的。现在有个好消息是，NeverBlock支持了Ruby1.8（通过一些手法），这次看到其更新的特性如下：
<ul>
	<li>   NeverBlock now supports Ruby1.8.</li>
	<li>   NeverBlock support for Thin and Mongrel servers.</li>
	<li>   NeverBlock now supports Ruby on Rails.on</li>
</ul>
也就是说，现在NeverBlock支持Ruby1.8，支持Thin和mongrel服务器，另外支持Rails，测试方法很简单：
<strong>1、安装需要的额外的系统类库</strong>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>apt-get install libmysql++-dev
</span></span></li>
</ol>
</div>
<strong>2、安装需要的gems</strong>
下载这几个包，<span style="color: #ff0000;"><span class="Apple-style-span" style="border-collapse: separate; color: #ffffff; font-family: Arial; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"><span style="color: #339966;">NeverBlock (<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/neverblock/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/neverblock/tarball/master">tar.gz</a>), Mysqlplus (<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/mysqlplus/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/mysqlplus/tarball/master">tar.gz</a>), EventMachine (<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/eventmachine/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: #ffffff;" href="http://github.com/espace/eventmachine/tarball/master">tar.gz</a></span>)</span></span>，
然后解压各自包；tar -zxvf (respective file name).tar.gz
然后CD到各自目录中build成gem；gem build (respective file name).gemspec
最后gen install；gem install (generated file name).gem
<strong>3、修改environment.rb</strong>
require 'never_block/frameworks/rails'
require 'never_block/servers/thin'（如果是mongrel，则require 'never_block/servers/mongrel'）
<strong>4、修改database.yml</strong>
adapter: neverblock_mysql （如果是postgresql，则为 adapter: neverblock_postgresql ）
connections: 12 # will spawn 12 connections instead of the defualt 4 #连接数
<strong>5、重启thin（mongrel即可）</strong>

以上步骤没有问题，我已经测试过了。

<strong>下面附几个别人做的对比测试：</strong>
<div class="codeText">
<div class="codeHead">测试环境如下：</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>Rails 2.1  </span></span></li>
	<li><span>Thin 0.82  </span></li>
	<li class="alt"><span>Ruby 1.8.6  </span></li>
	<li><span>MySQL 5.0  </span></li>
	<li class="alt"><span>A special build of EventMachine 0.12  </span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">系统负载构造：</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>1 - Moderate work load,    one slow request for every 050 requests  </span></span></li>
	<li><span>2 - Heavy work load,       one slow request for every 020 requests  </span></li>
	<li class="alt"><span>3 - Very heavy work load,  one slow request for every 010 requests
</span></li>
</ol>
</div>
<strong>结果如下：</strong>

Rails Performance (Thin Vs.NeverBlock::Thin)

<img src="http://www.espace.com.eg/assets/neverblock/images/charts/8.gif" alt="" />

NeverBlock::Thin scaling

<img src="http://www.espace.com.eg/assets/neverblock/images/charts/10.gif" alt="" />

Memory Consumption (Thin Vs. NeverBlock::Thin)

<img src="http://www.espace.com.eg/assets/neverblock/images/charts/11.gif" alt="" />

&nbsp;

PS：刚刚发布的时候存在一个find_by_sql的bug，现在已经修复了。

<strong>参考文档：</strong>

<a href="http://www.espace.com.eg/neverblock/blog/2008/09/04/neverblock-instant-scaling-for-your-rails-apps/">http://www.espace.com.eg/neverblock/blog/2008/09/04/neverblock-instant-scaling-for-your-rails-apps/</a>

<a href="http://chinaonrails.com/topic/view/2123.html">http://chinaonrails.com/topic/view/2123.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面有篇文章介绍了NeverBlock，其一篇是<a href="../../../?action=show&amp;id=369">关于NeverBlock 原理介绍</a>的，另外一篇是<a href="../../../?action=show&amp;id=380">在ruby1.9下做的对比测</a>试，当时我们说：接下来，，需要等待Ruby1.9和Rails2.2的到来，加上如上的测试对比，可以想象得到，Rails的性能会上很大一个台阶的。现在有个好消息是，NeverBlock支持了Ruby1.8（通过一些手法），这次看到其更新的特性如下：</p>
<ul>
    <li>&nbsp;&nbsp; NeverBlock now supports Ruby1.8.</li>
    <li>&nbsp;&nbsp; NeverBlock support for Thin and Mongrel servers.</li>
    <li>&nbsp;&nbsp; NeverBlock now supports Ruby on Rails.on</li>
</ul>
<p>也就是说，现在NeverBlock支持Ruby1.8，支持Thin和mongrel服务器，另外支持Rails，测试方法很简单：<br />
<strong>1、安装需要的额外的系统类库</strong></p>
<div class="codeText">
<div class="codeHead">Shell代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>apt-get&nbsp;install&nbsp;libmysql++-dev&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p><strong>2、安装需要的gems</strong><br />
下载这几个包，<font color="#ff0000"><span style="border-collapse: separate; color: rgb(255, 255, 255); font-family: Arial; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><font color="#339966">NeverBlock (<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/neverblock/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/neverblock/tarball/master">tar.gz</a>), Mysqlplus (<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/mysqlplus/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/mysqlplus/tarball/master">tar.gz</a>), EventMachine (<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/eventmachine/zipball/master">zip</a>|<a style="outline-width: 0px; cursor: pointer; color: rgb(255, 255, 255);" href="http://github.com/espace/eventmachine/tarball/master">tar.gz</a></font>)</span></font>，<br />
然后解压各自包；tar -zxvf (respective file name).tar.gz<br />
然后CD到各自目录中build成gem；gem build (respective file name).gemspec<br />
最后gen install；gem install (generated file name).gem<br />
<strong>3、修改environment.rb</strong><br />
require 'never_block/frameworks/rails' <br />
require 'never_block/servers/thin'（如果是mongrel，则require 'never_block/servers/mongrel'）<br />
<strong>4、修改database.yml</strong><br />
adapter: neverblock_mysql （如果是postgresql，则为 adapter: neverblock_postgresql ）<br />
connections: 12 # will spawn 12 connections instead of the defualt 4 #连接数<br />
<strong>5、重启thin（mongrel即可）</strong></p>
<p>以上步骤没有问题，我已经测试过了。<br />
<br />
<strong>下面附几个别人做的对比测试：</strong></p>
<div class="codeText">
<div class="codeHead">测试环境如下：</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>Rails&nbsp;2.1&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Thin&nbsp;0.82&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Ruby&nbsp;1.8.6&nbsp;&nbsp;</span></li>
    <li class=""><span>MySQL&nbsp;5.0&nbsp;&nbsp;</span></li>
    <li class="alt"><span>A&nbsp;special&nbsp;build&nbsp;of&nbsp;EventMachine&nbsp;0.12&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">系统负载构造：</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>1&nbsp;-&nbsp;Moderate&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;slow&nbsp;request&nbsp;for&nbsp;every&nbsp;050&nbsp;requests&nbsp;&nbsp;</span></span></li>
    <li class=""><span>2&nbsp;-&nbsp;Heavy&nbsp;work&nbsp;load,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;slow&nbsp;request&nbsp;for&nbsp;every&nbsp;020&nbsp;requests&nbsp;&nbsp;</span></li>
    <li class="alt"><span>3&nbsp;-&nbsp;Very&nbsp;heavy&nbsp;work&nbsp;load,&nbsp;&nbsp;one&nbsp;slow&nbsp;request&nbsp;for&nbsp;every&nbsp;010&nbsp;requests&nbsp; <br />
    </span></li>
</ol>
</div>
<p><strong>结果如下：</strong></p>
<p>Rails Performance (Thin Vs.NeverBlock::Thin)</p>
<p><img src="http://www.espace.com.eg/assets/neverblock/images/charts/8.gif" alt="" /></p>
<p>NeverBlock::Thin scaling</p>
<p><img src="http://www.espace.com.eg/assets/neverblock/images/charts/10.gif" alt="" /></p>
<p>Memory Consumption (Thin Vs. NeverBlock::Thin)</p>
<p><img src="http://www.espace.com.eg/assets/neverblock/images/charts/11.gif" alt="" /></p>
<p>&nbsp;</p>
<p>PS：刚刚发布的时候存在一个find_by_sql的bug，现在已经修复了。</p>
<p><strong>参考文档：</strong></p>
<p><a href="http://www.espace.com.eg/neverblock/blog/2008/09/04/neverblock-instant-scaling-for-your-rails-apps/">http://www.espace.com.eg/neverblock/blog/2008/09/04/neverblock-instant-scaling-for-your-rails-apps/</a></p>
<p><a href="http://chinaonrails.com/topic/view/2123.html">http://chinaonrails.com/topic/view/2123.html</a></p>]]></excerpt:encoded>
		<wp:post_id>383</wp:post_id>
		<wp:post_date>2008-09-06 02:20:12</wp:post_date>
		<wp:post_date_gmt>2008-09-06 02:20:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neverblock%e6%94%af%e6%8c%81ruby1-8%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94%e6%b5%8b%e8%af%95%e6%8f%90%e5%8d%87%e9%9d%9e%e5%b8%b8%e6%98%be%e8%91%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>293</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.133.129</wp:comment_author_IP>
			<wp:comment_date>2008-09-06 09:57:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有人在外面又包了一层，详细请参考：
Asynchronous Database Access in Ruby:
http://www.igvita.com/2008/09/05/asynchronous-database-access-in-ruby/
http://github.com/tmm1/em-mysql/tree/master]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>294</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.67.68</wp:comment_author_IP>
			<wp:comment_date>2008-09-10 02:00:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[刚刚在我自己的电脑上（Ubuntu8.04+xfce)下，在Rails2.1,RUby1.8下，使用Nginx和thin测试NEVERBLOCK的性能，很遗憾的是，并不令我满意。。
硬件及其版本配置：
iceskysl@IceskYsl:~$ rails -v
Rails 2.1.0
iceskysl@IceskYsl:~$ ruby -v
ruby 1.8.6 (2007-03-13 patchlevel 0) [i686-linux]
iceskysl@IceskYsl:~$ gem -v
1.1.1
iceskysl@IceskYsl:~$ uname -a
Linux IceskYsl 2.6.24-21-generic #1 SMP Mon Aug 25 17:32:09 UTC 2008 i686 GNU/Linux
iceskysl@IceskYsl:~$ free
             total       used       free     shared    buffers     cached
Mem:       1545908    1498412      47496          0      24884     434896
-/+ buffers/cache:    1038632     507276
Swap:       979924      41240     938684
iceskysl@IceskYsl:~$
相关过程已经记录了，有时间整理出来大家瞧瞧。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Rails]2.2版本即将来临，新功能提前看(一)</title>
		<link>http://www.iceskysl.com/?p=384</link>
		<pubDate>Mon, 08 Sep 2008 09:49:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=384</guid>
		<description></description>
		<content:encoded><![CDATA[前面一篇文章“<a href="../../../?action=show&amp;id=382">Rails 2.1.1发布，包括众多更新</a>”说到“<em>Rails2.1.1版本发布，修复了前面说到的<a href="../../../?action=show&amp;id=362">REXML的漏洞</a>，其他都是一些小修小补，不值一提，但是令人期待的是后续的Rails2.2版本</em>”，今天看到Ryan已经陆续的介绍Rails2.2中的新特性。
<strong>1、Shallow Routes</strong>
以前在routing里写嵌套的资源为：
<div class="codeText">
<div class="codeHead">routing写法</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>map.resources </span><span class="symbol">:users</span><span> </span><span class="keyword">do</span><span> |user|  </span></span></li>
	<li><span>  user.resources <span class="symbol">:articles</span><span> </span><span class="keyword">do</span><span> |article|  </span></span></li>
	<li class="alt"><span>    article.resourcs <span class="symbol">:comments</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
将使得对articles和comments的引用只能是如下格式 /users/1/articles、/users/1/articles/1/comments这样的URL，如果想直接引用资源，就有问题了，在Rails2.2中奖引入一个新的特性shallow route option，可以增加这个功能，routing写法为：
<div class="codeText">
<div class="codeHead">routing写法</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>map.resources </span><span class="symbol">:users</span><span>, </span><span class="symbol">:shallpow</span><span> =&gt; </span><span class="keyword">true</span><span> </span><span class="keyword">do</span><span> |user|  </span></span></li>
	<li><span>  user.resources <span class="symbol">:articles</span><span> </span><span class="keyword">do</span><span> |article|  </span></span></li>
	<li class="alt"><span>    article.resourcs <span class="symbol">:comments</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
上面这个写法将保留以前的资源引用格式，同时增加如下的引用方法：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>articles_path </span><span class="comment">#=&gt; '/articles'  </span><span>  </span></span></li>
	<li><span>comments_path <span class="comment">#=&gt; '/comments'  </span><span>  </span></span></li>
	<li class="alt"><span>article_comments_path(<span class="variable">@article</span><span>) </span><span class="comment">#=&gt; '/articles/1/comments'  </span><span>  </span></span></li>
</ol>
</div>
详细参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-shallow-routes">What's New in Edge Rails: Shallow Routes</a>

<strong>2、Mailer Layouts</strong>
在Rails2.2中将加入Mailer布局模板，就像view-template一样，每个mailer可以有一个模板，其默认的是mailer加上<strong><em>_mailer</em></strong>后缀，比如下面：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> UserMailer &lt; ActionMailer::Base  </span></span></li>
	<li><span>  <span class="keyword">def</span><span> registration(user)  </span></span></li>
	<li class="alt"><span>    subject    <span class="string">"You've registered"</span><span>  </span></span></li>
	<li><span>    from       <span class="string">"system@example.com"</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
将会自动匹配layouts/user_mailer.html.erb这个布局模板 。当然，你也可以自己手工指定其对应的模板，如下：
<div class="codeText">
<div class="codeHead">手工指定模板</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> UserMailer &lt; ActionMailer::Base  </span></span></li>
	<li><span>  layout <span class="string">'email'</span><span>  </span></span></li>
	<li class="alt"><span>  ...  </span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-mailer-layouts">What's New in Edge Rails: Mailer Layouts</a>

<strong>3、Connection Pools</strong>
前面说过，在Rails2.2中将会实现线程安全，如此以来，连接池的实现也就不在话下了，在Rails2.2中将增加连接池的特性，使用方法非常简单，直接在database.yml配置即可，如下：
<div class="codeText">
<div class="codeHead">database.yml</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>development:  </span></span></li>
	<li><span>  adapter: mysql  </span></li>
	<li class="alt"><span>  username: root  </span></li>
	<li><span>  database: myapp_dev  </span></li>
	<li class="alt"><span>  <span style="color: #ff0000;">pool: 10 </span> </span></li>
</ol>
</div>
这个特性将极大的提高Rails的性能，非常值得期待。另外，还记得前面我们介绍过的“<a href="../../../?action=show&amp;id=380">NeverBlock到底有多快,对比测试说明问题</a> ”么，同样值得期待。更多特性还有待慢慢介绍。
参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-connection-pools"> What's New in Edge Rails: Connection Pools</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前面一篇文章&ldquo;<a href="../../../?action=show&amp;id=382">Rails 2.1.1发布，包括众多更新</a>&rdquo;说到&ldquo;<em>Rails2.1.1版本发布，修复了前面说到的<a href="../../../?action=show&amp;id=362">REXML的漏洞</a>，其他都是一些小修小补，不值一提，但是令人期待的是后续的Rails2.2版本</em>&rdquo;，今天看到Ryan已经陆续的介绍Rails2.2中的新特性。<br />
<strong>1、Shallow Routes</strong><br />
以前在routing里写嵌套的资源为：</p>
<div class="codeText">
<div class="codeHead">routing写法</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>map.resources&nbsp;</span><span class="symbol">:users</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|user|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;user.resources&nbsp;<span class="symbol">:articles</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|article|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;article.resourcs&nbsp;<span class="symbol">:comments</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>将使得对articles和comments的引用只能是如下格式 /users/1/articles、/users/1/articles/1/comments这样的URL，如果想直接引用资源，就有问题了，在 Rails2.2中奖引入一个新的特性shallow route option，可以增加这个功能，routing写法为：</p>
<div class="codeText">
<div class="codeHead">routing写法</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>map.resources&nbsp;</span><span class="symbol">:users</span><span>,&nbsp;</span><span class="symbol">:shallpow</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">true</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|user|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;user.resources&nbsp;<span class="symbol">:articles</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|article|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;article.resourcs&nbsp;<span class="symbol">:comments</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>上面这个写法将保留以前的资源引用格式，同时增加如下的引用方法：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span>articles_path&nbsp;</span><span class="comment">#=&gt;&nbsp;'/articles'&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>comments_path&nbsp;<span class="comment">#=&gt;&nbsp;'/comments'&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>article_comments_path(<span class="variable">@article</span><span>)&nbsp;</span><span class="comment">#=&gt;&nbsp;'/articles/1/comments'&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>详细参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-shallow-routes">What's New in Edge Rails: Shallow Routes</a><br />
<br />
<strong>2、Mailer Layouts</strong><br />
在Rails2.2中将加入Mailer布局模板，就像view-template一样，每个mailer可以有一个模板，其默认的是mailer加上<strong><em>_mailer</em></strong>后缀，比如下面：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;UserMailer&nbsp;&lt;&nbsp;ActionMailer::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;registration(user)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;subject&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;You've&nbsp;registered&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;system@example.com&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>将会自动匹配layouts/user_mailer.html.erb这个布局模板 。当然，你也可以自己手工指定其对应的模板，如下：</p>
<div class="codeText">
<div class="codeHead">手工指定模板</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;UserMailer&nbsp;&lt;&nbsp;ActionMailer::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;layout&nbsp;<span class="string">'email'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;...&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-mailer-layouts">What's New in Edge Rails: Mailer Layouts</a><br />
<br />
<strong>3、Connection Pools</strong><br />
前面说过，在Rails2.2中将会实现线程安全，如此以来，连接池的实现也就不在话下了，在Rails2.2中将增加连接池的特性，使用方法非常简单，直接在database.yml配置即可，如下：</p>
<div class="codeText">
<div class="codeHead">database.yml</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>development:&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;adapter:&nbsp;mysql&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;username:&nbsp;root&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;database:&nbsp;myapp_dev&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<font color="#ff0000">pool:&nbsp;10&nbsp;</font>&nbsp;</span></li>
</ol>
</div>
<p>这个特性将极大的提高Rails的性能，非常值得期待。另外，还记得前面我们介绍过的&ldquo;<a href="../../../?action=show&amp;id=380">NeverBlock到底有多快,对比测试说明问题</a> &rdquo;么，同样值得期待。更多特性还有待慢慢介绍。<br />
参考：<a href="http://ryandaigle.com/articles/2008/9/7/what-s-new-in-edge-rails-connection-pools"> What's New in Edge Rails: Connection Pools</a></p>]]></excerpt:encoded>
		<wp:post_id>384</wp:post_id>
		<wp:post_date>2008-09-08 09:49:49</wp:post_date>
		<wp:post_date_gmt>2008-09-08 09:49:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-2%e7%89%88%e6%9c%ac%e5%8d%b3%e5%b0%86%e6%9d%a5%e4%b8%b4%ef%bc%8c%e6%96%b0%e5%8a%9f%e8%83%bd%e6%8f%90%e5%89%8d%e7%9c%8b%e4%b8%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>雷击后网络异常分析和处理方法</title>
		<link>http://www.iceskysl.com/?p=385</link>
		<pubDate>Mon, 08 Sep 2008 13:36:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[不久前的一次打雷，把我们住的那里的网络设备全部干坏了，从猫、路由器、网卡，全部干坏了，记录如下，提醒大家以后小心。
<strong>
情景重现：</strong>
我住的地方有两台电脑，通过一台无线路由，经猫用ADSL上网，一直以来都用的好好的，前不久搬家到7楼（以前住3楼），河隔壁合用一个ADSL，一共四台电脑（两个本本，两个台式机），本本通过无线连接，两个台式机通过有线连接到路由器，用的挺好。
前不久的一个凌晨，深圳暴雨，被一个炸雷惊醒，很响！晚上下班发现网络无法连接，表现为：猫只有一个power灯亮；路由器的WAN和LAN都不亮，两台台式机均显示“网卡被拔出”的红叉叉。

<strong>初步分析：</strong>
1、猫的DSL灯不亮，说明信号没进来，看来猫坏了，联系电信的来换了个猫，DSL灯亮了，可以通过本本连接有线上网，猫的问题解除；
2、接下来按照以前的方式走路由器，发现路由器的WAN还是不亮，然后本本有线到路由器上，无法上网，怀疑路由器挂了，幸好买了不久，拿回去换了一个，路由器问题解决；
3、换了路由器后，本本有线连接可以使用，上网正常，但是突然发现两台台式机均无法连接到路由器，还是现实“网线被拔出”的红叉叉，电脑的网卡灯也不亮。

<strong>深入分析：</strong>
1、调换本本和台式机的网线，还是老样子，看来不是网线的问题；
2、重装了台式机的网卡驱动，还是老样子，看来不是驱动的问题；
3、两台台式机症状类似，看来是和打雷有关，google了一下，果然，很多人遇到过这样的问题（我还真是第一次遇到），貌似说打雷的时候出现电涌现象，导致网卡损坏。甚至有的会导致主板、显示器都坏掉。

<strong>解决问题：</strong>
1、先可以试试是否是主版屏蔽了网卡，在BIOS里面重新加载下板载网卡，是否可以；
2、如果不行，就只能换网卡了，如果用PCI的，得在BIOS里面把板载网卡禁用掉；如果使用USB的，则可以直接使用。

<strong>注意事项：</strong>
1、打雷、闪电的时候关闭计算机，拔掉电源，拔掉ADSL线，关掉猫、路由器的电源；
2、晚上睡前，拔掉ADSL，关闭计算机电源。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>不久前的一次打雷，把我们住的那里的网络设备全部干坏了，从猫、路由器、网卡，全部干坏了，记录如下，提醒大家以后小心。<br />
<strong><br />
情景重现：</strong><br />
我住的地方有两台电脑，通过一台无线路由，经猫用ADSL上网，一直以来都用的好好的，前不久搬家到7楼（以前住3楼），河隔壁合用一个ADSL，一共四台电脑（两个本本，两个台式机），本本通过无线连接，两个台式机通过有线连接到路由器，用的挺好。<br />
前不久的一个凌晨，深圳暴雨，被一个炸雷惊醒，很响！晚上下班发现网络无法连接，表现为：猫只有一个power灯亮；路由器的WAN和LAN都不亮，两台台式机均显示&ldquo;网卡被拔出&rdquo;的红叉叉。<br />
<br />
<strong>初步分析：</strong><br />
1、猫的DSL灯不亮，说明信号没进来，看来猫坏了，联系电信的来换了个猫，DSL灯亮了，可以通过本本连接有线上网，猫的问题解除；<br />
2、接下来按照以前的方式走路由器，发现路由器的WAN还是不亮，然后本本有线到路由器上，无法上网，怀疑路由器挂了，幸好买了不久，拿回去换了一个，路由器问题解决；<br />
3、换了路由器后，本本有线连接可以使用，上网正常，但是突然发现两台台式机均无法连接到路由器，还是现实&ldquo;网线被拔出&rdquo;的红叉叉，电脑的网卡灯也不亮。<br />
<br />
<strong>深入分析：</strong><br />
1、调换本本和台式机的网线，还是老样子，看来不是网线的问题；<br />
2、重装了台式机的网卡驱动，还是老样子，看来不是驱动的问题；<br />
3、两台台式机症状类似，看来是和打雷有关，google了一下，果然，很多人遇到过这样的问题（我还真是第一次遇到），貌似说打雷的时候出现电涌现象，导致网卡损坏。甚至有的会导致主板、显示器都坏掉。<br />
<br />
<strong>解决问题：</strong><br />
1、先可以试试是否是主版屏蔽了网卡，在BIOS里面重新加载下板载网卡，是否可以；<br />
2、如果不行，就只能换网卡了，如果用PCI的，得在BIOS里面把板载网卡禁用掉；如果使用USB的，则可以直接使用。<br />
<br />
<strong>注意事项：</strong><br />
1、打雷、闪电的时候关闭计算机，拔掉电源，拔掉ADSL线，关掉猫、路由器的电源；<br />
2、晚上睡前，拔掉ADSL，关闭计算机电源。</p>]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date>2008-09-08 13:36:38</wp:post_date>
		<wp:post_date_gmt>2008-09-08 13:36:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9b%b7%e5%87%bb%e5%90%8e%e7%bd%91%e7%bb%9c%e5%bc%82%e5%b8%b8%e5%88%86%e6%9e%90%e5%92%8c%e5%a4%84%e7%90%86%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>295</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.8drink.com</wp:comment_author_url>
			<wp:comment_author_IP>116.27.186.199</wp:comment_author_IP>
			<wp:comment_date>2008-09-09 13:23:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[自从试过没拨电视的电源钱，和没关电灯，打雷时全都挂掉，被父亲骂过。再也不敢不拨了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用gnuplot配合AB绘制性能测试结果图</title>
		<link>http://www.iceskysl.com/?p=386</link>
		<pubDate>Mon, 08 Sep 2008 13:53:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=386</guid>
		<description></description>
		<content:encoded><![CDATA[Apache的<strong>AB</strong>可以用来做一些性能测试，使用<em><strong>-g</strong></em>参数其结果可以输出到文件，然后使用gnuplot可以绘制相关图片，以更直观的显示。
<div class="codeText">
<div class="codeHead">ab -h</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>$ ab -h  </span></span></li>
	<li><span>Usage: ab [options] [http://]hostname[:port]/path  </span></li>
	<li class="alt"><span>Options are:  </span></li>
	<li><span>    -n requests     Number of requests to perform  </span></li>
	<li class="alt"><span>    -c concurrency  Number of multiple requests to make  </span></li>
	<li><span>    -t timelimit    Seconds to max. wait for responses  </span></li>
	<li class="alt"><span>    -p postfile     File containing data to POST  </span></li>
	<li><span>    -T content-type Content-type header for POSTing  </span></li>
	<li class="alt"><span>    -v verbosity    How much troubleshooting info to print  </span></li>
	<li><span>    -w              Print out results in HTML tables  </span></li>
	<li class="alt"><span>    -i              Use HEAD instead of GET  </span></li>
	<li><span>    -x attributes   String to insert as table attributes  </span></li>
	<li class="alt"><span>    -y attributes   String to insert as tr attributes  </span></li>
	<li><span>    -z attributes   String to insert as td or th attributes  </span></li>
	<li class="alt"><span>    -C attribute    Add cookie, eg. '<span class="attribute">Apache</span><span>=</span><span class="attribute-value">1234</span><span>. (repeatable)  </span></span></li>
	<li><span>    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'  </span></li>
	<li class="alt"><span>                    Inserted after all normal header lines. (repeatable)  </span></li>
	<li><span>    -A attribute    Add Basic WWW Authentication, the attributes  </span></li>
	<li class="alt"><span>                    are a colon separated username and password.  </span></li>
	<li><span>    -P attribute    Add Basic Proxy Authentication, the attributes  </span></li>
	<li class="alt"><span>                    are a colon separated username and password.  </span></li>
	<li><span>    -X proxy:port   Proxyserver and port number to use  </span></li>
	<li class="alt"><span>    -V              Print version number and exit  </span></li>
	<li><span>    -k              Use HTTP KeepAlive feature  </span></li>
	<li class="alt"><span>    -d              Do not show percentiles served table.  </span></li>
	<li><span>    -S              Do not show confidence estimators and warnings.  </span></li>
	<li class="alt"><span>    -g filename     Output collected data to gnuplot format file.  </span></li>
	<li><span>    -e filename     Output CSV file with percentages served  </span></li>
	<li class="alt"><span>    -h              Display usage information (this message)  </span></li>
</ol>
</div>
&nbsp;
<div id="nrr1" style="margin-top: 0px; margin-bottom: 0px;">$ab -g http_benchmark.txt -n 1000 -c 100 http://1stlog.1sters.com/</div>
<div id="hsfd1" style="margin-top: 0px; margin-bottom: 0px;">
<div class="codeText">
<div class="codeHead">http_benchmark.txt</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>$ more http_benchmark.txt  </span></span></li>
	<li><span>starttime       seconds ctime   dtime   ttime   wait  </span></li>
	<li class="alt"><span>Mon Sep 08 11:15:52 2008        1220843752427648        516     94524   95040   94521  </span></li>
	<li><span>Mon Sep 08 11:15:52 2008        1220843752944235        525     94500   95025   93995  </span></li>
	<li class="alt"><span>Mon Sep 08 11:15:53 2008        1220843753469652        520     94491   95011   93475  </span></li>
	<li><span>Mon Sep 08 11:15:53 2008        1220843753990129        514     94478   94992   92960  </span></li>
	<li class="alt"><span>Mon Sep 08 11:15:54 2008        1220843754505018        511     94471   94982   92449  </span></li>
	<li><span>Mon Sep 08 11:15:55 2008        1220843755016428        523     100439  100962  91925  </span></li>
</ol>
</div>
</div>
<div id="uav2" style="margin-top: 0px; margin-bottom: 0px;">
<pre>1sters@iceskysl:~&gt; gnuplotset terminal pngset output "http_benchmark.png"set xlabel "request"set ylabel "ms"plot "http_benchmark.txt" using 7 with lines title "ctime", \ "http_benchmark.txt" using 8 with lines title "dtime", \ "http_benchmark.txt" using 9 with lines title "ttime", \"http_benchmark.txt" using 10 with lines title "wait"

结果类似：</pre>
<img src="http://www.lotto-kim.net/var/ezwebin_site/storage/images/media/images/http_benchmark/1702-1-eng-GB/http_benchmark.png" alt="" />
<pre id="nj1y"><strong>参考文档：</strong>http://www.gnuplot.info/download.htmlhttp://www.ibm.com/developerworks/cn/linux/l-gnuplot/index.htmlhttp://www.lotto-kim.net/eng/blog/using_gnuplot_to_show_results_from_ab</pre>
</div>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Apache的<strong>AB</strong>可以用来做一些性能测试，使用<em><strong>-g</strong></em>参数其结果可以输出到文件，然后使用gnuplot可以绘制相关图片，以更直观的显示。</p>
<div class="codeText">
<div class="codeHead">ab -h</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>$&nbsp;ab&nbsp;-h&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Usage:&nbsp;ab&nbsp;[options]&nbsp;[http://]hostname[:port]/path&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Options&nbsp;are:&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-n&nbsp;requests&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Number&nbsp;of&nbsp;requests&nbsp;to&nbsp;perform&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-c&nbsp;concurrency&nbsp;&nbsp;Number&nbsp;of&nbsp;multiple&nbsp;requests&nbsp;to&nbsp;make&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-t&nbsp;timelimit&nbsp;&nbsp;&nbsp;&nbsp;Seconds&nbsp;to&nbsp;max.&nbsp;wait&nbsp;for&nbsp;responses&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-p&nbsp;postfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;containing&nbsp;data&nbsp;to&nbsp;POST&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-T&nbsp;content-type&nbsp;Content-type&nbsp;header&nbsp;for&nbsp;POSTing&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-v&nbsp;verbosity&nbsp;&nbsp;&nbsp;&nbsp;How&nbsp;much&nbsp;troubleshooting&nbsp;info&nbsp;to&nbsp;print&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;out&nbsp;results&nbsp;in&nbsp;HTML&nbsp;tables&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;HEAD&nbsp;instead&nbsp;of&nbsp;GET&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-x&nbsp;attributes&nbsp;&nbsp;&nbsp;String&nbsp;to&nbsp;insert&nbsp;as&nbsp;table&nbsp;attributes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-y&nbsp;attributes&nbsp;&nbsp;&nbsp;String&nbsp;to&nbsp;insert&nbsp;as&nbsp;tr&nbsp;attributes&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-z&nbsp;attributes&nbsp;&nbsp;&nbsp;String&nbsp;to&nbsp;insert&nbsp;as&nbsp;td&nbsp;or&nbsp;th&nbsp;attributes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-C&nbsp;attribute&nbsp;&nbsp;&nbsp;&nbsp;Add&nbsp;cookie,&nbsp;eg.&nbsp;'<span class="attribute">Apache</span><span>=</span><span class="attribute-value">1234</span><span>.&nbsp;(repeatable)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-H&nbsp;attribute&nbsp;&nbsp;&nbsp;&nbsp;Add&nbsp;Arbitrary&nbsp;header&nbsp;line,&nbsp;eg.&nbsp;'Accept-Encoding:&nbsp;gzip'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inserted&nbsp;after&nbsp;all&nbsp;normal&nbsp;header&nbsp;lines.&nbsp;(repeatable)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-A&nbsp;attribute&nbsp;&nbsp;&nbsp;&nbsp;Add&nbsp;Basic&nbsp;WWW&nbsp;Authentication,&nbsp;the&nbsp;attributes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;a&nbsp;colon&nbsp;separated&nbsp;username&nbsp;and&nbsp;password.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-P&nbsp;attribute&nbsp;&nbsp;&nbsp;&nbsp;Add&nbsp;Basic&nbsp;Proxy&nbsp;Authentication,&nbsp;the&nbsp;attributes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;a&nbsp;colon&nbsp;separated&nbsp;username&nbsp;and&nbsp;password.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-X&nbsp;proxy:port&nbsp;&nbsp;&nbsp;Proxyserver&nbsp;and&nbsp;port&nbsp;number&nbsp;to&nbsp;use&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;version&nbsp;number&nbsp;and&nbsp;exit&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-k&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;HTTP&nbsp;KeepAlive&nbsp;feature&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;not&nbsp;show&nbsp;percentiles&nbsp;served&nbsp;table.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;not&nbsp;show&nbsp;confidence&nbsp;estimators&nbsp;and&nbsp;warnings.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-g&nbsp;filename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Output&nbsp;collected&nbsp;data&nbsp;to&nbsp;gnuplot&nbsp;format&nbsp;file.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-e&nbsp;filename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Output&nbsp;CSV&nbsp;file&nbsp;with&nbsp;percentages&nbsp;served&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Display&nbsp;usage&nbsp;information&nbsp;(this&nbsp;message)&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: SimSun; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;" id="nrr1">$ab -g http_benchmark.txt -n 1000 -c 100 http://1stlog.1sters.com/</div>
<div style="margin-top: 0px; margin-bottom: 0px;" id="hsfd1">&nbsp;
<div class="codeText">
<div class="codeHead">http_benchmark.txt</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>$&nbsp;more&nbsp;http_benchmark.txt&nbsp;&nbsp;</span></span></li>
    <li class=""><span>starttime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seconds&nbsp;ctime&nbsp;&nbsp;&nbsp;dtime&nbsp;&nbsp;&nbsp;ttime&nbsp;&nbsp;&nbsp;wait&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:52&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843752427648&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;516&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;94524&nbsp;&nbsp;&nbsp;95040&nbsp;&nbsp;&nbsp;94521&nbsp;&nbsp;</span></li>
    <li class=""><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:52&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843752944235&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;525&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;94500&nbsp;&nbsp;&nbsp;95025&nbsp;&nbsp;&nbsp;93995&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:53&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843753469652&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;520&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;94491&nbsp;&nbsp;&nbsp;95011&nbsp;&nbsp;&nbsp;93475&nbsp;&nbsp;</span></li>
    <li class=""><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:53&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843753990129&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;514&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;94478&nbsp;&nbsp;&nbsp;94992&nbsp;&nbsp;&nbsp;92960&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:54&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843754505018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;511&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;94471&nbsp;&nbsp;&nbsp;94982&nbsp;&nbsp;&nbsp;92449&nbsp;&nbsp;</span></li>
    <li class=""><span>Mon&nbsp;Sep&nbsp;08&nbsp;11:15:55&nbsp;2008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1220843755016428&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;523&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100439&nbsp;&nbsp;100962&nbsp;&nbsp;91925&nbsp;&nbsp;</span></li>
</ol>
</div>
</div>
<div style="margin-top: 0px; margin-bottom: 0px;" id="uav2">
<pre id="nj1y">1sters@iceskysl:~&gt; gnuplot<br />set terminal png<br />set output &quot;http_benchmark.png&quot;<br />set xlabel &quot;request&quot;<br />set ylabel &quot;ms&quot;<br />plot &quot;http_benchmark.txt&quot; using 7 with lines title &quot;ctime&quot;, \<br /> &quot;http_benchmark.txt&quot; using 8 with lines title &quot;dtime&quot;, \<br /> &quot;http_benchmark.txt&quot; using 9 with lines title &quot;ttime&quot;, \<br />&quot;http_benchmark.txt&quot; using 10 with lines title &quot;wait&quot;<br /><br />结果类似：<br /><img src="http://www.lotto-kim.net/var/ezwebin_site/storage/images/media/images/http_benchmark/1702-1-eng-GB/http_benchmark.png" alt="" /><br /><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: SimSun; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><pre id="nj1y"><strong>参考文档：</strong><br />http://www.gnuplot.info/download.html<br />http://www.ibm.com/developerworks/cn/linux/l-gnuplot/index.html<br />http://www.lotto-kim.net/eng/blog/using_gnuplot_to_show_results_from_ab</pre>
</span></pre>
</div>
</span></p>]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date>2008-09-08 13:53:22</wp:post_date>
		<wp:post_date_gmt>2008-09-08 13:53:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8gnuplot%e9%85%8d%e5%90%88ab%e7%bb%98%e5%88%b6%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e7%bb%93%e6%9e%9c%e5%9b%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails2.1之前的Injection漏洞续篇,union查询显威力</title>
		<link>http://www.iceskysl.com/?p=387</link>
		<pubDate>Tue, 09 Sep 2008 09:48:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[6月份的时候写过一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=325">Rails2.1之前的Injection漏洞:limit,offset过滤不严</a>》，文章中说到“<em>我们直接从Http的params中取得limit或者offset参数，直接放在SQL的find中，如果在offset中构造邪恶代码的话，肯定会造成大问题。幸好，Mysql默认的是不许一次API调用执行多条SQL</em>”，当时说这个漏洞在MYSQL中无法利用，其实是错误的。

虽然在mysql中部允许一次执行多条语句，但是我们是可以变相利用这个漏洞的，采取的方法就是构造<strong>union查询</strong>，爆出敏感信息。下面看例子：

比如你的程序中写了这么一条语句：<em>User.find(:all, :limit =&gt; params[:limit])</em>，那么我们就可以构造这个params[:limit]为： "<em>1 UNION (select 1,2,password,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0 from users)</em>"，这句话什么意思？放到前面那个find后，就形成这样的语句：
<div class="codeText">
<div class="codeHead">SQL代码</div>
<ol class="dp-sql" start="1">
	<li class="alt"><span><span class="keyword">select</span><span> * </span><span class="keyword">from</span><span> users limit 1 </span><span class="keyword">UNION</span><span> (</span><span class="keyword">select</span><span> 1,username,</span><span class="keyword">password</span><span>,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0 </span><span class="keyword">from</span><span> users)  </span></span></li>
</ol>
</div>
怎样？很邪恶吧，了解点安全的朋友都能看明白，不了解的我说半天还不如你去google下什么是<span style="text-decoration: underline;">union注射</span>，呵呵。

没升级到2.1.1的赶快升级或者按照如下方式修复吧，否则就有危险了。
<ul>
	<li>Review your application whether you allow the user to control :limit or :offset</li>
	<li>If you are on Rails 2.1.0, please apply <a href="http://rails.lighthouseapp.com/projects/8994/tickets/288">this patch</a> or get Rails 2.1.1</li>
	<li>If you are on the Rails 2.0 or 1.2 branch, apply this<a href="http://rails.lighthouseapp.com/projects/8994/tickets/964-fix-for-sql-injection-on-limit-and-offset-should-be-backported"> backport patch</a></li>
</ul>
参考文档：<a href="http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/">http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>6月份的时候写过一篇文章《<a href="../../../?action=show&amp;id=325">Rails2.1之前的Injection漏洞:limit,offset过滤不严</a>》，文章中说到&ldquo;<em>我们直接从Http的params中取得limit或者offset参数，直接放在SQL的find中，如果在offset中构造邪恶代码的话，肯定会造成大问题。幸好，Mysql默认的是不许一次API调用执行多条SQL</em>&rdquo;，当时说这个漏洞在MYSQL中无法利用，其实是错误的。</p>
<p>虽然在mysql中部允许一次执行多条语句，但是我们是可以变相利用这个漏洞的，采取的方法就是构造<strong>union查询</strong>，爆出敏感信息。下面看例子：</p>
<p>比如你的程序中写了这么一条语句：<em>User.find(:all, :limit =&gt; params[:limit])</em>，那么我们就可以构造这个params[:limit]为： &quot;<em>1 UNION (select 1,2,password,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0 from users)</em>&quot;，这句话什么意思？放到前面那个find后，就形成这样的语句：</p>
<div class="codeText">
<div class="codeHead">SQL代码</div>
<ol start="1" class="dp-sql">
    <li class="alt"><span><span class="keyword">select</span><span>&nbsp;*&nbsp;</span><span class="keyword">from</span><span>&nbsp;users&nbsp;limit&nbsp;1&nbsp;</span><span class="keyword">UNION</span><span>&nbsp;(</span><span class="keyword">select</span><span>&nbsp;1,username,</span><span class="keyword">password</span><span>,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0&nbsp;</span><span class="keyword">from</span><span>&nbsp;users)&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>怎样？很邪恶吧，了解点安全的朋友都能看明白，不了解的我说半天还不如你去google下什么是<u>union注射</u>，呵呵。</p>
<p>没升级到2.1.1的赶快升级或者按照如下方式修复吧，否则就有危险了。</p>
<ul>
    <li>Review your application whether you allow the user to control :limit or :offset</li>
    <li>If you are on Rails 2.1.0, please apply <a href="http://rails.lighthouseapp.com/projects/8994/tickets/288">this patch</a> or get Rails 2.1.1</li>
    <li>If you are on the Rails 2.0 or 1.2 branch, apply this<a href="http://rails.lighthouseapp.com/projects/8994/tickets/964-fix-for-sql-injection-on-limit-and-offset-should-be-backported"> backport patch</a></li>
</ul>
<p>参考文档：<a href="http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/">http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/</a></p>]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2008-09-09 09:48:40</wp:post_date>
		<wp:post_date_gmt>2008-09-09 09:48:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-1%e4%b9%8b%e5%89%8d%e7%9a%84injection%e6%bc%8f%e6%b4%9e%e7%bb%ad%e7%af%87union%e6%9f%a5%e8%af%a2%e6%98%be%e5%a8%81%e5%8a%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips]自动填充测试需要的随机数据</title>
		<link>http://www.iceskysl.com/?p=388</link>
		<pubDate>Tue, 09 Sep 2008 10:25:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=388</guid>
		<description></description>
		<content:encoded><![CDATA[经常遇到一些新功能开发完了，需要测试一些指标，比如性能测试等等，这个时候如果人工填充数据会非常囧的，你可以写rake来自己构造填充数据，你需要处理随机产生等情况，现在不必费心了，使用<a href="http://faker.rubyforge.org/rdoc/">Faker</a> Gem和<a href="http://github.com/ryanb/populator/tree/master">populator</a>可以快速的构造需要的数据。

<strong>Faker</strong>
A port of Perl‘s Data::Faker library that generates fake data.

<strong>Populator</strong>
Populate an Active Record database with mass insert.

<strong>安装需要的gem：</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>gem install populator  </span></span></li>
	<li><span>gem install faker  </span></li>
	<li class="alt"><span>rake db<span class="symbol">:populate</span><span>  </span></span></li>
</ol>
</div>
写rake代码：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># lib/tasks/populate.rake</span><span>  </span></span></li>
	<li><span>namespace <span class="symbol">:db</span><span> </span><span class="keyword">do</span><span>  </span></span></li>
	<li class="alt"><span>  desc <span class="string">"Erase and fill database"</span><span>  </span></span></li>
	<li><span>  task <span class="symbol">:populate</span><span> =&gt; </span><span class="symbol">:environment</span><span> </span><span class="keyword">do</span><span>  </span></span></li>
	<li class="alt"><span>    require <span class="string">'populator'</span><span>  </span></span></li>
	<li><span>    require <span class="string">'faker'</span><span>  </span></span></li>
	<li class="alt"><span>      </span></li>
	<li><span>    [Category, Product, Person].<span class="keyword">each</span><span>(&amp;</span><span class="symbol">:delete_all</span><span>)  </span></span></li>
	<li class="alt"><span>      </span></li>
	<li><span>    Category.populate 20 <span class="keyword">do</span><span> |category|  </span></span></li>
	<li class="alt"><span>      category.name = Populator.words(1..3).titleize  </span></li>
	<li><span>      Product.populate 10..100 <span class="keyword">do</span><span> |product|  </span></span></li>
	<li class="alt"><span>        product.category_id = category.id  </span></li>
	<li><span>        product.name = Populator.words(1..5).titleize  </span></li>
	<li class="alt"><span>        product.description = Populator.sentences(2..10)  </span></li>
	<li><span>        product.price = [4.99, 19.95, 100]  </span></li>
	<li class="alt"><span>        product.created_at = 2.years.ago..<span class="builtin">Time</span><span>.now  </span></span></li>
	<li><span>      <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>      </span></li>
	<li class="alt"><span>    Person.populate 100 <span class="keyword">do</span><span> |person|  </span></span></li>
	<li><span>      person.name    = Faker::Name.name  </span></li>
	<li class="alt"><span>      person.company = Faker::Company.name  </span></li>
	<li><span>      person.email   = Faker::Internet.email  </span></li>
	<li class="alt"><span>      person.phone   = Faker::PhoneNumber.phone_number  </span></li>
	<li><span>      person.street  = Faker::Address.street_address  </span></li>
	<li class="alt"><span>      person.city    = Faker::Address.city  </span></li>
	<li><span>      person.state   = Faker::Address.us_state_abbr  </span></li>
	<li class="alt"><span>      person.zip     = Faker::Address.zip_code  </span></li>
	<li><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
参考：

<a href="http://github.com/ryanb/populator/tree/master">http://github.com/ryanb/populator/tree/master</a>

<a href="http://faker.rubyforge.org/rdoc/">http://faker.rubyforge.org/rdoc/</a>

<a href="http://railscasts.com/episodes/126-populating-a-database">http://railscasts.com/episodes/126-populating-a-database</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经常遇到一些新功能开发完了，需要测试一些指标，比如性能测试等等，这个时候如果人工填充数据会非常囧的，你可以写rake来自己构造填充数据，你需要处理随机产生等情况，现在不必费心了，使用<a href="http://faker.rubyforge.org/rdoc/">Faker</a> Gem和<a href="http://github.com/ryanb/populator/tree/master">populator</a>可以快速的构造需要的数据。</p>
<p><strong>Faker</strong><br />
A port of Perl&lsquo;s Data::Faker library that generates fake data.</p>
<p><strong>Populator</strong><br />
Populate an Active Record database with mass insert.</p>
<p><strong>安装需要的gem：</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>gem&nbsp;install&nbsp;populator&nbsp;&nbsp;</span></span></li>
    <li class=""><span>gem&nbsp;install&nbsp;faker&nbsp;&nbsp;</span></li>
    <li class="alt"><span>rake&nbsp;db<span class="symbol">:populate</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>写rake代码：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;lib/tasks/populate.rake</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>namespace&nbsp;<span class="symbol">:db</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;desc&nbsp;<span class="string">&quot;Erase&nbsp;and&nbsp;fill&nbsp;database&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;task&nbsp;<span class="symbol">:populate</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:environment</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;require&nbsp;<span class="string">'populator'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;require&nbsp;<span class="string">'faker'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;[Category,&nbsp;Product,&nbsp;Person].<span class="keyword">each</span><span>(&amp;</span><span class="symbol">:delete_all</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Category.populate&nbsp;20&nbsp;<span class="keyword">do</span><span>&nbsp;|category|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;category.name&nbsp;=&nbsp;Populator.words(1..3).titleize&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Product.populate&nbsp;10..100&nbsp;<span class="keyword">do</span><span>&nbsp;|product|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product.category_id&nbsp;=&nbsp;category.id&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product.name&nbsp;=&nbsp;Populator.words(1..5).titleize&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product.description&nbsp;=&nbsp;Populator.sentences(2..10)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product.price&nbsp;=&nbsp;[4.99,&nbsp;19.95,&nbsp;100]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product.created_at&nbsp;=&nbsp;2.years.ago..<span class="builtin">Time</span><span>.now&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Person.populate&nbsp;100&nbsp;<span class="keyword">do</span><span>&nbsp;|person|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.name&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;Faker::Name.name&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.company&nbsp;=&nbsp;Faker::Company.name&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.email&nbsp;&nbsp;&nbsp;=&nbsp;Faker::Internet.email&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.phone&nbsp;&nbsp;&nbsp;=&nbsp;Faker::PhoneNumber.phone_number&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.street&nbsp;&nbsp;=&nbsp;Faker::Address.street_address&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.city&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;Faker::Address.city&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.state&nbsp;&nbsp;&nbsp;=&nbsp;Faker::Address.us_state_abbr&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;person.zip&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;Faker::Address.zip_code&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>参考：</p>
<p><a href="http://github.com/ryanb/populator/tree/master">http://github.com/ryanb/populator/tree/master</a></p>
<p><a href="http://faker.rubyforge.org/rdoc/">http://faker.rubyforge.org/rdoc/</a></p>
<p><a href="http://railscasts.com/episodes/126-populating-a-database">http://railscasts.com/episodes/126-populating-a-database</a></p>]]></excerpt:encoded>
		<wp:post_id>388</wp:post_id>
		<wp:post_date>2008-09-09 10:25:49</wp:post_date>
		<wp:post_date_gmt>2008-09-09 10:25:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips%e8%87%aa%e5%8a%a8%e5%a1%ab%e5%85%85%e6%b5%8b%e8%af%95%e9%9c%80%e8%a6%81%e7%9a%84%e9%9a%8f%e6%9c%ba%e6%95%b0%e6%8d%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>网站安全开发手册 让每个程序员都提高安全意识</title>
		<link>http://www.iceskysl.com/?p=389</link>
		<pubDate>Tue, 09 Sep 2008 10:38:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=389</guid>
		<description></description>
		<content:encoded><![CDATA[大家看我的个人介绍是“<span id="description"><em>不考虑安全的开发过程就是不完整的过程,而我只是个懂点安全对于互联网充满期待的程序员…</em>”，我职业是程序员，业余时间会关注一些安全方面的东西，给一本安全杂志编辑一个新漏洞挖掘和分析的栏目，我一直想能通过自己的对安全的理解和对程序员的接触把安全意识带给程序员，写出更安全的系统。</span>

<span id="description">也一直想策划一本书，把时下里常见的漏洞，漏洞的原因和分析，原理等等，用实际的例子讲解出来，站在程序员的角度来讲述这些漏洞的危害和防范，只是一直没找到空闲时间，也就一直搁浅。</span>

<span id="description">今天看到动易的开发人员写了一本《<a href="http://download.csdn.net/source/599604">网站系统安全开发手册</a>》，大概的浏览了一遍，其共有十三大项，30个小项，主要介绍了输入验证、输出编码、SQL注入、跨站脚本攻击、跨站请求伪造、越权操作、IO操作安全、缓存泄漏、系统加密、信息批漏、日志和监测、Web.config的安全配置等方面的内容，并列明具体的防御手段和方法，从而为网站安全开发人员提供了一本极具实操性的工具书。</span>

<span id="description">内容不算多，介绍的漏洞也都是时下常见的，有心成为安全的程序员的朋友可以下载看看，会有帮助的。我会仔细阅读，并继续策划我心目中的那本安全开发手册。</span>

<span id="description">网站系统安全开发手册提供在线下载：</span><a title="http://download.csdn.net/source/599604" href="http://download.csdn.net/source/599604" target="_blank">http://download.csdn.net/source/599604</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家看我的个人介绍是&ldquo;<span id="description"><em>不考虑安全的开发过程就是不完整的过程,而我只是个懂点安全对于互联网充满期待的程序员&hellip;</em>&rdquo;，我职业是程序员，业余时间会关注一些安全方面的东西，给一本安全杂志编辑一个新漏洞挖掘和分析的栏目，我一直想能通过自己的对安全的理解和对程序员的接触把安全意识带给程序员，写出更安全的系统。</span></p>
<p><span id="description">也一直想策划一本书，把时下里常见的漏洞，漏洞的原因和分析，原理等等，用实际的例子讲解出来，站在程序员的角度来讲述这些漏洞的危害和防范，只是一直没找到空闲时间，也就一直搁浅。</span></p>
<p><span id="description">今天看到动易的开发人员写了一本《<a href="http://download.csdn.net/source/599604">网站系统安全开发手册</a>》， 大概的浏览了一遍，其共有十三大项，30个小项，主要介绍了输入验证、输出编码、SQL注入、跨站脚本攻击、跨站请求伪造、越权操作、IO操作安全、缓存 泄漏、系统加密、信息批漏、日志和监测、Web.config的安全配置等方面的内容，并列明具体的防御手段和方法，从而为网站安全开发人员提供了一本极 具实操性的工具书。</span></p>
<p><span id="description">内容不算多，介绍的漏洞也都是时下常见的，有心成为安全的程序员的朋友可以下载看看，会有帮助的。我会仔细阅读，并继续策划我心目中的那本安全开发手册。</span></p>
<p><span id="description">网站系统安全开发手册提供在线下载：</span><a target="_blank" title="http://download.csdn.net/source/599604" href="http://download.csdn.net/source/599604">http://download.csdn.net/source/599604</a></p>]]></excerpt:encoded>
		<wp:post_id>389</wp:post_id>
		<wp:post_date>2008-09-09 10:38:51</wp:post_date>
		<wp:post_date_gmt>2008-09-09 10:38:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bd%91%e7%ab%99%e5%ae%89%e5%85%a8%e5%bc%80%e5%8f%91%e6%89%8b%e5%86%8c-%e8%ae%a9%e6%af%8f%e4%b8%aa%e7%a8%8b%e5%ba%8f%e5%91%98%e9%83%bd%e6%8f%90%e9%ab%98%e5%ae%89%e5%85%a8%e6%84%8f%e8%af%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>调整ubuntu下的netbeans 6.1为英文界面</title>
		<link>http://www.iceskysl.com/?p=390</link>
		<pubDate>Tue, 09 Sep 2008 23:41:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=390</guid>
		<description></description>
		<content:encoded><![CDATA[在Ubuntu下使用netbeans还是挺不错的，但是最近升级后发现界面变成中文的了，还有些小方块的乱码。乱码很早前遇到过，忘记以前是咋处理了，临时找了下，如下处理可以：

把/usr/share/fonts/truetype/arphic/下的文件copy一份到$JAVE_HOME/jre/lib/fonts/fallback/下即可。

但是显示的中文真的不好看，也没有找到调的地方，加上其翻译的实在别扭，害得我老找不到菜单，于是找了个办法把界面又换成英文的，win下貌似可以直接修改<strong>etc/netbeans.conf</strong>中netbeans_default_options，在其后面添加 <strong>--locale en_US</strong>即可，但是ubuntu下配置文件不一样，在etc下配置看不明白，于是在的<span style="text-decoration: underline;">快捷启动方</span>式后面加上 --locale en_US就好了。

看着英文界面，真亲切呀。

<strong>其他类似的解决：</strong>

http://www.javaeye.com/post/518296

http://rednaxelafx.javaeye.com/blog/202287]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在Ubuntu下使用netbeans还是挺不错的，但是最近升级后发现界面变成中文的了，还有些小方块的乱码。乱码很早前遇到过，忘记以前是咋处理了，临时找了下，如下处理可以：</p>
<p>把/usr/share/fonts/truetype/arphic/下的文件copy一份到$JAVE_HOME/jre/lib/fonts/fallback/下即可。</p>
<p>但是显示的中文真的不好看，也没有找到调的地方，加上其翻译的实在别扭，害得我老找不到菜单，于是找了个办法把界面又换成英文的，win下貌似可以直接修改<strong>etc/netbeans.conf</strong>中netbeans_default_options，在其后面添加 <strong>--locale en_US</strong>即可，但是ubuntu下配置文件不一样，在etc下配置看不明白，于是在的<u>快捷启动方</u>式后面加上 --locale en_US就好了。</p>
<p>看着英文界面，真亲切呀。</p>]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2008-09-09 23:41:19</wp:post_date>
		<wp:post_date_gmt>2008-09-09 23:41:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b0%83%e6%95%b4ubuntu%e4%b8%8b%e7%9a%84netbeans-6-1%e4%b8%ba%e8%8b%b1%e6%96%87%e7%95%8c%e9%9d%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_60b8fdb00e0bcb51ccd34579fb21fbe2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cd4537a03e4dadc09d5a0a8f604c7d52</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>296</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.67.68</wp:comment_author_IP>
			<wp:comment_date>2008-09-09 23:42:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这还有一篇：
http://hi.baidu.com/h819/blog/item/00cbae39800944f73a87ce42.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Wicd: Ubuntu8.04终于用上无线了</title>
		<link>http://www.iceskysl.com/?p=391</link>
		<pubDate>Tue, 09 Sep 2008 23:59:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[用了这么久的ubuntu，前几天买了个无线路由，在windows下可以连接无线网络，但是在ubuntu下的那个Network-Manager里一直连不上，看那个无线的指示灯是橙色，以为是驱动不对呢。今天看到“<a href="http://blog.istef.info/2007/08/19/wicd/">Wicd - 一款非常出色的无线管理器</a>”，发现<a href="http://wicd.sourceforge.net/">Wicd</a>比较强大，立马卸掉了Network-Manager（否则安装会提示有冲突），然后下载了deb的下来，安装下就可以使用了（我的是Ubuntu8.04+xfce）。
<img src="http://linuxtoy.org/img/2007/08/wicd_s.png" alt="" />
立即探测出我的无线，输入密码，连接，拔掉网线，ping了下google，终于OK。
<strong>
参考：</strong>
http://blog.istef.info/2007/08/19/wicd/
http://linuxtoy.org/archives/wicd.html
http://wicd.sourceforge.net/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>用了这么久的ubuntu，前几天买了个无线路由，在windows下可以连接无线网络，但是在ubuntu下的那个Network-Manager里一直连不上，看那个无线的指示灯是橙色，以为是驱动不对呢。今天看到&ldquo;<a href="http://blog.istef.info/2007/08/19/wicd/">Wicd - 一款非常出色的无线管理器</a>&rdquo;，发现<a href="http://wicd.sourceforge.net/">Wicd</a>比较强大，立马卸掉了Network-Manager（否则安装会提示有冲突），然后下载了deb的下来，安装下就可以使用了（我的是Ubuntu8.04+xfce）。<br />
<br />
立即探测出我的无线，输入密码，连接，拔掉网线，ping了下google，终于OK。<br />
<strong><br />
参考：</strong><br />
http://blog.istef.info/2007/08/19/wicd/<br />
http://linuxtoy.org/archives/wicd.html<br />
http://wicd.sourceforge.net/</p>]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2008-09-09 23:59:14</wp:post_date>
		<wp:post_date_gmt>2008-09-09 23:59:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wicd-ubuntu8-04%e7%bb%88%e4%ba%8e%e7%94%a8%e4%b8%8a%e6%97%a0%e7%ba%bf%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fd9a986b5495ee5d4cd7c5d722149f65</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5d870897db8f1833aa9e89f56010c6a4</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fc90b3855ac4e26f4e61f80aadd7aa52</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails部署:Nginx+Haproxy+Thin</title>
		<link>http://www.iceskysl.com/?p=392</link>
		<pubDate>Fri, 12 Sep 2008 09:18:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=392</guid>
		<description></description>
		<content:encoded><![CDATA[Nginx和Thin以前都介绍过，这里主要介绍下Haproxy的安装以及配合使用。

<strong>1、下载</strong>
wget  http://haproxy.1wt.eu/download/1.3/src/haproxy-1.3.15.3.tar.gz

<strong>2、编译安装</strong>
sudo aptitude install libpcre++-dev
tar -zxvf haproxy-1.3.15.3.tar.gz
cd haproxy-1.3.15.3
sudo make TARGET=linux26 CPU=i386 USE_STATIC_PCRE=2
sudo make install
install -d /usr/local/sbin
install haproxy /usr/local/sbin
install -d /usr/local/man/man1
install -m 644 doc/haproxy.1 /usr/local/man/man1
install -d /usr/local/doc/haproxy
for x in configuration architecture haproxy-en haproxy-fr; do \
install -m 644 doc/$x.txt /usr/local/doc/haproxy ; \
done

<strong>3、配置文件</strong>
<em><strong>1)Haproxy配置(/opt/devroot/itechtag/haproxy.conf)</strong></em>
<div class="codeText">
<div class="codeHead"><em><strong>Haproxy配置</strong></em></div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>global  </span></span></li>
	<li><span>  daemon  </span></li>
	<li class="alt"><span>  maxconn       4096      # total max connections (dependent on ulimit)  </span></li>
	<li><span>  nbproc        2         # number of processing cores  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>defaults  </span></li>
	<li class="alt"><span>  mode              http  </span></li>
	<li><span>  clitimeout        60000       # maximum inactivity time on the client side  </span></li>
	<li class="alt"><span>  srvtimeout        30000       # maximum inactivity time on the server side  </span></li>
	<li><span>  timeout connect   4000        # maximum time to wait for a connection attempt to a server to succeed  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>  option            httpclose     # disable keepalive (HAProxy does not yet support the HTTP keep-alive mode)  </span></li>
	<li class="alt"><span>  option            abortonclose  # enable early dropping of aborted requests from pending queue  </span></li>
	<li><span>  option            httpchk       # enable HTTP protocol to check on servers health  </span></li>
	<li class="alt"><span>  option            forwardfor    # enable insert of X-Forwarded-For headers  </span></li>
	<li><span>   </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>  balance roundrobin            # each server is used in turns, according to assigned weight  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>  stats enable                  # enable web-stats at /haproxy?stats  </span></li>
	<li class="alt"><span>  stats auth        admin:pass  # force HTTP Auth to view stats  </span></li>
	<li><span>  stats refresh     5s        # refresh rate of stats page  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>listen rails_proxy 127.0.0.1:8100  </span></li>
	<li class="alt"><span>  # - equal weights on all servers  </span></li>
	<li><span>  # - maxconn will queue requests at HAProxy if limit is reached  </span></li>
	<li class="alt"><span>  # - minconn dynamically scales the connection concurrency (bound my maxconn) depending on size of HAProxy queue  </span></li>
	<li><span>  # - check health every 20000 microseconds  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>  server web1 127.0.0.1:8000 weight 1 minconn 3 maxconn 6 check inter 20000  </span></li>
	<li class="alt"><span>   </span></li>
	<li><span>listen slow_proxy 127.0.0.1:8200  </span></li>
	<li class="alt"><span>  # cluster for slow requests, lower the queues, check less frequently  </span></li>
	<li><span>  server web1 127.0.0.1:8000 weight 3 minconn 30 maxconn 300 check inter 20000  </span></li>
	<li class="alt"><span>  server slow1 127.0.0.1:8001 weight 1 minconn 10 maxconn 300 check inter 40000  </span></li>
	<li><span>  server slow2 127.0.0.1:8002 weight 1 minconn 1 maxconn 300 check inter 40000  </span></li>
	<li class="alt"><span>  server slow3 127.0.0.1:8003 weight 1 minconn 1 maxconn 300 check inter 40000  </span></li>
</ol>
</div>
2)Nginx配置
<div class="codeText">
<div class="codeHead">Nginx配置</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span># File generated on 25 May 08  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>#upstream name has to be unique so add on the port number  </span></li>
	<li><span>#generate multiple mongrels  </span></li>
	<li class="alt"><span>upstream thin_9000{  </span></li>
	<li><span>    server 127.0.0.1:8200;  </span></li>
	<li class="alt"><span>    }  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>server {  </span></li>
	<li><span>            listen   80;  </span></li>
	<li class="alt"><span>            server_name localhost;  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>            access_log /opt/devroot/itechtag/log/access.log;  </span></li>
	<li><span>            error_log  /opt/devroot/itechtag/log/error.log;  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>            root   /opt/devroot/itechtag/public/;  </span></li>
	<li class="alt"><span>            index  index.html;  </span></li>
	<li><span>             </span></li>
	<li class="alt"><span>            location / {  </span></li>
	<li><span>                   proxy_set_header  X-Real-IP  $remote_addr;  </span></li>
	<li class="alt"><span>                   proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;  </span></li>
	<li><span>                   proxy_set_header Host $http_host;  </span></li>
	<li class="alt"><span>                   proxy_redirect false;  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>                   if (-f $request_filename/index.html) {  </span></li>
	<li><span>                                           rewrite (.*) $1/index.html break;  </span></li>
	<li class="alt"><span>                          }  </span></li>
	<li><span>                          if (-f $request_filename.html) {  </span></li>
	<li class="alt"><span>                                           rewrite (.*) $1.html break;  </span></li>
	<li><span>                          }  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>                          if (!-f $request_filename) {  </span></li>
	<li class="alt"><span>                                           proxy_pass http://thin_9000;  </span></li>
	<li><span>                                           break;  </span></li>
	<li class="alt"><span>                          }  </span></li>
	<li><span>            }  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>}  </span></li>
</ol>
</div>
3）thin配置
<div class="codeText">
<div class="codeHead">thin配置</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>---  </span></span></li>
	<li><span>pid: tmp/pids/thin.pid  </span></li>
	<li class="alt"><span>log: log/thin.log  </span></li>
	<li><span>port: 8000  </span></li>
	<li class="alt"><span>max_conns: 1024  </span></li>
	<li><span>timeout: 30  </span></li>
	<li class="alt"><span>chdir: /opt/devroot/itechtag  </span></li>
	<li><span>max_persistent_conns: 512  </span></li>
	<li class="alt"><span>environment: production  </span></li>
	<li><span>address: 0.0.0.0  </span></li>
	<li class="alt"><span>servers: 4  </span></li>
	<li><span>daemonize: true  </span></li>
</ol>
</div>
<strong>4、启动</strong>
sudo haproxy -f /opt/devroot/itechtag/haproxy.conf -p pidfils.oid

<strong>5、停止</strong>
kill  $(cat /home/source/haproxy-1.3.15.3/examples/pidfils.oid)

<strong>6、刷新</strong>
sudo haproxy -f /opt/devroot/itechtag/haproxy.conf -sf $(cat /opt/devroot/itechtag/pidfils.oid)

<strong>7、监控</strong>
http://127.0.0.1:8200/haproxy?stats
<img src="http://docs.google.com/File?id=dhf86kr9_417fvv5w2ck_b" alt="" width="540" height="270" />
<strong>8、测试</strong>
ab -n 2000 -c 200 http://127.0.0.1/

<strong>附录：Haproxy帮助信息</strong>
iceskysl@IceskYsl:/home/source/haproxy-1.3.15.3$ haproxy
HA-Proxy version 1.3.15.3 2008/09/02
Copyright 2000-2008 Willy Tarreau &lt;w@1wt.eu&gt;

Usage : haproxy -f &lt;cfgfile&gt; [ -vdVD ] [ -n &lt;maxconn&gt; ] [ -N &lt;maxpconn&gt; ]
[ -p &lt;pidfile&gt; ] [ -m &lt;max megs&gt; ]
-v displays version ; -vv shows known build options.
-d enters debug mode ; -db only disables background mode.
-V enters verbose mode (disables quiet mode)
-D goes daemon ; implies -q
-q quiet mode : don't display messages
-c check mode : only check config file and exit
-n sets the maximum total # of connections (2000)
-m limits the usable amount of memory (in MB)
-N sets the default, per-proxy maximum # of connections (2000)
-p writes pids of all children to this file
-de disables epoll() usage even when available
-ds disables speculative epoll() usage even when available
-dp disables poll() usage even when available
-sf/-st [pid ]* finishes/terminates old pids. Must be last arguments.

<strong>参考资料:</strong>
http://codesnippets.joyent.com/tag/ubuntu]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Nginx和Thin以前都介绍过，这里主要介绍下Haproxy的安装以及配合使用。<br />
<br />
<strong>1、下载</strong><br />
wget&nbsp; http://haproxy.1wt.eu/download/1.3/src/haproxy-1.3.15.3.tar.gz<br />
<br />
<strong>2、编译安装</strong><br />
sudo aptitude install libpcre++-dev<br />
tar -zxvf haproxy-1.3.15.3.tar.gz<br />
cd haproxy-1.3.15.3<br />
sudo make TARGET=linux26 CPU=i386 USE_STATIC_PCRE=2<br />
sudo make install<br />
install -d /usr/local/sbin<br />
install haproxy /usr/local/sbin<br />
install -d /usr/local/man/man1<br />
install -m 644 doc/haproxy.1 /usr/local/man/man1<br />
install -d /usr/local/doc/haproxy<br />
for x in configuration architecture haproxy-en haproxy-fr; do \<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; install -m 644 doc/$x.txt /usr/local/doc/haproxy ; \<br />
&nbsp;&nbsp;&nbsp; done<br />
<br />
<strong>3、配置文件</strong><br />
<em><strong>1)Haproxy配置(/opt/devroot/itechtag/haproxy.conf)</strong></em></p>
<div class="codeText">
<div class="codeHead"><em><strong>Haproxy配置</strong></em></div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>global&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;daemon&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;maxconn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4096&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;total&nbsp;max&nbsp;connections&nbsp;(dependent&nbsp;on&nbsp;ulimit)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;nbproc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;number&nbsp;of&nbsp;processing&nbsp;cores&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>defaults&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;mode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;clitimeout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;60000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;maximum&nbsp;inactivity&nbsp;time&nbsp;on&nbsp;the&nbsp;client&nbsp;side&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;srvtimeout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;maximum&nbsp;inactivity&nbsp;time&nbsp;on&nbsp;the&nbsp;server&nbsp;side&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;timeout&nbsp;connect&nbsp;&nbsp;&nbsp;4000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;maximum&nbsp;time&nbsp;to&nbsp;wait&nbsp;for&nbsp;a&nbsp;connection&nbsp;attempt&nbsp;to&nbsp;a&nbsp;server&nbsp;to&nbsp;succeed&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;httpclose&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;disable&nbsp;keepalive&nbsp;(HAProxy&nbsp;does&nbsp;not&nbsp;yet&nbsp;support&nbsp;the&nbsp;HTTP&nbsp;keep-alive&nbsp;mode)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abortonclose&nbsp;&nbsp;#&nbsp;enable&nbsp;early&nbsp;dropping&nbsp;of&nbsp;aborted&nbsp;requests&nbsp;from&nbsp;pending&nbsp;queue&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;httpchk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;enable&nbsp;HTTP&nbsp;protocol&nbsp;to&nbsp;check&nbsp;on&nbsp;servers&nbsp;health&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forwardfor&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;enable&nbsp;insert&nbsp;of&nbsp;X-Forwarded-For&nbsp;headers&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;balance&nbsp;roundrobin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;each&nbsp;server&nbsp;is&nbsp;used&nbsp;in&nbsp;turns,&nbsp;according&nbsp;to&nbsp;assigned&nbsp;weight&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;stats&nbsp;enable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;enable&nbsp;web-stats&nbsp;at&nbsp;/haproxy?stats&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;stats&nbsp;auth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;admin:pass&nbsp;&nbsp;#&nbsp;force&nbsp;HTTP&nbsp;Auth&nbsp;to&nbsp;view&nbsp;stats&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;stats&nbsp;refresh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;refresh&nbsp;rate&nbsp;of&nbsp;stats&nbsp;page&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>listen&nbsp;rails_proxy&nbsp;127.0.0.1:8100&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;#&nbsp;-&nbsp;equal&nbsp;weights&nbsp;on&nbsp;all&nbsp;servers&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;#&nbsp;-&nbsp;maxconn&nbsp;will&nbsp;queue&nbsp;requests&nbsp;at&nbsp;HAProxy&nbsp;if&nbsp;limit&nbsp;is&nbsp;reached&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;#&nbsp;-&nbsp;minconn&nbsp;dynamically&nbsp;scales&nbsp;the&nbsp;connection&nbsp;concurrency&nbsp;(bound&nbsp;my&nbsp;maxconn)&nbsp;depending&nbsp;on&nbsp;size&nbsp;of&nbsp;HAProxy&nbsp;queue&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;#&nbsp;-&nbsp;check&nbsp;health&nbsp;every&nbsp;20000&nbsp;microseconds&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;server&nbsp;web1&nbsp;127.0.0.1:8000&nbsp;weight&nbsp;1&nbsp;minconn&nbsp;3&nbsp;maxconn&nbsp;6&nbsp;check&nbsp;inter&nbsp;20000&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>listen&nbsp;slow_proxy&nbsp;127.0.0.1:8200&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;#&nbsp;cluster&nbsp;for&nbsp;slow&nbsp;requests,&nbsp;lower&nbsp;the&nbsp;queues,&nbsp;check&nbsp;less&nbsp;frequently&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;server&nbsp;web1&nbsp;127.0.0.1:8000&nbsp;weight&nbsp;3&nbsp;minconn&nbsp;30&nbsp;maxconn&nbsp;300&nbsp;check&nbsp;inter&nbsp;20000&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;server&nbsp;slow1&nbsp;127.0.0.1:8001&nbsp;weight&nbsp;1&nbsp;minconn&nbsp;10&nbsp;maxconn&nbsp;300&nbsp;check&nbsp;inter&nbsp;40000&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;server&nbsp;slow2&nbsp;127.0.0.1:8002&nbsp;weight&nbsp;1&nbsp;minconn&nbsp;1&nbsp;maxconn&nbsp;300&nbsp;check&nbsp;inter&nbsp;40000&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;server&nbsp;slow3&nbsp;127.0.0.1:8003&nbsp;weight&nbsp;1&nbsp;minconn&nbsp;1&nbsp;maxconn&nbsp;300&nbsp;check&nbsp;inter&nbsp;40000&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><br />
2)Nginx配置</p>
<div class="codeText">
<div class="codeHead">Nginx配置</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>#&nbsp;File&nbsp;generated&nbsp;on&nbsp;25&nbsp;May&nbsp;08&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>#upstream&nbsp;name&nbsp;has&nbsp;to&nbsp;be&nbsp;unique&nbsp;so&nbsp;add&nbsp;on&nbsp;the&nbsp;port&nbsp;number&nbsp;&nbsp;</span></li>
    <li class=""><span>#generate&nbsp;multiple&nbsp;mongrels&nbsp;&nbsp;</span></li>
    <li class="alt"><span>upstream&nbsp;thin_9000{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;127.0.0.1:8200;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>server&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;80;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;localhost;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;/opt/devroot/itechtag/log/access.log;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_log&nbsp;&nbsp;/opt/devroot/itechtag/log/error.log;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;&nbsp;/opt/devroot/itechtag/public/;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;&nbsp;index.html;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header&nbsp;&nbsp;X-Real-IP&nbsp;&nbsp;$remote_addr;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header&nbsp;&nbsp;X-Forwarded-For&nbsp;$proxy_add_x_forwarded_for;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header&nbsp;Host&nbsp;$http_host;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_redirect&nbsp;false;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(-f&nbsp;$request_filename/index.html)&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite&nbsp;(.*)&nbsp;$1/index.html&nbsp;break;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(-f&nbsp;$request_filename.html)&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite&nbsp;(.*)&nbsp;$1.html&nbsp;break;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!-f&nbsp;$request_filename)&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_pass&nbsp;http://thin_9000;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><br />
3）thin配置</p>
<div class="codeText">
<div class="codeHead">thin配置</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>---&nbsp;&nbsp;</span></span></li>
    <li class=""><span>pid:&nbsp;tmp/pids/thin.pid&nbsp;&nbsp;</span></li>
    <li class="alt"><span>log:&nbsp;log/thin.log&nbsp;&nbsp;</span></li>
    <li class=""><span>port:&nbsp;8000&nbsp;&nbsp;</span></li>
    <li class="alt"><span>max_conns:&nbsp;1024&nbsp;&nbsp;</span></li>
    <li class=""><span>timeout:&nbsp;30&nbsp;&nbsp;</span></li>
    <li class="alt"><span>chdir:&nbsp;/opt/devroot/itechtag&nbsp;&nbsp;</span></li>
    <li class=""><span>max_persistent_conns:&nbsp;512&nbsp;&nbsp;</span></li>
    <li class="alt"><span>environment:&nbsp;production&nbsp;&nbsp;</span></li>
    <li class=""><span>address:&nbsp;0.0.0.0&nbsp;&nbsp;</span></li>
    <li class="alt"><span>servers:&nbsp;4&nbsp;&nbsp;</span></li>
    <li class=""><span>daemonize:&nbsp;true&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><strong>4、启动</strong><br />
sudo haproxy -f /opt/devroot/itechtag/haproxy.conf -p pidfils.oid <br />
<br />
<strong>5、停止</strong><br />
kill&nbsp; $(cat /home/source/haproxy-1.3.15.3/examples/pidfils.oid) <br />
<br />
<strong>6、刷新</strong><br />
sudo haproxy -f /opt/devroot/itechtag/haproxy.conf -sf $(cat /opt/devroot/itechtag/pidfils.oid) <br />
<br />
<strong>7、监控</strong><br />
http://127.0.0.1:8200/haproxy?stats<br />
<img height="270" width="540" src="http://docs.google.com/File?id=dhf86kr9_417fvv5w2ck_b" alt="" /><br />
<strong>8、测试</strong><br />
ab -n 2000 -c 200 http://127.0.0.1/<br />
<br />
<strong>附录：Haproxy帮助信息</strong><br />
iceskysl@IceskYsl:/home/source/haproxy-1.3.15.3$ haproxy <br />
HA-Proxy version 1.3.15.3 2008/09/02<br />
Copyright 2000-2008 Willy Tarreau &lt;w@1wt.eu&gt;<br />
<br />
Usage : haproxy -f &lt;cfgfile&gt; [ -vdVD ] [ -n &lt;maxconn&gt; ] [ -N &lt;maxpconn&gt; ]<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [ -p &lt;pidfile&gt; ] [ -m &lt;max megs&gt; ]<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -v displays version ; -vv shows known build options.<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -d enters debug mode ; -db only disables background mode.<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -V enters verbose mode (disables quiet mode)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -D goes daemon ; implies -q<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -q quiet mode : don't display messages<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -c check mode : only check config file and exit<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -n sets the maximum total # of connections (2000)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -m limits the usable amount of memory (in MB)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -N sets the default, per-proxy maximum # of connections (2000)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -p writes pids of all children to this file<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -de disables epoll() usage even when available<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -ds disables speculative epoll() usage even when available<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -dp disables poll() usage even when available<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -sf/-st [pid ]* finishes/terminates old pids. Must be last arguments.<br />
<br />
<strong>参考资料:</strong><br />
http://codesnippets.joyent.com/tag/ubuntu</p>]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date>2008-09-12 09:18:35</wp:post_date>
		<wp:post_date_gmt>2008-09-12 09:18:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e9%83%a8%e7%bd%b2nginxhaproxythin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_30948b3d5c35ec7485847056a5114005</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_335c7f520c6db72747c32e0d21e20bff</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LibFetion: Ubuntu下的飞信</title>
		<link>http://www.iceskysl.com/?p=393</link>
		<pubDate>Mon, 15 Sep 2008 00:55:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=393</guid>
		<description></description>
		<content:encoded><![CDATA[自从用了一段时间的blackberry后，其他都用的不习惯了，更不习惯在上面发短信，于是需要经常开下fetion一些短信，Ubuntu下没有正式的fetion的客户端，今天看到一个叫做LibFetion，试了下，很不错。
<blockquote>LibFetion是由<a href="http://www.libfetion.cn/author.html"><strong>邓东东</strong></a>主持开发的飞信应用程序开发库，其大部分代码使用C编写，支持所有POSIX兼容的操作系统。

LibFetion封装飞信通信协议和功能处理逻辑，给开发者提供简洁、丰富的API接口。使用LibFetion的开发者只需专注于GUI(图形用户界面)的设计开发，就能轻易开发出飞信客户端，能大大提高飞信客户端的开发速度和降低开发难度。 凭借LibFetion的跨平台性，使得飞信在多个操作系统平台上运行，达到“fetion anywhere“。

LibFetion是针对嵌入式设备系统设计的，它只使用了C库，提供平台线程库接口（缺省使用posix线程库)和网络接口（缺省使用socket）因此具有较强的可移植性。目前 LibFetion已在Linux，Mac OS X，Windows，ucLinux，Ecos操作系统上成功运行。

如今基于LibFetion开发的PC客户端程序LibFx已经发布 V0.8.1版了，<a href="http://www.libfetion.cn/demoapp_download.html">点击下载</a>。<a href="http://www.libfetion.cn/bbs/forumdisplay.php?fid=27"><strong>点击这里更换客户端皮肤资源</strong></a>。</blockquote>
安装记录如下：
iceskysl@IceskYsl:/home/source$ sudo dpkg -i linux_fetion_v0.8.1_8.04_i386.deb
[sudo] password for iceskysl:
选中了曾被取消选择的软件包 linuxfetion。
(正在读取数据库 ... 系统当前总共安装有 207059 个文件和目录。)
正在解压缩 linuxfetion (从 linux_fetion_v0.8.1_8.04_i386.deb) ...
正在设置 linuxfetion (0.8.1) ...
iceskysl@IceskYsl:/home/source$]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>自从用了一段时间的blackberry后，其他都用的不习惯了，更不习惯在上面发短信，于是需要经常开下fetion一些短信，Ubuntu下没有正式的fetion的客户端，今天看到一个叫做LibFetion，试了下，很不错。</p>
<blockquote>
<p>LibFetion是由<a href="http://www.libfetion.cn/author.html"><strong>邓东东</strong></a>主持开发的飞信应用程序开发库，其大部分代码使用C编写，支持所有POSIX兼容的操作系统。</p>
LibFetion封装飞信通信协议和功能处理逻辑，给开发者提供简洁、丰富的API接口。使用LibFetion的开发者只需专注于GUI(图形用户界面)的设计开发，就能轻易开发出飞信客户端，能大大提高飞信客户端的开发速度和降低开发难度。  凭借LibFetion的跨平台性，使得飞信在多个操作系统平台上运行，达到&ldquo;fetion anywhere&ldquo;。   <br />
<br />
LibFetion是针对嵌入式设备系统设计的，它只使用了C库，提供平台线程库接口（缺省使用posix线程库)和网络接口（缺省使用socket）因此具有较强的可移植性。目前 LibFetion已在Linux，Mac OS X，Windows，ucLinux，Ecos操作系统上成功运行。   <br />
<br />
如今基于LibFetion开发的PC客户端程序LibFx已经发布 V0.8.1版了，<a href="http://www.libfetion.cn/demoapp_download.html">点击下载</a>。<a href="http://www.libfetion.cn/bbs/forumdisplay.php?fid=27"><strong>点击这里更换客户端皮肤资源</strong></a>。    <br />
</blockquote>
<p>安装记录如下：<br />
iceskysl@IceskYsl:/home/source$ sudo dpkg -i linux_fetion_v0.8.1_8.04_i386.deb <br />
[sudo] password for iceskysl: <br />
选中了曾被取消选择的软件包 linuxfetion。<br />
(正在读取数据库 ... 系统当前总共安装有 207059 个文件和目录。)<br />
正在解压缩 linuxfetion (从 linux_fetion_v0.8.1_8.04_i386.deb) ...<br />
正在设置 linuxfetion (0.8.1) ...<br />
iceskysl@IceskYsl:/home/source$</p>]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date>2008-09-15 00:55:36</wp:post_date>
		<wp:post_date_gmt>2008-09-15 00:55:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libfetion-ubuntu%e4%b8%8b%e7%9a%84%e9%a3%9e%e4%bf%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails应用系统的监控规划</title>
		<link>http://www.iceskysl.com/?p=394</link>
		<pubDate>Tue, 16 Sep 2008 11:53:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=394</guid>
		<description></description>
		<content:encoded><![CDATA[每个系统都得有相应的监控措施，你总不想每天都呆在电脑旁，时刻的去刷新页面、检测系统状态，服务器状态，业务状态吧；你总不想天天扛着电脑，时刻准备着上去重启死掉的进程等待吧。
我们需要一套完备的监控措施，针对熟悉的Rails系统，可以把监控划分为如下几个方面的：
<strong>1、关键进程监控</strong>
该类监控配置监控关键的进程，比如app server的进程，数据库进程等等，配置后可以自动监视相关进程，当某个情况发生时（比如内存耗尽等），自动重启进程，以保证系统正常运行。在Rails应用中，可以做这个事情的有monit，God等。
<strong>2、服务器资源监控</strong>
该类监控系统的资源使用情况，比如内存或者CPU使用率等等，当出现一些情况的时候（比如内存消耗超过90%，CPU消耗100%等）发出告警信息（Email告警，SMS告警等），可以做这个事情的有很多，比如siteview，Scout等。
<strong>3、应用异常告警</strong>
当出现500等应用内部异常的时候，发出告警，并附带相关的堆栈信息，以便以开发人员迅速定位问题，解决问题，可以做这个事情的有Exception Notification plugin.等。

除了这些外，我想还可以做的事一些监控统计信息，比如可以写脚本统计nginx的连接数，Haproxy的统计等。

参考：
http://blog.scoutapp.com/articles/2008/09/09/rails-monitoring-pillars]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>每个系统都得有相应的监控措施，你总不想每天都呆在电脑旁，时刻的去刷新页面、检测系统状态，服务器状态，业务状态吧；你总不想天天扛着电脑，时刻准备着上去重启死掉的进程等待吧。<br />
我们需要一套完备的监控措施，针对熟悉的Rails系统，可以把监控划分为如下几个方面的：<br />
<strong>1、关键进程监控</strong><br />
该类监控配置监控关键的进程，比如app server的进程，数据库进程等等，配置后可以自动监视相关进程，当某个情况发生时（比如内存耗尽等），自动重启进程，以保证系统正常运行。在Rails应用中，可以做这个事情的有monit，God等。<br />
<strong>2、服务器资源监控</strong><br />
该类监控系统的资源使用情况，比如内存或者CPU使用率等等，当出现一些情况的时候（比如内存消耗超过90%，CPU消耗100%等）发出告警信息（Email告警，SMS告警等），可以做这个事情的有很多，比如siteview，Scout等。<br />
<strong>3、应用异常告警</strong><br />
当出现500等应用内部异常的时候，发出告警，并附带相关的堆栈信息，以便以开发人员迅速定位问题，解决问题，可以做这个事情的有Exception Notification plugin.等。<br />
<br />
除了这些外，我想还可以做的事一些监控统计信息，比如可以写脚本统计nginx的连接数，Haproxy的统计等。<br />
<br />
参考：<br />
http://blog.scoutapp.com/articles/2008/09/09/rails-monitoring-pillars</p>]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date>2008-09-16 11:53:51</wp:post_date>
		<wp:post_date_gmt>2008-09-16 11:53:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e5%ba%94%e7%94%a8%e7%b3%bb%e7%bb%9f%e7%9a%84%e7%9b%91%e6%8e%a7%e8%a7%84%e5%88%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f4368e3da6934050cbdc21ed7e630e47</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>今年我还在期待的两个东西,G1&amp;MacBook</title>
		<link>http://www.iceskysl.com/?p=395</link>
		<pubDate>Wed, 17 Sep 2008 14:29:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=395</guid>
		<description></description>
		<content:encoded><![CDATA[眼看着2008年就要过去了，忙忙碌碌的一年，总的给自己一些奖励，今年剩余时间内还在等待的两个东西，分别如下：

<strong>1、Google手机HTC G1</strong>

自从用了一段时间blackberry以后，再也用不习惯其他的传统手机，但是又被第一个夭折的黑莓搞得后怕，一直没有入手新的，本来打算前几天去买BB8110的，无奈懒得跑路，又耽搁了。看中G1的网络功能，因为我的手机多半是用来上网，看文档，处理mail等等，加上习惯了Google的很多在线服务，我认为G1会把Google的很多服务集成进去的，所以就一直等待。

<img src="http://img1.qq.com/digi/pics/12892/12892779.jpg" alt="" />

有报道说美国运营商T-Mobile将会在今天（9月17日）面向消费者预售这款Google手机，然后会在9月23日在美国纽约正式发布上市。

值得担心的有两点：不要像iphone一样，被阻挡在门外；不要太贵。

<strong>2、新版的MacBook</strong>

我只是半个mac迷，我买MB是为了更快捷的工作，虽然用了Ubuntu一年多，也还觉得挺满意，但是追求更加高效的工作环境是我梦寐以求的，新版的MB应该会更加轻薄和环保，价格应该不会贵的离谱，可能会比以前的MB更便宜。

<img src="http://www.blogsmithmedia.com/www.tuaw.com/media/2008/02/macbookssbm2262008.jpg" alt="" />

有报道称新一代 MacBook 采用超薄铝制外壳、LED 背光显示屏，并且价格是极具冲击力的“入门级价格”。且在10.14号发布，看看表，时间也没多少了。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>眼看着2008年就要过去了，忙忙碌碌的一年，总的给自己一些奖励，今年剩余时间内还在等待的两个东西，分别如下：</p>
<p><strong>1、Google手机HTC G1</strong></p>
<p>自从用了一段时间blackberry以后，再也用不习惯其他的传统手机，但是又被第一个夭折的黑莓搞得后怕，一直没有入手新的，本来打算前几天去 买BB8110的，无奈懒得跑路，又耽搁了。看中G1的网络功能，因为我的手机多半是用来上网，看文档，处理mail等等，加上习惯了Google的很多 在线服务，我认为G1会把Google的很多服务集成进去的，所以就一直等待。</p>
<p>有报道说美国运营商T-Mobile将会在今天（9月17日）面向消费者预售这款Google手机，然后会在9月23日在美国纽约正式发布上市。</p>
<p>值得担心的有两点：不要像iphone一样，被阻挡在门外；不要太贵。</p>
<p><strong>2、新版的MacBook</strong></p>
<p>我只是半个mac迷，我买MB是为了更快捷的工作，虽然用了Ubuntu一年多，也还觉得挺满意，但是追求更加高效的工作环境是我梦寐以求的，新版的MB应该会更加轻薄和环保，价格应该不会贵的离谱，可能会比以前的MB更便宜。</p>
<p>有报道称新一代 MacBook 采用超薄铝制外壳、LED 背光显示屏，并且价格是极具冲击力的&ldquo;入门级价格&rdquo;。且在10.14号发布，看看表，时间也没多少了。</p>]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date>2008-09-17 14:29:50</wp:post_date>
		<wp:post_date_gmt>2008-09-17 14:29:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%8a%e5%b9%b4%e6%88%91%e8%bf%98%e5%9c%a8%e6%9c%9f%e5%be%85%e7%9a%84%e4%b8%a4%e4%b8%aa%e4%b8%9c%e8%a5%bfg1macbook</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>297</wp:comment_id>
			<wp:comment_author><![CDATA[Leon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leondu@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>125.89.61.80</wp:comment_author_IP>
			<wp:comment_date>2008-09-17 15:04:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[About #2
Me too...
:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>298</wp:comment_id>
			<wp:comment_author><![CDATA[Raecoo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.237.242.109</wp:comment_author_IP>
			<wp:comment_date>2008-09-18 10:04:11</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MB有新款发布了?关键是价格啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>299</wp:comment_id>
			<wp:comment_author><![CDATA[Leon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leondu@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>125.89.61.80</wp:comment_author_IP>
			<wp:comment_date>2008-09-18 11:13:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果玩ruby/rails，觉得mb就足够了，现在唯一担心是散热。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>300</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.40.139.73</wp:comment_author_IP>
			<wp:comment_date>2008-09-23 01:21:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Google Android手机试用报告网上现身(组图)
http://it.sohu.com/20080923/n259517402.shtml
--要是真这么牛，我还是要等。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>301</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:36:40</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[新MBP，两个型号。一个是1999美元，15寸屏幕，2.4G酷睿2双核，2G内存；另一个是2499美元，CPU缓存加倍，4G内存，双显存，320G硬盘]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>302</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:36:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[新MBP，95英寸厚，史上最薄的MBP]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>303</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:37:27</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[NVIDIA GeForce 9600M GT有512MB显存。接口有火线800，两个USB，迷你DVI，音频IO，扩展卡槽等。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>304</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:37:52</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[新的Air 1.86Ghz CPU 和128GB SSD价格是2499美金]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>305</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:38:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MacBook Pro有两种配置：

$1999, 15.4-inch LED背光显示器，2.4 GHz Intel Core 2 Duo，3MB 二级缓存, 2GB 1066MHz DDR3内存, 双显卡, 250GB硬盘，SuperDrive光驱。

$2499，2.53GHz CPU， 6MB二级缓存, 4GB memory, 512MB显存和更大的硬盘。

今天起发售。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>306</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:40:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[新MB Air，价格还是1799。但这次增加了一个高配款，2499美刀，1.86G的CPU]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>307</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:44:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[macbook有：
999美元的老版；
mbp缩小版，价格为1299美金比MacBook Pro便宜了700美金]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>308</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:44:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还有一款：
第二款笔记本是1599美金 佩戴4Gb内存 320GB的硬盘 黑色键盘 今天起开始销售]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>309</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:45:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[$1299: 13.3" 显示器, 2 GHz CPU, 2GB 内存]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>310</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:45:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1599美金使用的是2.4Ghz CPU]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>311</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:46:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[所以现在就有3个配置的MacBook了：999美元的低配，1299美元的中配，以及1599美元的和MBP配置相同的高配]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>312</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:48:44</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1599美刀的配置：4G内存，320G硬盘，背光键盘，也是明儿上架]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>313</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:50:02</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[直播：
http://live.ilovemac.net/index.pl
http://live.macx.cn/#diglog-573a9e35cf5e4f2e9a58018a300e0b07
http://apple4.us/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>314</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:52:10</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[直播：
白色版MacBook（旧款）售价$999起。

MacBook将于明天开始发售。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>315</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 01:57:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[问：nVidia的这个新显卡，你们是第一家用吗？
答：是第一家上市的，但其他的就看nVidia自个了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>316</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 02:00:57</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Q：Macbook的更新是否与MacBook Pro的设计重复?
A：专业用户选购macBook pro . 但是从设计上看我们要保持产品的统一性 所以macbook也使用了一样的是设计。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>317</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 02:03:34</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Q：macbook与macbook pro尺寸与重量的区别 ？
A： macbook从1.08英寸到0.95英寸 与macbook pro相同 但是macbook只有4.5磅 而macbook pro有5.5磅]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>318</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.61.52</wp:comment_author_IP>
			<wp:comment_date>2008-10-15 02:09:54</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[appale站上已经更新了
http://www.apple.com/mac/whichmacbook/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>319</wp:comment_id>
			<wp:comment_author><![CDATA[DeepBlue]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.tzhang.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>202.108.130.138</wp:comment_author_IP>
			<wp:comment_date>2008-11-05 15:24:20</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我已经入手MB466了。textmate用的非常之爽。终于跟ubuntu说88了。性能用来做开发足以，13寸的我还嫌重呢，15的我可不会往外面带。散热也没有什么问题。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>320</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.3.151</wp:comment_author_IP>
			<wp:comment_date>2008-11-05 23:35:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[才买的呀？新版本的没考虑？
我还在ubuntu上呢，还没买。。。呵呵。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中集成SMS功能</title>
		<link>http://www.iceskysl.com/?p=396</link>
		<pubDate>Thu, 18 Sep 2008 16:04:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=396</guid>
		<description></description>
		<content:encoded><![CDATA[大家对于在Rails系统中发送Email或者IM消息都比较熟悉了，接下来还有一个比较有趣的就是直接发送SMS（短信），也就是接收页面上输入的接收者的手机号码和需要发送的消息，以SMS或者WAP的方式发送到用户手机是。

实现这个功能一般来会所有两个思路，其一是使用<span class="Apple-style-span" style="border-collapse: separate; color: #cccccc; font-family: Helvetica; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 19px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"><a style="margin: 0px; padding: 0px; text-decoration: none; font-weight: bold; color: #c4dd06;" href="http://raa.ruby-lang.org/project/ruby-sms/">ruby-sms</a><span style="color: #000000;">这样的类操作移动设备（比如说手机）和网关交互，发送消息。这类一般比较复杂；还有一类是直接调用现成的SMS网关API，按照其API的格式传递参数即可。</span></span>

<span class="Apple-style-span" style="border-collapse: separate; color: #cccccc; font-family: Helvetica; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 19px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"><span style="color: #000000;">现在这里主要说的是第二类的实现，要实现这个方式的SMS发送，需要找到一家类似的服务商，比如台湾的</span></span>TWSMS(<a href="http://www.twsms.com/" rel="nofollow">http://www.twsms.com</a>)，然后根据其API或者form格式就可以发送SMS了，这里举两个例子。一个是一个台湾的朋友写的<a href="http://code.google.com/p/twsms/">twsms</a>；另外一个是一个老外写的<a href="http://clickatell.rubyforge.org/">clickatell</a>。其各自的使用方法都很简单，如下

<strong>twsms：</strong>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'twsms'</span><span>  </span></span></li>
	<li><span>sms = TWSMS.<span class="keyword">new</span><span>(</span><span class="string">"username"</span><span>, </span><span class="string">"password"</span><span>)  </span></span></li>
	<li class="alt"><span>sms.sendSMS(mobile, message)  </span></li>
	<li><span>sms.querySMS  </span></li>
	<li class="alt"><span>sms.setMessageId(msgid)  </span></li>
	<li><span>sms.querySMS  </span></li>
</ol>
</div>
<strong>clicktell:</strong>
<div class="codeText">
<div class="codeHead">ActiveRecord代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>require </span><span class="string">'clickatell'</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="keyword">class</span><span> SMS  </span></span></li>
	<li><span>  <span class="keyword">def</span><span> initialize(config)  </span></span></li>
	<li class="alt"><span>    <span class="variable">@config</span><span> = config  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  <span class="keyword">def</span><span> create(recipient, message_text)  </span></span></li>
	<li class="alt"><span>    api.send_message(recipient, message_text)  </span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  private  </span></li>
	<li class="alt"><span>    <span class="keyword">def</span><span> api  </span></span></li>
	<li><span>      <span class="variable">@api</span><span> ||= Clickatell::API.authenticate(  </span></span></li>
	<li class="alt"><span>        <span class="variable">@config</span><span>[</span><span class="symbol">:api_key</span><span>],  </span></span></li>
	<li><span>        <span class="variable">@config</span><span>[</span><span class="symbol">:username</span><span>],  </span></span></li>
	<li class="alt"><span>        <span class="variable">@config</span><span>[</span><span class="symbol">:password</span><span>]  </span></span></li>
	<li><span>      )  </span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">YML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span># config/clickatell.yml  </span></span></li>
	<li><span>api_key: abcdefghi123  </span></li>
	<li class="alt"><span>username: joebloggs  </span></li>
	<li><span>password: secret  </span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">加载配置文件</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="comment"># config/environments/production.rb</span><span>  </span></span></li>
	<li><span>CLICKATELL_CONFIG = YAML.load(<span class="builtin">File</span><span>.open(</span><span class="builtin">File</span><span>.join(RAILS_ROOT, </span><span class="string">'config'</span><span>, </span><span class="string">'clickatell.yml'</span><span>)))  </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><span><span>Routing配置</span></span></div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>ActionController::Routing::Routes.draw </span><span class="keyword">do</span><span> |map|  </span></span></li>
	<li><span>  map.resource <span class="symbol">:sms</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">app/views/sms/new.rhtml</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span class="tag">&lt;</span><span>% form_tag '/sms', </span><span class="attribute">:method</span><span> =</span><span class="tag">&gt;</span><span> :post do -%</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  <span class="tag">&lt;</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>Enter the recipients mobile number:</span><span class="tag">&lt;/</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="tag">&lt;</span><span>%= text_field_tag "recipient" %</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  <span class="tag">&lt;</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>Enter your message:</span><span class="tag">&lt;/</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="tag">&lt;</span><span>%= text_area_tag "message_text" %</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li><span>  <span class="tag">&lt;</span><span>%= submit_tag "Send SMS" %</span><span class="tag">&gt;</span><span>  </span></span></li>
	<li class="alt"><span><span class="tag">&lt;</span><span>% end %</span><span class="tag">&gt;</span><span>  </span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><span><span>Controller</span></span>代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> SmsController &lt; ApplicationController  </span></span></li>
	<li><span>  <span class="keyword">def</span><span> create  </span></span></li>
	<li class="alt"><span>    sms = SMS.<span class="keyword">new</span><span>(CLICKATELL_CONFIG)  </span></span></li>
	<li><span>    sms.create(params[<span class="symbol">:recipient</span><span>], params[</span><span class="symbol">:message_text</span><span>])  </span></span></li>
	<li class="alt"><span>    flash[<span class="symbol">:notice</span><span>] = </span><span class="string">"Message sent succesfully!"</span><span>   </span></span></li>
	<li><span>    redirect_to <span class="symbol">:back</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="keyword">rescue</span><span> Clickatell::API::Error =&gt; e  </span></span></li>
	<li><span>    flash[<span class="symbol">:error</span><span>] = </span><span class="string">"Clickatell API error: #{e.message}"</span><span>   </span></span></li>
	<li class="alt"><span>    redirect_to <span class="symbol">:back</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
如上说的都是TW或者其他地方的SMS网关的实现，在国内我貌似没看到有类似的服务的，谁看到过，和我说一下哈。

<strong>参考文档：</strong>

<a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application</a>

<a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://clickatell.rubyforge.org/</a>

<a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://code.google.com/p/twsms/
</a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大家对于在Rails系统中发送Email或者IM消息都比较熟悉了，接下来还有一个比较有趣的就是直接发送SMS（短信），也就是接收页面上输入的接收者的手机号码和需要发送的消息，以SMS或者WAP的方式发送到用户手机是。</p>
<p>实现这个功能一般来会所有两个思路，其一是使用<span style="border-collapse: separate; color: rgb(204, 204, 204); font-family: Helvetica; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 19px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><a style="margin: 0px; padding: 0px; text-decoration: none; font-weight: bold; color: rgb(196, 221, 6);" href="http://raa.ruby-lang.org/project/ruby-sms/">ruby-sms</a><font color="#000000">这样的类操作移动设备（比如说手机）和网关交互，发送消息。这类一般比较复杂；还有一类是直接调用现成的SMS网关API，按照其API的格式传递参数即可。</font></span></p>
<p><span style="border-collapse: separate; color: rgb(204, 204, 204); font-family: Helvetica; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 19px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><font color="#000000">现在这里主要说的是第二类的实现，要实现这个方式的SMS发送，需要找到一家类似的服务商，比如台湾的</font></span>TWSMS(<a rel="nofollow" href="http://www.twsms.com/">http://www.twsms.com</a>)，然后根据其API或者form格式就可以发送SMS了，这里举两个例子。一个是一个台湾的朋友写的<a href="http://code.google.com/p/twsms/">twsms</a>；另外一个是一个老外写的<a href="http://clickatell.rubyforge.org/">clickatell</a>。其各自的使用方法都很简单，如下</p>
<p><strong>twsms：</strong></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'twsms'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>sms&nbsp;=&nbsp;TWSMS.<span class="keyword">new</span><span>(</span><span class="string">&quot;username&quot;</span><span>,&nbsp;</span><span class="string">&quot;password&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>sms.sendSMS(mobile,&nbsp;message)&nbsp;&nbsp;</span></li>
    <li class=""><span>sms.querySMS&nbsp;&nbsp;</span></li>
    <li class="alt"><span>sms.setMessageId(msgid)&nbsp;&nbsp;</span></li>
    <li class=""><span>sms.querySMS&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><strong>clicktell:</strong></p>
<div class="codeText">
<div class="codeHead">ActiveRecord代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'clickatell'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;SMS&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;initialize(config)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@config</span><span>&nbsp;=&nbsp;config&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;create(recipient,&nbsp;message_text)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;api.send_message(recipient,&nbsp;message_text)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;private&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;api&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@api</span><span>&nbsp;||=&nbsp;Clickatell::API.authenticate(&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@config</span><span>[</span><span class="symbol">:api_key</span><span>],&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@config</span><span>[</span><span class="symbol">:username</span><span>],&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@config</span><span>[</span><span class="symbol">:password</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">YML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>#&nbsp;config/clickatell.yml&nbsp;&nbsp;</span></span></li>
    <li class=""><span>api_key:&nbsp;abcdefghi123&nbsp;&nbsp;</span></li>
    <li class="alt"><span>username:&nbsp;joebloggs&nbsp;&nbsp;</span></li>
    <li class=""><span>password:&nbsp;secret&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">加载配置文件</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;config/environments/production.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>CLICKATELL_CONFIG&nbsp;=&nbsp;YAML.load(<span class="builtin">File</span><span>.open(</span><span class="builtin">File</span><span>.join(RAILS_ROOT,&nbsp;</span><span class="string">'config'</span><span>,&nbsp;</span><span class="string">'clickatell.yml'</span><span>)))&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><span><span>Routing配置</span></span></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ActionController::Routing::Routes.draw&nbsp;</span><span class="keyword">do</span><span>&nbsp;|map|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;map.resource&nbsp;<span class="symbol">:sms</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">app/views/sms/new.rhtml</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span class="tag">&lt;</span><span>%&nbsp;form_tag&nbsp;'/sms',&nbsp;</span><span class="attribute">:method</span><span>&nbsp;=</span><span class="tag">&gt;</span><span>&nbsp;:post&nbsp;do&nbsp;-%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>Enter&nbsp;the&nbsp;recipients&nbsp;mobile&nbsp;number:</span><span class="tag">&lt;/</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;text_field_tag&nbsp;&quot;recipient&quot;&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>Enter&nbsp;your&nbsp;message:</span><span class="tag">&lt;/</span><span class="tag-name">label</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;text_area_tag&nbsp;&quot;message_text&quot;&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="tag">&lt;</span><span>%=&nbsp;submit_tag&nbsp;&quot;Send&nbsp;SMS&quot;&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="tag">&lt;</span><span>%&nbsp;end&nbsp;%</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead"><span><span>Controller</span></span>代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;SmsController&nbsp;&lt;&nbsp;ApplicationController&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;create&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sms&nbsp;=&nbsp;SMS.<span class="keyword">new</span><span>(CLICKATELL_CONFIG)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;sms.create(params[<span class="symbol">:recipient</span><span>],&nbsp;params[</span><span class="symbol">:message_text</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;flash[<span class="symbol">:notice</span><span>]&nbsp;=&nbsp;</span><span class="string">&quot;Message&nbsp;sent&nbsp;succesfully!&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;redirect_to&nbsp;<span class="symbol">:back</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">rescue</span><span>&nbsp;Clickatell::API::Error&nbsp;=&gt;&nbsp;e&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;flash[<span class="symbol">:error</span><span>]&nbsp;=&nbsp;</span><span class="string">&quot;Clickatell&nbsp;API&nbsp;error:&nbsp;#{e.message}&quot;</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;redirect_to&nbsp;<span class="symbol">:back</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>如上说的都是TW或者其他地方的SMS网关的实现，在国内我貌似没看到有类似的服务的，谁看到过，和我说一下哈。</p>
<p><strong>参考文档：</strong></p>
<p><a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application</a></p>
<p><a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://clickatell.rubyforge.org/</a></p>
<p><a href="http://www.lukeredpath.co.uk/2007/8/29/sending-sms-messages-from-your-rails-application">http://code.google.com/p/twsms/<br />
</a></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date>2008-09-18 16:04:15</wp:post_date>
		<wp:post_date_gmt>2008-09-18 16:04:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e9%9b%86%e6%88%90sms%e5%8a%9f%e8%83%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>321</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>125.118.220.154</wp:comment_author_IP>
			<wp:comment_date>2008-09-19 10:16:44</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Enter SMS Fu. 不过可能不支持国内移动，没在这边用过。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>322</wp:comment_id>
			<wp:comment_author><![CDATA[浩翔]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.247.194.55</wp:comment_author_IP>
			<wp:comment_date>2008-09-19 15:09:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[国内就算了吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>323</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://zusocfc.pixnet.net/blog</wp:comment_author_url>
			<wp:comment_author_IP>218.164.1.218</wp:comment_author_IP>
			<wp:comment_date>2008-11-17 03:44:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[汗.. TWSMS好像是我寫的啊..
好久沒更新了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>324</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.2.63</wp:comment_author_IP>
			<wp:comment_date>2008-11-17 22:13:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[确实你你写的，呵呵。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>325</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://zusocfc.pixnet.net/blog</wp:comment_author_url>
			<wp:comment_author_IP>218.164.2.118</wp:comment_author_IP>
			<wp:comment_date>2008-11-28 23:41:20</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[近期要是有空我會再更新的
哈哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>326</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.27.206</wp:comment_author_IP>
			<wp:comment_date>2008-11-29 03:16:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hoho,可惜的是偶们这边用不了，呵呵。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RSpec: 探寻Ruby的BDD框架</title>
		<link>http://www.iceskysl.com/?p=397</link>
		<pubDate>Thu, 18 Sep 2008 16:19:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=397</guid>
		<description></description>
		<content:encoded><![CDATA[晓得TDD,BDD,RSpec这些东西很久了，也看了不少的资料和教程，但总感觉还在门外徘徊，始终不得其要，真是怪异。应该是没在实际项目中实践过的缘故吧。
本文记录一些RSpec和BDD（Behaviour Driven Development ）的资料和文档，给我自己也给各位路过者提供一些资料，感兴趣的仔细看看吧。
<ul>
	<li><a href="http://rspec.info/">http://rspec.info/</a></li>
	<li><a href="http://www.joesniff.co.uk/ruby/telling-a-good-story-rspec-stories-from-the-trenches.html">Telling a good story - Rspec stories from the trenches</a></li>
	<li><a href="http://blog.davidchelimsky.net/2008/6/16/slides-from-railsconf">Slides from RailsConf</a></li>
	<li><a href="http://www.benmabey.com/2008/02/04/rspec-plain-text-stories-webrat-chunky-bacon/">rspec plain text stories + webrat = chunky bacon!</a></li>
	<li><a href="http://chinaonrails.com/topic/view/220.html">http://chinaonrails.com/topic/view/220.html</a></li>
	<li><a href="http://paulbarry.com/articles/2008/09/16/story-driven-development-with-rails-part-i-up-and-running">Story Driven Development with Rails - Part I: Up and Running</a></li>
</ul>
另外，<a href="http://rspec.info/documentation/rails/">http://rspec.info/documentation/rails/</a>上的资料非常棒。有路过的，玩BDD的朋友还望多多指教，领我进门，多谢！]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>晓得TDD,BDD,RSpec这些东西很久了，也看了不少的资料和教程，但总感觉还在门外徘徊，始终不得其要，真是怪异。应该是没在实际项目中实践过的缘故吧。<br />
本文记录一些RSpec和BDD（Behaviour Driven Development ）的资料和文档，给我自己也给各位路过者提供一些资料，感兴趣的仔细看看吧。</p>
<ul>
    <li><a href="http://rspec.info/">http://rspec.info/</a></li>
    <li><a href="http://www.joesniff.co.uk/ruby/telling-a-good-story-rspec-stories-from-the-trenches.html">Telling a good story - Rspec stories from the trenches</a></li>
    <li><a href="http://blog.davidchelimsky.net/2008/6/16/slides-from-railsconf">Slides from RailsConf</a></li>
    <li><a href="http://www.benmabey.com/2008/02/04/rspec-plain-text-stories-webrat-chunky-bacon/">rspec plain text stories + webrat = chunky bacon!</a></li>
    <li><a href="http://chinaonrails.com/topic/view/220.html">http://chinaonrails.com/topic/view/220.html</a></li>
    <li><a href="http://paulbarry.com/articles/2008/09/16/story-driven-development-with-rails-part-i-up-and-running">Story Driven Development with Rails - Part I: Up and Running</a></li>
</ul>
<p>另外，<a href="http://rspec.info/documentation/rails/">http://rspec.info/documentation/rails/</a>上的资料非常棒。有路过的，玩BDD的朋友还望多多指教，领我进门，多谢！</p>]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2008-09-18 16:19:01</wp:post_date>
		<wp:post_date_gmt>2008-09-18 16:19:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rspec-%e6%8e%a2%e5%af%bbruby%e7%9a%84bdd%e6%a1%86%e6%9e%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rspec"><![CDATA[RSpec]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>327</wp:comment_id>
			<wp:comment_author><![CDATA[hello]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.211.64.54</wp:comment_author_IP>
			<wp:comment_date>2008-10-03 22:05:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[访问速度有点慢,
环境四M光纤苏州电信呀]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>328</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.76.188</wp:comment_author_IP>
			<wp:comment_date>2008-10-05 15:42:07</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[wowo,奇怪了。
我深圳ADSL 2M带宽感觉还行。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>329</wp:comment_id>
			<wp:comment_author><![CDATA[天涯]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://tainya@163.com</wp:comment_author_url>
			<wp:comment_author_IP>123.185.18.52</wp:comment_author_IP>
			<wp:comment_date>2008-11-03 15:35:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这广告做的，是铺天盖地的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>blog迁移完成，有问题请反馈</title>
		<link>http://www.iceskysl.com/?p=398</link>
		<pubDate>Sun, 21 Sep 2008 17:17:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=398</guid>
		<description></description>
		<content:encoded><![CDATA[经常来我BLog的同学可能发现了，最近老是发生 500错误，其原因是DH对资源限制的非常死，又有很多莫名其妙的进程占资源，非常不爽的说，今天下午务正好不想干啥，就在另外一个VPS上装了下PHP的环境，把这个blog迁移过来了。

考虑到压力其实并不是很大，也为了能省点资源，于是使用的是PHP+nginx来跑PHP的，由于之前都是使用apache跑PHP的，今天还真绕了个小圈子，呵呵。。

不过还好，也没多大会就把环境搭建好了，再把blog程序打包wget过去，再连原库做次备份，然后把备份的SQL导入到本地DB里面，再修改下连接DB的配置文件，非常省事。

最后把域名指向改下，再nginx里面添加一个配置来服务这个系统。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>经常来我BLog的同学可能发现了，最近老是发生 500错误，其原因是DH对资源限制的非常死，又有很多莫名其妙的进程占资源，非常不爽的说，今天下午务正好不想干啥，就在另外一个VPS上装了下PHP的环境，把这个blog迁移过来了。</p>
<p>考虑到压力其实并不是很大，也为了能省点资源，于是使用的是PHP+nginx来跑PHP的，由于之前都是使用apache跑PHP的，今天还真绕了个小圈子，呵呵。。</p>
<p>不过还好，也没多大会就把环境搭建好了，再把blog程序打包wget过去，再连原库做次备份，然后把备份的SQL导入到本地DB里面，再修改下连接DB的配置文件，非常省事。</p>
<p>最后把域名指向改下，再nginx里面添加一个配置来服务这个系统。</p>]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2008-09-21 17:17:45</wp:post_date>
		<wp:post_date_gmt>2008-09-21 17:17:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog%e8%bf%81%e7%a7%bb%e5%ae%8c%e6%88%90%ef%bc%8c%e6%9c%89%e9%97%ae%e9%a2%98%e8%af%b7%e5%8f%8d%e9%a6%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>330</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.178.209</wp:comment_author_IP>
			<wp:comment_date>2008-09-21 17:18:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[评论下试试看，应该没啥问题把？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Google Android(T-Mobile版)即将揭开神秘面纱</title>
		<link>http://www.iceskysl.com/?p=399</link>
		<pubDate>Tue, 23 Sep 2008 01:33:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=399</guid>
		<description></description>
		<content:encoded><![CDATA[很早前我就说自我的blackberry8100跌坏以后，就一直没买手机，一直在正Google Android的发布，昨天早上（22号）看到chinaeconomicreview上的“<a href="http://www.chinaeconomicreview.com/it/2008/09/22/t-mobiles-google-phone-on-its-way.html">T-Mobile’s Google phone on its way</a>”，按照那个里面的图片，觉得非常不爽，整就一黑莓的造型嘛。于是打算入手黑莓8110.

<img src="http://www.chinaeconomicreview.com/it/wp-content/uploads/2008/09/htc-dream.jpg" alt="" />

熬夜到现在，发现假消息满天飞，sohu上放出一篇试用报告“<a href="http://it.sohu.com/20080923/n259517402.shtml">Google Android手机试用报告网上现身(组图)</a>”，消息肯定是假的，但是希望能切中一些功能吧。

<img src="http://photocdn.sohu.com/20080911/Img259517404.jpg" alt="" />

睡一觉，天亮就可以揭晓最终的答案了，如何接近前面一张图，就不等了，直接入手黑莓8110，如果接近后者，我还会动心的。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前我就说自我的blackberry8100跌坏以后，就一直没买手机，一直在正Google Android的发布，昨天早上（22号）看到chinaeconomicreview上的&ldquo;<a href="http://www.chinaeconomicreview.com/it/2008/09/22/t-mobiles-google-phone-on-its-way.html">T-Mobile&rsquo;s Google phone on its way</a>&rdquo;，按照那个里面的图片，觉得非常不爽，整就一黑莓的造型嘛。于是打算入手黑莓8110.</p>
<p><img src="http://www.chinaeconomicreview.com/it/wp-content/uploads/2008/09/htc-dream.jpg" alt="" /></p>
<p>熬夜到现在，发现假消息满天飞，sohu上放出一篇试用报告&ldquo;<a href="http://it.sohu.com/20080923/n259517402.shtml">Google Android手机试用报告网上现身(组图)</a>&rdquo;，消息肯定是假的，但是希望能切中一些功能吧。</p>
<p><img src="http://photocdn.sohu.com/20080911/Img259517404.jpg" alt="" /></p>
<p>睡一觉，天亮就可以揭晓最终的答案了，如何接近前面一张图，就不等了，直接入手黑莓8110，如果接近后者，我还会动心的。</p>]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2008-09-23 01:33:41</wp:post_date>
		<wp:post_date_gmt>2008-09-23 01:33:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-androidt-mobile%e7%89%88%e5%8d%b3%e5%b0%86%e6%8f%ad%e5%bc%80%e7%a5%9e%e7%a7%98%e9%9d%a2%e7%ba%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>331</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.40.139.73</wp:comment_author_IP>
			<wp:comment_date>2008-09-23 01:36:05</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看来搞错了，时间是23日纽约时间上午10时30分开端后，这边应该是在晚上10时30分，有哪个同学同步在网络上直播么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>FrontCompiler: 写出更优雅的CSS代码</title>
		<link>http://www.iceskysl.com/?p=400</link>
		<pubDate>Tue, 23 Sep 2008 14:27:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=400</guid>
		<description></description>
		<content:encoded><![CDATA[对于Rails开发者来说，总觉得一大堆的CSS代码非常碍眼，写起来也不是很优雅，有没有更优雅的方法，毫无疑问，是有的。

先看一段正常的CSS代码：
<div class="codeText">
<div class="codeHead">CSS代码</div>
<ol class="dp-css" start="1">
	<li class="alt"><span><span>div.article div.title {  </span></span></li>
	<li><span>  <span class="keyword">font-weight</span><span>: </span><span class="string">bold</span><span>;  </span></span></li>
	<li class="alt"><span>}  </span></li>
	<li><span>div.article div.title a.author {  </span></li>
	<li class="alt"><span>  <span class="keyword">padding-left</span><span>: </span><span class="string">12px</span><span>;  </span></span></li>
	<li><span>  <span class="keyword">background</span><span>: </span><span class="string">url</span><span>(</span><span class="string">'user.png'</span><span>) </span><span class="string">no-repeat</span><span> </span><span class="string">left</span><span>;  </span></span></li>
	<li class="alt"><span>}  </span></li>
	<li><span>div.article div.text {  </span></li>
	<li class="alt"><span>  <span class="keyword">border</span><span>: </span><span class="string">1px</span><span> </span><span class="string">solid</span><span> </span><span class="colors">#EEE</span><span>;  </span></span></li>
	<li><span>  <span class="keyword">background</span><span>: </span><span class="colors">#FEF</span><span>;  </span></span></li>
	<li class="alt"><span>}  </span></li>
</ol>
</div>
再看一段有那么点不一样的代码：
<div class="codeText">
<div class="codeHead">CSS代码</div>
<ol class="dp-css" start="1">
	<li class="alt"><span><span>div.article {  </span></span></li>
	<li><span>  div.title {  </span></li>
	<li class="alt"><span>    <span class="keyword">font-weight</span><span>: </span><span class="string">bold</span><span>;  </span></span></li>
	<li><span>      </span></li>
	<li class="alt"><span>    a.author {  </span></li>
	<li><span>      <span class="keyword">padding-left</span><span>: </span><span class="string">12px</span><span>;  </span></span></li>
	<li class="alt"><span>      <span class="keyword">background</span><span>: </span><span class="string">url</span><span>(</span><span class="string">'user.png'</span><span>) </span><span class="string">no-repeat</span><span> </span><span class="string">left</span><span>;  </span></span></li>
	<li><span>    }  </span></li>
	<li class="alt"><span>  }  </span></li>
	<li><span>  div.text {  </span></li>
	<li class="alt"><span>    <span class="keyword">border</span><span>: </span><span class="string">1px</span><span> </span><span class="string">solid</span><span> </span><span class="colors">#EEE</span><span>;  </span></span></li>
	<li><span>    <span class="keyword">background</span><span>: </span><span class="colors">#FEF</span><span>;  </span></span></li>
	<li class="alt"><span>  }  </span></li>
	<li><span>}  </span></li>
</ol>
</div>
有啥不一样了么？是否有点发懵呢，呵呵，下面这个写法更清晰和优雅，不是么！但是这样写的话，我们的浏览器是不认识的，怎么办，可以采用第三方的类库来转换即可。现在看到的可以做这个事情的有<a href="http://github.com/MadRabbit/frontcompiler/tree/master">FrontCompiler</a>和<a href="http://blog.airbladesoftware.com/2006/12/11/cssdryer-dry-up-your-css">css_dryer</a>，除了这个功能外，还有其他的功能，例如FrontCompiler还可以合并多个JS/CSS文件，代码如下：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="variable">@c</span><span> = FrontCompiler.</span><span class="keyword">new</span><span>  </span></span></li>
	<li><span><span class="variable">@library_code</span><span> = </span><span class="variable">@c</span><span>.compact_files(%w{  </span></span></li>
	<li class="alt"><span>  src/lib.js  </span></li>
	<li><span>  src/lib/something.js  </span></li>
	<li class="alt"><span>  src/lib/another.js  </span></li>
	<li><span>})  </span></li>
</ol>
</div>
其他的功能请参考其各自的主页。

http://st-on-it.blogspot.com/2008/09/nested-styles-with-ruby-and.html

http://github.com/MadRabbit/frontcompiler/tree/master

http://blog.airbladesoftware.com/2006/12/11/cssdryer-dry-up-your-css]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>对于Rails开发者来说，总觉得一大堆的CSS代码非常碍眼，写起来也不是很优雅，有没有更优雅的方法，毫无疑问，是有的。</p>
<p>先看一段正常的CSS代码：</p>
<div class="codeText">
<div class="codeHead">CSS代码</div>
<ol start="1" class="dp-css">
    <li class="alt"><span><span>div.article&nbsp;div.title&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">font-weight</span><span>:&nbsp;</span><span class="string">bold</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
    <li class=""><span>div.article&nbsp;div.title&nbsp;a.author&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">padding-left</span><span>:&nbsp;</span><span class="string">12px</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">background</span><span>:&nbsp;</span><span class="string">url</span><span>(</span><span class="string">'user.png'</span><span>)&nbsp;</span><span class="string">no-repeat</span><span>&nbsp;</span><span class="string">left</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
    <li class=""><span>div.article&nbsp;div.text&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">border</span><span>:&nbsp;</span><span class="string">1px</span><span>&nbsp;</span><span class="string">solid</span><span>&nbsp;</span><span class="colors">#EEE</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">background</span><span>:&nbsp;</span><span class="colors">#FEF</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>再看一段有那么点不一样的代码：</p>
<div class="codeText">
<div class="codeHead">CSS代码</div>
<ol start="1" class="dp-css">
    <li class="alt"><span><span>div.article&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;div.title&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">font-weight</span><span>:&nbsp;</span><span class="string">bold</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;a.author&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">padding-left</span><span>:&nbsp;</span><span class="string">12px</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">background</span><span>:&nbsp;</span><span class="string">url</span><span>(</span><span class="string">'user.png'</span><span>)&nbsp;</span><span class="string">no-repeat</span><span>&nbsp;</span><span class="string">left</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;div.text&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">border</span><span>:&nbsp;</span><span class="string">1px</span><span>&nbsp;</span><span class="string">solid</span><span>&nbsp;</span><span class="colors">#EEE</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">background</span><span>:&nbsp;</span><span class="colors">#FEF</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>有啥不一样了么？是否有点发懵呢，呵呵，下面这个写法更清晰和优雅，不是么！但是这样写的话，我们的浏览器是不认识的，怎么办，可以采用第三方的类库来转换即可。现在看到的可以做这个事情的有<a href="http://github.com/MadRabbit/frontcompiler/tree/master">FrontCompiler</a>和<a href="http://blog.airbladesoftware.com/2006/12/11/cssdryer-dry-up-your-css">css_dryer</a>，除了这个功能外，还有其他的功能，例如FrontCompiler还可以合并多个JS/CSS文件，代码如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="variable">@c</span><span>&nbsp;=&nbsp;FrontCompiler.</span><span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="variable">@library_code</span><span>&nbsp;=&nbsp;</span><span class="variable">@c</span><span>.compact_files(%w{&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;src/lib.js&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;src/lib/something.js&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;src/lib/another.js&nbsp;&nbsp;</span></li>
    <li class=""><span>})&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>其他的功能请参考其各自的主页。</p>
<p>http://st-on-it.blogspot.com/2008/09/nested-styles-with-ruby-and.html</p>
<p>http://github.com/MadRabbit/frontcompiler/tree/master</p>
<p>http://blog.airbladesoftware.com/2006/12/11/cssdryer-dry-up-your-css</p>]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date>2008-09-23 14:27:24</wp:post_date>
		<wp:post_date_gmt>2008-09-23 14:27:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frontcompiler-%e5%86%99%e5%87%ba%e6%9b%b4%e4%bc%98%e9%9b%85%e7%9a%84css%e4%bb%a3%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="htmlcssjs"><![CDATA[Html/css/js]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4ff92042226b27151a705a5c0aabd86a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ae6b81760c8e9982e97cd1a1f1828d3d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5e8569a157bb22923f5f3085d4bbeb08</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>YOBO: 周杰伦《魔杰座》首播《稻香》--附歌词</title>
		<link>http://www.iceskysl.com/?p=401</link>
		<pubDate>Tue, 23 Sep 2008 22:29:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=401</guid>
		<description></description>
		<content:encoded><![CDATA[今天<a href="http://www.yobo.com">YOBO</a>又一次让我惊喜了一次，晚上突然看到周杰伦的08新专辑《<a href="http://www.yobo.com/album/info_f/54485">魔杰座</a>》中的主打歌《<a href="http://www.yobo.com/album/index/54485">稻香</a>》发布出来了，于是赶紧在Yobo发帖分享，发完后，发现已经有人上传了上去。实在是大惊喜呀。

下面嵌入yobo的音乐小精灵，把这首歌曲分享给大家：

&nbsp;

<object id="single_song_player_479411" width="255" height="108" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.yobo.com/flash/w/105/singlemusic.swf" /><param name="flashvars" value="P=GW|www.yobo.com|xmlUrl|479411|w|255|skin|07|autoPlay|1|volume|80" /><param name="quality" value="high" /><embed id="single_song_player_479411" width="255" height="108" type="application/x-shockwave-flash" src="http://www.yobo.com/flash/w/105/singlemusic.swf" flashvars="P=GW|www.yobo.com|xmlUrl|479411|w|255|skin|07|autoPlay|1|volume|80" quality="high" /></object>

<a href="http://www.yobo.com" target="_blank"><img style="display: none;" title="YOBO友播,音乐DNA,音乐推荐,排行榜,音乐插件,MUSIC WIDGET" src="http://www.yobo.com/images/blank_image.gif" alt="" /></a>

歌词如下：

「稻 香」
作词：周杰伦 作曲：周杰伦

对这个世界如果你有太多的抱怨
跌倒了就不敢继续往前走
为什么人要这么的脆弱 堕落
请你打开电视看看
多少人为生命在努力勇敢的走下去
我们是不是该知足
珍惜一切 就算没有拥有

还记得你说家是唯一的城堡 随着稻香河流继续奔跑
微微笑 小时候的梦我知道
不要哭让萤火虫带着你逃跑 乡间的歌谣永远的依靠
回家吧 回到最初的美好

不要这么容易就想放弃 就像我说的
追不到的梦想 换个梦不就得了
为自己的人生鲜艳上色 先把爱涂上喜欢的颜色
笑一个吧 功成名就不是目的
让自己快乐快乐这才叫做意义
童年的纸飞机 现在终于飞回我手里

所谓的那快乐 赤脚在田里追蜻蜓追到累了
偷摘水果被蜜蜂给叮到怕了 谁在偷笑呢
我靠着稻草人吹着风唱着歌睡着了
哦 哦 午后吉它在虫鸣中更清脆
哦 哦 阳光洒在路上就不怕心碎
珍惜一切 就算没有拥有

还记得你说家是唯一的城堡 随着稻香河流继续奔跑
微微笑 小时候的梦我知道
不要哭让萤火虫带着你逃跑 乡间的歌谣永远的依靠
回家吧 回到最初的美好]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2008-09-23 22:29:30</wp:post_date>
		<wp:post_date_gmt>2008-09-23 22:29:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yobo-%e5%91%a8%e6%9d%b0%e4%bc%a6%e3%80%8a%e9%ad%94%e6%9d%b0%e5%ba%a7%e3%80%8b%e9%a6%96%e6%92%ad%e3%80%8a%e7%a8%bb%e9%a6%99%e3%80%8b-%e9%99%84%e6%ad%8c%e8%af%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>332</wp:comment_id>
			<wp:comment_author><![CDATA[遗忘的三叶草]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.157.135.71</wp:comment_author_IP>
			<wp:comment_date>2008-10-17 12:40:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[周杰伦的稻香   很好哦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Android G1: 我有一次被震撼了</title>
		<link>http://www.iceskysl.com/?p=402</link>
		<pubDate>Tue, 23 Sep 2008 23:28:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=402</guid>
		<description></description>
		<content:encoded><![CDATA[很早前我就说，我今年还在等的2个东西是<a href="http://iceskysl.1sters.com/?action=show&amp;id=395">G1和新版本macbook</a>，虽然G1尚未发布，但是对G1的期待还是很大的，尤其是用了这么多的Google应用（Doc，Gmail，日历，reader，Gtalk，picasa，chrome等），我自然希望能有一部可以随时带着身边的互联网手机。

iphone虽好，但是毕竟Mac的东西还是让人有点点。。。G的东西更加草根化，从G1的这次发布会就可以感受得到，该有的功能全部都有，晚上看不到视频，只能看<a href="http://apple4.us">apple4.us</a>在twitter上的直播。

看个图片吧：

<img src="http://apple4.us/images/2008/img_3660-thumb-500x333.jpg" alt="" />

该有的功能都有，没有的还可以自己写，自己下，都是免费的，这个很牛，超过iphone不是不可能。可以看看月光写的对比文章http://www.williamlong.info/archives/1508.html

唯一比较郁闷的是，何时才能在中国看到，按照发布会的说法，T-mobile签2年的价格是179美刀，换成RMB也就1200多点，但是鉴于中国移动的"围墙“政策，不晓得正式渠道猴年马月才能进来呀，真是悲哀。

<em>PS：Reacoo说的<a href="http://www.twhirl.org/">twhirl</a>这个twitter的客户端确实不赖，看来AIR也修成正果了。</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前我就说，我今年还在等的2个东西是<a href="../../../?action=show&amp;id=395">G1和新版本macbook</a>，虽然G1尚未发布，但是对G1的期待还是很大的，尤其是用了这么多的Google应用（Doc，Gmail，日历，reader，Gtalk，picasa，chrome等），我自然希望能有一部可以随时带着身边的互联网手机。</p>
<p>iphone虽好，但是毕竟Mac的东西还是让人有点点。。。G的东西更加草根化，从G1的这次发布会就可以感受得到，该有的功能全部都有，晚上看不到视频，只能看<a href="http://apple4.us/">apple4.us</a>在twitter上的直播。</p>
<p>看个图片吧：</p>
<p><img src="http://apple4.us/images/2008/img_3660-thumb-500x333.jpg" alt="" /></p>
<p>该有的功能都有，没有的还可以自己写，自己下，都是免费的，这个很牛，超过iphone不是不可能。可以看看月光写的对比文章http://www.williamlong.info/archives/1508.html</p>
<p>唯一比较郁闷的是，何时才能在中国看到，按照发布会的说法，T-mobile签2年的价格是179美刀，换成RMB也就1200多点，但是鉴于中国移动的&quot;围墙&ldquo;政策，不晓得正式渠道猴年马月才能进来呀，真是悲哀。</p>
<p><em>PS：Reacoo说的<a href="http://www.twhirl.org/">twhirl</a>这个twitter的客户端确实不赖，看来AIR也修成正果了。</em></p>]]></excerpt:encoded>
		<wp:post_id>402</wp:post_id>
		<wp:post_date>2008-09-23 23:28:37</wp:post_date>
		<wp:post_date_gmt>2008-09-23 23:28:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-g1-%e6%88%91%e6%9c%89%e4%b8%80%e6%ac%a1%e8%a2%ab%e9%9c%87%e6%92%bc%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>333</wp:comment_id>
			<wp:comment_author><![CDATA[yawl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://seclib.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>69.255.234.150</wp:comment_author_IP>
			<wp:comment_date>2008-09-24 00:43:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[T-Mobile不像 AT&T,对unlock很友好,发个email就给解锁码--至少对以前的其他款手机都是这样.

解锁后,插上中国移动的SIM卡就能用了.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>334</wp:comment_id>
			<wp:comment_author><![CDATA[maninred]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85.com</wp:comment_author_url>
			<wp:comment_author_IP>119.146.68.46</wp:comment_author_IP>
			<wp:comment_date>2008-09-24 10:04:16</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看上去不错的样子，好想要......]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>android下开发初探，写个网络音乐播放器</title>
		<link>http://www.iceskysl.com/?p=403</link>
		<pubDate>Thu, 25 Sep 2008 01:30:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[很早前就对<a href="http://code.google.com/android/index.html">Android</a>感兴趣了，那时看了点API，觉得比较麻烦，就没深入下去，直到昨天发布G1，才突然觉得这个Android还真强大，翻了下他的API，真牛，今天花了一天时间，把其code上的API和文档大概都过了一遍，虽然还有些具体的不会做，但是整个架构流程和布局模式都很清楚了。

<img src="http://code.google.com/android/images/system-architecture.jpg" alt="" width="619" height="444" />

采用Eclipse导入几个demo看了下，结合文档，非常直观（google的文档和help写的非常到位），晚上就试着自己写个小东西，因为最近对网络音乐比较感兴趣，于是就试着写了一个网络音乐播放器。

UI就不看了，看段代码

&nbsp;
<div class="codeText">
<div class="codeHead">Java/Android代码</div>
<ol class="dp-j" start="1">
	<li class="alt"><span><span class="keyword">private</span><span> MediaPlayer mMediaPlayer;  </span></span></li>
	<li><span>Uri uri = Uri.parse(<span class="string">"http://www.jjyyjy.com/wj/he.mp3"</span><span>);  </span></span></li>
	<li class="alt"><span>mMediaPlayer = MediaPlayer.create(<span class="keyword">this</span><span>, uri);  </span></span></li>
	<li><span>mMediaPlayer.start();  </span></li>
</ol>
</div>
然后导入模拟器，可以很顺利的听到歌曲，还很简陋，有时间的话，我会继续开发这个应用。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>很早前就对<a href="http://code.google.com/android/index.html">Android</a>感 兴趣了，那时看了点API，觉得比较麻烦，就没深入下去，直到昨天发布G1，才突然觉得这个Android还真强大，翻了下他的API，真牛，今天花了一 天时间，把其code上的API和文档大概都过了一遍，虽然还有些具体的不会做，但是整个架构流程和布局模式都很清楚了。</p>
<p><img height="444" width="619" alt="" src="http://code.google.com/android/images/system-architecture.jpg" /></p>
<p>采用Eclipse导入几个demo看了下，结合文档，非常直观（google的文档和help写的非常到位），晚上就试着自己写个小东西，因为最近对网络音乐比较感兴趣，于是就试着写了一个网络音乐播放器。</p>
<p>UI就不看了，看段代码</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead">Java/Android代码</div>
<ol class="dp-j" start="1">
    <li class="alt"><span><span class="keyword">private</span><span>&nbsp;MediaPlayer&nbsp;mMediaPlayer;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Uri&nbsp;uri&nbsp;=&nbsp;Uri.parse(<span class="string">&quot;http://www.jjyyjy.com/wj/he.mp3&quot;</span><span>);&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>mMediaPlayer&nbsp;=&nbsp;MediaPlayer.create(<span class="keyword">this</span><span>,&nbsp;uri);&nbsp;&nbsp;</span></span></li>
    <li class=""><span>mMediaPlayer.start();&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>然后导入模拟器，可以很顺利的听到歌曲，还很简陋，有时间的话，我会继续开发这个应用。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2008-09-25 01:30:33</wp:post_date>
		<wp:post_date_gmt>2008-09-25 01:30:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b8%8b%e5%bc%80%e5%8f%91%e5%88%9d%e6%8e%a2%ef%bc%8c%e5%86%99%e4%b8%aa%e7%bd%91%e7%bb%9c%e9%9f%b3%e4%b9%90%e6%92%ad%e6%94%be%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.jjyyjy.com/wj/he.mp3
0
audio/mpeg
]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自由行: 阳朔,我来了</title>
		<link>http://www.iceskysl.com/?p=404</link>
		<pubDate>Sat, 27 Sep 2008 20:05:09 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=404</guid>
		<description></description>
		<content:encoded><![CDATA[都说阳朔是深圳的后花园，我来深圳两年多了，还没去后花园转过，估计在深圳呆不了不久了，再不去又没机会了，匆匆忙忙的梳理了下，准备出发了。

不想背电脑，手机也坏了，背个包，去散散心吧，都说本命年会多有坎坷，以前还真不信，现在有些相信了，呵呵，没啥大事，散散心就好了。

没有行程安排，没有工作，没人任务，背包走到哪里是哪里，舒服就找个店住下来，不舒服，去去就回。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>都说阳朔是深圳的后花园，我来深圳两年多了，还没去后花园转过，估计在深圳呆不了不久了，再不去又没机会了，匆匆忙忙的梳理了下，准备出发了。</p>
<p>不想背电脑，手机也坏了，背个包，去散散心吧，都说本命年会多有坎坷，以前还真不信，现在有些相信了，呵呵，没啥大事，散散心就好了。</p>
<p>没有行程安排，没有工作，没人任务，背包走到哪里是哪里，舒服就找个店住下来，不舒服，去去就回。</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>404</wp:post_id>
		<wp:post_date>2008-09-27 20:05:09</wp:post_date>
		<wp:post_date_gmt>2008-09-27 20:05:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%87%aa%e7%94%b1%e8%a1%8c-%e9%98%b3%e6%9c%94%e6%88%91%e6%9d%a5%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>335</wp:comment_id>
			<wp:comment_author><![CDATA[Leon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leondu@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>125.89.61.80</wp:comment_author_IP>
			<wp:comment_date>2008-09-28 08:31:24</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[假期愉快！

ps: 离开深圳，不是来广州吧？ :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>336</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.178.23</wp:comment_author_IP>
			<wp:comment_date>2008-10-03 11:58:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[回来了，挤死我了，到处都是黑压压的人群。。
另外，晒掉一层皮，没法见人了，囧～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>序列化数据的速度对比: Marshal vs. JSON vs.  Eval vs. YAML .ZAML</title>
		<link>http://www.iceskysl.com/?p=405</link>
		<pubDate>Sun, 05 Oct 2008 20:47:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[有的时候，需要序列化一些数据，这个时候，我们可以选择的很多，比如Ruby常用的YAML，以及一些不常用的EVAL等，有人针对其<a href="http://www.pauldix.net/2008/08/serializing-dat.html">Serializing的速度做了对比测试</a>，结果显示如下：
<div class="codeText">
<div class="codeHead">对比结果</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>user system total real  </span></span></li>
	<li><span>array marshal 0.210000 0.010000 0.220000 ( 0.220701)  </span></li>
	<li class="alt"><span>array json 2.180000 0.050000 2.230000 ( 2.288489)  </span></li>
	<li><span>array eval 2.090000 0.060000 2.150000 ( 2.240443)  </span></li>
	<li class="alt"><span>array yaml 26.650000 0.350000 27.000000 ( 27.810609)  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>hash marshal 2.000000 0.050000 2.050000 ( 2.114950)  </span></li>
	<li><span>hash json 3.700000 0.060000 3.760000 ( 3.881716)  </span></li>
	<li class="alt"><span>hash eval 5.370000 0.140000 5.510000 ( 6.117947)  </span></li>
	<li><span>hash yaml 68.220000 0.870000 69.090000 ( 72.370784)  </span></li>
</ol>
</div>
毫无疑问，Marshal 是最快的，YAML不是一般的慢。

但是看到有人写了<a href="http://github.com/hallettj/zaml/tree/master/zaml.rb">zaml</a>，其描述为”<span id="repository_description">Fast yaml serialization for Ruby</span>“，号称可以”<a href="http://gnomecoder.wordpress.com/2008/09/27/yaml-dump-1600-percent-faster/">YAML.dump, 1600% faster</a>“，感兴趣的可以看看。

<strong>参考文档：</strong>
http://github.com/hallettj/zaml/tree/master
http://chinaonrails.com/topic/view/2091.html
http://gnomecoder.wordpress.com/2008/09/27/yaml-dump-1600-percent-faster/
http://www.pauldix.net/2008/08/serializing-dat.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候，需要序列化一些数据，这个时候，我们可以选择的很多，比如Ruby常用的YAML，以及一些不常用的EVAL等，有人针对其<a href="http://www.pauldix.net/2008/08/serializing-dat.html">Serializing的速度做了对比测试</a>，结果显示如下：</p>
<div class="codeText">
<div class="codeHead">对比结果</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>user&nbsp;system&nbsp;total&nbsp;real&nbsp;&nbsp;</span></span></li>
    <li class=""><span>array&nbsp;marshal&nbsp;0.210000&nbsp;0.010000&nbsp;0.220000&nbsp;(&nbsp;0.220701)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>array&nbsp;json&nbsp;2.180000&nbsp;0.050000&nbsp;2.230000&nbsp;(&nbsp;2.288489)&nbsp;&nbsp;</span></li>
    <li class=""><span>array&nbsp;eval&nbsp;2.090000&nbsp;0.060000&nbsp;2.150000&nbsp;(&nbsp;2.240443)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>array&nbsp;yaml&nbsp;26.650000&nbsp;0.350000&nbsp;27.000000&nbsp;(&nbsp;27.810609)&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>hash&nbsp;marshal&nbsp;2.000000&nbsp;0.050000&nbsp;2.050000&nbsp;(&nbsp;2.114950)&nbsp;&nbsp;</span></li>
    <li class=""><span>hash&nbsp;json&nbsp;3.700000&nbsp;0.060000&nbsp;3.760000&nbsp;(&nbsp;3.881716)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>hash&nbsp;eval&nbsp;5.370000&nbsp;0.140000&nbsp;5.510000&nbsp;(&nbsp;6.117947)&nbsp;&nbsp;</span></li>
    <li class=""><span>hash&nbsp;yaml&nbsp;68.220000&nbsp;0.870000&nbsp;69.090000&nbsp;(&nbsp;72.370784)&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>毫无疑问，Marshal 是最快的，YAML不是一般的慢。</p>
<p>但是看到有人写了<a href="http://github.com/hallettj/zaml/tree/master/zaml.rb">zaml</a>，其描述为&rdquo;<span class="" rel="/hallettj/zaml/edit/update" id="repository_description">Fast yaml serialization for Ruby</span>&ldquo;，号称可以&rdquo;<a href="http://gnomecoder.wordpress.com/2008/09/27/yaml-dump-1600-percent-faster/">YAML.dump, 1600% faster</a>&ldquo;，感兴趣的可以看看。</p>
<p><strong>参考文档：</strong><br />
http://github.com/hallettj/zaml/tree/master<br />
http://chinaonrails.com/topic/view/2091.html<br />
http://gnomecoder.wordpress.com/2008/09/27/yaml-dump-1600-percent-faster/<br />
http://www.pauldix.net/2008/08/serializing-dat.html</p>]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2008-10-05 20:47:54</wp:post_date>
		<wp:post_date_gmt>2008-10-05 20:47:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ba%8f%e5%88%97%e5%8c%96%e6%95%b0%e6%8d%ae%e7%9a%84%e9%80%9f%e5%ba%a6%e5%af%b9%e6%af%94-marshal-vs-json-vs-eval-vs-yaml-zaml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_61cdd736f07a15cada3fc191ea8406ce</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e39581cad18b32a1ef92acdea19fe1de</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2022a92d26fee400f15f9ca7df7aafd8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c6f31b4f553cce6495eec5a69a244b56</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>采用Ruby提取MP3的metadata信息</title>
		<link>http://www.iceskysl.com/?p=406</link>
		<pubDate>Sun, 05 Oct 2008 21:15:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=406</guid>
		<description></description>
		<content:encoded><![CDATA[昨天有幸认识了<a href="http://www.trb.cn/wordpress/index.php/my-profile/">terry</a>，看到其blog上有篇文章”<a href="http://www.trb.cn/wordpress/index.php/2008/08/28/661/">消费者对音乐内容Metadata的需求</a>“，其中写到”<em>音乐Metadata是所有数字音乐服务的根基，它的完备性也将直接影响服务的可扩展性。</em>“，最基础也是应用最普遍的是”<em>2.音乐目录元数据，例如歌曲名、专辑名、词曲作者等直接描述音乐作品的信息。这些信息通常会直接体现在各种数字音乐服务上。</em>“。其给出一份消费者对metadata需求的调查研究，如下：
<img src="http://www.trb.cn/wordpress/upload/Metadata_CCC0/20080828_143216.jpg" alt="" />
今天突然来了兴趣，分析一首歌曲，找到其对应的metadata信息，经过资料查找和分析，目前已经基本完成，主要是读取MP3文件的ID3信息（ID3v1，ID3v1.1以及ID3v2），ID3v1的信息比较好读取，下面会给出一段ruby代码，ID3v2比较复杂，也有比较成熟的开源库，这里就不详细说了，我写在GoogleDoc里了，有感兴趣的可以自行研究或者找我要。
下面是一段读取MP3歌曲的ID3v1.1信息的代码和运算结果：
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span class="keyword">class</span><span> ID3  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">#初始化genre列表信息</span><span>  </span></span></li>
	<li><span>  genre_list = &lt;&lt;-GENRES  </span></li>
	<li class="alt"><span>Blues  </span></li>
	<li><span>Classic Rock  </span></li>
	<li class="alt"><span>...省略其他的genre...  </span></li>
	<li><span>  GENRES  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>  GENRE_LIST = genre_list.split(<span class="string">"\n"</span><span>)  </span></span></li>
	<li class="alt"><span>  TAGS = [ <span class="symbol">:title</span><span>, </span><span class="symbol">:artist</span><span>, </span><span class="symbol">:album</span><span>, </span><span class="symbol">:year</span><span>, </span><span class="symbol">:comment</span><span>, </span><span class="symbol">:track</span><span>, </span><span class="symbol">:genre</span><span> ]  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>  attr_accessor *TAGS  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>  <span class="keyword">def</span><span> initialize(filename)  </span></span></li>
	<li><span>    id3 = <span class="builtin">File</span><span>.open(filename) </span><span class="keyword">do</span><span> |mp3|  </span></span></li>
	<li class="alt"><span>      mp3.seek(-128, <span class="builtin">IO</span><span>::SEEK_END)  </span></span></li>
	<li><span>      mp3.read  </span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>    <span class="keyword">raise</span><span> </span><span class="string">"No ID3 tags"</span><span> </span><span class="keyword">if</span><span> (id3 !~ /^TAG/ || id3 ~= /^TAG0{125}/)  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>    <span class="variable">@title</span><span>, </span><span class="variable">@artist</span><span>, </span><span class="variable">@album</span><span>, </span><span class="variable">@year</span><span>, </span><span class="variable">@comment</span><span>, </span><span class="variable">@genre</span><span> = id3.unpack(</span><span class="string">'xxxA30A30A30A4A30C1'</span><span>)  </span></span></li>
	<li><span>    <span class="variable">@comment</span><span>, </span><span class="variable">@track</span><span> = </span><span class="variable">@comment</span><span>.unpack(</span><span class="string">'Z*@28C1'</span><span>) </span><span class="keyword">if</span><span> </span><span class="variable">@comment</span><span> =~ /\0.$/  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span>    <span class="variable">@genre</span><span> = GENRE_LIST[</span><span class="variable">@genre</span><span>]  </span></span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span><span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="keyword">if</span><span> __FILE__ == </span><span class="variable">$0</span><span>  </span></span></li>
	<li class="alt"><span>  id3 = ID3.<span class="keyword">new</span><span>(ARGV.shift)  </span></span></li>
	<li><span>  ID3::TAGS.<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |tag|  </span></span></li>
	<li class="alt"><span>    puts <span class="string">"#{tag.to_s.capitalize.rjust(8)}: #{id3.send(tag)}"</span><span>  </span></span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span><span class="keyword">end</span><span>  </span></span></li>
</ol>
</div>
其运算的结果差不多是这样的：
<div class="codeText">
<div class="codeHead">算的结果</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>F:\IceskYsl&gt;ruby id3_tags.rb ../06.mp3  </span></span></li>
	<li><span>   Title: What I've Done  </span></li>
	<li class="alt"><span>  Artist: Linkin Park  </span></li>
	<li><span>   Album: Minutes To Midnight  </span></li>
	<li class="alt"><span>    Year: 2007  </span></li>
	<li><span> Comment: http://www.HiHiCD.com  </span></li>
	<li class="alt"><span>   Track: 0  </span></li>
	<li><span>   Genre: Metal  </span></li>
</ol>
</div>
发现这是个有意思的事情，呵呵。

参考文章：
http://www.trb.cn/wordpress/index.php/2008/08/28/661/]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>昨天有幸认识了<a href="http://www.trb.cn/wordpress/index.php/my-profile/">terry</a>，看到其blog上有篇文章&rdquo;<a href="http://www.trb.cn/wordpress/index.php/2008/08/28/661/">消费者对音乐内容Metadata的需求</a>&ldquo;，其中写到&rdquo;<em>音乐Metadata是所有数字音乐服务的根基，它的完备性也将直接影响服务的可扩展性。</em>&ldquo;，最基础也是应用最普遍的是&rdquo;<em>2.音乐目录元数据，例如歌曲名、专辑名、词曲作者等直接描述音乐作品的信息。这些信息通常会直接体现在各种数字音乐服务上。</em>&ldquo;。其给出一份消费者对metadata需求的调查研究，如下：<br />
<img src="http://www.trb.cn/wordpress/upload/Metadata_CCC0/20080828_143216.jpg" alt="" /><br />
今天突然来了兴趣，分析一首歌曲，找到其对应的metadata信息，经过资料查找和分析，目前已经基本完成，主要是读取MP3文件的ID3信息 （ID3v1，ID3v1.1以及ID3v2），ID3v1的信息比较好读取，下面会给出一段ruby代码，ID3v2比较复杂，也有比较成熟的开源库， 这里就不详细说了，我写在GoogleDoc里了，有感兴趣的可以自行研究或者找我要。<br />
下面是一段读取MP3歌曲的ID3v1.1信息的代码和运算结果：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;ID3&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#初始化genre列表信息</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;genre_list&nbsp;=&nbsp;&lt;&lt;-GENRES&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Blues&nbsp;&nbsp;</span></li>
    <li class=""><span>Classic&nbsp;Rock&nbsp;&nbsp;</span></li>
    <li class="alt"><span>...省略其他的genre...&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;GENRES&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;GENRE_LIST&nbsp;=&nbsp;genre_list.split(<span class="string">&quot;\n&quot;</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;TAGS&nbsp;=&nbsp;[&nbsp;<span class="symbol">:title</span><span>,&nbsp;</span><span class="symbol">:artist</span><span>,&nbsp;</span><span class="symbol">:album</span><span>,&nbsp;</span><span class="symbol">:year</span><span>,&nbsp;</span><span class="symbol">:comment</span><span>,&nbsp;</span><span class="symbol">:track</span><span>,&nbsp;</span><span class="symbol">:genre</span><span>&nbsp;]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;attr_accessor&nbsp;*TAGS&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;initialize(filename)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;id3&nbsp;=&nbsp;<span class="builtin">File</span><span>.open(filename)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|mp3|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp3.seek(-128,&nbsp;<span class="builtin">IO</span><span>::SEEK_END)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp3.read&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">raise</span><span>&nbsp;</span><span class="string">&quot;No&nbsp;ID3&nbsp;tags&quot;</span><span>&nbsp;</span><span class="keyword">if</span><span>&nbsp;(id3&nbsp;!~&nbsp;/^TAG/&nbsp;||&nbsp;id3&nbsp;~=&nbsp;/^TAG0{125}/)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@title</span><span>,&nbsp;</span><span class="variable">@artist</span><span>,&nbsp;</span><span class="variable">@album</span><span>,&nbsp;</span><span class="variable">@year</span><span>,&nbsp;</span><span class="variable">@comment</span><span>,&nbsp;</span><span class="variable">@genre</span><span>&nbsp;=&nbsp;id3.unpack(</span><span class="string">'xxxA30A30A30A4A30C1'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@comment</span><span>,&nbsp;</span><span class="variable">@track</span><span>&nbsp;=&nbsp;</span><span class="variable">@comment</span><span>.unpack(</span><span class="string">'Z*@28C1'</span><span>)&nbsp;</span><span class="keyword">if</span><span>&nbsp;</span><span class="variable">@comment</span><span>&nbsp;=~&nbsp;/\0.$/&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@genre</span><span>&nbsp;=&nbsp;GENRE_LIST[</span><span class="variable">@genre</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">if</span><span>&nbsp;__FILE__&nbsp;==&nbsp;</span><span class="variable">$0</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;id3&nbsp;=&nbsp;ID3.<span class="keyword">new</span><span>(ARGV.shift)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;ID3::TAGS.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|tag|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{tag.to_s.capitalize.rjust(8)}:&nbsp;#{id3.send(tag)}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>其运算的结果差不多是这样的：</p>
<div class="codeText">
<div class="codeHead">算的结果</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>F:\IceskYsl&gt;ruby&nbsp;id3_tags.rb&nbsp;../06.mp3&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;Title:&nbsp;What&nbsp;I've&nbsp;Done&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;Artist:&nbsp;Linkin&nbsp;Park&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;Album:&nbsp;Minutes&nbsp;To&nbsp;Midnight&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Year:&nbsp;2007&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;Comment:&nbsp;http://www.HiHiCD.com&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;Track:&nbsp;0&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;Genre:&nbsp;Metal&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>发现这是个有意思的事情，呵呵。</p>]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date>2008-10-05 21:15:12</wp:post_date>
		<wp:post_date_gmt>2008-10-05 21:15:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%87%87%e7%94%a8ruby%e6%8f%90%e5%8f%96mp3%e7%9a%84metadata%e4%bf%a1%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_895ddcea197e34ce391220dd26aa8383</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_53491a31f36c5ff707ea039c13b8a002</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>337</wp:comment_id>
			<wp:comment_author><![CDATA[浩翔]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.247.194.55</wp:comment_author_IP>
			<wp:comment_date>2008-10-06 18:22:58</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[cool]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>添加一个分类“架构设计 &#124; Architecture”</title>
		<link>http://www.iceskysl.com/?p=407</link>
		<pubDate>Tue, 07 Oct 2008 10:10:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[由于越来越多的关注<strong>Architecture</strong>方面的东西，而这类内容和以往的“技术归总 | Technic”有些不同，于是增加了一个“<a href="http://iceskysl.1sters.com/?action=index&amp;cid=7">架构设计 | Architecture</a>”分类。
该分类主要收纳关于Architecture，Scalability，Load balance， throughput， HA， Performance等方面的理论，模式，以及对其他成熟的Architecture的分析和理解。
希望和大家多交流，分享。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>由于越来越多的关注<strong>Architecture</strong>方面的东西，而这类内容和以往的&ldquo;技术归总 | Technic&rdquo;有些不同，于是增加了一个&ldquo;<a href="../../../?action=index&amp;cid=7">架构设计 | Architecture</a>&rdquo;分类。<br />
该分类主要收纳关于Architecture，Scalability，Load balance， throughput， HA， Performance等方面的理论，模式，以及对其他成熟的Architecture的分析和理解。<br />
希望和大家多交流，分享。</p>]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2008-10-07 10:10:51</wp:post_date>
		<wp:post_date_gmt>2008-10-07 10:10:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%bb%e5%8a%a0%e4%b8%80%e4%b8%aa%e5%88%86%e7%b1%bb%e2%80%9c%e6%9e%b6%e6%9e%84%e8%ae%be%e8%ae%a1-architecture%e2%80%9d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Startups时就考虑Scalability</title>
		<link>http://www.iceskysl.com/?p=408</link>
		<pubDate>Tue, 07 Oct 2008 10:28:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=408</guid>
		<description></description>
		<content:encoded><![CDATA[一般说来，项目初期的时候考虑更多的是功能的实现和可用性，而对Scalability考虑的并不是很多，从很多人的Scalability经验分享来看，大家比较认同的一条Scalability路线是基本上类似于：<span style="text-decoration: underline;">先DB和web server在一台机器上，再分割DB和web server，再集群，再cache，再系统分割，再水平、垂直扩展这样的路线</span>。

我一直不是很同意这个模式，因为当你有志把系统做大道一定规模的时候，为什么不先做一些Scalability的基础呢，比如功能的切割、子系统的划分等等，为什么非要等到系统压力上来了，再手忙脚乱的去重新规划呢。

之所以这么说，是因为我做的项目预先会考虑好系统划分，做好接口定义，把不同的功能分割在封装成不同的子系统，子系统和子系统之间通过<strong>接口</strong>传递消息，而后期的Scalability则可以针对不同的子系统需要灵活选择，比如有的子系统需要较多的内存，而有的子系统CPU吃紧等等。

今天看到<em>Frank Mashraqi（</em><em>Director of Business Operations &amp; Technical <a class="glossary-term" href="http://highscalability.com/tags/strategy"><acronym title="Strategy: A strategy is something you can do, that is often quite simple, to help improve your website.">Strategy</acronym></a> for a top 50 website that delivers billions of page views per month.</em><em>）写了一篇文章“<a href="http://highscalability.com/scalability-startups-how-grow-without-blowing">Scalability for Startups: How to Grow Up without Blowing Up</a>”，其“<a href="http://mashraqi.com/2008/09/startonomics-startup-scalability.html">12 Tips for Building a Scalable Startup</a>”列举了一些在</em><em>Startups时就应该考虑的</em>Scalability因素，值得阅读。其还有一个<a href="http://www.docstoc.com/docs/1739741/Frank-Mashraqi-Scalability-for-Startups-How-to-Grow-Up-without-Blowing-Up">Doc版本</a>，更加生动的说明了一些东西。

如果你有类似的经验，欢迎和我讨论和分享。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>一般说来，项目初期的时候考虑更多的是功能的实现和可用性，而对Scalability考虑的并不是很多，从很多人的Scalability经验分享来看，大家比较认同的一条Scalability路线是基本上类似于：<u>先DB和web server在一台机器上，再分割DB和web server，再集群，再cache，再系统分割，再水平、垂直扩展这样的路线</u>。</p>
<p>我一直不是很同意这个模式，因为当你有志把系统做大道一定规模的时候，为什么不先做一些Scalability的基础呢，比如功能的切割、子系统的划分等等，为什么非要等到系统压力上来了，再手忙脚乱的去重新规划呢。</p>
<p>之所以这么说，是因为我做的项目预先会考虑好系统划分，做好接口定义，把不同的功能分割在封装成不同的子系统，子系统和子系统之间通过<strong>接口</strong>传递消息，而后期的Scalability则可以针对不同的子系统需要灵活选择，比如有的子系统需要较多的内存，而有的子系统CPU吃紧等等。</p>
<p>今天看到<em>Frank Mashraqi（</em><em>Director of Business Operations &amp; Technical <a href="http://highscalability.com/tags/strategy" class="glossary-term"><acronym title="Strategy: A strategy is something you can do, that is often quite simple, to help improve your website.">Strategy</acronym></a> for a top 50 website that delivers billions of page views per month.</em><em>）写了一篇文章&ldquo;<a href="http://highscalability.com/scalability-startups-how-grow-without-blowing">Scalability for Startups: How to Grow Up without Blowing Up</a>&rdquo;，其&ldquo;<a href="http://mashraqi.com/2008/09/startonomics-startup-scalability.html">12 Tips for Building a Scalable Startup</a>&rdquo;列举了一些在</em><em>Startups时就应该考虑的</em>Scalability因素，值得阅读。其还有一个<a href="http://www.docstoc.com/docs/1739741/Frank-Mashraqi-Scalability-for-Startups-How-to-Grow-Up-without-Blowing-Up">Doc版本</a>，更加生动的说明了一些东西。</p>
<p>如果你有类似的经验，欢迎和我讨论和分享。</p>]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date>2008-10-07 10:28:16</wp:post_date>
		<wp:post_date_gmt>2008-10-07 10:28:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8startups%e6%97%b6%e5%b0%b1%e8%80%83%e8%99%91scalability</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>为Mysql选择更加合适的硬件环境</title>
		<link>http://www.iceskysl.com/?p=409</link>
		<pubDate>Tue, 07 Oct 2008 11:18:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=409</guid>
		<description></description>
		<content:encoded><![CDATA[记得前段时间，博文的一个朋友做一本Mysql技术书籍时，将其策划的大纲给我看，我提出让他增加一章关于Mysql硬件选择的内容，因为Mysql的性能受硬件影响很大，如何选择一套比较合适的硬件环境相当重要，自然，他接受了我的建议。
只是不知道他策划的这本书何时才能编写完成，不过在<a href="http://en.oreilly.com/mysql2008/public/content/home">2008 MySQL Conference &amp; Expo</a>上，确实看到一篇“<a href="http://en.oreilly.com/mysql2008/public/schedule/detail/2292">Scaling Out MySQL: Hardware Today and Tomorrow</a>”，其<a href="http://www.scribd.com/doc/2569227/Scaling-out-MySQL-Hardware-today-and-tomorrow">Doc</a>已经可以在scribd上看到了，嵌到这里。

<object id="doc_553508041949909" width="100%" height="500" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="quality" value="high" /><param name="play" value="true" /><param name="loop" value="true" /><param name="scale" value="showall" /><param name="wmode" value="opaque" /><param name="devicefont" value="false" /><param name="menu" value="true" /><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="salign" value="" /><param name="src" value="http://documents.scribd.com/ScribdViewer.swf?document_id=2569227&amp;access_key=key-1oxw4alcnm1fikb5hoie&amp;page=&amp;version=1&amp;auto_size=true&amp;viewMode=" /><param name="pluginspage" value="http://www.macromedia.com/go/getflashplayer" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><embed id="doc_553508041949909" width="100%" height="500" type="application/x-shockwave-flash" src="http://documents.scribd.com/ScribdViewer.swf?document_id=2569227&amp;access_key=key-1oxw4alcnm1fikb5hoie&amp;page=&amp;version=1&amp;auto_size=true&amp;viewMode=" quality="high" play="true" loop="true" scale="showall" wmode="opaque" devicefont="false" menu="true" allowFullScreen="true" allowScriptAccess="always" salign="" pluginspage="http://www.macromedia.com/go/getflashplayer" allowfullscreen="true" allowscriptaccess="always" /></object>
<div style="font-size: 10px; text-align: center; width: 100%;"><a href="http://www.scribd.com/doc/2569227/Scaling-out-MySQL-Hardware-today-and-tomorrow">Scaling out MySQL - Hardware today and tomorrow</a> - <a href="http://www.scribd.com/upload">Upload a Document to Scribd</a></div>
其内容大致涉及到CPU，Mem，vendor，storage等方面的选择，摘取几条如下：
<ul>
	<li>CPU还是选64位的吧（为了支持更大的内存），Mysql在多核CPU上有些问题；</li>
	<li>内存越大越好，反正很便宜，但是关于内存的配置使用还是很有学问的；</li>
	<li>硬盘最后是选择15K而不是10K的，在这上面多花点钱是非常值得的；</li>
</ul>
其他的大家看Doc里面的总结吧，总结好了别忘记share给我哈。

参考：http://www.dbanotes.net/database/mysql_hardware.html]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>记得前段时间，博文的一个朋友做一本Mysql技术书籍时，将其策划的大纲给我看，我提出让他增加一章关于Mysql硬件选择的内容，因为Mysql的性能受硬件影响很大，如何选择一套比较合适的硬件环境相当重要，自然，他接受了我的建议。<br />
只是不知道他策划的这本书何时才能编写完成，不过在<a href="http://en.oreilly.com/mysql2008/public/content/home">2008 MySQL Conference &amp; Expo</a>上，确实看到一篇&ldquo;<a href="http://en.oreilly.com/mysql2008/public/schedule/detail/2292">Scaling Out MySQL: Hardware Today and Tomorrow</a>&rdquo;，其<a href="http://www.scribd.com/doc/2569227/Scaling-out-MySQL-Hardware-today-and-tomorrow">Doc</a>已经可以在scribd上看到了，嵌到这里。</p>
<p>其内容大致涉及到CPU，Mem，vendor，storage等方面的选择，摘取几条如下：</p>
<ul>
    <li>CPU还是选64位的吧（为了支持更大的内存），Mysql在多核CPU上有些问题；</li>
    <li>内存越大越好，反正很便宜，但是关于内存的配置使用还是很有学问的；</li>
    <li>硬盘最后是选择15K而不是10K的，在这上面多花点钱是非常值得的；</li>
</ul>
<p>其他的大家看Doc里面的总结吧，总结好了别忘记share给我哈。</p>]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date>2008-10-07 11:18:16</wp:post_date>
		<wp:post_date_gmt>2008-10-07 11:18:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%bamysql%e9%80%89%e6%8b%a9%e6%9b%b4%e5%8a%a0%e5%90%88%e9%80%82%e7%9a%84%e7%a1%ac%e4%bb%b6%e7%8e%af%e5%a2%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thin version 1.0.0 is out!</title>
		<link>http://www.iceskysl.com/?p=410</link>
		<pubDate>Tue, 07 Oct 2008 17:56:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=410</guid>
		<description></description>
		<content:encoded><![CDATA[Thin version 1.0.0 (codename That's What She Said) is out!

Yes 1.0! That doesn't mean it's bug free or anything. But, it does
mean that it's been running on a number of servers and no show stopper
bugs have been found since a while.

Also see http://macournoyer.wordpress.com/2008/09/30/thin-10/

<strong>== What's new?</strong>

* Fixed vlad.rake to allow TCP or socket [hellekin]
* Updated Mack adapter to handle both &lt;0.8.0 and &gt;0.8.0 [Mark Bates]
* rails rack adapter uses File.readable_real? so it recognizes ACL
permissions [Ricardo Chimal]
* Log a warning if Rack application returns nil body [Michael S.
Klishin]
* Handle nil and Time header values correctly [#76 state:resolved]
[tmm1]
* Add Content-Length header to response automatically when possible
[#74 state:resolved] [dkubb]
* Runner now remembers -r, -D and -V parameters so that clustered
servers inherit those and
keep your parameters.
* Make Set-Cookie header, in Rails adapter, compatible with current
Rack spec [Pedro Belo]
[#73, state:resolved]
* Add --no-epoll option to disable epoll usage on Linux [#61
state:resolved]
* Add --force (-f) option to force stopping of a daemonized server
[#72 state:resolved]
* Update halycon adapter loader [mtodd]

<strong>== Get it!</strong>

Install Thin from RubyForge:

gem install thin

Or using my mirror:

gem install thin --source http://code.macournoyer.com

<strong>参考文档：</strong>
http://groups.google.com/group/thin-ruby/browse_thread/thread/402d51a6d9f2651d]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Thin version 1.0.0 (codename That's What She Said) is out!<br />
<br />
Yes 1.0! That doesn't mean it's bug free or anything. But, it does&nbsp; <br />
mean that it's been running on a number of servers and no show stopper&nbsp; <br />
bugs have been found since a while.<br />
<br />
Also see http://macournoyer.wordpress.com/2008/09/30/thin-10/<br />
<br />
<strong>== What's new?</strong><br />
<br />
&nbsp; * Fixed vlad.rake to allow TCP or socket [hellekin]<br />
&nbsp; * Updated Mack adapter to handle both &lt;0.8.0 and &gt;0.8.0 [Mark Bates]<br />
&nbsp; * rails rack adapter uses File.readable_real? so it recognizes ACL&nbsp; <br />
permissions [Ricardo Chimal]<br />
&nbsp; * Log a warning if Rack application returns nil body [Michael S.&nbsp; <br />
Klishin]<br />
&nbsp; * Handle nil and Time header values correctly [#76 state:resolved]&nbsp; <br />
[tmm1]<br />
&nbsp; * Add Content-Length header to response automatically when possible&nbsp; <br />
[#74 state:resolved] [dkubb]<br />
&nbsp; * Runner now remembers -r, -D and -V parameters so that clustered&nbsp; <br />
servers inherit those and<br />
&nbsp;&nbsp;&nbsp;&nbsp; keep your parameters.<br />
&nbsp; * Make Set-Cookie header, in Rails adapter, compatible with current&nbsp; <br />
Rack spec [Pedro Belo]<br />
&nbsp;&nbsp;&nbsp; [#73, state:resolved]<br />
&nbsp; * Add --no-epoll option to disable epoll usage on Linux [#61&nbsp; <br />
state:resolved]<br />
&nbsp; * Add --force (-f) option to force stopping of a daemonized server&nbsp; <br />
[#72 state:resolved]<br />
&nbsp; * Update halycon adapter loader [mtodd]<br />
<br />
<strong>== Get it!</strong><br />
<br />
Install Thin from RubyForge:<br />
<br />
&nbsp; gem install thin<br />
<br />
Or using my mirror:<br />
<br />
&nbsp; gem install thin --source http://code.macournoyer.com</p>
<p><strong>参考文档：</strong><br />
http://groups.google.com/group/thin-ruby/browse_thread/thread/402d51a6d9f2651d</p>]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date>2008-10-07 17:56:27</wp:post_date>
		<wp:post_date_gmt>2008-10-07 17:56:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thin-version-1-0-0-is-out</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="thin"><![CDATA[Thin]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_5e29b3bca6d05ba6b6eb646e05b894d3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_18a6555f70dec1666f01f02248775e48</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>7 Top Tips for Coding With Currency</title>
		<link>http://www.iceskysl.com/?p=411</link>
		<pubDate>Wed, 08 Oct 2008 17:05:08 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[As anyone who’s ever made an e-commerce system knows, money is everything. No, really if you don’t get your financial sums right then you can’t hope to build a successful online business (and may find yourself creating potential legal issues with the tax man).

So here’s a rundown of the top tips I can give for making your financial calculations that bit easier.

http://www.setfiremedia.com/blog/7-top-tips-for-coding-with-currency]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>As anyone who&rsquo;s ever made an e-commerce system knows, money is everything. No, really if you don&rsquo;t get your financial sums right then you can&rsquo;t hope to build a successful online business (and may find yourself creating potential legal issues with the tax man).</p>
<p>So here&rsquo;s a rundown of the top tips I can give for making your financial calculations that bit easier.</p>
<p><br />
http://www.setfiremedia.com/blog/7-top-tips-for-coding-with-currency</p>]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2008-10-08 17:05:08</wp:post_date>
		<wp:post_date_gmt>2008-10-08 17:05:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>7-top-tips-for-coding-with-currency</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f86e9d6f87785169ca9061b7734c317a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d824891a81f106c45fecf5a9345b7bd1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sneetchalizer: 粘合audio格式转换和tag信息提取的Ruby脚本</title>
		<link>http://www.iceskysl.com/?p=412</link>
		<pubDate>Thu, 09 Oct 2008 10:49:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[前几天写了“<a href="http://iceskysl.1sters.com/?action=show&amp;id=406">采用Ruby提取MP3的metadata信息</a>”后，就在寻找成熟的Ruby代码做差不多的事情，今天找到一个<a href="http://badcomputer.org/unix/code/sneetchalizer/">sneetchalizer</a>，仔细的看了下，非常强大。

<img src="http://badcomputer.org/unix/code/sneetchalizer/Do%20not%20leach%20my%20bandwidth%20asshole.jpg" alt="" />

sneetchalizer其实只是个粘合剂，因为在*unix下，audio格式转换的lib已经非常丰富和成熟，例如<a href="http://lame.sourceforge.net/">lame</a>,<a href="http://freshmeat.net/projects/gogo/">gogo</a>,<a href="http://freshmeat.net/projects/bladeenc/">bladeenc</a>,<a href="http://www.mplayerhq.hu/">mplayer</a>等等就非常好用；另外，关于audio的tag信息和metadata信息的提取也有比较成熟的lib了，类似<a href="http://rubyforge.org/projects/id3lib-ruby/">id3lib-ruby library</a>,<a href="http://badcomputer.org/unix/code/wmainfo/">wmainfo-rb library</a>,<a href="http://rubyforge.org/projects/ruby-ogginfo/">ruby-ogginfo library</a>等等。而sneetchalizer只是把这些tools粘合起来。

其支持的格式有:'aac' 'aif' 'aifc' 'aiff' 'aiffc' 'ape' 'au' 'caf' 'cdda' 'cdr' 'copy' 'fap' 'flac' 'gsm''ircam' 'm4a' 'm4b' 'mat' 'mat4' 'mat5' 'mp2' '<strong>mp3</strong>' 'mp4' 'mpc' 'mpp' 'nist' 'ofr''ofs' '<strong>ogg</strong>' 'paf' 'pvf' 'raw' 'sd2' 'sds' 'sf' 'snd' 'spx' 'svx' 'tta' 'voc''vox' 'w64' '<strong>wav</strong>' '<strong>wma</strong>' 'wv' 'xi'

使用sneetchalizer可以实现audio文件的格式转换和tag信息提取和写入，详细使用方法参考其主页上说明，下面简要的说说起安装方法和使用参数：

<strong>1、安装方法</strong>

直接下载其gz包，<a href="http://badcomputer.org/unix/code/sneetchalizer/src/sneetchalizer-0.9.0.tar.gz">sneetchalizer-0.9.0</a>是现在的最新版本。下载解包后可以看到：
<div class="codeText">
<div class="codeHead">Manifest:</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>README                - You're reading it now.  </span></span></li>
	<li><span>LICENSE               - A copy of the GPL, under which sneetchalizer is released.  </span></li>
	<li class="alt"><span>CHANGES               - sneetchalizer's cvs/svn commit log.  </span></li>
	<li><span>sneetchalizer         - The script itself.  </span></li>
	<li class="alt"><span>sneetchalizer.1       - The manpage for sneetchalizer.  </span></li>
	<li><span>sneetchalizer.desktop - A KDE service menu for converting with Konqueror.  </span></li>
	<li class="alt"><span>install.rb            - A quick and dirty script to install the sneetchalizer.  </span></li>
</ol>
</div>
如果有root权限，可以直接运行<span>install.rb，其会将</span><span>sneetchalizer拷贝到/usr/bin下，将</span><span>sneetchalizer.1拷贝到/usr/share/man/man1下。</span>

<strong><span>2、参数解释</span></strong>

<span>不翻译了，都挺简单明了的，如下：</span>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>General options:  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>-h or --help  </span></li>
	<li><span>    Print quick or full usage details respectively.  </span></li>
	<li class="alt"><span>-r or --recursive  </span></li>
	<li><span>    Search directory arguments recursively for files to convert.  </span></li>
	<li class="alt"><span>-d or --delete  </span></li>
	<li><span>    delete input files after successful conversion. May not be safe yet!!!  </span></li>
	<li class="alt"><span>-v or --verbose  </span></li>
	<li><span>    makes sneetchalizer more chatty.  </span></li>
	<li class="alt"><span>-s or --show-output  </span></li>
	<li><span>    shows output from conversion tool.  </span></li>
	<li class="alt"><span>-p or --pretend  </span></li>
	<li><span>    don't convert anything. sneetchalizer will go through the motions and print out the commands it would run. Useful for preview- ing a complex command line to ensure it does what you intend. You should interpret this option's output with a grain of salt. For example, if you include the '--sanitize' option, the files will not really be renamed when using --pretend, and as such the command's output will not reflect that the filenames would be changed during an actual run.  </span></li>
	<li class="alt"><span>-t or --terminate  </span></li>
	<li><span>    terminate sneetchalizer options. This is useful if you have to convert '--coolDir' or '-groovySong.mp3'. This is the only option whose order on the command line is significant.  </span></li>
	<li class="alt"><span>-D ARG or <span class="attribute">--out-directory</span><span>=</span><span class="attribute-value">ARG</span><span>  </span></span></li>
	<li><span>    write all outfiles to a directory argument. This is useful if you want to (re)encode files directly to a mounted portable device.  </span></li>
	<li class="alt"><span>--strict and --pedantic  </span></li>
	<li><span>    many errors that sneetchalizer may encounter are recoverable, such as specifying a directory as argument that contains no files to convert, or conversion failures in general. By default the script will print an error message and move on to the next file. If you use '--strict' then sneetchalizer will bail out at the first sign of trouble except for tag errors. With '--pedantic' the script will stop even on tag errors.   </span></li>
	<li class="alt"><span>--stasis  </span></li>
	<li><span>    Preserve timestamp (mtime) of original file.  </span></li>
	<li class="alt"><span>--threads [N]  </span></li>
	<li><span>    Experimental. Use threads to create concurrent jobs. This option takes an optional integer argument which represents the number of threads to launch. The default is two. Preliminary tests suggest there is little advantage (and even diminishing returns) when setting this number greater than the number of cores/CPUs you have. Due to the asychronous nature of threads the --verbose and --show-output flags will be silently disabled and most screen output is supressed.   </span></li>
	<li class="alt"><span>--sanitize  </span></li>
	<li><span>    Removes ,, ;, :, ', ", %, @, #, and ` from filenames and tags.  </span></li>
	<li class="alt"><span>-n [FORMAT] or --rename[=FORMAT]  </span></li>
	<li><span>    rename all outfiles (and temporary wavs) according to FORMAT. FORMAT is a string with special designators to be pulled from the file tags. The following options are available:  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>        * %t Song title  </span></li>
	<li class="alt"><span>        * %b Album title  </span></li>
	<li><span>        * %n Track number  </span></li>
	<li class="alt"><span>        * %a Artist name  </span></li>
	<li><span>        * %y Year  </span></li>
	<li class="alt"><span>        * %g Genre  </span></li>
	<li><span>        * %c Comment field  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>    Directories may be created with this command, as in "%b/%n - %t". The default value of FORMAT is "%n %t".   </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>Bitrate/Quality/Compression options:  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>-b or --bitrate  </span></li>
	<li class="alt"><span>    mp3/ogg/m4a bitrate.  </span></li>
	<li><span>-q or --quality  </span></li>
	<li class="alt"><span>    mp3/ogg quality.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>quality and bitrate are passed directly to lame or oggenc depending on mp3 or ogg output format respectively. Both tools can handle either a bitrate or quality argument, so it is important to understand what values are valid for the underlying tool in your specific use case. faac will accept a bitrate argument, but not a quality argument. These options will be silently ignored for any output formats other than mp3, ogg or m4a. Make sure you know what you are doing if you decide to use both in one run, and read each tools manpage for valid values. If these options are omitted the tools builtin defaults are used (-q3 for oggenc and -q5 for lame).  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>-c or --compression  </span></li>
	<li><span>    flac/mac compression level.  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>this option allows you to pass a compression argument to flac and mac. See 'flac --help' and/or 'mac --help' if you don't know what this means.  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>Format Options:  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="attribute">--out</span><span>=</span><span class="attribute-value">format</span><span>  </span></span></li>
	<li class="alt"><span>    output format. Default is wav.  </span></li>
	<li><span><span class="attribute">--in</span><span>=</span><span class="attribute-value">format</span><span>[,format..]  </span></span></li>
	<li class="alt"><span>    input format(s). Default is wav.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Valid output formats are: "aac", "aif", "aifc", "aiff", "aiffc", "ape", "au", "cdr", "cdda", "copy", "flac", "m4a", "m4b", "mpc", "mp4", "mpp", "mp3", "mp2", "ofr", "ofs", "ogg", "snd", "spx", "tta", "wav", "wv". Valid input formats are all of the above plus "wma". You can specify multiple input formats using a comma: 'mp3,m4a,wma'. Input format is only neccesary when passing directory arguments, as file arguments are handled by context (read: file extension). The "copy" output option copies files directly, bypassing decoding/encoding steps (useful in conjunction with --rename).  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Tagging Options:  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>--tt or --title  </span></li>
	<li><span>    Set 'title' tag.  </span></li>
	<li class="alt"><span>--ta or --artist  </span></li>
	<li><span>    Set 'artist' tag.  </span></li>
	<li class="alt"><span>--tl or --album  </span></li>
	<li><span>    Set 'album' tag.  </span></li>
	<li class="alt"><span>--ty or --year  </span></li>
	<li><span>    Set 'year' tag.  </span></li>
	<li class="alt"><span>--tc or --comment  </span></li>
	<li><span>    Set 'comment' tag.  </span></li>
	<li class="alt"><span>--tg or --genre  </span></li>
	<li><span>    Set 'genre' tag.  </span></li>
	<li class="alt"><span>--tn or --trackn  </span></li>
	<li><span>    Set 'track number' tag.  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>The short and long versions are different in an important way: Using the long version will clobber any existing tags. The short version will only set the tag if the existing tag has no value. Note that these tags will be placed in _every_ outfile during the run.  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>Alternative Encoder/Decoder Options:  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span>--gogo  </span></li>
	<li class="alt"><span>    use gogo to encode mp3 files.  </span></li>
	<li><span>--bladeenc  </span></li>
	<li class="alt"><span>    use bladeenc to encode mp3 files.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>The default is still 'lame'. If 'lame' is not found, the script will search for one of these two encoders regardless if these options are passed or not.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Special Options:  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="attribute">--in-optionhook</span><span>=</span><span class="attribute-value">ARG</span><span>  </span></span></li>
	<li><span>    add ARG to infile conversion command. Possibly dangerous!  </span></li>
	<li class="alt"><span><span class="attribute">--out-optionhook</span><span>=</span><span class="attribute-value">ARG</span><span>  </span></span></li>
	<li><span>    add ARG to outfile conversion command. Possibly dangerous!   </span></li>
</ol>
</div>
另外，你可以运行sneetchalizer -h看到简要的使用说明，也可以使用sneetchalizer --help看到详细的使用信息。

<strong>3、使用示例</strong>

如下简要的写几个使用的示例：
<div class="codeText">
<div class="codeHead">使用示例：</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>$ sneetchalizer song.mp3  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>The most simple possible example, creates 'song.wav'.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>$ sneetchalizer <span class="attribute">--out</span><span>=</span><span class="attribute-value">ogg</span><span> </span><span class="attribute">--in</span><span>=</span><span class="attribute-value">flac</span><span> -q5 /some/music/dir  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>This example converts every flac file in '/some/music/dir' to ogg format at quality 5.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>$ sneetchalizer -d <span class="attribute">--out</span><span>=</span><span class="attribute-value">mp3</span><span> </span><span class="attribute">--in</span><span>=</span><span class="attribute-value">ogg</span><span>,m4a,wma -b 160 .  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Converts every ogg, m4a, and wma file in the current directory to a 160 kbps constant bitrate mp3 file. The original files are deleted.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>$ sneetchalizer <span class="attribute">--out</span><span>=</span><span class="attribute-value">mp3</span><span> </span><span class="attribute">--out-optionhook</span><span>=</span><span class="attribute-value">"--preset extreme"</span><span> /some/wavs  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Here we encode every wav in '/some/wavs' to mp3 format passing '--preset extreme' directly to lame.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>$ sneetchalizer <span class="attribute">--in</span><span>=</span><span class="attribute-value">ogg</span><span> </span><span class="attribute">--out</span><span>=</span><span class="attribute-value">ogg</span><span> </span><span class="attribute">--quality</span><span>=</span><span class="attribute-value">1</span><span> norvegianWood.ogg /some/more/oggs  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Using the same --in and --out format allows us to resample/encode the file at a different bitrate or quality. Note that this will overwrite the original file so only do this on a copy, or use '-D' to write files to another directory.  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>$ sneetchalizer <span class="attribute">--in</span><span>=</span><span class="attribute-value">ogg</span><span> </span><span class="attribute">--out</span><span>=</span><span class="attribute-value">m4a</span><span> -D /mnt/ipod/ /some/oggs  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span>Here we re-encode some ogg files to m4a format and write them to our mounted iPod.   </span></li>
</ol>
</div>
<strong>4、注意事项</strong>

本脚本只是粘合剂，其他的tool还是需要另外安装的。

其他信息请参考其主页说明,如果您有这个方面的问题或经验，欢迎和我讨论。

<span>
</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>前几天写了&ldquo;<a href="http://iceskysl.1sters.com/?action=show&amp;id=406">采用Ruby提取MP3的metadata信息</a>&rdquo;后，就在寻找成熟的Ruby代码做差不多的事情，今天找到一个<a href="http://badcomputer.org/unix/code/sneetchalizer/">sneetchalizer</a>，仔细的看了下，非常强大。</p>
<p><img src="http://badcomputer.org/unix/code/sneetchalizer/Do%20not%20leach%20my%20bandwidth%20asshole.jpg" alt="" /></p>
<p>sneetchalizer其实只是个粘合剂，因为在*unix下，audio格式转换的lib已经非常丰富和成熟，例如<a href="http://lame.sourceforge.net/">lame</a>,<a href="http://freshmeat.net/projects/gogo/">gogo</a>,<a href="http://freshmeat.net/projects/bladeenc/">bladeenc</a>,<a href="http://www.mplayerhq.hu/">mplayer</a>等等就非常好用；另外，关于audio的tag信息和metadata信息的提取也有比较成熟的lib了，类似<a href="http://rubyforge.org/projects/id3lib-ruby/">id3lib-ruby library</a>,<a href="http://badcomputer.org/unix/code/wmainfo/">wmainfo-rb library</a>,<a href="http://rubyforge.org/projects/ruby-ogginfo/">ruby-ogginfo library</a>等等。而sneetchalizer只是把这些tools粘合起来。</p>
<p>其支持的格式有:'aac' 'aif' 'aifc' 'aiff' 'aiffc' 'ape' 'au' 'caf' 'cdda' 'cdr' 'copy' 'fap' 'flac' 'gsm''ircam' 'm4a' 'm4b' 'mat' 'mat4' 'mat5' 'mp2' '<strong>mp3</strong>' 'mp4' 'mpc' 'mpp' 'nist' 'ofr''ofs' '<strong>ogg</strong>' 'paf' 'pvf' 'raw' 'sd2' 'sds' 'sf' 'snd' 'spx' 'svx' 'tta' 'voc''vox' 'w64' '<strong>wav</strong>' '<strong>wma</strong>' 'wv' 'xi'</p>
<p>使用sneetchalizer可以实现audio文件的格式转换和tag信息提取和写入，详细使用方法参考其主页上说明，下面简要的说说起安装方法和使用参数：</p>
<p><strong>1、安装方法</strong></p>
<p><strong><span>2、参数解释</span></strong></p>
<p><strong>3、使用示例</strong></p>
<p><strong>4、注意事项</strong></p>
<p>本脚本只是粘合剂，其他的tool还是需要另外安装的。</p>
<p>其他信息请参考其主页说明,如果您有这个方面的问题或经验，欢迎和我讨论。</p>]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2008-10-09 10:49:27</wp:post_date>
		<wp:post_date_gmt>2008-10-09 10:49:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sneetchalizer-%e7%b2%98%e5%90%88audio%e6%a0%bc%e5%bc%8f%e8%bd%ac%e6%8d%a2%e5%92%8ctag%e4%bf%a1%e6%81%af%e6%8f%90%e5%8f%96%e7%9a%84ruby%e8%84%9a%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="sneetchalizer"><![CDATA[sneetchalizer]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>网站架构文章列表(持续更新中)</title>
		<link>http://www.iceskysl.com/?p=413</link>
		<pubDate>Thu, 09 Oct 2008 06:51:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[互联网越来越开放，技术人员也越来越乐于分享，分析构架、演变和遇到的问题，虽然说没有真正经历过，很多体验可能会没那么深，但是有些东西提前了解会有诸多好处。在很多地方看到类似的构架分析、分享的文章，统一收集整理如下，遇到其他的，我会持续更新，如果经历允许，我还会写一些读后感或者点评；如果你看到其他的类似文章或者点评，欢迎留言让我知道。

对dbanotes等表示感谢。

WikiPedia 技术架构学习分享
http://www.dbanotes.net/opensource/wikipedia_arch.html

YouTube 的架构扩展
http://www.dbanotes.net/opensource/youtube_web_arch.html

LinkedIn 架构笔记
http://www.dbanotes.net/arch/linkedin.html

LinkedIn 架构与开发过程
http://www.dbanotes.net/arch/linkedin_soa.html

Internet Archive 的海量存储浅析
http://www.dbanotes.net/database/internet_archive_storage.html

Tailrank 网站架构
http://www.dbanotes.net/review/tailrank_arch.html

Twitter 的架构扩展: 100 倍性能提升
http://www.dbanotes.net/arch/twitter_arch.html

财帮子（caibangzi.com）网站架构
http://www.dbanotes.net/arch/caibangzi_web_arch.html

Yupoo! 的网站技术架构
http://www.dbanotes.net/arch/yupoo_arch.html

37Signals 架构
http://www.dbanotes.net/arch/37signals_arch.html

Flickr 的访问统计实现以及其他
http://www.dbanotes.net/arch/flickr_stats_and_dathan.html

PlentyOfFish 网站架构学习
http://www.dbanotes.net/arch/plentyoffish_arch.html

Yahoo！社区架构
http://www.dbanotes.net/arch/yahoo_arch.html

有关 Alexa 与 AOL 部署集群文件系统
http://www.dbanotes.net/arch/alexa_ibrix_san_file_system.html

eBay 的存储一瞥
http://www.dbanotes.net/arch/ebay_storage.html

eBay 的数据量
http://www.dbanotes.net/database/ebay_storage.html

eBay 的数据库分布扩展架构
http://www.dbanotes.net/database/ebay_database_scale_out.html

eBay 的数据层扩展经验
http://www.dbanotes.net/arch/ebay_db_scale_out.html

eBay 的应用服务器规模
http://www.dbanotes.net/web/ebay_application_server.html

性能扩展问题要趁早
http://www.dbanotes.net/arch/scaling_an_early_stage_startup.html

Scaling an early stage startup
http://www.scribd.com/doc/429986/Scaling-an-early-stage-startup

Facebook 的 PHP 性能与扩展性
http://www.dbanotes.net/arch/facebook_php.html

Skype 用 PostgreSQL 支撑海量用户
http://www.dbanotes.net/arch/skype_postgresql.html

闲谈 Web 图片服务器
http://www.dbanotes.net/web/web_image_server.html

说说北京奥运购票系统瘫痪这事儿
http://www.dbanotes.net/review/beijing_olympic_ticketes_system_crash.html

Architectures You’ve Always Wondered About
http://qcon.infoq.com/london-2008/tracks/show_track.jsp?trackOID=82

eBay’s Architectural Principles
http://www.eos1.dk/qcon-london-2008/slides/RandyShoup_eBaysArchitecturalPrinciples.pdf

Building a large scale SaaS app
http://www.eos1.dk/qcon-london-2008/slides/Dan_Hanley_Building_a_large_scale_SaaS_app.pdf

Scaling an early stage startup
http://www.scribd.com/doc/429986/Scaling-an-early-stage-startup

互联星空播客架构(原文在张宴blog上,但是后来文章撤下,很可惜.此为转载)
http://www.flashmov.com/blog_1632.html

QQ游戏百万人同时在线服务器架构实现
http://www.libing.net.cn/read.php?41

大型Web2.0站点构建技术初探
http://blog.csdn.net/heiyeshuwu/archive/2007/11/18/1890793.aspx

Web站点数据库分布存储浅谈
http://blog.csdn.net/heiyeshuwu/archive/2007/11/18/1891639.aspx

QQ的架构讨论
http://groups.google.com/group/dev4server/browse_thread/thread/0d72668d11c4886b/a6d202489cabf285#a6d202489cabf285

Notes from Scaling MySQL - Up or Out
http://venublog.com/2008/04/16/notes-from-scaling-mysql-up-or-out/

Yapache-Yahoo! Apache 的秘密
http://www.dbanotes.net/web/yapache_yahoo_apache.html

Scalability Best Practices: Lessons from eBay
http://www.infoq.com/articles/ebay-scalability-best-practices]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>互联网越来越开放，技术人员也越来越乐于分享，分析构架、演变和遇到的问题，虽然说没有真正经历过，很多体验可能会没那么深，但是有些东西提前了解 会有诸多好处。在很多地方看到类似的构架分析、分享的文章，统一收集整理如下，遇到其他的，我会持续更新，如果经历允许，我还会写一些读后感或者点评；如 果你看到其他的类似文章或者点评，欢迎留言让我知道。</p>
<p>对dbanotes等表示感谢。<br />
<br />
WikiPedia 技术架构学习分享<br />
http://www.dbanotes.net/opensource/wikipedia_arch.html<br />
<br />
YouTube 的架构扩展<br />
http://www.dbanotes.net/opensource/youtube_web_arch.html<br />
<br />
LinkedIn 架构笔记<br />
http://www.dbanotes.net/arch/linkedin.html<br />
<br />
LinkedIn 架构与开发过程<br />
http://www.dbanotes.net/arch/linkedin_soa.html<br />
<br />
Internet Archive 的海量存储浅析<br />
http://www.dbanotes.net/database/internet_archive_storage.html<br />
<br />
<br />
Tailrank 网站架构<br />
http://www.dbanotes.net/review/tailrank_arch.html<br />
<br />
Twitter 的架构扩展: 100 倍性能提升<br />
http://www.dbanotes.net/arch/twitter_arch.html<br />
<br />
财帮子（caibangzi.com）网站架构<br />
http://www.dbanotes.net/arch/caibangzi_web_arch.html<br />
<br />
Yupoo! 的网站技术架构<br />
http://www.dbanotes.net/arch/yupoo_arch.html<br />
<br />
37Signals 架构<br />
http://www.dbanotes.net/arch/37signals_arch.html<br />
<br />
Flickr 的访问统计实现以及其他<br />
http://www.dbanotes.net/arch/flickr_stats_and_dathan.html<br />
<br />
PlentyOfFish 网站架构学习<br />
http://www.dbanotes.net/arch/plentyoffish_arch.html<br />
<br />
Yahoo！社区架构<br />
http://www.dbanotes.net/arch/yahoo_arch.html<br />
<br />
有关 Alexa 与 AOL 部署集群文件系统<br />
http://www.dbanotes.net/arch/alexa_ibrix_san_file_system.html<br />
<br />
eBay 的存储一瞥<br />
http://www.dbanotes.net/arch/ebay_storage.html<br />
<br />
eBay 的数据量<br />
http://www.dbanotes.net/database/ebay_storage.html<br />
<br />
eBay 的数据库分布扩展架构<br />
http://www.dbanotes.net/database/ebay_database_scale_out.html<br />
<br />
eBay 的数据层扩展经验<br />
http://www.dbanotes.net/arch/ebay_db_scale_out.html<br />
<br />
eBay 的应用服务器规模<br />
http://www.dbanotes.net/web/ebay_application_server.html<br />
<br />
性能扩展问题要趁早<br />
http://www.dbanotes.net/arch/scaling_an_early_stage_startup.html<br />
<br />
Scaling an early stage startup<br />
http://www.scribd.com/doc/429986/Scaling-an-early-stage-startup<br />
<br />
Facebook 的 PHP 性能与扩展性<br />
http://www.dbanotes.net/arch/facebook_php.html<br />
<br />
Skype 用 PostgreSQL 支撑海量用户<br />
http://www.dbanotes.net/arch/skype_postgresql.html<br />
<br />
闲谈 Web 图片服务器<br />
http://www.dbanotes.net/web/web_image_server.html<br />
<br />
说说北京奥运购票系统瘫痪这事儿<br />
http://www.dbanotes.net/review/beijing_olympic_ticketes_system_crash.html<br />
<br />
Architectures You&rsquo;ve Always Wondered About<br />
http://qcon.infoq.com/london-2008/tracks/show_track.jsp?trackOID=82<br />
<br />
eBay&rsquo;s Architectural Principles<br />
http://www.eos1.dk/qcon-london-2008/slides/RandyShoup_eBaysArchitecturalPrinciples.pdf<br />
<br />
Building a large scale SaaS app<br />
http://www.eos1.dk/qcon-london-2008/slides/Dan_Hanley_Building_a_large_scale_SaaS_app.pdf<br />
<br />
Scaling an early stage startup<br />
http://www.scribd.com/doc/429986/Scaling-an-early-stage-startup<br />
<br />
互联星空播客架构(原文在张宴blog上,但是后来文章撤下,很可惜.此为转载)<br />
http://www.flashmov.com/blog_1632.html<br />
<br />
QQ游戏百万人同时在线服务器架构实现<br />
http://www.libing.net.cn/read.php?41<br />
<br />
大型Web2.0站点构建技术初探<br />
http://blog.csdn.net/heiyeshuwu/archive/2007/11/18/1890793.aspx<br />
<br />
Web站点数据库分布存储浅谈<br />
http://blog.csdn.net/heiyeshuwu/archive/2007/11/18/1891639.aspx<br />
<br />
QQ的架构讨论<br />
http://groups.google.com/group/dev4server/browse_thread/thread/0d72668d11c4886b/a6d202489cabf285#a6d202489cabf285<br />
<br />
Notes from Scaling MySQL - Up or Out<br />
http://venublog.com/2008/04/16/notes-from-scaling-mysql-up-or-out/<br />
<br />
Yapache-Yahoo! Apache 的秘密<br />
http://www.dbanotes.net/web/yapache_yahoo_apache.html<br />
<br />
Scalability Best Practices: Lessons from eBay<br />
http://www.infoq.com/articles/ebay-scalability-best-practices</p>]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2008-10-09 14:51:05</wp:post_date>
		<wp:post_date_gmt>2008-10-09 06:51:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bd%91%e7%ab%99%e6%9e%b6%e6%9e%84%e6%96%87%e7%ab%a0%e5%88%97%e8%a1%a8%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="%e6%9e%b6%e6%9e%84"><![CDATA[架构]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_9fbbc4b3d1a6a0e4c5284e5ddd4c638c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_99c04aedfb2934cce827d2b891af2296</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_773a3f86e5e1dc038711b9fea90d2e3f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_21690028962d9d38f4b423d973f0bd59</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_095a0b63cf236c6f061a87d847389e74</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a15b7fbd162322d7f421df0d74bd4986</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f3d6a03ac10a19f02e4fa0f611f44997</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e3d22bac1f3151bc4596be2c1c52f982</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8f884addb93d61af234821fcc71e1f18</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fdd93cc038c38dde480b1af6a795cbc8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6b628782d4e55a83c64fa20ea0e70147</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a10845d46cc241b5319115414f932832</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d8848d92e4f38367bd79cd2826f346b1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e67d642643dedf1ff7ba3abaf70c0edb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9bc8c10bb541ee17b677bec0ed86ea32</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_03b7b586900ea1eb6e6e2a9323a12aba</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d75cdd6402506fdb6ce9da916c8c6540</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6abe97ef8f84e4770e38a9062760af8d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2677680864259a343f3e879ad5abf03e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_72d8a13dfb4d934c9143f8f9b003fe32</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b14b43d774ebd5a7a9db967395411eef</wp:meta_key>
			<wp:meta_value><![CDATA[<object codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" id="doc_77817416479439" name="doc_77817416479439" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" align="middle"	height="700" width="500" >		<param name="movie"	value="http://d1.scribdassets.com/ScribdViewer.swf?document_id=429986&access_key=e2xonbueo15rv&page=1&version=1&viewMode=slideshow"> 		<param name="quality" value="high"> 		<param name="play" value="true">		<param name="loop" value="true"> 		<param name="scale" value="showall">		<param name="wmode" value="opaque"> 		<param name="devicefont" value="false">		<param name="bgcolor" value="#ffffff"> 		<param name="menu" value="true">		<param name="allowFullScreen" value="true"> 		<param name="allowScriptAccess" value="always"> 		<param name="salign" value="">    			    	<param name="mode" value="slideshow">	    		<embed src="http://d1.scribdassets.com/ScribdViewer.swf?document_id=429986&access_key=e2xonbueo15rv&page=1&version=1&viewMode=slideshow" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" play="true" loop="true" scale="showall" wmode="opaque" devicefont="false" bgcolor="#ffffff" name="doc_77817416479439_object" menu="true" allowfullscreen="true" allowscriptaccess="always" salign="" type="application/x-shockwave-flash" align="middle" mode="slideshow" height="700" width="500"></embed>	</object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a290798563131059323b20ca120514a2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d9314c306e8a77a579c86b0e8b627860</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8dee8a0762c7395915cacaa090c78160</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_84abd72c72ce9ba05261d00a46fc6c38</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_25b87d4f85fb59b12bb392a26f0d32e1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1ccdfb4f9b3e0e832e131795df2d700c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6d31fbdca910935de1d330df6c000bd3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fc0a95d544d178124b6cfcbc67c7dc80</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b9acb2d3b4c0b4423759109bec0e040b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_715c0849a2c0b0a464491afde64900fe</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8604ee672cfdce828524eaadd0f10d13</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_45458d023e78034739f43b1764edb326</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c2996d4fe43984605e26ce1447a4a379</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8d7debade05fc0d35c69332bda724e36</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cac930df1d6b836f60eb5f2def6cedd8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fc897610ba01f94537d034e21a5b5fe4</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2fec14091d511adcf7dcd0ca7470b096</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_580d4751025944d76efa913c90969989</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a52fb791b4142c8e23ed860d618c21c9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d8b96bf056bd1c649b6e1de638e0d14a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e55d8c1db75f85bd0662b40fc454a478</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8bdd150194f20ba4a9b137cffab4f472</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2703b4161ee4360e0407f1e4c6957429</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1b57532ab03179a607134c3276ba038c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3ae20c4f1baf7400e97ecb6a3a762671</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_003576841043525f164459a8ba7dc725</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ece3b232c176dc59d537f7f127642c6c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_108f8e7db5a19136fb306a19fdc8cd57</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_73dbeda2942a80209965ba67eab6a92a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f7e6c4f171f54228ca45bcce5048c8d6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_60de71d6e0f3fd1e0ba2b12451793e46</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_139c80cd445a08338f91053492235257</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_50c0373e205fe9c4b2e3692b14e8a602</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1290c839432ee9b42c2a24585729b405</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a5889498ce6ea45b9769f166445f0190</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_92dd2832e2b058b0e42883ec2c580a0d</wp:meta_key>
			<wp:meta_value><![CDATA[<object id="doc_313962282492084" name="doc_313962282492084" height="600" width="500" type="application/x-shockwave-flash" data="http://d1.scribdassets.com/ScribdViewer.swf" style="outline:none;" >		<param name="movie" value="http://d1.scribdassets.com/ScribdViewer.swf">		<param name="wmode" value="opaque"> 		<param name="bgcolor" value="#ffffff"> 		<param name="allowFullScreen" value="true"> 		<param name="allowScriptAccess" value="always"> 		<param name="FlashVars" value="document_id=429986&access_key=e2xonbueo15rv&page=1&viewMode=list"> 		<embed id="doc_313962282492084" name="doc_313962282492084" src="http://d1.scribdassets.com/ScribdViewer.swf?document_id=429986&access_key=e2xonbueo15rv&page=1&viewMode=list" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" height="600" width="500" wmode="opaque" bgcolor="#ffffff"></embed> 	</object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e8a4ee181b5addeb0b21b55db402c82f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b9b79a2f5b7962e399b90af3caf1ec19</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cb234a21b72223c7866b127e76cad902</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4308a3c6cd77f520e9e547559e0290ea</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_04d3f93e7433a05680f30677b49bc5f2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d1dea3a7036faff08212265ebba01845</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_983248d945ba415c22507f7fd15aa632</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d20d89de3a8381734965c222d9fe54ea</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_37cbe0271a3226db75e4051fa0ef0dc0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_418226d0b9852b0647f1f0553f53124a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6625824e50dd2fda8e4a3c2c9034cb52</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7d50b892ea5eba5df019a7d20ec601b0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5ff91e975620a1baf4850b8d00e85c15</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ef7ed92ac9055e5623dc91c7fd2f57f7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b56156aebd32e075afaa34db1e0d1054</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3e20a837d89edacd1b5611a3a9561fc0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3a3a9e31164ec056869812b10f0e80a7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1d8be7f3d4b3058af72b464d8ed8b7ef</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fb066704f2f9db9a61fe4eb7cb3aa865</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2cbc3385e0835b48b33419628228bbca</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f6478bd775f4e42559d892b3d469444d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fe3321b63e001241b22a116c1da9372c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b2f979714ee6ad82272801726422ed1f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_86d93f65cd03990c6f24523a27c5cc76</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d6d4a55f97fb782468dc04c031cdbced</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1d7aa6c66d265dbd277155362c956d77</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a104888ca9f3010432d4fda916bc6558</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c490ebef2f417edf1bd49198c92f7297</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cb11a66cf260e033263f442beb47046a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9cfdaff07283b61c35d88492c0c85d90</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9fe2fa32d1172e3e42c4d5bf058ae201</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ada23e9cd6a5804be4fbbdab59c75d12</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ef5f6b25b02a44f5dcd98ef8d7de9f75</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ad81d18fc8960f9a536c890ddd7c054f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c4eb433e33e54c7e524b6fa60e888195</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b36fbe1ecc8c5848e5c06f33232f45fb</wp:meta_key>
			<wp:meta_value><![CDATA[<object id="doc_214232434758597" name="doc_214232434758597" height="600" width="584" type="application/x-shockwave-flash" data="http://d1.scribdassets.com/ScribdViewer.swf" style="outline:none;">		<param name="movie" value="http://d1.scribdassets.com/ScribdViewer.swf">		<param name="wmode" value="opaque">		<param name="bgcolor" value="#ffffff">		<param name="allowFullScreen" value="true">		<param name="allowScriptAccess" value="always">		<param name="FlashVars" value="document_id=429986&access_key=e2xonbueo15rv&page=1&viewMode=list">		<embed id="doc_214232434758597" name="doc_214232434758597" src="http://d1.scribdassets.com/ScribdViewer.swf?document_id=429986&access_key=e2xonbueo15rv&page=1&viewMode=list" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" height="600" width="584" wmode="opaque" bgcolor="#ffffff"></embed>	</object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_65c869e5b018a85856b35d7d55ea1925</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cea7c1ef851e1594e6753b86918b2a32</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d298c805b13b11b4ea1fcc769ad77962</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5465314351df1cdc49f42143ac0dc71f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1b150efc79ddbb87c267c24c613af805</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fe4547252746500c61cbb4158c705c07</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4b707be35bfb1f8e76650b15cd0ccae7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_25fe6eb81b018dbe5da3927056e2f29f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_57263876dbcab712140f76dd6e727030</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_475dad828cca808bc406a366dcb700f2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cf0f8da1777e90fb188abd5ff91c4967</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2e2bc7cc86402553c320e4ebfc8dc3c5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ce2e2f1b5a08e5413e8e481c1ca26e5a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_86964c25a44da4cae2b0ff2ecd179859</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_01ef72e0bf7d895fb0c6e8c44f8c25f8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gmail快捷键整理</title>
		<link>http://www.iceskysl.com/?p=414</link>
		<pubDate>Mon, 13 Oct 2008 15:59:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[Google的产品很多都深得我心，一直在使用，整理整合了一些Gmail的快捷方式，备忘。
<table style="width: 486px; height: 886px;" width="486" border="0" cellspacing="1" cellpadding="2" bgcolor="#cfcfcf">
<tbody>
<tr>
<td bgcolor="#c3d9ff" width="5%"><strong>快捷键</strong></td>
<td bgcolor="#c3d9ff" width="5%"><strong>定义</strong></td>
<td bgcolor="#c3d9ff" width="20%"><strong>作用</strong></td>
</tr>
<tr>
<td class="PConline" bgcolor="#ffffff">c</td>
<td bgcolor="#ffffff">Compose<a href="http://www.pconline.com.cn/pcedu/soft/wl/email/0609/862388.html"> </a></td>
<td bgcolor="#ffffff">撰写新邮件。“Shift+C”打开新窗口撰写新邮件</td>
</tr>
<tr>
<td bgcolor="#ffffff">&lt;tab&gt; then &lt;Enter&gt;</td>
<td bgcolor="#ffffff">Send message</td>
<td bgcolor="#ffffff">新邮件撰写完后，先&lt;tab&gt;后&lt;Enter&gt;可发送邮件。（在Windows中，使用IE和Firefox有效）</td>
</tr>
<tr>
<td bgcolor="#ffffff">k</td>
<td bgcolor="#ffffff">Move to newer conversation</td>
<td bgcolor="#ffffff">在收件箱中，向上移动光标，按&lt;Enter&gt;查看邮件；在查看邮件时，打开下一封新邮件</td>
</tr>
<tr>
<td bgcolor="#ffffff">j</td>
<td bgcolor="#ffffff">Move to older conversation</td>
<td bgcolor="#ffffff">在收件箱中，向下移动光标，按&lt;Enter&gt;查看邮件；在查看邮件时，打开下一封旧邮件</td>
</tr>
<tr>
<td bgcolor="#ffffff">n</td>
<td bgcolor="#ffffff">Next message</td>
<td bgcolor="#ffffff">查看邮件时，定位光标到</td>
</tr>
<tr>
<td bgcolor="#ffffff">p</td>
<td bgcolor="#ffffff">Previous message</td>
<td bgcolor="#ffffff">移动光标到前一个消息。&lt;Enter&gt;展开或折叠消息。（只在“会话模式”（Conversation View）中有效）</td>
</tr>
<tr>
<td bgcolor="#ffffff">o or &lt;Enter&gt;</td>
<td bgcolor="#ffffff">Open</td>
<td bgcolor="#ffffff">打开会话。在“Conversation View”中，也可用于打开消息。</td>
</tr>
<tr>
<td bgcolor="#ffffff">u</td>
<td bgcolor="#ffffff">Return to conversation list</td>
<td bgcolor="#ffffff">刷新页面、返回收件箱或返回会话列表</td>
</tr>
<tr>
<td bgcolor="#ffffff">y</td>
<td bgcolor="#ffffff">Archive*
Remove from current view</td>
<td bgcolor="#ffffff">
<p align="left">删除会话或消息。
在收件箱中，&lt;Y&gt;可“存档”选中的会话</p>

<ul>
	<li>在“已加星标示”中，&lt;Y&gt;可取消选中会话的星号；</li>
	<li>在查看有标签的邮件时，&lt;Y&gt;可取消标签。</li>
	<li>在“垃圾邮件”、“已发邮件”和“所有邮件”中，&lt;Y&gt;没有作用</li>
</ul>
</td>
</tr>
<tr>
<td bgcolor="#ffffff">x</td>
<td bgcolor="#ffffff">Select conversation</td>
<td bgcolor="#ffffff">选中会话，配合其他快捷键可为会话存档、添加标签或从下拉菜单中选择其他命令</td>
</tr>
<tr>
<td class="tpy" bgcolor="#ffffff">s</td>
<td bgcolor="#ffffff">Star a message or conversation</td>
<td bgcolor="#ffffff">为会话或消息加星标。</td>
</tr>
<tr>
<td bgcolor="#ffffff">!</td>
<td bgcolor="#ffffff">Report spam</td>
<td bgcolor="#ffffff">将消息标记为垃圾邮件并从会话中删除</td>
</tr>
<tr>
<td bgcolor="#ffffff">r</td>
<td bgcolor="#ffffff">Reply</td>
<td bgcolor="#ffffff">回复邮件或会话。“shift+r”可在新窗口中回复消息（只在“会话模式”中有效）</td>
</tr>
<tr>
<td bgcolor="#ffffff">a</td>
<td bgcolor="#ffffff">Reply all</td>
<td bgcolor="#ffffff">回复所有收件人。“Shift+a”可打开新窗口中回复。（PConline注：如果邮件有抄送地址，&lt;r&gt;回复发件人，&lt;a&gt;则回复所有抄送地址）</td>
</tr>
<tr>
<td class="pcoline" bgcolor="#ffffff">f</td>
<td bgcolor="#ffffff">Forward</td>
<td bgcolor="#ffffff">转发消息。“Shift+f”可打开新窗口转发。（只在“查看消息模式”（“Conversation View”）中有效）</td>
</tr>
<tr>
<td bgcolor="#ffffff">&lt;Esc&gt;</td>
<td bgcolor="#ffffff">Escape from input field</td>
<td bgcolor="#ffffff">Removes the cursor from your current input field.(PConline注：在中文版Gmail中暂未有效果)</td>
</tr>
<tr>
<td bgcolor="#ffffff">y then o</td>
<td bgcolor="#ffffff">Archive and next</td>
<td valign="top" bgcolor="#ffffff">存档选中的会话并打开下一个</td>
</tr>
<tr>
<td bgcolor="#ffffff">g then a</td>
<td bgcolor="#ffffff">Go to 'All Mail'</td>
<td bgcolor="#ffffff">转到“所有邮件”</td>
</tr>
<tr>
<td bgcolor="#ffffff">g then s</td>
<td bgcolor="#ffffff">Go to 'Starred'</td>
<td bgcolor="#ffffff">转到“已加星标”</td>
</tr>
<tr>
<td bgcolor="#ffffff">g then c</td>
<td bgcolor="#ffffff">Go to 'Contacts'</td>
<td bgcolor="#ffffff">转到“通讯录”</td>
</tr>
<tr>
<td bgcolor="#ffffff">g then d</td>
<td bgcolor="#ffffff">Go to 'Drafts'</td>
<td bgcolor="#ffffff">转到“草稿”</td>
</tr>
<tr>
<td bgcolor="#ffffff">g then i</td>
<td bgcolor="#ffffff">Go to 'Inbox'</td>
<td bgcolor="#ffffff">转到“收件箱”</td>
</tr>
<tr>
<td bgcolor="#ffffff">/</td>
<td bgcolor="#ffffff">Search</td>
<td bgcolor="#ffffff">将光标定位到搜索栏中的输入框中</td>
</tr>
</tbody>
</table>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Google的产品很多都深得我心，一直在使用，整理整合了一些Gmail的快捷方式，备忘。</p>
<table width="486" cellspacing="1" cellpadding="2" border="0" bgcolor="#cfcfcf" style="width: 486px; height: 886px;">
    <tbody>
        <tr>
            <td width="5%" bgcolor="#c3d9ff"><strong>快捷键</strong></td>
            <td width="5%" bgcolor="#c3d9ff"><strong>定义</strong></td>
            <td width="20%" bgcolor="#c3d9ff"><strong>作用</strong></td>
        </tr>
        <tr>
            <td bgcolor="#ffffff" class="PConline">c</td>
            <td bgcolor="#ffffff">Compose<a href="http://www.pconline.com.cn/pcedu/soft/wl/email/0609/862388.html">&nbsp;</a></td>
            <td bgcolor="#ffffff">撰写新邮件。&ldquo;Shift+C&rdquo;打开新窗口撰写新邮件</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">&lt;tab&gt; then &lt;Enter&gt;</td>
            <td bgcolor="#ffffff">Send message</td>
            <td bgcolor="#ffffff">新邮件撰写完后，先&lt;tab&gt;后&lt;Enter&gt;可发送邮件。（在Windows中，使用IE和Firefox有效）</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">k</td>
            <td bgcolor="#ffffff">Move to newer conversation</td>
            <td bgcolor="#ffffff">在收件箱中，向上移动光标，按&lt;Enter&gt;查看邮件；在查看邮件时，打开下一封新邮件</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">j</td>
            <td bgcolor="#ffffff">Move to older conversation</td>
            <td bgcolor="#ffffff">在收件箱中，向下移动光标，按&lt;Enter&gt;查看邮件；在查看邮件时，打开下一封旧邮件</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">n</td>
            <td bgcolor="#ffffff">Next message</td>
            <td bgcolor="#ffffff">查看邮件时，定位光标到</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">p</td>
            <td bgcolor="#ffffff">Previous message</td>
            <td bgcolor="#ffffff">移动光标到前一个消息。&lt;Enter&gt;展开或折叠消息。（只在&ldquo;会话模式&rdquo;（Conversation View）中有效）</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">o or &lt;Enter&gt;</td>
            <td bgcolor="#ffffff">Open</td>
            <td bgcolor="#ffffff">打开会话。在&ldquo;Conversation View&rdquo;中，也可用于打开消息。</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">u</td>
            <td bgcolor="#ffffff">Return to conversation list</td>
            <td bgcolor="#ffffff">刷新页面、返回收件箱或返回会话列表</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">y</td>
            <td bgcolor="#ffffff">Archive*<br />
            Remove from current view</td>
            <td bgcolor="#ffffff">
            <p align="left">删除会话或消息。 <br />
            在收件箱中，&lt;Y&gt;可&ldquo;存档&rdquo;选中的会话</p>
            <ul>
                <li>在&ldquo;已加星标示&rdquo;中，&lt;Y&gt;可取消选中会话的星号；</li>
                <li>在查看有标签的邮件时，&lt;Y&gt;可取消标签。</li>
                <li>在&ldquo;垃圾邮件&rdquo;、&ldquo;已发邮件&rdquo;和&ldquo;所有邮件&rdquo;中，&lt;Y&gt;没有作用</li>
            </ul>
            </td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">x</td>
            <td bgcolor="#ffffff">Select conversation</td>
            <td bgcolor="#ffffff">选中会话，配合其他快捷键可为会话存档、添加标签或从下拉菜单中选择其他命令</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff" class="tpy">s</td>
            <td bgcolor="#ffffff">Star a message or conversation</td>
            <td bgcolor="#ffffff">为会话或消息加星标。</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">!</td>
            <td bgcolor="#ffffff">Report spam</td>
            <td bgcolor="#ffffff">将消息标记为垃圾邮件并从会话中删除</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">r</td>
            <td bgcolor="#ffffff">Reply</td>
            <td bgcolor="#ffffff">回复邮件或会话。&ldquo;shift+r&rdquo;可在新窗口中回复消息（只在&ldquo;会话模式&rdquo;中有效）</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">a</td>
            <td bgcolor="#ffffff">Reply all</td>
            <td bgcolor="#ffffff">回复所有收件人。&ldquo;Shift+a&rdquo;可打开新窗口中回复。（PConline注：如果邮件有抄送地址，&lt;r&gt;回复发件人，&lt;a&gt;则回复所有抄送地址）</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff" class="pcoline">f</td>
            <td bgcolor="#ffffff">Forward</td>
            <td bgcolor="#ffffff">转发消息。&ldquo;Shift+f&rdquo;可打开新窗口转发。（只在&ldquo;查看消息模式&rdquo;（&ldquo;Conversation View&rdquo;）中有效）</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">&lt;Esc&gt;</td>
            <td bgcolor="#ffffff">Escape from input field</td>
            <td bgcolor="#ffffff">Removes the cursor from your current input field.(PConline注：在中文版Gmail中暂未有效果)</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">y then o</td>
            <td bgcolor="#ffffff">Archive and next</td>
            <td valign="top" bgcolor="#ffffff">存档选中的会话并打开下一个</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">g then a</td>
            <td bgcolor="#ffffff">Go to 'All Mail'</td>
            <td bgcolor="#ffffff">转到&ldquo;所有邮件&rdquo;</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">g then s</td>
            <td bgcolor="#ffffff">Go to 'Starred'</td>
            <td bgcolor="#ffffff">转到&ldquo;已加星标&rdquo;</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">g then c</td>
            <td bgcolor="#ffffff">Go to 'Contacts'</td>
            <td bgcolor="#ffffff">转到&ldquo;通讯录&rdquo;</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">g then d</td>
            <td bgcolor="#ffffff">Go to 'Drafts'</td>
            <td bgcolor="#ffffff">转到&ldquo;草稿&rdquo;</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">g then i</td>
            <td bgcolor="#ffffff">Go to 'Inbox'</td>
            <td bgcolor="#ffffff">转到&ldquo;收件箱&rdquo;</td>
        </tr>
        <tr>
            <td bgcolor="#ffffff">/</td>
            <td bgcolor="#ffffff">Search</td>
            <td bgcolor="#ffffff">将光标定位到搜索栏中的输入框中</td>
        </tr>
    </tbody>
</table>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2008-10-13 15:59:32</wp:post_date>
		<wp:post_date_gmt>2008-10-13 15:59:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gmail%e5%bf%ab%e6%8d%b7%e9%94%ae%e6%95%b4%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gmail"><![CDATA[Gmail]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Request-log-analyzer: Rails&amp;Merb的日志分析</title>
		<link>http://www.iceskysl.com/?p=415</link>
		<pubDate>Mon, 13 Oct 2008 16:45:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=415</guid>
		<description></description>
		<content:encoded><![CDATA[生产环境下，需要对环境持续监控以尽快的发现问题，找到耗费资源较多的地方加以改进，比较常见的做法是使用moint或者God实时监控；另外，还可以定期分析日志找到特定的请求，虽然可以是shell来做这件事，但是何必再造轮子呢，因为我们已经有了<a href="http://github.com/wvanbergen/request-log-analyzer/tree/master">Request log analyzer</a> ：
<pre><strong>简介：</strong>This is a simple command line tool to analyze request log files of both Rails andMerb. Its purpose is to find what actions are best candidates for optimization.This tool will parse all requests in the logfile and aggregate theinformation. Once it is finished parsing the log file, it will show therequests that take op most server time. Different metrics are used (cumulativetime, average time, blockers, DB time, etc)

<strong>安装：</strong>gem sources -a <a href="http://gems.github.com/">http://gems.github.com</a>sudo gem install wvanbergen-request-log-analyzer

<strong>使用：</strong>Usage: request-log-analyzer [FILE] [OPTION]Analyze the given log FILE with the given OPTIONExample: request-log-analyzer mongrel.log

  --fast, -t:                 Only use completed requests  --guess-database-time, -g:  Guesses the database duration of requests if they are not in the log  --output, -o:               Comma-separated list of reports to show      --amount, -c:               Displays the top &lt;amount&gt; elements in the reports  --colorize, -z:             Fancy bash coloring

<strong>示例：</strong>Note that this example was shortened for your viewing pleasure.$ request-log-analyzer /var/log/my_app.log

Request log analyzer, by Willem van Bergen and  Bart ten Brinke

Processing all log lines...========================================================================Successfully analyzed 58908 requests from log file

Timestamp first request: 2008-07-13T06:25:58+00:00Timestamp last request:  2008-07-20T06:18:53+00:00Total time analyzed: 7 daysMethods: DELETE (1%), GET (50%), POST (22%), PUT (25%).

Top 10 most requested actions========================================================================/overview/:date/                                  : 19359 requests/overview/day/:date/                              : 6365 requests/overview/:date/set/                              : 5589 requests/overview/                                        : 3985 requests/clients/:id/                                     : 1976 requests........

Top 10 actions by time - cumulative========================================================================/overview/:date/                                  :   9044.582s [19359 requests]/overview/                                        :   8478.767s [3985 requests]/overview/:date/set/                              :   3309.041s [5589 requests]/clients/:id/products/:id/                        :   1479.911s [924 requests]/clients/:id/                                     :    750.080s [1976 requests]........

Top 10 actions by time - per request mean========================================================================/overview/                                        :      2.128s [3985 requests]/clients/:id/products/:id/                        :      1.602s [924 requests]/overview/:date/set/                              :      0.592s [5589 requests]/overview/:date/                                  :      0.467s [19359 requests]/clients/:id/                                     :      0.380s [1976 requests]........

Top 10 worst DB offenders - cumulative time========================================================================/overview/:date/                                  :   8773.993s [19359 requests]/overview/                                        :   8394.754s [3985 requests]/overview/:date/set/                              :   3307.928s [5589 requests]/clients/:id/products/:id/                        :   1425.220s [924 requests]/clients/:id/                                     :    535.229s [1976 requests]........

Top 10 worst DB offenders - mean time========================================================================/overview/:id/:id/:id/print/                      :      6.994s [448 requests]/overview/                                        :      2.128s [3985 requests]/clients/:id/products/:id/                        :      1.602s [924 requests]/overview/:date/set/                              :      0.592s [5589 requests]/overview/:date/                                  :      0.467s [19359 requests]........

Mongrel process blockers (&gt; 1.0 seconds)========================================================================/overview/:date/                                  :   7494.233s [3144 requests]/overview/                                        :   8320.293s [1549 requests]/overview/:date/set/                              :   1149.235s [803 requests]/overview/:id/:id/:id/print/new/                  :    613.693s [341 requests]/clients/:id/products/:id/                        :   1370.693s [313 requests]........

Requests graph - per hour========================================================================         ........         7:00 - 2731                 : XXXXXXX         8:00 - 6139                 : XXXXXXXXXXXXXXXX         9:00 - 7465                 : XXXXXXXXXXXXXXXXXXXX        10:00 - 7118                 : XXXXXXXXXXXXXXXXXXX        11:00 - 7409                 : XXXXXXXXXXXXXXXXXXX        12:00 - 6450                 : XXXXXXXXXXXXXXXXX        13:00 - 5377                 : XXXXXXXXXXXXXX        14:00 - 6058                 : XXXXXXXXXXXXXXXX        15:00 - 4156                 : XXXXXXXXXXX        16:00 - 2767                 : XXXXXXX        17:00 - 1598                 : XXXX        18:00 - 792                  : XX        ........

Errors========================================================================ArgumentError: [237 requests] -&gt; invalid dateStaleObjectError: [28 requests] -&gt; Attempted to update a stale objectRuntimeError: [3 requests] -&gt; Cannot destroy rule before it was createdStatementError: [2 requests] -&gt; Mysql::Error: Deadlock found when trying to get lock; try restarting transactionNoMethodError: [1 requests] -&gt; undefined method `code' for nil:NilClass</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>You've probably all been there: your application is running slow, but why? What views or actions are clogging up the mongrels? Or are the mongrels just waiting for the database?</p>
<p>Rails log analyzer is a simple but very powerful command-line analysis tool to quickly determine what is taking time, on all kinds of different levels. At the moment it can tell you the following statistics:</p>
<ul>
    <li>Top 10 most requested actions</li>
    <li>Top 10 actions by time - cumulative</li>
    <li>Top 10 actions by time - per request mean</li>
    <li>Top 10 worst DB offenders - cumulative time</li>
    <li>Top 10 worst DB offenders - mean time</li>
    <li>Mongrel process blockers (&gt; 1.0 seconds) - frequency</li>
    <li>Requests graph - requests per hour</li>
</ul>]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date>2008-10-13 16:45:11</wp:post_date>
		<wp:post_date_gmt>2008-10-13 16:45:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>request-log-analyzer-railsmerb%e7%9a%84%e6%97%a5%e5%bf%97%e5%88%86%e6%9e%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="analyzer"><![CDATA[analyzer]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nginx日志回滚和自动清理</title>
		<link>http://www.iceskysl.com/?p=416</link>
		<pubDate>Tue, 14 Oct 2008 14:25:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[当网站访问量大到一定程度后，其web server会有大量的访问和错误日志，比如apache，nginx等就常常很容易的达到几个G的日志文件，这个时候就会导致诸如磁盘空间紧张，系统反应迟钝等等系列的问题，需要手工清理日志。

其实我们可以采取一些方法使得其日志自动回滚和删除，这里大概说说，后续再补充。

<strong>1、Nginx Log Rotation</strong>

Nginx有个<a href="http://wiki.codemongers.com/NginxLogRotation">Log Rotation</a>模块，nginx will re-open it's logs in response to the USR1 signal.参考如下脚本：
<pre>$ mv access.log access.log.0$ kill -USR1 `cat master.nginx.pid`$ sleep 1$ gzip access.log.0    # do something with access.log.0

<strong>2、自己写脚本</strong><span class="com">#!/bin/sh</span><span class="pln">log_dir</span><span class="pun">=</span><span class="str">"/var/log/httpd"</span><span class="pln">yesterday</span><span class="pun">=</span><span class="str">`date +%Y%m%d -d '-1 day'`</span><span class="pln">lastday </span><span class="pun">=</span><span class="str">`date +%Y%m%d -d '-1 month'`</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">rm $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">lastday</span><span class="pun">}.</span><span class="pln">log</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">rm $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">lastday</span><span class="pun">}.</span><span class="pln">log</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">mv $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">log $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">mv $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">log $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">logkill </span><span class="pun">-</span><span class="pln">USR1 </span><span class="str">`cat /var/run/nginx.pid`</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">gzip $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log </span><span class="pun">&amp;</span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">gzip $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log </span><span class="pun">&amp;</span>本脚本来自“<a href="http://shunz.net/2008/07/nginx_log_rotation.html">Nginx的日志回滚</a>”然后将该脚本保存在/etc/cron.daily目录里，或者在crontab里每日0点时运行。另外，还可以结合awstats进行日志分析，这里就不详细说了，可以参考<a href="http://www.chedong.com/tech/awstats.html" target="_blank">车东的相关文章</a>。</pre>
<p class="line874"><strong>其他参考文档：</strong></p>

<ol>
	<li><a href="http://dev.weamax.com/docs/books/log_process/log_process.html">日志分割文档</a></li>
	<li><a href="http://forum.eedu.org.cn/post/view?bid=39&amp;id=62772">Apache和Resin产生大容量日志的解决办法 </a></li>
	<li><a href="http://shunz.net/2008/07/nginx_log_rotation.html">Nginx的日志回滚</a></li>
</ol>
<p class="line874"></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>当网站访问量大到一定程度后，其web server会有大量的访问和错误日志，比如apache，nginx等就常常很容易的达到几个G的日志文件，这个时候就会导致诸如磁盘空间紧张，系统反应迟钝等等系列的问题，需要手工清理日志。</p>
<p>其实我们可以采取一些方法使得其日志自动回滚和删除，这里大概说说，后续再补充。</p>
<p><strong>1、Nginx Log Rotation</strong></p>
<p>Nginx有个<a href="http://wiki.codemongers.com/NginxLogRotation">Log Rotation</a>模块，nginx will re-open it's logs in response to the USR1 signal.参考如下脚本：</p>
<pre>$ mv access.log access.log.0<br />$ kill -USR1 `cat master.nginx.pid`<br />$ sleep 1<br />$ gzip access.log.0    # do something with access.log.0<br /><br /><strong>2、自己写脚本</strong><br /><span class="com">#!/bin/sh</span><span class="pln"><br />log_dir</span><span class="pun">=</span><span class="str">&quot;/var/log/httpd&quot;</span><span class="pln"><br />yesterday</span><span class="pun">=</span><span class="str">`date +%Y%m%d -d '-1 day'`</span><span class="pln"><br />lastday </span><span class="pun">=</span><span class="str">`date +%Y%m%d -d '-1 month'`</span><span class="pln"><br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">rm $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">lastday</span><span class="pun">}.</span><span class="pln">log<br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">rm $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">lastday</span><span class="pun">}.</span><span class="pln">log<br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">mv $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">log $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log<br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">mv $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">log $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log<br />kill </span><span class="pun">-</span><span class="pln">USR1 </span><span class="str">`cat /var/run/nginx.pid`</span><span class="pln"><br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">gzip $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">access</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log </span><span class="pun">&amp;</span><span class="pln"><br /></span><span class="pun">/</span><span class="pln">bin</span><span class="pun">/</span><span class="pln">gzip $</span><span class="pun">{</span><span class="pln">log_dir</span><span class="pun">}/</span><span class="pln">error</span><span class="pun">.</span><span class="pln">$</span><span class="pun">{</span><span class="pln">yesterday</span><span class="pun">}.</span><span class="pln">log </span><span class="pun">&amp;</span><br />本脚本来自&ldquo;<a href="http://shunz.net/2008/07/nginx_log_rotation.html">Nginx的日志回滚</a>&rdquo;然后将该脚本保存在/etc/cron.daily目录里，或者在crontab里每日0点时运行。<br />另外，还可以结合awstats进行日志分析，这里就不详细说了，可以参考<a target="_blank" href="http://www.chedong.com/tech/awstats.html">车东的相关文章</a>。</pre>
<p class="line874"><strong>其他参考文档：</strong></p>
<ol>
    <li><a href="http://dev.weamax.com/docs/books/log_process/log_process.html">日志分割文档</a></li>
    <li><a href="http://forum.eedu.org.cn/post/view?bid=39&amp;id=62772">Apache和Resin产生大容量日志的解决办法 </a></li>
    <li><a href="http://shunz.net/2008/07/nginx_log_rotation.html">Nginx的日志回滚</a></li>
</ol>
<p class="line874">&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2008-10-14 14:25:53</wp:post_date>
		<wp:post_date_gmt>2008-10-14 14:25:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx%e6%97%a5%e5%bf%97%e5%9b%9e%e6%bb%9a%e5%92%8c%e8%87%aa%e5%8a%a8%e6%b8%85%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby解析XML对比测试(Hpricot VS REXML VS   libxml-ruby)</title>
		<link>http://www.iceskysl.com/?p=417</link>
		<pubDate>Wed, 15 Oct 2008 21:29:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby可以很方便的解析XML格式的文档，目前用的比较多的lib主要有三个，分别是：<a href="http://www.ruby-doc.org/stdlib/libdoc/rexml/rdoc/index.html"><span class="caps">REXML</span></a>, <a href="http://code.whytheluckystiff.net/hpricot/">Hpricot</a>, <a href="http://libxml.rubyforge.org/">libxml-ruby</a>，如下选取两个XML文档，分别使用这三个lib解析，感受下各自的速度和易用性。
<strong>一、原料</strong>
<ul>
	<li><a href="http://railstips.org/assets/2008/8/9/posts.xml">posts.xml</a> – Uses xml element for object (post) and xml attributes for object attributes</li>
	<li><a href="http://railstips.org/assets/2008/8/9/timeline.xml">timeline.xml</a> – Uses xml element for object (status) and child xml elements for attributes</li>
</ul>
<strong>二、解析过程</strong>
<strong>1、REXML</strong>

<strong>Pros:</strong> In the standard library
<strong>Cons:</strong> Slow, I don’t like the name
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>%w[benchmark pp rexml/document].</span><span class="keyword">each</span><span> { |x| require x }  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span><span class="comment"># Parsing Delicious API Response #</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)  </span></span></li>
	<li class="alt"><span>puts Benchmark.measure {  </span></li>
	<li><span>  doc, posts = REXML::Document.<span class="keyword">new</span><span>(xml), []  </span></span></li>
	<li class="alt"><span>  doc.elements.<span class="keyword">each</span><span>(</span><span class="string">'posts/post'</span><span>) </span><span class="keyword">do</span><span> |p|  </span></span></li>
	<li><span>    posts &lt;&lt; p.attributes  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  <span class="comment"># pp posts</span><span>  </span></span></li>
	<li class="alt"><span>}  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">################################</span><span>  </span></span></li>
	<li><span><span class="comment"># Parsing Twitter API Response #</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment">################################</span><span>  </span></span></li>
	<li><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)  </span></span></li>
	<li class="alt"><span>puts Benchmark.measure {  </span></li>
	<li><span>  doc, statuses = REXML::Document.<span class="keyword">new</span><span>(xml), []  </span></span></li>
	<li class="alt"><span>  doc.elements.<span class="keyword">each</span><span>(</span><span class="string">'statuses/status'</span><span>) </span><span class="keyword">do</span><span> |s|  </span></span></li>
	<li><span>    h = {<span class="symbol">:user</span><span> =&gt; {}}  </span></span></li>
	<li class="alt"><span>    %w[created_at id text source truncated in_reply_to_status_id in_reply_to_user_id favorited].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li><span>      h[a.intern] = s.elements[a].text  </span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>    %w[id name screen_name location description profile_image_url url protected followers_count].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li class="alt"><span>      h[<span class="symbol">:user</span><span>][a.intern] = s.elements[</span><span class="string">'user'</span><span>].elements[a].text  </span></span></li>
	<li><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    statuses &lt;&lt; h  </span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="comment"># pp statuses</span><span>  </span></span></li>
	<li><span>}  </span></li>
</ol>
</div>
<pre><code class="ruby"><strong>2、Hpricot</strong></code><strong>Pros:</strong> Cool name, created by _why, faster than <span class="caps">REXML</span>, also does <span class="caps">HTML</span>, creative <span class="caps">API</span><strong>Cons:</strong> Not as fast as libxml-ruby, more of an <span class="caps">HTML</span> parser linguistically (ie: uses innerHTML instead of text or content, etc.)</pre>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>%w[benchmark pp rubygems].</span><span class="keyword">each</span><span> { |x| require x }  </span></span></li>
	<li><span>gem <span class="string">'hpricot'</span><span>, </span><span class="string">'&gt;= 0.6'</span><span>  </span></span></li>
	<li class="alt"><span>require <span class="string">'hpricot'</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span><span class="comment"># Parsing Delicious API Response #</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)  </span></span></li>
	<li class="alt"><span>puts Benchmark.measure {  </span></li>
	<li><span>  doc, posts = Hpricot::XML(xml), []  </span></li>
	<li class="alt"><span>  (doc/<span class="symbol">:post</span><span>).</span><span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |p|  </span></span></li>
	<li><span>    posts &lt;&lt; p.attributes  </span></li>
	<li class="alt"><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li><span>  <span class="comment"># pp posts</span><span>  </span></span></li>
	<li class="alt"><span>}  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">################################</span><span>  </span></span></li>
	<li><span><span class="comment"># Parsing Twitter API Response #</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment">################################</span><span>  </span></span></li>
	<li><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)  </span></span></li>
	<li class="alt"><span>puts Benchmark.measure {  </span></li>
	<li><span>  doc, statuses = Hpricot::XML(xml), []  </span></li>
	<li class="alt"><span>  (doc/<span class="symbol">:status</span><span>).</span><span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |s|  </span></span></li>
	<li><span>    h = {<span class="symbol">:user</span><span> =&gt; {}}  </span></span></li>
	<li class="alt"><span>    %w[created_at id text source truncated in_reply_to_status_id in_reply_to_user_id favorited].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li><span>      h[a.intern] = s.at(a).innerHTML  </span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>    %w[id name screen_name location description profile_image_url url protected followers_count].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li class="alt"><span>      h[<span class="symbol">:user</span><span>][a.intern] = s.at(</span><span class="string">'user'</span><span>).at(a).innerHTML  </span></span></li>
	<li><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    statuses &lt;&lt; h  </span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="comment"># pp statuses</span><span>  </span></span></li>
	<li><span>}  </span></li>
</ol>
</div>
<strong>3、libxml-ruby </strong>

<strong>Pros:</strong> Blistering fast
<strong>Cons:</strong> Hpricot has cooler name, <span class="caps">REXML</span> and Hpricot both feel easier to use out of the box
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
	<li class="alt"><span><span>%w[benchmark pp rubygems].</span><span class="keyword">each</span><span> { |x| require x }  </span></span></li>
	<li><span>gem <span class="string">'libxml-ruby'</span><span>, </span><span class="string">'&gt;= 0.8.3'</span><span>  </span></span></li>
	<li class="alt"><span>require <span class="string">'xml'</span><span>  </span></span></li>
	<li><span>  </span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span><span class="comment"># Parsing Delicious API Response #</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment">##################################</span><span>  </span></span></li>
	<li><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)  </span></span></li>
	<li class="alt"><span>puts Benchmark.measure {  </span></li>
	<li><span>  parser, parser.string = XML::Parser.<span class="keyword">new</span><span>, xml  </span></span></li>
	<li class="alt"><span>  doc, posts = parser.parse, []  </span></li>
	<li><span>  doc.find(<span class="string">'//posts/post'</span><span>).</span><span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |p|  </span></span></li>
	<li class="alt"><span>    posts &lt;&lt; p.attributes.inject({}) { |h, a| h[a.name] = a.value; h }  </span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="comment"># pp posts</span><span>  </span></span></li>
	<li><span>}  </span></li>
	<li class="alt"><span>  </span></li>
	<li><span><span class="comment">################################</span><span>  </span></span></li>
	<li class="alt"><span><span class="comment"># Parsing Twitter API Response #</span><span>  </span></span></li>
	<li><span><span class="comment">################################</span><span>  </span></span></li>
	<li class="alt"><span>xml = <span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)  </span></span></li>
	<li><span>puts Benchmark.measure {  </span></li>
	<li class="alt"><span>  parser, parser.string = XML::Parser.<span class="keyword">new</span><span>, xml  </span></span></li>
	<li><span>  doc, statuses = parser.parse, []  </span></li>
	<li class="alt"><span>  doc.find(<span class="string">'//statuses/status'</span><span>).</span><span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |s|  </span></span></li>
	<li><span>    h = {<span class="symbol">:user</span><span> =&gt; {}}  </span></span></li>
	<li class="alt"><span>    %w[created_at id text source truncated in_reply_to_status_id in_reply_to_user_id favorited].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li><span>      h[a.intern] = s.find(a).first.content  </span></li>
	<li class="alt"><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li><span>    %w[id name screen_name location description profile_image_url url protected followers_count].<span class="keyword">each</span><span> </span><span class="keyword">do</span><span> |a|  </span></span></li>
	<li class="alt"><span>      h[<span class="symbol">:user</span><span>][a.intern] = s.find(</span><span class="string">'user'</span><span>).first.find(a).first.content  </span></span></li>
	<li><span>    <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>    statuses &lt;&lt; h  </span></li>
	<li><span>  <span class="keyword">end</span><span>  </span></span></li>
	<li class="alt"><span>  <span class="comment"># pp statuses</span><span>  </span></span></li>
	<li><span>}  </span></li>
</ol>
</div>
<pre><code class="ruby"><strong>三、结论</strong></code></pre>
<div class="codeText">
<div class="codeHead">结果如下：</div>
<ol class="dp-xml" start="1">
	<li class="alt"><span><span>=rexml  </span></span></li>
	<li><span>delicious     0.020000   0.000000   0.020000 (  0.021139)  </span></li>
	<li class="alt"><span>twitter       0.940000   0.020000   0.960000 (  0.988666)  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>=hpricot  </span></li>
	<li><span>delicious     0.010000   0.000000   0.010000 (  0.005548)  </span></li>
	<li class="alt"><span>twitter       0.250000   0.010000   0.260000 (  0.258320)  </span></li>
	<li><span>  </span></li>
	<li class="alt"><span>=libxml-ruby  </span></li>
	<li><span>delicious     0.000000   0.000000   0.000000 (  0.007829)  </span></li>
	<li class="alt"><span>twitter       0.030000   0.010000   0.040000 (  0.034040)  </span></li>
</ol>
</div>
<pre><code class="ruby">参考文档：http://railstips.org/2008/8/12/parsing-xml-with-ruby</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Ruby可以很方便的解析XML格式的文档，目前用的比较多的lib主要有三个，分别是：<a href="http://www.ruby-doc.org/stdlib/libdoc/rexml/rdoc/index.html"><span class="caps">REXML</span></a>, <a href="http://code.whytheluckystiff.net/hpricot/">Hpricot</a>, <a href="http://libxml.rubyforge.org/">libxml-ruby</a>，如下选取两个XML文档，分别使用这三个lib解析，感受下各自的速度和易用性。<br />
<strong>一、原料</strong></p>
<ul>
    <li><a href="http://railstips.org/assets/2008/8/9/posts.xml">posts.xml</a> &ndash; Uses xml element for object (post) and xml attributes for object attributes</li>
    <li><a href="http://railstips.org/assets/2008/8/9/timeline.xml">timeline.xml</a> &ndash; Uses xml element for object (status) and child xml elements for attributes</li>
</ul>
<p><strong>二、解析过程</strong><br />
<strong>1、REXML</strong></p>
<p><strong>Pros:</strong> In the standard library<br />
<strong>Cons:</strong> Slow, I don&rsquo;t like the name</p>
<pre><div class="codeText"><div class="codeHead">Ruby代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>%w[benchmark&nbsp;pp&nbsp;rexml/document].</span><span class="keyword">each</span><span>&nbsp;{&nbsp;|x|&nbsp;require&nbsp;x&nbsp;}&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">#&nbsp;Parsing&nbsp;Delicious&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;doc,&nbsp;posts&nbsp;=&nbsp;REXML::Document.<span class="keyword">new</span><span>(xml),&nbsp;[]&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;doc.elements.<span class="keyword">each</span><span>(</span><span class="string">'posts/post'</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|p|&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;posts&nbsp;&lt;&lt;&nbsp;p.attributes&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;posts</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">#&nbsp;Parsing&nbsp;Twitter&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;doc,&nbsp;statuses&nbsp;=&nbsp;REXML::Document.<span class="keyword">new</span><span>(xml),&nbsp;[]&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;doc.elements.<span class="keyword">each</span><span>(</span><span class="string">'statuses/status'</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|s|&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;{<span class="symbol">:user</span><span>&nbsp;=&gt;&nbsp;{}}&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[created_at&nbsp;id&nbsp;text&nbsp;source&nbsp;truncated&nbsp;in_reply_to_status_id&nbsp;in_reply_to_user_id&nbsp;favorited].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[a.intern]&nbsp;=&nbsp;s.elements[a].text&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[id&nbsp;name&nbsp;screen_name&nbsp;location&nbsp;description&nbsp;profile_image_url&nbsp;url&nbsp;protected&nbsp;followers_count].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[<span class="symbol">:user</span><span>][a.intern]&nbsp;=&nbsp;s.elements[</span><span class="string">'user'</span><span>].elements[a].text&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;statuses&nbsp;&lt;&lt;&nbsp;h&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;statuses</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><strong>2、Hpricot</strong><br /><strong>Pros:</strong> Cool name, created by _why, faster than <span class="caps">REXML</span>, also does <span class="caps">HTML</span>, creative <span class="caps">API</span><br /><strong>Cons:</strong> Not as fast as libxml-ruby, more of an <span class="caps">HTML</span> parser linguistically (ie: uses innerHTML instead of text or content, etc.)</pre>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>%w[benchmark&nbsp;pp&nbsp;rubygems].</span><span class="keyword">each</span><span>&nbsp;{&nbsp;|x|&nbsp;require&nbsp;x&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>gem&nbsp;<span class="string">'hpricot'</span><span>,&nbsp;</span><span class="string">'&gt;=&nbsp;0.6'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>require&nbsp;<span class="string">'hpricot'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;Parsing&nbsp;Delicious&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;doc,&nbsp;posts&nbsp;=&nbsp;Hpricot::XML(xml),&nbsp;[]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;(doc/<span class="symbol">:post</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|p|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;posts&nbsp;&lt;&lt;&nbsp;p.attributes&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;posts</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;Parsing&nbsp;Twitter&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;doc,&nbsp;statuses&nbsp;=&nbsp;Hpricot::XML(xml),&nbsp;[]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;(doc/<span class="symbol">:status</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|s|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;{<span class="symbol">:user</span><span>&nbsp;=&gt;&nbsp;{}}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[created_at&nbsp;id&nbsp;text&nbsp;source&nbsp;truncated&nbsp;in_reply_to_status_id&nbsp;in_reply_to_user_id&nbsp;favorited].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[a.intern]&nbsp;=&nbsp;s.at(a).innerHTML&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[id&nbsp;name&nbsp;screen_name&nbsp;location&nbsp;description&nbsp;profile_image_url&nbsp;url&nbsp;protected&nbsp;followers_count].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[<span class="symbol">:user</span><span>][a.intern]&nbsp;=&nbsp;s.at(</span><span class="string">'user'</span><span>).at(a).innerHTML&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;statuses&nbsp;&lt;&lt;&nbsp;h&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;statuses</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p><strong>3、libxml-ruby </strong></p>
<p><strong>Pros:</strong> Blistering fast<br />
<strong>Cons:</strong> Hpricot has cooler name, <span class="caps">REXML</span> and Hpricot both feel easier to  use out of the box</p>
<pre><div class="codeText"><div class="codeHead">Ruby代码</div><ol start="1" class="dp-rb"><li class="alt"><span><span>%w[benchmark&nbsp;pp&nbsp;rubygems].</span><span class="keyword">each</span><span>&nbsp;{&nbsp;|x|&nbsp;require&nbsp;x&nbsp;}&nbsp;&nbsp;</span></span></li><li class=""><span>gem&nbsp;<span class="string">'libxml-ruby'</span><span>,&nbsp;</span><span class="string">'&gt;=&nbsp;0.8.3'</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>require&nbsp;<span class="string">'xml'</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">#&nbsp;Parsing&nbsp;Delicious&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">##################################</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'posts.xml'</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;parser,&nbsp;parser.string&nbsp;=&nbsp;XML::Parser.<span class="keyword">new</span><span>,&nbsp;xml&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;doc,&nbsp;posts&nbsp;=&nbsp;parser.parse,&nbsp;[]&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;doc.find(<span class="string">'//posts/post'</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|p|&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;posts&nbsp;&lt;&lt;&nbsp;p.attributes.inject({})&nbsp;{&nbsp;|h,&nbsp;a|&nbsp;h[a.name]&nbsp;=&nbsp;a.value;&nbsp;h&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;posts</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">#&nbsp;Parsing&nbsp;Twitter&nbsp;API&nbsp;Response&nbsp;#</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">################################</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>xml&nbsp;=&nbsp;<span class="builtin">File</span><span>.read(</span><span class="string">'timeline.xml'</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>puts&nbsp;Benchmark.measure&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;parser,&nbsp;parser.string&nbsp;=&nbsp;XML::Parser.<span class="keyword">new</span><span>,&nbsp;xml&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;doc,&nbsp;statuses&nbsp;=&nbsp;parser.parse,&nbsp;[]&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;doc.find(<span class="string">'//statuses/status'</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|s|&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;{<span class="symbol">:user</span><span>&nbsp;=&gt;&nbsp;{}}&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[created_at&nbsp;id&nbsp;text&nbsp;source&nbsp;truncated&nbsp;in_reply_to_status_id&nbsp;in_reply_to_user_id&nbsp;favorited].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[a.intern]&nbsp;=&nbsp;s.find(a).first.content&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;%w[id&nbsp;name&nbsp;screen_name&nbsp;location&nbsp;description&nbsp;profile_image_url&nbsp;url&nbsp;protected&nbsp;followers_count].<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|a|&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h[<span class="symbol">:user</span><span>][a.intern]&nbsp;=&nbsp;s.find(</span><span class="string">'user'</span><span>).first.find(a).first.content&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;statuses&nbsp;&lt;&lt;&nbsp;h&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;pp&nbsp;statuses</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><strong>三、结论</strong><br /><div class="codeText"><div class="codeHead">结果如下：</div><ol start="1" class="dp-xml"><li class="alt"><span><span>=rexml&nbsp;&nbsp;</span></span></li><li class=""><span>delicious&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.020000&nbsp;&nbsp;&nbsp;0.000000&nbsp;&nbsp;&nbsp;0.020000&nbsp;(&nbsp;&nbsp;0.021139)&nbsp;&nbsp;</span></li><li class="alt"><span>twitter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.940000&nbsp;&nbsp;&nbsp;0.020000&nbsp;&nbsp;&nbsp;0.960000&nbsp;(&nbsp;&nbsp;0.988666)&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>=hpricot&nbsp;&nbsp;</span></li><li class=""><span>delicious&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.010000&nbsp;&nbsp;&nbsp;0.000000&nbsp;&nbsp;&nbsp;0.010000&nbsp;(&nbsp;&nbsp;0.005548)&nbsp;&nbsp;</span></li><li class="alt"><span>twitter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.250000&nbsp;&nbsp;&nbsp;0.010000&nbsp;&nbsp;&nbsp;0.260000&nbsp;(&nbsp;&nbsp;0.258320)&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>=libxml-ruby&nbsp;&nbsp;</span></li><li class=""><span>delicious&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.000000&nbsp;&nbsp;&nbsp;0.000000&nbsp;&nbsp;&nbsp;0.000000&nbsp;(&nbsp;&nbsp;0.007829)&nbsp;&nbsp;</span></li><li class="alt"><span>twitter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.030000&nbsp;&nbsp;&nbsp;0.010000&nbsp;&nbsp;&nbsp;0.040000&nbsp;(&nbsp;&nbsp;0.034040)&nbsp;&nbsp;</span></li></ol></div>参考文档：http://railstips.org/2008/8/12/parsing-xml-with-ruby</pre>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2008-10-15 21:29:22</wp:post_date>
		<wp:post_date_gmt>2008-10-15 21:29:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e8%a7%a3%e6%9e%90xml%e5%af%b9%e6%af%94%e6%b5%8b%e8%af%95hpricot-vs-rexml-vs-libxml-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>338</wp:comment_id>
			<wp:comment_author><![CDATA[Neo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.112.70.169</wp:comment_author_IP>
			<wp:comment_date>2008-12-01 17:10:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，在你这里，学到很多东西]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>github is blocked !</title>
		<link>http://www.iceskysl.com/?p=418</link>
		<pubDate>Thu, 16 Oct 2008 00:09:46 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://github.com/">Github</a>也撞墙了，不发表言论，对于我等天天往github上push/pull代码的人，真是无奈，没办法，自己动手解决一下吧，如下两种方法：

1、在hosts文件添加DNS映射

65.74.177.129 github.com
65.74.177.129 www.github.com

2、使用其他的DNS服务器

可以使用OpenDNS，比较见效。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><a href="http://github.com/">Github</a>也撞墙了，不发表言论，对于我等天天往github上push/pull代码的人，真是无奈，没办法，自己动手解决一下吧，如下两种方法：</p>
<p>1、在hosts文件添加DNS映射</p>
<p>65.74.177.129 github.com<br />
65.74.177.129 www.github.com</p>
<p>2、使用其他的DNS服务器</p>
<p>可以使用OpenDNS，比较见效。</p>]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date>2008-10-16 00:09:46</wp:post_date>
		<wp:post_date_gmt>2008-10-16 00:09:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>github-is-blocked</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>339</wp:comment_id>
			<wp:comment_author><![CDATA[cruby]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.238.168.4</wp:comment_author_IP>
			<wp:comment_date>2008-10-19 18:08:06</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ruby-forum.com呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>初识oauth: 为API访问授权提供一个开放的标准</title>
		<link>http://www.iceskysl.com/?p=419</link>
		<pubDate>Thu, 16 Oct 2008 00:28:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[最近在准备一些API设计开发工作，初步了解了下<a href="http://rubyforge.org/projects/oauth/">oauth</a>，OAuth是由Blaine Cook、Chris Messina、Larry Halff 及David Recordon共同发起的，目的在于为API访问授权提供一个开放的标准。
oauth目前看来进展比较顺利，可以看到其有<a href="http://code.google.com/p/oauth/">主流语言的lib</a>（Java、C#、Objective-C、Perl、PHP及Ruby语言），目前支持oauth的API有twitter，douban等应用。

<a href="http://oauth.net/">OAuth</a> is the great new standard allowing your users to use your application to talk to their accounts on other applications. I won’t go more into it here as it’s pretty well covered on the <a href="http://oauth.net/">OAuth</a> site.
<strong>
OAuth’s Goal</strong>
Website X can access your protected data at API Y
<ul>
	<li>All without sharing your password off-site</li>
	<li>especially when there isn’t one like with OpenID</li>
</ul>
其基本流程为：
<ol>
	<li>Register your consumer application with the OAuth compliant service to receive your Consumer Credentials (This is only done once)</li>
	<li>You initiate the OAuth Token exchange process for a user by requesting a <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> from the Service</li>
	<li>You store the <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> in your database or in the users session object</li>
	<li>You redirect your user to the service providers authorize_url with the RequestToken’s key appended</li>
	<li>Your user is asked by the service provider to authorize your RequestToken</li>
	<li>Your user clicks yes and is redirected to your CallBack <span class="caps">URL</span></li>
	<li>Your callback action exchanges the <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> for an <a href="http://code.google.com/p/oauth-plugin/wiki/AccessToken">AccessToken</a></li>
	<li>Now you can access your users data by performing http requests signed by your consumer credentials and the AccessToken.</li>
	<li>????</li>
	<li><span class="caps">PROFIT</span>!!!</li>
</ol>
如果你想了解，请参考如下文档，如果你有经验，请分享，谢谢！
<strong>
参考文档：</strong>
<ul>
	<li><a href="http://stakeventures.com/articles/2008/02/23/developing-oauth-clients-in-ruby">Developing OAuth clients in Ruby </a></li>
	<li><a href="http://stakeventures.com/articles/2007/11/26/how-to-turn-your-rails-site-into-an-oauth-provider">How to turn your rails site into an OAuth Provider </a></li>
	<li><a href="http://www.infoq.com/cn/news/2008/06/oauth_spring">OAuth不断获得动力 </a></li>
	<li><a href="http://github.com/pelle/oauth-plugin/tree/master"><span id="repository_description">Rails plugin for OAuth</span></a></li>
	<li><a href="http://github.com/pelle/oauth/tree/master"><span id="repository_description">OAuth implementation for Ruby</span></a></li>
	<li><span id="repository_description"><a href="http://www.douban.com/service/apidoc/auth">豆瓣 API 认证授权说明</a></span></li>
	<li><span id="repository_description"><a href="http://assets.en.oreilly.com/1/event/3/The%20%22How%22%20of%20OAuth%20Presentation%201.ppt">The How of OAuth --这个PPT挺不错</a>
</span></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>最近在准备一些API设计开发工作，初步了解了下<a href="http://rubyforge.org/projects/oauth/">oauth</a>，OAuth是由Blaine Cook、Chris Messina、Larry Halff 及David Recordon共同发起的，目的在于为API访问授权提供一个开放的标准。<br />
oauth目前看来进展比较顺利，可以看到其有<a href="http://code.google.com/p/oauth/">主流语言的lib</a>（Java、C#、Objective-C、Perl、PHP及Ruby语言），目前支持oauth的API有twitter，douban等应用。<br />
<br />
<a href="http://oauth.net/">OAuth</a> is the great new standard allowing your users to use your application to talk to their accounts on other applications. I won&rsquo;t go more into it here as it&rsquo;s pretty well covered on the <a href="http://oauth.net/">OAuth</a> site.<br />
<strong><br />
OAuth&rsquo;s Goal</strong><br />
Website X can access your protected data at API Y</p>
<ul>
    <li>All without sharing your password off-site</li>
    <li>especially when there isn&rsquo;t one like with OpenID</li>
</ul>
<p>其基本流程为：</p>
<ol>
    <li>Register your consumer application with the OAuth compliant service to receive your Consumer Credentials (This is only done once)</li>
    <li>You initiate the OAuth Token exchange process for a user by requesting a <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> from the Service</li>
    <li>You store the <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> in your database or in the users session object</li>
    <li>You redirect your user to the service providers authorize_url with the RequestToken&rsquo;s key appended</li>
    <li>Your user is asked by the service provider to authorize your RequestToken</li>
    <li>Your user clicks yes and is redirected to your CallBack <span class="caps">URL</span></li>
    <li>Your callback action exchanges the <a href="http://code.google.com/p/oauth-plugin/wiki/RequestToken">RequestToken</a> for an <a href="http://code.google.com/p/oauth-plugin/wiki/AccessToken">AccessToken</a></li>
    <li>Now you can access your users data by performing http requests signed by your consumer credentials and the AccessToken.</li>
    <li>????</li>
    <li><span class="caps">PROFIT</span>!!!</li>
</ol>
<p>如果你想了解，请参考如下文档，如果你有经验，请分享，谢谢！<br />
<strong><br />
参考文档：</strong></p>
<ul>
    <li><a href="http://stakeventures.com/articles/2008/02/23/developing-oauth-clients-in-ruby">Developing OAuth clients in Ruby </a></li>
    <li><a href="http://stakeventures.com/articles/2007/11/26/how-to-turn-your-rails-site-into-an-oauth-provider">How to turn your rails site into an OAuth Provider&nbsp;</a></li>
    <li><a href="http://www.infoq.com/cn/news/2008/06/oauth_spring">OAuth不断获得动力&nbsp;</a></li>
    <li><a href="http://github.com/pelle/oauth-plugin/tree/master"><span id="repository_description" rel="/pelle/oauth-plugin/edit/update" class="">Rails plugin for OAuth</span></a></li>
    <li><a href="http://github.com/pelle/oauth/tree/master"><span id="repository_description" rel="/pelle/oauth/edit/update" class="">OAuth implementation for Ruby</span></a></li>
    <li><span id="repository_description" rel="/pelle/oauth/edit/update" class=""><a href="http://www.douban.com/service/apidoc/auth">豆瓣 API 认证授权说明</a></span></li>
    <li><span id="repository_description" rel="/pelle/oauth/edit/update" class=""><a href="http://assets.en.oreilly.com/1/event/3/The%20%22How%22%20of%20OAuth%20Presentation%201.ppt">The How of OAuth --这个PPT挺不错</a><br />
    </span></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2008-10-16 00:28:21</wp:post_date>
		<wp:post_date_gmt>2008-10-16 00:28:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%9d%e8%af%86oauth-%e4%b8%baapi%e8%ae%bf%e9%97%ae%e6%8e%88%e6%9d%83%e6%8f%90%e4%be%9b%e4%b8%80%e4%b8%aa%e5%bc%80%e6%94%be%e7%9a%84%e6%a0%87%e5%87%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="oauth"><![CDATA[oauth]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>340</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.128.243</wp:comment_author_IP>
			<wp:comment_date>2008-10-16 00:41:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How the RequestToken api works
http://code.google.com/p/oauth-plugin/wiki/RequestToken]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>341</wp:comment_id>
			<wp:comment_author><![CDATA[迹天涯]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.122.177.68</wp:comment_author_IP>
			<wp:comment_date>2008-10-18 16:19:26</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里有一篇PPT，说的比较详细。
http://www.slideshare.net/choonkeat/oauth4-and-oauth4r]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>342</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.181.250</wp:comment_author_IP>
			<wp:comment_date>2008-10-20 00:34:48</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[使用 Rails 构建 Flickr 应用
http://www.netbeans.org/kb/60/ruby/flickr-on-rails_zh_CN.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>343</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.181.250</wp:comment_author_IP>
			<wp:comment_date>2008-10-20 00:39:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[参考flickr的方式
http://www.flickr.com/services/api/misc.userauth.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>344</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.237.253.33</wp:comment_author_IP>
			<wp:comment_date>2008-10-23 10:24:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's New in Edge Rails: New Http Authentication Plugin - And a Plea to Contribute
http://www.ryandaigle.com/articles/2006/12/04/whats-new-in-edge-rails-new-http-authentication-plugin-and-a-plea-to-contribute
为API添加HTTP验证
http://book.51cto.com/art/200810/91730.htm]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>345</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.184.19</wp:comment_author_IP>
			<wp:comment_date>2008-10-27 00:42:18</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RESTful OAuth认证全过程
http://blog.myspace.cn/1303969295/archive/2008/04/29/400934419.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>346</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.184.19</wp:comment_author_IP>
			<wp:comment_date>2008-10-27 00:44:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[# 以下是一些 OAuth 名詞定義：
# User：即一般使用者。
# Consumer：第三方應用服務。
# Service Provider：服務供應者，像 Google 和 Yahoo 之類。
# Consumer Key/Secret：Service Provider 提供給 Consumer 做為簽證使用。
# Request Token：向 Service Provider 請求認證 Consumer 和向使用者要求授權的一組代號。
# Access Token：經過認證授權後，實際用來存取 Service Provider 服務的一組代號。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>347</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.184.19</wp:comment_author_IP>
			<wp:comment_date>2008-10-27 00:54:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[了解OAuth
http://thebigforest.cn/archives/67]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>348</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.184.19</wp:comment_author_IP>
			<wp:comment_date>2008-10-27 00:59:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OAuth, HttpClient, Android 1.0 https://groups.google.com/group/android-developers/browse_thread/thread/221cef718b070b45http://code.google.com/p/oauth/issues/detail?id=50]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>349</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.18.67</wp:comment_author_IP>
			<wp:comment_date>2009-04-20 01:55:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Step1帐户登录系统(3.使用Google的Auth Sub登录网站)：
http://www.cnblogs.com/step1/archive/2008/11/25/1340947.html
http://www.dotblogs.com.tw/mis2000lab/archive/2009/03/10/7430.aspx
http://www.dotblogs.com.tw/mis2000lab/archive/2009/03/10/7432.aspx
http://www.dotblogs.com.tw/mis2000lab/archive/2009/03/11/7439.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>一个终点会是另外一个新起点</title>
		<link>http://www.iceskysl.com/?p=420</link>
		<pubDate>Mon, 20 Oct 2008 11:27:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=420</guid>
		<description></description>
		<content:encoded><![CDATA[我最终还是离职了，从考虑到最终决定，花了好几个月的时间，期间很多事情、很多人给我很深的影响。
清晰的记得2006年秋天，我拿到<strong>Aspire</strong>的offer时的欢呼雀跃，还没出酒店就开始电话比尔告诉我被录用了，那个时候，哪里想到会离职，时间真快，可以改变很多东西。

很多人需要感谢，我Aspire的同事，朋友，在我的第一份工作中给我莫大的鼓励和支持、帮助，关心。能很多程度的包容、理解和鼓励。好多人、好多事，都历历在目。

<span style="color: #ff0000;">工作是老板的，朋友是自己的</span>，我在Aspire匆匆走过，却没有留下什么，真有愧意。有幸认识很多很好的同事、朋友，非常舍不得。

已经没有回头。一个终点会是另外一个新起点！

准备启航，请多给我点鼓励和祝福，谢谢！]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>我最终还是离职了，从考虑到最终决定，花了好几个月的时间，期间很多事情、很多人给我很深的影响。<br />
清晰的记得2006年秋天，我拿到<strong>Aspire</strong>的offer时的欢呼雀跃，还没出酒店就开始电话比尔告诉我被录用了，那个时候，哪里想到会离职，时间真快，可以改变很多东西。</p>
<p>很多人需要感谢，我Aspire的同事，朋友，在我的第一份工作中给我莫大的鼓励和支持、帮助，关心。能很多程度的包容、理解和鼓励。好多人、好多事，都历历在目。</p>
<p><font color="#ff0000">工作是老板的，朋友是自己的</font>，我在Aspire匆匆走过，却没有留下什么，真有愧意。有幸认识很多很好的同事、朋友，非常舍不得。</p>
<p>已经没有回头。一个终点会是另外一个新起点！</p>
<p>准备启航，请多给我点鼓励和祝福，谢谢！</p>]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date>2008-10-20 11:27:06</wp:post_date>
		<wp:post_date_gmt>2008-10-20 11:27:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e4%b8%aa%e7%bb%88%e7%82%b9%e4%bc%9a%e6%98%af%e5%8f%a6%e5%a4%96%e4%b8%80%e4%b8%aa%e6%96%b0%e8%b5%b7%e7%82%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>350</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.226</wp:comment_author_IP>
			<wp:comment_date>2008-10-20 12:26:28</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[开始新的生活吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>351</wp:comment_id>
			<wp:comment_author><![CDATA[maninred]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85.com</wp:comment_author_url>
			<wp:comment_author_IP>119.146.68.17</wp:comment_author_IP>
			<wp:comment_date>2008-10-20 13:19:14</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[祝你好运！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>352</wp:comment_id>
			<wp:comment_author><![CDATA[leon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.89.61.80</wp:comment_author_IP>
			<wp:comment_date>2008-10-20 14:45:59</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good Luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>晒shell历史，看看哪个使用率最高！</title>
		<link>http://www.iceskysl.com/?p=421</link>
		<pubDate>Mon, 20 Oct 2008 15:37:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=421</guid>
		<description></description>
		<content:encoded><![CDATA[晒历史的脚本：
[ice@bj-web12]$ history | awk {'print $2'} | sort | uniq -c | sort -k1 -rn | head
330 ll
214 cd
72 cat
38 exit
29 more
27 tail
20 vi
17 cp
16 ps
15 down
记录下而已～]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>晒历史的脚本：<br />
[ice@bj-web12]$ history | awk {'print $2'} | sort | uniq -c | sort -k1 -rn | head <br />
&nbsp;&nbsp;&nbsp; 330 ll<br />
&nbsp;&nbsp;&nbsp; 214 cd<br />
&nbsp;&nbsp;&nbsp;&nbsp; 72 cat<br />
&nbsp;&nbsp;&nbsp;&nbsp; 38 exit<br />
&nbsp;&nbsp;&nbsp;&nbsp; 29 more<br />
&nbsp;&nbsp;&nbsp;&nbsp; 27 tail<br />
&nbsp;&nbsp;&nbsp;&nbsp; 20 vi<br />
&nbsp;&nbsp;&nbsp;&nbsp; 17 cp<br />
&nbsp;&nbsp;&nbsp;&nbsp; 16 ps<br />
&nbsp;&nbsp;&nbsp;&nbsp; 15 down<br />
记录下而已～</p>]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2008-10-20 15:37:36</wp:post_date>
		<wp:post_date_gmt>2008-10-20 15:37:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%99%92shell%e5%8e%86%e5%8f%b2%ef%bc%8c%e7%9c%8b%e7%9c%8b%e5%93%aa%e4%b8%aa%e4%bd%bf%e7%94%a8%e7%8e%87%e6%9c%80%e9%ab%98%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="shell"><![CDATA[shell]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>新起点，来到北京</title>
		<link>http://www.iceskysl.com/?p=422</link>
		<pubDate>Wed, 22 Oct 2008 00:29:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[早上9：10分飞机，深圳-北京，一大早起来，托起行李就去机场了，一路都很顺利，只是登机后出了些状况，一直不起飞，被告知“航空管制”，一问原因，回答竟然是“XX地方在搞军事演习！”寒，这个理由真囧。

9：10分的飞机一直到10：40才起飞，还好飞起来以后没啥耽误，2小时50分钟到达北京机场，领了行李，按照之前看的路线去找“机场快线”，25元，不贵，比打车便宜多了，很快就到三元桥，比打车快很多。

车上接到<strong>蔡望琴</strong>同学的电话，开始没反应过来，就觉得这个名字好熟悉，呵呵，真是惊讶！怎么会有人知道我刚到北京呢？后来知晓是我在twitter上发的消息被<strong>raecoo</strong>看到了，呵呵。

然后拖着行李（一个箱子，一个背包，一本电脑包，还有一个袋子装了一双球鞋和运动鞋）换乘10号线到国贸，找到SOHO小区，找到落脚点。

一路下来还算顺利。

晚上同事带去吃饺子，北京的饺子真大呀，比深圳的三个还大，赞。

接下来就要尽快进入状态了，还有几个朋友要见，还有些事情要处理，终于来到北京了，一个新起点。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早上9：10分飞机，深圳-北京，一大早起来，托起行李就去机场了，一路都很顺利，只是登机后出了些状况，一直不起飞，被告知&ldquo;航空管制&rdquo;，一问原因，回答竟然是&ldquo;XX地方在搞军事演习！&rdquo;寒，这个理由真囧。</p>
<p>9：10分的飞机一直到10：40才起飞，还好飞起来以后没啥耽误，2小时50分钟到达北京机场，领了行李，按照之前看的路线去找&ldquo;机场快线&rdquo;，25元，不贵，比打车便宜多了，很快就到三元桥，比打车快很多。</p>
<p>车上接到<strong>蔡望琴</strong>同学的电话，开始没反应过来，就觉得这个名字好熟悉，呵呵，真实惊讶！怎么会有人知道我刚到北京呢？后来知晓是我在twitter上发的消息被<strong>raecoo</strong>看到了，呵呵。</p>
<p>然后拖着行李（一个箱子，一个背包，一本电脑包，还有一个袋子装了一双球鞋和运动鞋）换乘10号线到国贸，找到SOHO小区，找到落脚点。</p>
<p>一路下来还算顺利。</p>
<p>晚上同事带去吃饺子，北京的饺子真大呀，比深圳的三个还大，赞。</p>
<p>接下来就要尽快进入状态了，还有几个朋友要见，还有些事情要处理，终于来到北京了，一个新起点。</p>]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2008-10-22 00:29:40</wp:post_date>
		<wp:post_date_gmt>2008-10-22 00:29:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e8%b5%b7%e7%82%b9%ef%bc%8c%e6%9d%a5%e5%88%b0%e5%8c%97%e4%ba%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>353</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.226</wp:comment_author_IP>
			<wp:comment_date>2008-10-22 07:35:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好啊，祝贺。好好发展噢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>354</wp:comment_id>
			<wp:comment_author><![CDATA[leon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leondu@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>125.89.61.80</wp:comment_author_IP>
			<wp:comment_date>2008-10-22 15:56:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[蔡望琴=蔡望勤

祝在北京愉快！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>355</wp:comment_id>
			<wp:comment_author><![CDATA[snow]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.snowonrails.com</wp:comment_author_url>
			<wp:comment_author_IP>220.249.41.131</wp:comment_author_IP>
			<wp:comment_date>2008-10-23 11:36:10</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[北京欢迎你！！！
以后多参加北京的活动，祝好运！
问一声去的哪家公司？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>356</wp:comment_id>
			<wp:comment_author><![CDATA[mifan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.bujiande.com</wp:comment_author_url>
			<wp:comment_author_IP>202.108.130.138</wp:comment_author_IP>
			<wp:comment_date>2008-10-23 16:35:38</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[welcome to BJ , welcome to CN :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>357</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.237.253.33</wp:comment_author_IP>
			<wp:comment_date>2008-10-23 19:35:20</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to snow：
有啥活动记得吱一声；

刚刚报道，等稳定下来再告诉你我在哪？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>358</wp:comment_id>
			<wp:comment_author><![CDATA[x]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.114.147.25</wp:comment_author_IP>
			<wp:comment_date>2009-04-23 16:43:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[来北京不告诉我一声，上次XX也末有去，遗憾呀]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在crontab中调用rake task定时跑job</title>
		<link>http://www.iceskysl.com/?p=423</link>
		<pubDate>Sat, 25 Oct 2008 00:51:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=423</guid>
		<description></description>
		<content:encoded><![CDATA[在Rails中可以使用很大插件来实现后台定时JOB，但是最环保的应该是使用crontab来调用rake，也很简单，基本上分成如下几步：

in the root of my app i have notify_answerers.sh
<pre>#!/bin/shexport PATH='/usr/local/ruby/bin':$PATH  cd /opt/dev/Monier/usr/local/ruby/bin/rake  nginx:fetch_status  RAILS_ENV=production</pre>
in myapp/lib/tasks i have myapp.rake
<pre>namespace :nginx do  desc "Notify answerers of new questions"  task :fetch_status =&gt; :environment do    Nginx.find(:all).each do |nginx|      puts "nginx=#{nginx.name}"      nginx.do_fetch_nginx_status_job      nginx.update_attribute(:updated_at,Time.now)    end  endend</pre>
In my cron file i have:
<pre>*/2 * * * * /bin/sh /opt/dev/Monier/lib/crontabs/fetch_nginx_status.sh</pre>
(use "crotab -e" on the server to edit this file)]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在Rails中可以使用很大插件来实现后台定时JOB，但是最环保的应该是使用crontab来调用rake，也很简单，基本上分成如下几步：</p>
<p>in the root of my app i have notify_answerers.sh</p>
<pre>#!/bin/sh<br />export PATH='/usr/local/ruby/bin':$PATH  <br />cd /opt/dev/Monier<br />/usr/local/ruby/bin/rake  nginx:fetch_status  RAILS_ENV=production</pre>
<p>in myapp/lib/tasks i have myapp.rake</p>
<pre>namespace :nginx do<br />  desc &quot;Notify answerers of new questions&quot;<br />  task :fetch_status =&gt; :environment do<br />    Nginx.find(:all).each do |nginx|<br />      puts &quot;nginx=#{nginx.name}&quot;<br />      nginx.do_fetch_nginx_status_job<br />      nginx.update_attribute(:updated_at,Time.now)<br />    end<br />  end<br />end</pre>
<p>In my cron file i have:</p>
<pre>*/2 * * * * /bin/sh /opt/dev/Monier/lib/crontabs/fetch_nginx_status.sh</pre>
<p>(use &quot;crotab -e&quot; on the server to edit this file)</p>]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date>2008-10-25 00:51:45</wp:post_date>
		<wp:post_date_gmt>2008-10-25 00:51:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8crontab%e4%b8%ad%e8%b0%83%e7%94%a8rake-task%e5%ae%9a%e6%97%b6%e8%b7%91job</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>359</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.187.12</wp:comment_author_IP>
			<wp:comment_date>2008-10-25 01:05:07</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[参考文档：
http://www.hostingrails.com/forums/rails_coding_thread/342
http://www.javaeye.com/topic/182506]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails 2.2快来了，期待</title>
		<link>http://www.iceskysl.com/?p=424</link>
		<pubDate>Sat, 25 Oct 2008 01:57:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=424</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Rails 2.2中将会有大量值得期待的功能，今天看到其weblog上发布&ldquo;<a href="http://weblog.rubyonrails.org/2008/10/24/rails-2-2-rc1-i18n-thread-safety-docs-etag-last-modified">Rails 2.2 RC1: i18n, thread safety, docs, etag/last-modified, JRuby/1.9 compatibility</a>&rdquo;,从其标题可以看到，其包含了 i18n,thread safety,docs,etag,JRuby/1.9 compatibility等值得期待的功能。</p>
<p>另外看到&ldquo;<a href="http://guides.rubyonrails.org/2_2_release_notes.html">Ruby on Rails 2.2 Release Notes</a>&rdquo;，其比较详细了列举了2.2版本中的新特性，非常棒！</p>
<p>马上就要来了，继续期待，期待其线程安全，连接池等特性到底有多牛。</p>
<p>等不及的可以先下载下来试试了：</p>
<p><code>gem install rails -s http://gems.rubyonrails.org -v 2.2.0</code></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails 2.2中将会有大量值得期待的功能，今天看到其weblog上发布&ldquo;<a href="http://weblog.rubyonrails.org/2008/10/24/rails-2-2-rc1-i18n-thread-safety-docs-etag-last-modified">Rails 2.2 RC1: i18n, thread safety, docs, etag/last-modified, JRuby/1.9 compatibility</a>&rdquo;,从其标题可以看到，其包含了 i18n,thread safety,docs,etag,JRuby/1.9 compatibility等值得期待的功能。</p>
<p>另外看到&ldquo;<a href="http://guides.rubyonrails.org/2_2_release_notes.html">Ruby on Rails 2.2 Release Notes</a>&rdquo;，其比较详细了列举了2.2版本中的新特性，非常棒！</p>
<p>马上就要来了，继续期待，期待其线程安全，连接池等特性到底有多牛。</p>
<p>等不及的可以先下载下来试试了：</p>
<p><code>gem install rails -s http://gems.rubyonrails.org -v 2.2.0</code></p>]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2008-10-25 01:57:35</wp:post_date>
		<wp:post_date_gmt>2008-10-25 01:57:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-2-2%e5%bf%ab%e6%9d%a5%e4%ba%86%ef%bc%8c%e6%9c%9f%e5%be%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>360</wp:comment_id>
			<wp:comment_author><![CDATA[日志]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.wuliankui.com</wp:comment_author_url>
			<wp:comment_author_IP>218.67.171.104</wp:comment_author_IP>
			<wp:comment_date>2008-10-25 21:29:01</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[博主，你好，希望和贵博客做个链接，我的博客是：
日志：http://www.wuliankui.com
PR=3
主要是介绍如何利用网络赚钱，还有PHP等相关知识，以及个人日志
如果可以的话，请回复一下，我会回访的，谢谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>361</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.219.96.25</wp:comment_author_IP>
			<wp:comment_date>2008-10-25 23:01:35</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我的blog不涉及赚钱，只是很狭小的小圈子，对你没啥用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>362</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.184.19</wp:comment_author_IP>
			<wp:comment_date>2008-10-26 22:28:32</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[JAVAEYE上简单翻译了下：
http://www.javaeye.com/news/3936]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>363</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.144.34.41</wp:comment_author_IP>
			<wp:comment_date>2008-10-28 10:07:02</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's New in Edge Rails: Rails 2.2 Released - Summary of Features  4
http://ryandaigle.com/articles/2008/10/25/what-s-new-in-edge-rails-rails-2-2-released-summary-of-features]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>364</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 02:02:23</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[观后感：
http://antoniocangiano.com/2008/10/25/review-of-the-first-two-envycasts/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在attachment_fu中通过URL上传文件</title>
		<link>http://www.iceskysl.com/?p=425</link>
		<pubDate>Sat, 25 Oct 2008 23:34:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=425</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://github.com/technoweenie/attachment_fu/wikis">attachment_fu</a>很多人都使用过吧，使用其上传文件非常方便（<a href="http://almosteffortless.com/2007/03/25/working-with-attachment_fu/">super easy</a>），但是有没有想过通过URL来上传文件呢，比如网上的一张图片，一首歌曲等。</p>
<p>按照平时的思路，我们需要下载到本地，保存到硬盘上，打开上传页面，浏览硬盘找到要上传的文件，点击上传，看，多麻烦，是吧！如果可以实现通过URL上传，那么其过程就异常简单了，输入URL，点击上传即可。</p>
<p>已经有人提供了思路，也非常简单，多加个url属性即可，C的代码不用修改，举例如下：</p>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead"># app/models/upload.rb</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#&nbsp;app/models/upload.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;Upload&nbsp;&lt;&nbsp;ActiveRecord::Base&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;...normal&nbsp;attachment_fu&nbsp;code&nbsp;(has_attachment,&nbsp;etc)...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;allow&nbsp;uploads&nbsp;via&nbsp;URL</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;require&nbsp;<span class="string">'open-uri'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;attr_reader&nbsp;<span class="symbol">:url</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;url=(uri)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;</span><span class="keyword">nil</span><span>&nbsp;</span><span class="keyword">if</span><span>&nbsp;uri.blank?&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;io&nbsp;=&nbsp;(open(URI.parse(uri))&nbsp;<span class="keyword">rescue</span><span>&nbsp;</span><span class="keyword">return</span><span>&nbsp;</span><span class="keyword">nil</span><span>)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;(<span class="keyword">class</span><span>&nbsp;&lt;&lt;&nbsp;io;&nbsp;</span><span class="keyword">self</span><span>;&nbsp;</span><span class="keyword">end</span><span>;).class_eval&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">define_method</span><span>(</span><span class="symbol">:original_filename</span><span>)&nbsp;{&nbsp;base_uri.path.split(</span><span class="string">'/'</span><span>).last&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">self</span><span>.uploaded_data&nbsp;=&nbsp;io&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#&nbsp;app/controllers/uploads_controller.rb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">class</span><span>&nbsp;UploadsController&nbsp;&lt;&nbsp;ApplicationController&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="comment">#&nbsp;avoid&nbsp;raising&nbsp;exceptions&nbsp;for&nbsp;common&nbsp;errors&nbsp;(e.g.&nbsp;file&nbsp;not&nbsp;found)</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;rescue_from&nbsp;Errno::ENOENT,&nbsp;<span class="symbol">:with</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:url_upload_not_found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;rescue_from&nbsp;Errno::ETIMEDOUT,&nbsp;<span class="symbol">:with</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:url_upload_not_found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;rescue_from&nbsp;OpenURI::HTTPError,&nbsp;<span class="symbol">:with</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:url_upload_not_found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;rescue_from&nbsp;Timeout::Error,&nbsp;<span class="symbol">:with</span><span>&nbsp;=&gt;&nbsp;</span><span class="symbol">:url_upload_not_found</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;</span><span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@upload</span><span>&nbsp;=&nbsp;Upload.</span><span class="keyword">new</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;create&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="variable">@upload</span><span>&nbsp;=&nbsp;current_user.uploads.build(params[</span><span class="symbol">:upload</span><span>])&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;</span><span class="variable">@upload</span><span>.save&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirect_to&nbsp;files_path&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render&nbsp;<span class="symbol">:action</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;new&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;url_upload_not_found&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;flash[<span class="symbol">:notice</span><span>]&nbsp;=&nbsp;</span><span class="string">&quot;Sorry,&nbsp;the&nbsp;URL&nbsp;you&nbsp;provided&nbsp;was&nbsp;not&nbsp;valid.&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;redirect_to&nbsp;new_upload_path&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="comment">#&nbsp;app/views/uploads/new.html.erb</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&lt;%=&nbsp;error_messages_for&nbsp;<span class="symbol">:upload</span><span>&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&lt;%&nbsp;form_for&nbsp;<span class="variable">@upload</span><span>,&nbsp;</span><span class="symbol">:html</span><span>&nbsp;=&gt;&nbsp;{&nbsp;</span><span class="symbol">:multipart</span><span>&nbsp;=&gt;&nbsp;</span><span class="keyword">true</span><span>&nbsp;}&nbsp;</span><span class="keyword">do</span><span>&nbsp;|f|&nbsp;-%&gt;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&lt;%=&nbsp;f.file_field&nbsp;<span class="symbol">:uploaded_data</span><span>&nbsp;</span><span class="comment">#&nbsp;normal&nbsp;upload,&nbsp;or...&nbsp;%&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&lt;%=&nbsp;f.text_field&nbsp;<span class="symbol">:url</span><span>&nbsp;</span><span class="comment">#&nbsp;upload&nbsp;via&nbsp;url&nbsp;%&gt;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&lt;%=&nbsp;submit_tag&nbsp;<span class="string">&quot;Upload&quot;</span><span>,&nbsp;</span><span class="symbol">:disable_with</span><span>&nbsp;=&gt;&nbsp;</span><span class="string">&quot;Upload&quot;</span><span>&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&lt;%&nbsp;<span class="keyword">end</span><span>&nbsp;%&gt;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>发现这个人还真勤快，写了代码<a href="http://github.com/trevorturk/el-dorado/tree/master">El Dorado</a>.还做了视频演示；</p>
<p>&nbsp;</p>
<p><object width="400" height="300">	<param name="allowfullscreen" value="true" />	<param name="allowscriptaccess" value="always" />	<param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=2060363&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" />	<embed src="http://vimeo.com/moogaloop.swf?clip_id=2060363&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="300"></embed></object><br />
<a href="http://vimeo.com/2060363?pg=embed&amp;sec=2060363">Easy Upload via URL with attachment_fu</a> from <a href="http://vimeo.com/user850172?pg=embed&amp;sec=2060363">Trevor Turk</a> on <a href="http://vimeo.com?pg=embed&amp;sec=2060363">Vimeo</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2008-10-25 23:34:50</wp:post_date>
		<wp:post_date_gmt>2008-10-25 23:34:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8attachment_fu%e4%b8%ad%e9%80%9a%e8%bf%87url%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>365</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.219.96.25</wp:comment_author_IP>
			<wp:comment_date>2008-10-25 23:36:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[参考了这篇文档:
http://almosteffortless.com/2008/10/24/easy-upload-via-url-with-attachment_fu/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MYSQL的MERGE存储引擎</title>
		<link>http://www.iceskysl.com/?p=426</link>
		<pubDate>Tue, 04 Nov 2008 18:31:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=426</guid>
		<description></description>
		<content:encoded><![CDATA[<p>MYSQL的引擎不是一般的多，这次说到的是MERGE，这个引擎有很多特殊的地方：</p>
<p>MERGE引擎类型允许你把许多结构相同的表合并为一个表。然后，你可以执行查询，从多个表返回的结果就像从一个表返回的结果一样。每一个合并的表必须有同样的表定义。<br />
<br />
MERGE存储引擎在下面这种使用场合会最为有用，如果需要把日志纪录不停的录入MySQL数据库，并且每天、每周或者每个月都创建一个单一的表，而且要制作来自多个表的合计查询，MERGE表这时会非常有效。然而，这项功能有局限性。你只能合并MyISAM表而且必须严格遵守相同的表定义的限制。虽然这看起来好像是一个大问题，但是，如果你使用另外一种表类型(例如InnoDB)，这种合并可能就不需要了。</p>
<p>其创建方法如下：</p>
<p>他将多个表在逻辑上当作一个表来查询。他建立后有两个文件， <br />
.frm 表结构定义 <br />
.mrg union表的名字清单 <br />
<br />
两个基本表:  <br />
CREATE TABLE TEST_MERGE_1( <br />
ID INT(5) NOT NULL, <br />
VALUE VARCHAR(100)  NOT NULL, <br />
PRIMARY KEY(ID) <br />
) ENGINE=MyISAM DEFAULT CHARSET=utf8 <br />
CREATE TABLE TEST_MERGE_2( <br />
ID INT(5)  NOT NULL, <br />
VALUE VARCHAR(100) NOT NULL, <br />
PRIMARY KEY(ID) <br />
)  ENGINE=MyISAM DEFAULT CHARSET=utf8 <br />
<br />
MERGE表的建立： <br />
CREATE TABLE TEST_MERGE( <br />
ID INT(5) NOT NULL,  <br />
VALUE VARCHAR(100) NOT NULL, <br />
PRIMARY KEY(ID) <br />
) ENGINE=MRG_MyISAM DEFAULT CHARSET=utf8 INSERT_METHOD=LAST UNION=(TEST_MERGE_1,TEST_MERGE_2) ;</p>
<p><br />
1.  此表类似于SQL中的union机制。 <br />
2. 此表结构必须与基本表完全一致，包括列名、顺序。UNION表必须同属一个DATABASE。 <br />
3.  基本表类型必须是MyISAM。 <br />
4. 可以通过修改.mrg文件来修改MERGE表，每个基本表的名字占一行。注意：修改后要通过FLUSH  TABLES刷新表缓存。 <br />
5. 对基本表的更改可以直接反映在此表上。 <br />
6. INSERT_METHOD的取值可以是： 0 不允许插入 FIRST  插入到UNION中的第一个表 LAST 插入到UNION中的最后一个表。(4.0之后可用) <br />
7.  定义在它上面的约束没有任何作用，约束是由基本表控制的，例如两个基本表中存在着同样的一个Key值，那么在MERGE表中会有两个一样的Key值。</p>
<p>&nbsp;</p>
<p>参考资料：</p>
<p>http://biz.chinabyte.com/220/2230720.shtml</p>
<p>http://info.codepub.com/2008/09/info-21832.html</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>MYSQL的引擎不是一般的多，这次说到的是MERGE，这个引擎有很多特殊的地方：</p>
<p>MERGE引擎类型允许你把许多结构相同的表合并为一个表。然后，你可以执行查询，从多个表返回的结果就像从一个表返回的结果一样。每一个合并的表必须有同样的表定义。<br />
<br />
MERGE存储引擎在下面这种使用场合会最为有用，如果需要把日志纪录不停的录入MySQL数据库，并且每天、每周或者每个月都创建一个单一的表，而且要 制作来自多个表的合计查询，MERGE表这时会非常有效。然而，这项功能有局限性。你只能合并MyISAM表而且必须严格遵守相同的表定义的限制。虽然这 看起来好像是一个大问题，但是，如果你使用另外一种表类型(例如InnoDB)，这种合并可能就不需要了。</p>
<p>其创建方法如下：</p>
<p>他将多个表在逻辑上当作一个表来查询。他建立后有两个文件， <br />
.frm 表结构定义 <br />
.mrg union表的名字清单 <br />
<br />
<strong>两个基本表:  </strong><br />
CREATE TABLE TEST_MERGE_1( <br />
ID INT(5) NOT NULL, <br />
VALUE VARCHAR(100)  NOT NULL, <br />
PRIMARY KEY(ID) <br />
) ENGINE=MyISAM DEFAULT CHARSET=utf8 <br />
CREATE TABLE TEST_MERGE_2( <br />
ID INT(5)  NOT NULL, <br />
VALUE VARCHAR(100) NOT NULL, <br />
PRIMARY KEY(ID) <br />
)  ENGINE=MyISAM DEFAULT CHARSET=utf8 <br />
<br />
MERGE表的建立： <br />
CREATE TABLE TEST_MERGE( <br />
ID INT(5) NOT NULL,  <br />
VALUE VARCHAR(100) NOT NULL, <br />
PRIMARY KEY(ID) <br />
) ENGINE=MRG_MyISAM DEFAULT CHARSET=utf8 INSERT_METHOD=LAST UNION=(TEST_MERGE_1,TEST_MERGE_2) ;</p>
<p><br />
1.  此表类似于SQL中的union机制。 <br />
2. 此表结构必须与基本表完全一致，包括列名、顺序。UNION表必须同属一个DATABASE。 <br />
3.  基本表类型必须是MyISAM。 <br />
4. 可以通过修改.mrg文件来修改MERGE表，每个基本表的名字占一行。注意：修改后要通过FLUSH  TABLES刷新表缓存。 <br />
5. 对基本表的更改可以直接反映在此表上。 <br />
6. INSERT_METHOD的取值可以是： 0 不允许插入 FIRST  插入到UNION中的第一个表 LAST 插入到UNION中的最后一个表。(4.0之后可用) <br />
7.  定义在它上面的约束没有任何作用，约束是由基本表控制的，例如两个基本表中存在着同样的一个Key值，那么在MERGE表中会有两个一样的Key值。</p>
<p>&nbsp;</p>
<p>参考资料：</p>
<p>http://biz.chinabyte.com/220/2230720.shtml</p>
<p>http://info.codepub.com/2008/09/info-21832.html</p>]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2008-11-04 18:31:58</wp:post_date>
		<wp:post_date_gmt>2008-11-04 18:31:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e7%9a%84merge%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Merb 1.0 Released</title>
		<link>http://www.iceskysl.com/?p=427</link>
		<pubDate>Sun, 09 Nov 2008 12:17:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=427</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2008/11/merb.png" alt="" /><br />
<a href="http://www.merbivore.com/">merb</a>的1.0终于出来了，等的实在不易，1.0版的merb已经足够完善了，可以拿来做一些production的东西了，例如以前说到的代替rails做上传文件等等。<br />
rubyinsite已经发了一篇参考资源文件，感兴趣的可以过去瞧瞧，地址如下：<a href="http://www.rubyinside.com/44-merb-resources-1318.html">Merb 1.0 Released So Here&rsquo;s 44 Links and Resources To Get You Going</a>。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2008/11/merb.png" alt="" /><br />
<a href="http://www.merbivore.com/">merb</a>的1.0终于出来了，等的实在不易，1.0版的merb已经足够完善了，可以拿来做一些production的东西了，例如以前说到的代替rails做上传文件等等。<br />
rubyinsite已经发了一篇参考资源文件，感兴趣的可以过去瞧瞧，地址如下：<a href="http://www.rubyinside.com/44-merb-resources-1318.html">Merb 1.0 Released So Here&rsquo;s 44 Links and Resources To Get You Going</a>。</p>]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2008-11-09 12:17:45</wp:post_date>
		<wp:post_date_gmt>2008-11-09 12:17:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>merb-1-0-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>366</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-09 12:19:04</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[安装marb1.0的时候要求gem的版本大于1.3.你可以参考如下这个帖子update你的gem。
http://www.ruby-forum.com/topic/166853#732427##732427
你也可以直接下gem的tar文件下来，然后再ruby setup.rb也可以。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>367</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-09 12:19:57</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果你不确定自己的gem的版本，可以使用gem -v查看版本。
如果你想查看gem更详细的信息，可以使用gem env，其结果类似如下：
C:\Documents and Settings\Administrator>gem env
RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.1
  - RUBY VERSION: 1.8.6 (2007-09-24 patchlevel 111) [i386-mswin32]
  - INSTALLATION DIRECTORY: D:/soft/ruby/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: D:/soft/ruby/bin/ruby.exe
  - EXECUTABLE DIRECTORY: D:/soft/ruby/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-mswin32-60
  - GEM PATHS:
     - D:/soft/ruby/lib/ruby/gems/1.8
     - C:/Documents and Settings/Administrator/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources => true
     - :verbose => true
     - :benchmark => false
     - :backtrace => false
     - :bulk_threshold => 1000
     - :sources => ["http://gems.rubyforge.org/", "http://gems.github.com", "htt
p://gems.github.com/"]
  - REMOTE SOURCES:
     - http://gems.rubyforge.org/
     - http://gems.github.com
     - http://gems.github.com/

C:\Documents and Settings\Administrator>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>升级ubuntu8.10未果</title>
		<link>http://www.iceskysl.com/?p=428</link>
		<pubDate>Mon, 10 Nov 2008 01:31:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=428</guid>
		<description></description>
		<content:encoded><![CDATA[<p>ubuntu8.10发布好几天了，最近一直很忙，没时间升级，今天得闲升级，却遇到一些问题,开始是找速度不错的源，后来是遇到/boot下空间 不足的问题，但是我的 /boot是 100M，按常理，应该足够了，其哦已经清理掉每次升级版本留下来的grup，现在只保留了最新一个版本的image，查看/boot下的文件，发现没啥 是大文件，却占了70多M的空间，奇怪，如下：</p>
<p>iceskysl@IceskYsl:~$ cd /boot/<br />
iceskysl@IceskYsl:/boot$ du sk *<br />
du: 无法访问&ldquo;sk&rdquo;: 没有该文件或目录<br />
416&nbsp;&nbsp;&nbsp; abi-2.6.24-21-generic<br />
80&nbsp;&nbsp;&nbsp; config-2.6.24-21-generic<br />
179&nbsp;&nbsp;&nbsp; grub<br />
7488&nbsp;&nbsp;&nbsp; initrd.img-2.6.24-21-generic<br />
du: 无法创建目录&ldquo;lost+found&rdquo;: Permission denied<br />
12&nbsp;&nbsp;&nbsp; lost+found<br />
102&nbsp;&nbsp;&nbsp; memtest86+.bin<br />
890&nbsp;&nbsp;&nbsp; System.map-2.6.24-21-generic<br />
1885&nbsp;&nbsp;&nbsp; vmlinuz-2.6.24-21-generic<br />
iceskysl@IceskYsl:/boot$ df<br />
文件系统&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1K-块&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 已用&nbsp;&nbsp;&nbsp;&nbsp; 可用 已用% 挂载点<br />
/dev/sda8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10309796&nbsp;&nbsp; 7409400&nbsp;&nbsp; 2376680&nbsp; 76% /<br />
varrun&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 228&nbsp;&nbsp;&nbsp; 772724&nbsp;&nbsp; 1% /var/run<br />
varlock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /var/lock<br />
udev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 72&nbsp;&nbsp;&nbsp; 772880&nbsp;&nbsp; 1% /dev<br />
devshm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /dev/shm<br />
lrm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp; 39780&nbsp;&nbsp;&nbsp; 733172&nbsp;&nbsp; 6% /lib/modules/2.6.24-21-generic/volatile<br />
/dev/sda7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 93307&nbsp;&nbsp;&nbsp;&nbsp; 73608&nbsp;&nbsp;&nbsp;&nbsp; 14882&nbsp; 84% /boot<br />
/dev/sda9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9614116&nbsp;&nbsp; 5299748&nbsp;&nbsp; 3825996&nbsp; 59% /home<br />
/dev/sda1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 14195576&nbsp; 11835000&nbsp;&nbsp; 2360576&nbsp; 84% /media/sda1<br />
/dev/sda5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 15366140&nbsp; 13796572&nbsp;&nbsp; 1569568&nbsp; 90% /media/sda5<br />
可以看到，占了77M的空间，但是du看到的却最大的也只有 8M，其他空间哪里去了？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>ubuntu8.10发布好几天了，最近一直很忙，没时间升级，今天得闲升级，却遇到一些问题,开始是找速度不错的源，后来是遇到/boot下空间不足的问题，但是我的 /boot是 100M，按常理，应该足够了，其哦已经清理掉每次升级版本留下来的grup，现在只保留了最新一个版本的image，查看/boot下的文件，发现没啥是大文件，却占了70多M的空间，奇怪，如下：</p>
<p>iceskysl@IceskYsl:~$ cd /boot/<br />
iceskysl@IceskYsl:/boot$ du sk *<br />
du: 无法访问&ldquo;sk&rdquo;: 没有该文件或目录<br />
416&nbsp;&nbsp;&nbsp; abi-2.6.24-21-generic<br />
80&nbsp;&nbsp;&nbsp; config-2.6.24-21-generic<br />
179&nbsp;&nbsp;&nbsp; grub<br />
7488&nbsp;&nbsp;&nbsp; initrd.img-2.6.24-21-generic<br />
du: 无法创建目录&ldquo;lost+found&rdquo;: Permission denied<br />
12&nbsp;&nbsp;&nbsp; lost+found<br />
102&nbsp;&nbsp;&nbsp; memtest86+.bin<br />
890&nbsp;&nbsp;&nbsp; System.map-2.6.24-21-generic<br />
1885&nbsp;&nbsp;&nbsp; vmlinuz-2.6.24-21-generic<br />
iceskysl@IceskYsl:/boot$ df<br />
文件系统&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1K-块&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 已用&nbsp;&nbsp;&nbsp;&nbsp; 可用 已用% 挂载点<br />
/dev/sda8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10309796&nbsp;&nbsp; 7409400&nbsp;&nbsp; 2376680&nbsp; 76% /<br />
varrun&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 228&nbsp;&nbsp;&nbsp; 772724&nbsp;&nbsp; 1% /var/run<br />
varlock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /var/lock<br />
udev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 72&nbsp;&nbsp;&nbsp; 772880&nbsp;&nbsp; 1% /dev<br />
devshm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp; 0% /dev/shm<br />
lrm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 772952&nbsp;&nbsp;&nbsp;&nbsp; 39780&nbsp;&nbsp;&nbsp; 733172&nbsp;&nbsp; 6% /lib/modules/2.6.24-21-generic/volatile<br />
/dev/sda7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 93307&nbsp;&nbsp;&nbsp;&nbsp; 73608&nbsp;&nbsp;&nbsp;&nbsp; 14882&nbsp; 84% /boot<br />
/dev/sda9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9614116&nbsp;&nbsp; 5299748&nbsp;&nbsp; 3825996&nbsp; 59% /home<br />
/dev/sda1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 14195576&nbsp; 11835000&nbsp;&nbsp; 2360576&nbsp; 84% /media/sda1<br />
/dev/sda5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 15366140&nbsp; 13796572&nbsp;&nbsp; 1569568&nbsp; 90% /media/sda5<br />
可以看到，占了77M的空间，但是du看到的却最大的也只有 8M，其他空间哪里去了？</p>]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date>2008-11-10 01:31:38</wp:post_date>
		<wp:post_date_gmt>2008-11-10 01:31:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%87%e7%ba%a7ubuntu8-10%e6%9c%aa%e6%9e%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>368</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.17.93</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 03:11:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OK，升起来了：
iceskysl@IceskYsl:~$ cat /etc/issue
Ubuntu intrepid (development branch) \n \l

iceskysl@IceskYsl:~$ sudo lsb_release -a
[sudo] password for iceskysl:
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu intrepid (development branch)
Release:	8.10
Codename:	intrepid
iceskysl@IceskYsl:~$]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>369</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>125.121.17.82</wp:comment_author_IP>
			<wp:comment_date>2008-11-10 09:17:16</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，我当天就在HTPC上安装了，全新安装，不过HDMI声卡折腾得够呛。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>370</wp:comment_id>
			<wp:comment_author><![CDATA[xi2008wang]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xi2008wang@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>121.34.45.61</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 13:52:31</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以看到，占了77M的空间，但是du看到的却最大的也只有 8M，其他空间哪里去了？

-------------------------------
有进程仍然打开已经被删除的文件
lsof一下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>371</wp:comment_id>
			<wp:comment_author><![CDATA[cad]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://bbs.cad.vc/read.php?tid=552</wp:comment_author_url>
			<wp:comment_author_IP>116.8.197.144</wp:comment_author_IP>
			<wp:comment_date>2008-11-24 09:21:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ubuntu风头很劲呀]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>372</wp:comment_id>
			<wp:comment_author><![CDATA[xxlinux]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.34.51.222</wp:comment_author_IP>
			<wp:comment_date>2009-01-16 11:26:53</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[linux联盟网站http://www.xxlinux.com寻找LINUX爱好者合作,希望取得联系:xxlinux@126.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>memcached维护及其数据遍历实现</title>
		<link>http://www.iceskysl.com/?p=429</link>
		<pubDate>Mon, 10 Nov 2008 02:52:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=429</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span class="hilite1">需要时不时的看看memcached的状态，其自身只提供了get、set等方法啊我们需要使用其提供的方法遍历一下其缓存的内容，其原理请参考《<a href="http://www.cnblogs.com/sunli/archive/2008/11/01/1324153.html如何对memcache的数据(key-value)进行遍历操作 ">如何对memcache的数据(key-value)进行遍历操作</a> 》和《<a href="http://robbin.javaeye.com/blog/252345">贴一段遍历memcached缓存对象的小脚本</a>》。</span></p>
<p><span class="hilite1">memcache的stats命令包括：<br />
<br />
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats&nbsp; <br />
2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats reset&nbsp; <br />
3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats malloc&nbsp; <br />
4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats maps&nbsp; <br />
5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats sizes&nbsp; <br />
6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats slabs&nbsp; <br />
7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats items&nbsp; <br />
8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats cachedump slab_id limit_num&nbsp; <br />
9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats detail [on|off|dump] <br />
</span></p>
<p><span class="hilite1">说说其实现遍历的原理：</span></p>
<ol>
    <li>telnet到192.168.15.225（局域网测试机器）的memcache服务器;</li>
    <li>执行stats items命令，可以看到出现 很多的items行。</li>
    <li>执行stats cachedump 3 0命令。这里的3表示上面图中items后面的数字，0标示显示全部的数据，如果是1就标示只显示1条。 <br />
    下图为执行后的结果，item后面的字符串为key</li>
    <li>&nbsp;通过上面列出的key我们就可以遍历所有的数据了，下面我们取出某一条数据，key为Uc!uLh的数据。</li>
</ol>
<p>来两个遍历的代码：<br />
1、PHP版</p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">1.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&lt;?php</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">2.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$host</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">'192.168.15.225'</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">;</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">3.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$port</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=11211;</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">4.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$mem</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><strong><span lang="EN-US" style="font-family: Tahoma; color: blue; font-size: 9pt;">new</span></strong><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;Memcache();</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">5.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$mem</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">-&gt;connect(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$host</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">,</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$port</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">);</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">6.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$items</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$mem</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">-&gt;getExtendedStats&nbsp;(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">&lsquo;items&rsquo;</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">);</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">7.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$items</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$items</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">[</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">&quot;$host:$port&quot;</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">][</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">'items'</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">];</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">8.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><strong><span lang="EN-US" style="font-family: Tahoma; color: blue; font-size: 9pt;">for</span></strong><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$i</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=0,</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$len</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=count(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$items</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">);</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$i</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&lt;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$len</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$i</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">++){</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">9.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$number</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$items</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">[</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$i</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">][</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">'number'</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">];</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">10.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$str</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$mem</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">-&gt;getExtendedStats&nbsp;(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">&quot;cachedump&quot;</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">,</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$number</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">,0);</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">11.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$line</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$str</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">[</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">&quot;$host:$port&quot;</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">];</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">12.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;</span><strong><span lang="EN-US" style="font-family: Tahoma; color: blue; font-size: 9pt;">if</span></strong><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">(&nbsp;is_array(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$line</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">)&nbsp;&amp;&amp;&nbsp;count(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$line</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">)&gt;0){</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">13.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><strong><span lang="EN-US" style="font-family: Tahoma; color: blue; font-size: 9pt;">foreach</span></strong><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$line</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;</span><strong><span lang="EN-US" style="font-family: Tahoma; color: blue; font-size: 9pt;">as</span></strong><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$key</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">=&gt;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$value</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">){</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">14.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$key</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">.</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">'=&gt;'</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">;</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">15.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print_r(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$mem</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">-&gt;get(</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(221, 0, 0); font-size: 9pt;">$key</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">));</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">16.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span lang="EN-US" style="font-family: Tahoma; color: rgb(163, 21, 21); font-size: 9pt;">&quot;\r\n&quot;</span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">;</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">17.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: white none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">18.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">&nbsp;&nbsp;&nbsp;&nbsp;}</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p align="left" class="MsoNormal" style="border-style: none; margin: 0cm 0cm 0pt 18pt; padding: 0cm; background: rgb(248, 248, 248) none repeat scroll 0% 50%; text-align: left; line-height: 10.5pt; text-indent: -18pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">19.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">}</span><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><o:p></o:p></span></p>
<p><span lang="EN-US" style="font-family: 宋体; color: rgb(92, 92, 92); font-size: 9pt;"><span style="">20.<span style="font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="EN-US" style="border-color: windowtext; border-width: 1pt; padding: 0cm; font-family: Tahoma; color: black; font-size: 9pt;">?&gt;<br />
<br />
2、RUby版<br />
</span></p>
<ol start="1" class="dp-rb">
    <li><span><span class="comment">#!/usr/bin/env&nbsp;ruby</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>require&nbsp;<span class="string">'socket'</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;</span></li>
    <li><span><span class="comment">#&nbsp;stats</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;reset</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;malloc</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;maps</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;sizes</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;slabs</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;items</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;cachedump&nbsp;slab_id&nbsp;limit_num</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="comment">#&nbsp;stats&nbsp;detail&nbsp;[on|off|dump]</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;</span></li>
    <li><span><span class="keyword">class</span><span>&nbsp;Memcache&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;<span class="keyword">class</span><span>&nbsp;&lt;&lt;&nbsp;</span><span class="keyword">self</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;open(host,&nbsp;port)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;TCPSocket.open(host,&nbsp;port)&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">yield</span><span>&nbsp;s&nbsp;</span><span class="keyword">if</span><span>&nbsp;block_given?&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">ensure</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.close&nbsp;<span class="keyword">if</span><span>&nbsp;s&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;command(command_string,&nbsp;s)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.send(command_string&nbsp;+&nbsp;<span class="string">&quot;\r\n&quot;</span><span>,&nbsp;0)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff&nbsp;=&nbsp;[]&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">until</span><span>&nbsp;[</span><span class="string">&quot;END&quot;</span><span>,&nbsp;</span><span class="string">&quot;OK&quot;</span><span>,&nbsp;</span><span class="string">&quot;DELETE&quot;</span><span>,&nbsp;</span><span class="string">&quot;ERROR&quot;</span><span>].include?(line&nbsp;=&nbsp;s.gets.strip)&nbsp;</span><span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff&nbsp;&lt;&lt;&nbsp;line&nbsp;&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;exec(command_string,&nbsp;host&nbsp;=&nbsp;</span><span class="string">&quot;javaeye&quot;</span><span>,&nbsp;port&nbsp;=&nbsp;11211)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open(host,&nbsp;port)&nbsp;{&nbsp;|socket|&nbsp;command(command_string,&nbsp;socket).<span class="keyword">each</span><span>&nbsp;{|line|&nbsp;puts&nbsp;line&nbsp;}&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;cache_stats(host&nbsp;=&nbsp;</span><span class="string">&quot;javaeye&quot;</span><span>,&nbsp;port&nbsp;=&nbsp;11211)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache_objects&nbsp;=&nbsp;{}&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open(host,&nbsp;port)&nbsp;<span class="keyword">do</span><span>&nbsp;|socket|&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slabs&nbsp;=&nbsp;[]&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;command(<span class="string">&quot;stats&nbsp;items&quot;</span><span>,&nbsp;socket).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|line|&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slab_id&nbsp;=&nbsp;line.split[1].split(<span class="string">&quot;:&quot;</span><span>)[1].to_i&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slabs&nbsp;&lt;&lt;&nbsp;slab_id&nbsp;<span class="keyword">unless</span><span>&nbsp;slabs.include?(slab_id)&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slabs.<span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|slab_id|&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;browse&nbsp;slab&nbsp;#{slab_id}...&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;command(<span class="string">&quot;stats&nbsp;cachedump&nbsp;#{slab_id}&nbsp;0&quot;</span><span>,&nbsp;socket).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|item|&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;=&nbsp;item.split[1].split(<span class="string">&quot;/&quot;</span><span>)[0].to_s&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache_objects.include?(key)&nbsp;?&nbsp;cache_objects[key]&nbsp;+=&nbsp;1&nbsp;:&nbsp;cache_objects[key]&nbsp;=&nbsp;1&nbsp;&nbsp;</span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache_objects.each_pair&nbsp;{|key,&nbsp;value|&nbsp;puts&nbsp;<span class="string">&quot;#{key}&nbsp;:&nbsp;#{value}&quot;</span><span>}&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;</span></li>
    <li><span><span class="keyword">if</span><span>&nbsp;ARGV.size&nbsp;==&nbsp;0&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;Memcache.cache_stats&nbsp;&nbsp;</span></li>
    <li><span><span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li><span>&nbsp;&nbsp;Memcache.exec(ARGV.join(<span class="string">&quot;&nbsp;&quot;</span><span>))&nbsp;&nbsp;</span></span></li>
    <li><span><span class="keyword">end</span><span>&nbsp; <br />
    </span></span></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>需要时不时的看看memcached的状态，其自身只提供了get、set等方法啊我们需要使用其提供的方法遍历一下其缓存的内容，其原理请参考《如何对memcache的数据(key-value)进行遍历操作 》和《贴一段遍历memcached缓存对象的小脚本》。<br />
<br />
memcache的stats命令包括：<br />
<br />
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats <br />
2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats reset <br />
3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats malloc <br />
4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats maps <br />
5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats sizes <br />
6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats slabs <br />
7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats items <br />
8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats cachedump slab_id limit_num <br />
9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stats detail [on|off|dump]<br />
<br />
说说其实现遍历的原理：<br />
<br />
&nbsp;&nbsp; 1. telnet到192.168.15.225（局域网测试机器）的memcache服务器;<br />
&nbsp;&nbsp; 2. 执行stats items命令，可以看到出现 很多的items行。<br />
&nbsp;&nbsp; 3. 执行stats cachedump 3 0命令。这里的3表示上面图中items后面的数字，0标示显示全部的数据，如果是1就标示只显示1条。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 下图为执行后的结果，item后面的字符串为key<br />
&nbsp;&nbsp; 4.&nbsp; 通过上面列出的key我们就可以遍历所有的数据了，下面我们取出某一条数据，key为Uc!uLh的数据。<br />
<br />
来两个遍历的代码：<br />
1、PHP版<br />
<br />
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;?php<br />
<br />
2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $host='192.168.15.225';<br />
<br />
3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $port=11211;<br />
<br />
4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $mem=new Memcache();<br />
<br />
5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $mem-&gt;connect($host,$port);<br />
<br />
6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $items=$mem-&gt;getExtendedStats (&lsquo;items&rsquo;);<br />
<br />
7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $items=$items[&quot;$host:$port&quot;]['items'];<br />
<br />
8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for($i=0,$len=count($items);$i&lt;$len;$i++){<br />
<br />
9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $number=$items[$i]['number'];<br />
<br />
10.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $str=$mem-&gt;getExtendedStats (&quot;cachedump&quot;,$number,0);<br />
<br />
11.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $line=$str[&quot;$host:$port&quot;];<br />
<br />
12.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( is_array($line) &amp;&amp; count($line)&gt;0){<br />
<br />
13.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach($line as $key=&gt;$value){<br />
<br />
14.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $key.'=&gt;';<br />
<br />
15.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print_r($mem-&gt;get($key));<br />
<br />
16.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo &quot;\r\n&quot;;<br />
<br />
17.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />
<br />
18.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />
<br />
19.&nbsp;&nbsp;&nbsp;&nbsp; }<br />
<br />
20.&nbsp;&nbsp;&nbsp;&nbsp; ?&gt;<br />
<br />
2、RUby版<br />
<br />
&nbsp;&nbsp; 1. #!/usr/bin/env ruby &nbsp;<br />
&nbsp;&nbsp; 2. require 'socket' &nbsp;<br />
&nbsp;&nbsp; 3.&nbsp; &nbsp;<br />
&nbsp;&nbsp; 4. # stats &nbsp;<br />
&nbsp;&nbsp; 5. # stats reset &nbsp;<br />
&nbsp;&nbsp; 6. # stats malloc &nbsp;<br />
&nbsp;&nbsp; 7. # stats maps &nbsp;<br />
&nbsp;&nbsp; 8. # stats sizes &nbsp;<br />
&nbsp;&nbsp; 9. # stats slabs &nbsp;<br />
&nbsp; 10. # stats items &nbsp;<br />
&nbsp; 11. # stats cachedump slab_id limit_num &nbsp;<br />
&nbsp; 12. # stats detail [on|off|dump] &nbsp;<br />
&nbsp; 13.&nbsp; &nbsp;<br />
&nbsp; 14. class Memcache &nbsp;<br />
&nbsp; 15.&nbsp;&nbsp; class &lt;&lt; self &nbsp;<br />
&nbsp; 16.&nbsp;&nbsp;&nbsp;&nbsp; def open(host, port) &nbsp;<br />
&nbsp; 17.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s = TCPSocket.open(host, port) &nbsp;<br />
&nbsp; 18.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yield s if block_given? &nbsp;<br />
&nbsp; 19.&nbsp;&nbsp;&nbsp;&nbsp; ensure &nbsp;<br />
&nbsp; 20.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.close if s &nbsp;<br />
&nbsp; 21.&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 22.&nbsp;&nbsp;&nbsp; &nbsp;<br />
&nbsp; 23.&nbsp;&nbsp;&nbsp;&nbsp; def command(command_string, s) &nbsp;<br />
&nbsp; 24.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.send(command_string + &quot;\r\n&quot;, 0) &nbsp;<br />
&nbsp; 25.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buff = [] &nbsp;<br />
&nbsp; 26.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; until [&quot;END&quot;, &quot;OK&quot;, &quot;DELETE&quot;, &quot;ERROR&quot;].include?(line = s.gets.strip) do &nbsp;<br />
&nbsp; 27.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buff &lt;&lt; line&nbsp; &nbsp;<br />
&nbsp; 28.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 29.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buff &nbsp;<br />
&nbsp; 30.&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 31.&nbsp;&nbsp;&nbsp; &nbsp;<br />
&nbsp; 32.&nbsp;&nbsp;&nbsp;&nbsp; def exec(command_string, host = &quot;javaeye&quot;, port = 11211) &nbsp;<br />
&nbsp; 33.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; open(host, port) { |socket| command(command_string, socket).each {|line| puts line } } &nbsp;<br />
&nbsp; 34.&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 35.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />
&nbsp; 36.&nbsp;&nbsp;&nbsp;&nbsp; def cache_stats(host = &quot;javaeye&quot;, port = 11211) &nbsp;<br />
&nbsp; 37.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cache_objects = {} &nbsp;<br />
&nbsp; 38.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; open(host, port) do |socket| &nbsp;<br />
&nbsp; 39.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; slabs = [] &nbsp;<br />
&nbsp; 40.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command(&quot;stats items&quot;, socket).each do |line| &nbsp;<br />
&nbsp; 41.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; slab_id = line.split[1].split(&quot;:&quot;)[1].to_i &nbsp;<br />
&nbsp; 42.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; slabs &lt;&lt; slab_id unless slabs.include?(slab_id) &nbsp;<br />
&nbsp; 43.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 44.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; slabs.each do |slab_id| &nbsp;<br />
&nbsp; 45.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;browse slab #{slab_id}...&quot; &nbsp;<br />
&nbsp; 46.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command(&quot;stats cachedump #{slab_id} 0&quot;, socket).each do |item| &nbsp;<br />
&nbsp; 47.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key = item.split[1].split(&quot;/&quot;)[0].to_s &nbsp;<br />
&nbsp; 48.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cache_objects.include?(key) ? cache_objects[key] += 1 : cache_objects[key] = 1 &nbsp;<br />
&nbsp; 49.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 50.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 51.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 52.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cache_objects.each_pair {|key, value| puts &quot;#{key} : #{value}&quot;} &nbsp;<br />
&nbsp; 53.&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 54.&nbsp;&nbsp; end &nbsp;<br />
&nbsp; 55. end &nbsp;<br />
&nbsp; 56.&nbsp; &nbsp;<br />
&nbsp; 57. if ARGV.size == 0 &nbsp;<br />
&nbsp; 58.&nbsp;&nbsp; Memcache.cache_stats &nbsp;<br />
&nbsp; 59. else &nbsp;<br />
&nbsp; 60.&nbsp;&nbsp; Memcache.exec(ARGV.join(&quot; &quot;)) &nbsp;<br />
&nbsp; 61. end</p>]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date>2008-11-10 02:52:03</wp:post_date>
		<wp:post_date_gmt>2008-11-10 02:52:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>memcached%e7%bb%b4%e6%8a%a4%e5%8f%8a%e5%85%b6%e6%95%b0%e6%8d%ae%e9%81%8d%e5%8e%86%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>373</wp:comment_id>
			<wp:comment_author><![CDATA[QQ邮箱下载]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.qqyou.org</wp:comment_author_url>
			<wp:comment_author_IP>218.56.161.69</wp:comment_author_IP>
			<wp:comment_date>2008-11-14 07:53:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好代码，多谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>超越深夜宕机，有感机房服务质量</title>
		<link>http://www.iceskysl.com/?p=430</link>
		<pubDate>Sat, 15 Nov 2008 05:25:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=430</guid>
		<description></description>
		<content:encoded><![CDATA[<p>深夜，开始升级，突然办公室断网，然后发现WEB服务器SSH不进去，Ping可以ping通，这个机器装了全站的nginx，导致全站都无法访问，非常紧急。</p>
<p>打电话让机房重启，打了几十遍都没人接，幸好是在深夜，要不还不被投诉死，无奈，打车去中关村那边的机房，Y的看到三个值班的都在睡觉，FT。</p>
<p>找到机柜，找到机器，没找到重启按钮，无奈，扯下电源线，再连接上，OK，重启，，重启后SSH进去，恢复。</p>
<p>想那机房也算有口碑的，客服dianhu</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>深夜，开始升级，突然办公室断网，然后发现WEB服务器SSH不进去，Ping可以ping通，这个机器装了全站的nginx，导致全站都无法访问，非常紧急。</p>
<p>打电话让机房重启，打了几十遍都没人接，幸好是在深夜，要不还不被投诉死，无奈，打车去中关村那边的机房，Y的看到三个值班的都在睡觉，FT。</p>
<p>找到机柜，找到机器，没找到重启按钮，无奈，扯下电源线，再连接上，OK，重启，，重启后SSH进去，恢复。</p>
<p>想那机房也算有口碑的，客服dianhu</p>]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date>2008-11-15 05:25:18</wp:post_date>
		<wp:post_date_gmt>2008-11-15 05:25:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b6%85%e8%b6%8a%e6%b7%b1%e5%a4%9c%e5%ae%95%e6%9c%ba%ef%bc%8c%e6%9c%89%e6%84%9f%e6%9c%ba%e6%88%bf%e6%9c%8d%e5%8a%a1%e8%b4%a8%e9%87%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>374</wp:comment_id>
			<wp:comment_author><![CDATA[ashchan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.ashchan.com</wp:comment_author_url>
			<wp:comment_author_IP>125.121.25.70</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 09:12:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呃，正常。我们有台机器，网线经常被同机柜的其他人碰掉。诡异的事这种事情经常发生在我刚发布新版或升级服务器后。然后就是不停地重启还是搞不通，最后发现是物理学攻击：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>375</wp:comment_id>
			<wp:comment_author><![CDATA[xi2008wang]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xi2008wang@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>58.60.219.21</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 13:46:25</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[办公室断网, 怎么会影响托管在IDC的服务器SSH, 难道是升级SSH, 内核?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>376</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.0.59</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 14:39:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:)
办公室网络不稳定，恰巧两事遇在一起了。。。。

是服务器down了，客服电话也打不进去，过去看到几个值班的都在睡觉（估计怕电话吵，就把电话拿开了）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>377</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.0.59</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 14:41:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[机房确实不严格，登记下就进去了，我干啥他也不管。。。

扯了你网线、电源都没人管，呵呵。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>378</wp:comment_id>
			<wp:comment_author><![CDATA[korpotn]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.137.111.70</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 08:16:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[下次我去搞机器搬走...orz..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>379</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.2.84</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 11:34:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，你可以试试哈。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Rails中集成Nginx upload module解决上传大文件难题</title>
		<link>http://www.iceskysl.com/?p=431</link>
		<pubDate>Sat, 29 Nov 2008 14:00:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[<p>做web开发的都知道用户上传大文件（比如照片，MP3等）需求有如下难题：<br />
<strong>1、文件的存储 </strong>-这个不难，买个NAS，规划好目录结构，在mount下就可以了；</p>
<p><strong>2、上传速度&nbsp;</strong> --这个问题受限与用户带宽、服务器带宽以及服务器的处理时间，用户带宽无法控制，服务器端的带宽需要监控下，只要未达到上限，也不存在问题；还存在的一个问题就是服务器的处理。</p>
<p><strong>3、服务端处理</strong> --这个处理包括请求的接收，文件的校验、存放等，如果文件比较大，在Rails中或许就存在一些问题，请求到web服务器，如<a href="http://www.nginx.ru/">Nginx</a>后，达到其设定的缓存大小就发给后端的Rails，这样就会占一个链接直到处理完毕，而后端的thin或者其他的app服务器一共就那么点并发，导致上传比较频繁的时候，压力很大。</p>
<p>一个比较不错的解决方案是使用Nginx的<a href="http://www.grid.net.ru/nginx/upload.en.html">upload module</a>，其用C编写的，其处理完上传后，将文件存在在设定的临时目录中，然后将文件路径和你设定的一次哦参数透传给后端的Rails；再用Rails处理一些基本的信息，返回处理结果就可以了，如此一个请求的处理时间也就10ms的样子，开2个thin就可以承受很大的压力了。</p>
<p>这个实现还是挺简单，需要注意的upload module非默认的Nginx的module，需要另外下载和编译进去，另外还要注意文件存放的临时文件名可能出现同名的现象，在存取的时候需要留意下。</p>
<p>
<div class="codeText">
<div class="codeHead">Example configuration</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>server&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;client_max_body_size&nbsp;100m;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Upload&nbsp;form&nbsp;should&nbsp;be&nbsp;submitted&nbsp;to&nbsp;this&nbsp;location&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/upload&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Pass&nbsp;altered&nbsp;request&nbsp;body&nbsp;to&nbsp;this&nbsp;location&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_pass&nbsp;&nbsp;&nbsp;/test;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Store&nbsp;files&nbsp;to&nbsp;this&nbsp;directory&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;The&nbsp;directory&nbsp;is&nbsp;hashed,&nbsp;subdirectories&nbsp;0&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;9&nbsp;should&nbsp;exist&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_store&nbsp;/tmp&nbsp;1;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Allow&nbsp;uploaded&nbsp;files&nbsp;to&nbsp;be&nbsp;read&nbsp;only&nbsp;by&nbsp;user&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_store_access&nbsp;user:r;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Set&nbsp;specified&nbsp;fields&nbsp;in&nbsp;request&nbsp;body&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.name&nbsp;&quot;$upload_file_name&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.content_type&nbsp;&quot;$upload_content_type&quot;;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.path&nbsp;&quot;$upload_tmp_path&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Inform&nbsp;backend&nbsp;about&nbsp;hash&nbsp;and&nbsp;size&nbsp;of&nbsp;a&nbsp;file&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_aggregate_form_field&nbsp;&quot;$upload_field_name.md5&quot;&nbsp;&quot;$upload_file_md5&quot;;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_aggregate_form_field&nbsp;&quot;$upload_field_name.size&quot;&nbsp;&quot;$upload_file_size&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_pass_form_field&nbsp;&quot;^submit$|^description$&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_cleanup&nbsp;400&nbsp;404&nbsp;499&nbsp;500-505;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Pass&nbsp;altered&nbsp;request&nbsp;body&nbsp;to&nbsp;a&nbsp;backend&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/test&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;http://localhost:8080;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
有类型需求的可以留意下，我们现在用的很爽。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>做web开发的都知道用户上传大文件（比如照片，MP3等）需求有如下难题：<br />
<strong>1、文件的存储 </strong>-这个不难，买个NAS，规划好目录结构，在mount下就可以了；</p>
<p><strong>2、上传速度&nbsp;</strong> --这个问题受限与用户带宽、服务器带宽以及服务器的处理时间，用户带宽无法控制，服务器端的带宽需要监控下，只要未达到上限，也不存在问题；还存在的一个问题就是服务器的处理。</p>
<p><strong>3、服务端处理</strong> --这个处理包括请求的接收，文件的校验、存放等，如果文件比较大，在Rails中或许就存在一些问题，请求到web服务器，如<a href="http://www.nginx.ru/">Nginx</a>后，达到其设定的缓存大小就发给后端的Rails，这样就会占一个链接直到处理完毕，而后端的thin或者其他的app服务器一共就那么点并发，导致上传比较频繁的时候，压力很大。</p>
<p>一个比较不错的解决方案是使用Nginx的<a href="http://www.grid.net.ru/nginx/upload.en.html">upload module</a>，其用C编写的，其处理完上传后，将文件存在在设定的临时目录中，然后将文件路径和你设定的一次哦参数透传给后端的Rails；再用Rails处理一些基本的信息，返回处理结果就可以了，如此一个请求的处理时间也就10ms的样子，开2个thin就可以承受很大的压力了。</p>
<p>这个实现还是挺简单，需要注意的upload module非默认的Nginx的module，需要另外下载和编译进去，另外还要注意文件存放的临时文件名可能出现同名的现象，在存取的时候需要留意下。</p>
<div class="codeText">
<div class="codeHead">Example configuration</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>server&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;client_max_body_size&nbsp;100m;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Upload&nbsp;form&nbsp;should&nbsp;be&nbsp;submitted&nbsp;to&nbsp;this&nbsp;location&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/upload&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Pass&nbsp;altered&nbsp;request&nbsp;body&nbsp;to&nbsp;this&nbsp;location&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_pass&nbsp;&nbsp;&nbsp;/test;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Store&nbsp;files&nbsp;to&nbsp;this&nbsp;directory&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;The&nbsp;directory&nbsp;is&nbsp;hashed,&nbsp;subdirectories&nbsp;0&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5&nbsp;6&nbsp;7&nbsp;8&nbsp;9&nbsp;should&nbsp;exist&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_store&nbsp;/tmp&nbsp;1;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Allow&nbsp;uploaded&nbsp;files&nbsp;to&nbsp;be&nbsp;read&nbsp;only&nbsp;by&nbsp;user&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_store_access&nbsp;user:r;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Set&nbsp;specified&nbsp;fields&nbsp;in&nbsp;request&nbsp;body&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.name&nbsp;&quot;$upload_file_name&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.content_type&nbsp;&quot;$upload_content_type&quot;;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_set_form_field&nbsp;$upload_field_name.path&nbsp;&quot;$upload_tmp_path&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Inform&nbsp;backend&nbsp;about&nbsp;hash&nbsp;and&nbsp;size&nbsp;of&nbsp;a&nbsp;file&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_aggregate_form_field&nbsp;&quot;$upload_field_name.md5&quot;&nbsp;&quot;$upload_file_md5&quot;;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_aggregate_form_field&nbsp;&quot;$upload_field_name.size&quot;&nbsp;&quot;$upload_file_size&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_pass_form_field&nbsp;&quot;^submit$|^description$&quot;;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_cleanup&nbsp;400&nbsp;404&nbsp;499&nbsp;500-505;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Pass&nbsp;altered&nbsp;request&nbsp;body&nbsp;to&nbsp;a&nbsp;backend&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/test&nbsp;{&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;http://localhost:8080;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>有类型需求的可以留意下，我们现在用的很爽。</p>]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2008-11-29 14:00:45</wp:post_date>
		<wp:post_date_gmt>2008-11-29 14:00:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%ad%e9%9b%86%e6%88%90nginx-upload-module%e8%a7%a3%e5%86%b3%e4%b8%8a%e4%bc%a0%e5%a4%a7%e6%96%87%e4%bb%b6%e9%9a%be%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3703</wp:comment_id>
			<wp:comment_author><![CDATA[biti]]></wp:comment_author>
			<wp:comment_author_email>liuzihua8@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.129.189.0</wp:comment_author_IP>
			<wp:comment_date>2011-11-11 09:27:11</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 09:27:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good job!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476370.3867";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476316.2603";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475847.1535";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475794.8745";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325472808.1909";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325472110.4429";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325474608.0434";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7970</wp:comment_id>
			<wp:comment_author><![CDATA[Yang Juven]]></wp:comment_author>
			<wp:comment_author_email>yangjuven@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://yangjuven.github.com</wp:comment_author_url>
			<wp:comment_author_IP>218.107.55.253</wp:comment_author_IP>
			<wp:comment_date>2012-04-24 09:11:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 09:11:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果文件比较大，在Rails中或许就存在一些问题，请求到web服务器，如Nginx后，达到其设定的缓存大小就发给后端的Rails

请问，对于这个结论有依据吗？我查了下官网文档，是这样解释的：（http://wiki.nginx.org/HttpCoreModule#client_body_buffer_size）


The directive specifies the client request body buffer size.If the request body size is more than the buffer size, then the entire (or partial) request body is written into a temporary file.

如果buffer不够，会写文件，而不会直接移交给app哦。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335258660.9748";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:3:"431";s:14:"comment_author";s:10:"Yang Juven";s:20:"comment_author_email";s:19:"yangjuven@gmail.com";s:18:"comment_author_url";s:27:"http://yangjuven.github.com";s:15:"comment_content";s:585:"如果文件比较大，在Rails中或许就存在一些问题，请求到web服务器，如Nginx后，达到其设定的缓存大小就发给后端的Rails

请问，对于这个结论有依据吗？我查了下官网文档，是这样解释的：（http://wiki.nginx.org/HttpCoreModule#client_body_buffer_size）


The directive specifies the client request body buffer size.If the request body size is more than the buffer size, then the entire (or partial) request body is written into a temporary file.

如果buffer不够，会写文件，而不会直接移交给app哦。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"218.107.55.253";s:10:"user_agent";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.163 Safari/535.19";s:8:"referrer";s:30:"http://www.iceskysl.com/?p=431";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:30:"http://www.iceskysl.com/?p=431";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:10:"Yang Juven";s:10:"POST_email";s:19:"yangjuven@gmail.com";s:8:"POST_url";s:27:"http://yangjuven.github.com";s:12:"POST_comment";s:585:"如果文件比较大，在Rails中或许就存在一些问题，请求到web服务器，如Nginx后，达到其设定的缓存大小就发给后端的Rails

请问，对于这个结论有依据吗？我查了下官网文档，是这样解释的：（http://wiki.nginx.org/HttpCoreModule#client_body_buffer_size）


The directive specifies the client request body buffer size.If the request body size is more than the buffer size, then the entire (or partial) request body is written into a temporary file.

如果buffer不够，会写文件，而不会直接移交给app哦。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"431";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:4:"1351";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"218.107.55.253";s:11:"REMOTE_PORT";s:5:"56464";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:4:"1351";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.163 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:30:"http://www.iceskysl.com/?p=431";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:13:"UTF-8,*;q=0.5";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1335258660";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335268227.3032";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Rails2.2风潮来临，资源大列表</title>
		<link>http://www.iceskysl.com/?p=432</link>
		<pubDate>Sat, 29 Nov 2008 15:38:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://farm4.static.flickr.com/3212/3049762332_b2297a8be1.jpg?v=0" alt="" /></p>
<p>Rails的发展速度真的不赖，从上次rails2.1发布到现在不过5个月的时间而已，现在Rails2.2已经发布了，速度不可谓不快，而这次更新涉及到的东西更多，更牛XX。</p>
<p>以前已经说过一些Rails2.2的功能，比如线程安全，Etag等，就不说了，网上资源多的是，需要了解的自己链过去看吧，如下列举几个：</p>
<p>http://weblog.rubyonrails.org/2008/11/21/rails-2-2-i18n-http-validators-thread-safety-jruby-1-9-compatibility-docs</p>
<p>http://railscasts.com/episodes/137-memoization</p>
<p><a href="http://media.rubyonrails.org/video/rails_blog_2.mov">http://media.rubyonrails.org/video/rails_blog_2.mov</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails的发展速度真的不赖，从上次rails2.1发布到现在不过5个月的时间而已，现在Rails2.2已经发布了，速度不可谓不快，而这次更新涉及到的东西更多，更牛XX。</p>
<p>&nbsp;</p>
<p>以前已经说过一些Rails2.2的功能，比如线程安全，Etag等，就不说了，网上资源多的是，需要了解的自己链过去看吧，如下列举几个：</p>
<p>http://weblog.rubyonrails.org/2008/11/21/rails-2-2-i18n-http-validators-thread-safety-jruby-1-9-compatibility-docs</p>
<p>http://railscasts.com/episodes/137-memoization</p>
<p><a href="http://media.rubyonrails.org/video/rails_blog_2.mov">http://media.rubyonrails.org/video/rails_blog_2.mov</a></p>
<p><a href="http://media.rubyonrails.org/video/rails_blog_2.mov">http://chinaonrails.com/topic/view/2428.html<br />
</a></p>]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2008-11-29 15:38:32</wp:post_date>
		<wp:post_date_gmt>2008-11-29 15:38:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-2%e9%a3%8e%e6%bd%ae%e6%9d%a5%e4%b8%b4%ef%bc%8c%e8%b5%84%e6%ba%90%e5%a4%a7%e5%88%97%e8%a1%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://media.rubyonrails.org/video/rails_blog_2.mov
49405864
video/quicktime
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>380</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.21.198</wp:comment_author_IP>
			<wp:comment_date>2008-11-30 22:38:45</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rails2.2 发布 － 27个链接和资源带你出发
http://www.yeeyan.com/articles/view/blackanger/18449]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>rsay: ruby interface to the google translation api</title>
		<link>http://www.iceskysl.com/?p=433</link>
		<pubDate>Mon, 08 Dec 2008 22:41:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=433</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有的时候，需要对一些词语做转换（翻译），这个实现方式有两种，一种是使用Ruby或者其他语言做一些语言转换；一种是利用其它平台的接口API，翻译成目标语言。<br />
第二种方式实现起来比较方便，目前比较成熟的是Google translation ，但是其没有REST的接口，一般的做法是直接调用页面，用正则表达式抓取相关内容。<br />
在Ruby中已经有人写出了gem，比较方便，大概步骤如下：<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; Error installing rsay-1.0.0.gem:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rsay requires json (&gt;= 1.1.3, runtime)<br />
taojer ~/softback: gem install json<br />
ERROR:&nbsp; While executing gem ... (Errno::EACCES)<br />
&nbsp;&nbsp;&nbsp; Permission denied - /usr/lib/ruby/gems/1.8/cache/json-1.1.3.gem<br />
taojer ~/softback: sudo gem install json<br />
Building native extensions.&nbsp; This could take a while...<br />
Successfully installed json-1.1.3<br />
1 gem installed<br />
Installing ri documentation for json-1.1.3...<br />
<br />
No definition for cState_configure<br />
<br />
No definition for cState_configure<br />
Installing RDoc documentation for json-1.1.3...<br />
<br />
No definition for cState_configure<br />
<br />
No definition for cState_configure<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; Error installing rsay-1.0.0.gem:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rsay requires htmlentities (&gt;= 4.0.0, runtime)<br />
taojer ~/softback: sudo gem install htmlentities<br />
Successfully installed htmlentities-4.0.0<br />
1 gem installed<br />
Installing ri documentation for htmlentities-4.0.0...<br />
Installing RDoc documentation for htmlentities-4.0.0...<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; While executing gem ... (Gem::FilePermissionError)<br />
&nbsp;&nbsp;&nbsp; You don't have write permissions into the /usr/lib/ruby/gems/1.8 directory.<br />
taojer ~/softback: sudo gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
Successfully installed rsay-1.0.0<br />
1 gem installed<br />
<br />
再看个例子，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">&quot;rubygems&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">&quot;rsay&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>result&nbsp;=&nbsp;Translate.t(<span class="string">&quot;Hello&nbsp;my&nbsp;Friend&quot;</span><span>,&nbsp;Language::ENGLISH,&nbsp;Language::ITALIAN)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>puts&nbsp;result&nbsp;&nbsp;</span></li>
    <li class="alt"><span>------&nbsp;&nbsp;</span></li>
    <li class=""><span>taojer&nbsp;~/tmpfiles:&nbsp;ruby&nbsp;t_c.rb&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Ciao&nbsp;amico&nbsp;mio&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>参考：<br />
http://code.google.com/p/rsay/</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>有的时候，需要对一些词语做转换（翻译），这个实现方式有两种，一种是使用Ruby或者其他语言做一些语言转换；一种是利用其它平台的接口API，翻译成目标语言。<br />
第二种方式实现起来比较方便，目前比较成熟的是Google translation ，但是其没有REST的接口，一般的做法是直接调用页面，用正则表达式抓取相关内容。<br />
在Ruby中已经有人写出了gem，比较方便，大概步骤如下：<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; Error installing rsay-1.0.0.gem:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rsay requires json (&gt;= 1.1.3, runtime)<br />
taojer ~/softback: gem install json<br />
ERROR:&nbsp; While executing gem ... (Errno::EACCES)<br />
&nbsp;&nbsp;&nbsp; Permission denied - /usr/lib/ruby/gems/1.8/cache/json-1.1.3.gem<br />
taojer ~/softback: sudo gem install json<br />
Building native extensions.&nbsp; This could take a while...<br />
Successfully installed json-1.1.3<br />
1 gem installed<br />
Installing ri documentation for json-1.1.3...<br />
<br />
No definition for cState_configure<br />
<br />
No definition for cState_configure<br />
Installing RDoc documentation for json-1.1.3...<br />
<br />
No definition for cState_configure<br />
<br />
No definition for cState_configure<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; Error installing rsay-1.0.0.gem:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rsay requires htmlentities (&gt;= 4.0.0, runtime)<br />
taojer ~/softback: sudo gem install htmlentities<br />
Successfully installed htmlentities-4.0.0<br />
1 gem installed<br />
Installing ri documentation for htmlentities-4.0.0...<br />
Installing RDoc documentation for htmlentities-4.0.0...<br />
taojer ~/softback: gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
ERROR:&nbsp; While executing gem ... (Gem::FilePermissionError)<br />
&nbsp;&nbsp;&nbsp; You don't have write permissions into the /usr/lib/ruby/gems/1.8 directory.<br />
taojer ~/softback: sudo gem install&nbsp; rsay-1.0.0.gem&nbsp; --local<br />
Successfully installed rsay-1.0.0<br />
1 gem installed<br />
<br />
再看个例子，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">&quot;rubygems&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">&quot;rsay&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>result&nbsp;=&nbsp;Translate.t(<span class="string">&quot;Hello&nbsp;my&nbsp;Friend&quot;</span><span>,&nbsp;Language::ENGLISH,&nbsp;Language::ITALIAN)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>puts&nbsp;result&nbsp;&nbsp;</span></li>
    <li class="alt"><span>------&nbsp;&nbsp;</span></li>
    <li class=""><span>taojer&nbsp;~/tmpfiles:&nbsp;ruby&nbsp;t_c.rb&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Ciao&nbsp;amico&nbsp;mio&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>参考：<br />
http://code.google.com/p/rsay/</p>]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date>2008-12-08 22:41:45</wp:post_date>
		<wp:post_date_gmt>2008-12-08 22:41:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rsay-ruby-interface-to-the-google-translation-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b6dc1aa164cdd5d5a4d059b842e457a3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>381</wp:comment_id>
			<wp:comment_author><![CDATA[is]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.isisis.com.cn/</wp:comment_author_url>
			<wp:comment_author_IP>117.40.126.188</wp:comment_author_IP>
			<wp:comment_date>2008-12-10 09:32:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[先顶了再坐下来看看！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>382</wp:comment_id>
			<wp:comment_author><![CDATA[老影迷]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.fullmv.cn/</wp:comment_author_url>
			<wp:comment_author_IP>117.40.126.188</wp:comment_author_IP>
			<wp:comment_date>2008-12-10 09:32:51</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i like this blog 呵呵]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>383</wp:comment_id>
			<wp:comment_author><![CDATA[手机QQ下载]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.qqyou.org</wp:comment_author_url>
			<wp:comment_author_IP>60.215.118.74</wp:comment_author_IP>
			<wp:comment_date>2008-12-11 07:13:55</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好代码，多谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>rake: uninitialized constant ActiveRecord</title>
		<link>http://www.iceskysl.com/?p=434</link>
		<pubDate>Mon, 15 Dec 2008 14:59:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=434</guid>
		<description></description>
		<content:encoded><![CDATA[<p>写了一个task，执行的时候一直报：</p>
<pre>rake aborted!<br />uninitialized constant ActiveRecord<br />迷糊了半天，发现task中忘记加&ldquo;=&gt; :environment&rdquo;了。<br />参考：http://www.ruby-forum.com/topic/143124</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>写了一个task，执行的时候一直报：</p>
<pre>rake aborted!<br />uninitialized constant ActiveRecord<br />迷糊了半天，发现task中忘记加&ldquo;=&gt; :environment&rdquo;了。<br />参考：http://www.ruby-forum.com/topic/143124</pre>]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2008-12-15 14:59:33</wp:post_date>
		<wp:post_date_gmt>2008-12-15 14:59:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rake-uninitialized-constant-activerecord</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>384</wp:comment_id>
			<wp:comment_author><![CDATA[QQ游戏]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.qqyou.org</wp:comment_author_url>
			<wp:comment_author_IP>218.56.161.69</wp:comment_author_IP>
			<wp:comment_date>2008-12-19 08:11:10</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢推荐的主机！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Music Fingerprint: 音乐指纹认知篇</title>
		<link>http://www.iceskysl.com/?p=435</link>
		<pubDate>Sun, 21 Dec 2008 20:50:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=435</guid>
		<description></description>
		<content:encoded><![CDATA[<p>音乐指纹，是采用特定的算法对音乐文件的<strong>声波</strong>进行分析得到的唯一码，主要用于自动分类和标识音乐文件。<br />
当前国外拥有此项技术专利的公司有<strong>Gracenote</strong>和<strong>MusicIP</strong>等，其基本原理是通过对音乐文件的全部或部分声波（通常是音乐文件的前几分钟）进行分析产生音乐指纹数据，这部分技术难度并不太大，关键的问题是对音乐指纹进行比对，当前Gracenote已经支持对一首音乐文件的任意部分(至少需要10秒的数据)进行指纹识别。<br />
由MusicIP开发的一个叫<a href="http://code.google.com/p/musicip-libofa/"><strong>libofa</strong></a>的开源音乐指纹生成软件可以从MusicDNS得到，它是通过对音乐文件的前135秒进行分析产生音乐指纹，为了提高匹配的准确性，通常在提交音乐指纹的同时也提取音乐文件的其他信息如MP3文件的ID3信息等。</p>
<p>PS：部分播放器号称利用音乐指纹技术来做的歌词同步实际上是通过音乐文件的相关信息(如MP3的ID3信息)来确定该文件，并非真正意义上的音乐指纹技术。</p>
<p>这项技术在国内尚未有实际的使用，国内对音频文件分析的时候，一般是采用ID3信息，而对音乐指纹的使用目前还是空白的。不过这个空白很快就被填补了。</p>
<p>参考资料：</p>
<p><a href="http://code.google.com/p/musicip-libofa/">http://code.google.com/p/musicip-libofa/</a></p>
<p><a href="http://blog.jooit.com/?p=1352">http://blog.jooit.com/?p=1352</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>音乐指纹，是采用特定的算法对音乐文件的<strong>声波</strong>进行分析得到的唯一码，主要用于自动分类和标识音乐文件。<br />
当前国外拥有此项技术专利的公司有<strong>Gracenote</strong>和<strong>MusicIP</strong>等，其基本原理是通过对音乐文件的全部或部分声波（通常是音乐文件的前几分钟）进行分析产生音乐指纹数据，这部分技术难度并不太大，关键的问题是对音乐指纹进行比对，当前Gracenote已经支持对一首音乐文件的任意部分(至少需要10秒的数据)进行指纹识别。<br />
由MusicIP开发的一个叫<a href="http://code.google.com/p/musicip-libofa/"><strong>libofa</strong></a>的开源音乐指纹生成软件可以从MusicDNS得到，它是通过对音乐文件的前135秒进行分析产生音乐指纹，为了提高匹配的准确性，通常在提交音乐指纹的同时也提取音乐文件的其他信息如MP3文件的ID3信息等。</p>
<p>PS：部分播放器号称利用音乐指纹技术来做的歌词同步实际上是通过音乐文件的相关信息(如MP3的ID3信息)来确定该文件，并非真正意义上的音乐指纹技术。</p>
<p>这项技术在国内尚未有实际的使用，国内对音频文件分析的时候，一般是采用ID3信息，而对音乐指纹的使用目前还是空白的。不过这个空白很快就被填补了。</p>
<p>参考资料：</p>
<p><a href="http://code.google.com/p/musicip-libofa/">http://code.google.com/p/musicip-libofa/</a></p>
<p><a href="http://blog.jooit.com/?p=1352">http://blog.jooit.com/?p=1352</a></p>]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2008-12-21 20:50:56</wp:post_date>
		<wp:post_date_gmt>2008-12-21 20:50:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>music-fingerprint-%e9%9f%b3%e4%b9%90%e6%8c%87%e7%ba%b9%e8%ae%a4%e7%9f%a5%e7%af%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>385</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.25.101</wp:comment_author_IP>
			<wp:comment_date>2008-12-21 20:56:05</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里有篇对MusicIP介绍的：
http://blog.weizhang.cn/post/280/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby的圣诞大餐: Merb&amp;Rails合作了</title>
		<link>http://www.iceskysl.com/?p=436</link>
		<pubDate>Wed, 24 Dec 2008 22:59:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ruby的来两大主流框架都挺不错的，至少我做Ruby，也时常使用merb写东西，在我看来，两者上午有点非常鲜明，但是从来不曾想到raila和merb会合作。个人感觉DHH和Ezra两个领军人物性格差异非常大，DHH看上去更hacker一点，有时会有点偏执和自以为是，有时会和zed就raills缺点炒得热火朝天；而Ezra则显得内敛的多，内敛低调，虚心接受很多建议，自身也非常牛。Ezra更像一个程序员。</p>
<p>但是，真的，Merb和rails会在下个版本开始合作，按照merb官方的说法，会将merb很多好的经验带给rails，而merb依然是存在的。很多人对这个消息绝对的感兴趣，一些天天吵着是merb好还是rails好的问题的人也终于可以歇歇了。</p>
<p>rails又将迎来哪些大的变革，AR难道也会成插件，会引入merb多少东西，非常值得期待；rails到目前这个版本（2.2.2），明显感觉到发展的瓶颈，这次rails2.2.2的发布，并没有带来想象中的异常强大的东西，国际化和线程安全在ruby1.8上效果不甚理想，国际化也被人口水了一把，再不搞出点花样，估计又有人急了，而这次动作还算大，也算是圣诞的大餐吧，但是应该需要等到明年5月才会发布版本。</p>
<p>回头再想想，merb的如意算盘应该是借助rails推广自己的engineyard，也很不错。</p>
<p>PS：手指被菜刀划破了，打字真鬼速，囧。。</p>
<p>参考信息：</p>
<p>http://yehudakatz.com/2008/12/23/rails-and-merb-merge/</p>
<p>http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>但是，真的，Merb和rails会在下个版本开始合作，按照merb官方的说法，会将merb很多好的经验带给rails，而merb依然是存在的。很多人对这个消息绝对的感兴趣，一些天天吵着是merb好还是rails好的问题的人也终于可以歇歇了。</p>
<p>rails又将迎来哪些大的变革，AR难道也会成插件，会引入merb多少东西，非常值得期待；rails到目前这个版本（2.2.2），明显感觉 到发展的瓶颈，这次rails2.2.2的发布，并没有带来想象中的异常强大的东西，国际化和线程安全在ruby1.8上效果不甚理想，国际化也被人口水 了一把，再不搞出点花样，估计又有人急了，而这次动作还算大，也算是圣诞的大餐吧，但是应该需要等到明年5月才会发布版本。</p>
<p>回头再想想，merb的如意算盘应该是借助rails推广自己的engineyard，也很不错。</p>
<p>PS：手指被菜刀划破了，打字真鬼速，囧。。</p>
<p>参考信息：</p>
<p>http://yehudakatz.com/2008/12/23/rails-and-merb-merge/</p>
<p>http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3</p>]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2008-12-24 22:59:44</wp:post_date>
		<wp:post_date_gmt>2008-12-24 22:59:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e7%9a%84%e5%9c%a3%e8%af%9e%e5%a4%a7%e9%a4%90-merbrails%e5%90%88%e4%bd%9c%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>389</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.4.94</wp:comment_author_IP>
			<wp:comment_date>2008-12-25 01:31:36</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://brainspl.at/articles/2008/12/23/merb-is-rails

http://rubyonrails.org/merb
http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3
http://yehudakatz.com/2008/12/23/rails-and-merb-merge/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Android: 好东西终究是要爆发的</title>
		<link>http://www.iceskysl.com/?p=437</link>
		<pubDate>Wed, 24 Dec 2008 15:17:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[我不是专业的手机软件开发者，但是和古老的程序员的hacker精神一样，每个合格的程序员都想出品一款让自己足够骄傲的程序，在PC或者server上已经发展到团队作战的模式，散兵已经没有足够的精力做出多牛X的东西；而Android的的出现又给大家一个不错的平台。

就我个人而言，<strong>Android</strong>上的开发还是很优雅的，虽然XML的layout还是有点点的简陋，但是相比于在java中写UI要舒服的多，2009年，注定会是移动互联网爆发和充满无限期待的一年，我看好的多媒体应用也终将走上移动设备，3G、wifi的顺利实施会让我们有更多的选择和期待，唯一希望的就是大家都遵守游戏的规则，不要把整个产业链都霸占了，只给自己吃肉，不让他人的喝粥的做法是无法长久的。

想把什么都攥在自己手里的人最后会发现，围墙里的只有他自己一个人。

平安夜，外面会有多热闹，北京的街头被各种彩灯装饰的非常绚丽，然而我却很不习惯如此的面子工程，热闹的街头也很大的风，我还是习惯躲回屋子，冲上一杯咖啡，写写代码，看看书。

写着写着，发现跑题了，平安夜，但愿人人平安。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>我不是专业的手机软件开发者，但是和古老的程序员的hacker精神一样，每个合格的程序员都想出品一款让自己足够骄傲的程序，在PC或者server上已经发展到团队作战的模式，散兵已经没有足够的精力做出多牛X的东西；而Android的的出现又给大家一个不错的平台。</p>
<p>就我个人而言，<strong>Android</strong>上的开发还是很优雅的，虽然XML的layout还是有点点的简陋，但是相比于在java中写UI要舒 服的多，2009年，注定会是移动互联网爆发和充满无限期待的一年，我看好的多媒体应用也终将走上移动设备，3G、wifi的顺利实施会让我们有更多的选 择和期待，唯一希望的就是大家都遵守游戏的规则，不要把整个产业链都霸占了，只给自己吃肉，不让他人的喝粥的做法是无法长久的。</p>
<p>想把什么都攥在自己手里的人最后会发现，围墙里的只有他自己一个人。</p>
<p>平安夜，外面会有多热闹，北京的街头被各种彩灯装饰的非常绚丽，然而我却很不习惯如此的面子工程，热闹的街头也很大的风，我还是习惯躲回屋子，冲上一杯咖啡，写写代码，看看书。</p>
<p>写着写着，发现跑题了，平安夜，但愿人人平安。</p>]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2008-12-24 23:17:29</wp:post_date>
		<wp:post_date_gmt>2008-12-24 15:17:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-%e5%a5%bd%e4%b8%9c%e8%a5%bf%e7%bb%88%e7%a9%b6%e6%98%af%e8%a6%81%e7%88%86%e5%8f%91%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<wp:comment>
			<wp:comment_id>386</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.60.101</wp:comment_author_IP>
			<wp:comment_date>2009-01-13 12:10:46</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[和twitter相关的文章和代码：
http://theregoesdave.com/2008/10/13/4-twitter-applications-for-android-phones-with-screenshots/
http://twidroid.com/screenshots/
http://d.hatena.ne.jp/oldfish/20081019/1224420845]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>387</wp:comment_id>
			<wp:comment_author><![CDATA[lixinso]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/lixinso</wp:comment_author_url>
			<wp:comment_author_IP>115.171.29.113</wp:comment_author_IP>
			<wp:comment_date>2009-06-06 18:35:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，你的判断还是比较准的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>388</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.227.118</wp:comment_author_IP>
			<wp:comment_date>2009-06-09 01:15:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[：）
目前还不是非常明朗～还得等等才知道。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>休假养伤，期间安排</title>
		<link>http://www.iceskysl.com/?p=438</link>
		<pubDate>Fri, 09 Jan 2009 10:31:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=438</guid>
		<description></description>
		<content:encoded><![CDATA[<p>大悲大喜的2008年也是我的本命年，中国发生了很多大大小小的或喜或悲的事情，我也发生了很多那些传说会在本命年发生的事情，囧～总之还好，2008年已经过去了。</p>
<p>上次去滑雪，无奈的是手腕摔伤了，非常无奈还是右手手腕，现在就是用一个左手打字的，右手还打折石膏呢，医生说了差不多要1-2月才能恢复，算算时间，才过去10天，还要慢慢恢复了，幸好年关了，公司事情不是很多了，主要做产品讨论和技术预研，加上一个手生活多有不便，于是就请假呆在家好好养伤。</p>
<p>由于受伤的是右手，不方便IM，有事情的给我发mail吧。。</p>
<p>接下来一段时间，一来好好养伤，二来需要接触些新东西，大概列举一下吧：</p>
<ul>
    <li>熟悉android，完成预定的目标（可能会让你大吃一惊的）</li>
    <li>熟悉Erlang，在年后项目中将会使用，今天大概了解了下，语法够怪异的，但是机制是我梦寐的；</li>
    <li>还要一本《构建可扩展的web站点》需要慢慢体会</li>
    <li>还有一本中医枕边书，自学自用</li>
    <li>如果时间允许，还有一半Flex。</li>
</ul>
<p>哇，好多，抓紧看书。。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>大悲大喜的2008年也是我的本命年，中国发生了很多大大小小的或喜或悲的事情，我也发生了很多那些传说会在本命年发生的事情，囧～总之还好，2008年已经过去了。</p>
<p>上次去滑雪，无奈的是手腕摔伤了，非常无奈还是右手手腕，现在就是用一个左手打字的，右手还打折石膏呢，医生说了差不多要1-2月才能恢复，算算时 间，才过去10天，还要慢慢恢复了，幸好年关了，公司事情不是很多了，主要做产品讨论和技术预研，加上一个手生活多有不便，于是就请假呆在家好好养伤。</p>
<p>由于受伤的是右手，不方便IM，有事情的给我发mail吧。。</p>
<p>接下来一段时间，一来好好养伤，二来需要接触些新东西，大概列举一下吧：</p>
<ul>
    <li>熟悉android，完成预定的目标（可能会让你大吃一惊的）</li>
    <li>熟悉Erlang，在年后项目中将会使用，今天大概了解了下，语法够怪异的，但是机制是我梦寐的；</li>
    <li>还要一本《构建可扩展的web站点》需要慢慢体会</li>
    <li>还有一本中医枕边书，自学自用</li>
    <li>如果时间允许，还有一半Flex。</li>
</ul>
<p>哇，好多，抓紧看书。。</p>]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2009-01-09 10:31:49</wp:post_date>
		<wp:post_date_gmt>2009-01-09 10:31:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bc%91%e5%81%87%e5%85%bb%e4%bc%a4%ef%bc%8c%e6%9c%9f%e9%97%b4%e5%ae%89%e6%8e%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>390</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.63.54</wp:comment_author_IP>
			<wp:comment_date>2009-01-09 10:33:33</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哇，离我上次更新BLOG好多天了，好像差不多正是受伤前写的前一篇。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>进程&amp;消息： 开始Erlang之旅</title>
		<link>http://www.iceskysl.com/?p=439</link>
		<pubDate>Fri, 09 Jan 2009 10:44:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=439</guid>
		<description></description>
		<content:encoded><![CDATA[<p>知道Erlang很久了，在我接触Ruby不久之后就了解了Erlang，但是一直没静下心好好看，恰巧利用这段时间开始我的Erlang之旅吧。</p>
<p>说句题外话，Erlang这个名字我很有亲切感，要是熟悉我的人肯定不会奇怪，呵呵。</p>
<p><strong>Erlang概述</strong><br />
<br />
Erlang不但是一种编程语言，而且它具有比编程语言更加贴近操作系统的一些特性：并发线程、作业调度、内存管理、分布式、网络化等。据说使用Erlang编写的Yaws Web服务器，其并发性能是apache的15倍！（这个没啥好炫耀的吧～）<br />
<br />
这个Erlang初始开源版本包含了Erlang的实现，同时它也是用于构建分布式高可用性系统的Ericsson中间件的最大组成部分。<br />
<br />
<strong>Erlang具有以下特性：</strong><br />
<br />
<strong>并发性 </strong>- Erlang具有超强的轻量级进程，这种进程对内存的需求是动态变化的，并且它没有共享内存和通过异步消息传送的通讯。Erlang支持超大量级的并发线程，并且不需要操作系统具有并发机制。<br />
<br />
<strong>分布式 </strong>- Erlang被设计用于运行在分布式环境下。一个Erlang虚拟机被成为Erlang节点。一个分布式Erlang系统是多个Erlang节点组成的网络（通常每个处理器被作为一个节点）。一个Erlang节点能够创建运行在其它节点上的并行线程，而其它节点可以使用其它操作系统。线程依赖不同节点之间的通讯，这完全和它依赖于单一节点一样。<br />
<br />
<strong>健壮性 </strong>- Erlang具有多种基本的错误检测能力，它们能够用于构建容错系统。例如，进程能够监控其它进程的状态和活动，甚至这些进程是在其它节点上执行。在分布式系统中的线程能够配置为在其它节点故障的情况下自动进行故障恢复，并在故障节点恢复时自动迁移回到恢复节点。<br />
<br />
<strong>软实时性 </strong>- Erlang支持可编程的&ldquo;软&rdquo;实时系统，这种系统需要反应时间在毫秒级。而在这种系统中，长时间的垃圾收集（garbage collection）延迟是无法接受的，因此Erlang使用了递增式垃圾收集技术。<br />
<br />
<strong>热代码升级 </strong>- 一些系统不能够由于软件维护而停止运行。Erlang允许程序代码在运行系统中被修改。旧代码能被逐步淘汰而后被新代码替换。在此过渡期间，新旧代码是共存的。这也使得安装bug补丁、在运行系统上升级而不干扰系统操作成为了可能。<br />
<br />
<strong>递增式代码装载 </strong>- 用户能够控制代码如何被装载的细节。在嵌入式系统中，所有代码通常是在启动时就被完全装载。而在开发系统中，代码是按需装载的，甚至在系统运行时被装载的。如果测试到了未覆盖的bug，那么只有具有bug的代码需要被替换。<br />
<br />
<strong>外部接口 </strong>- Erlang进程与外部世界之间的通讯使用和在Erlang进程之间相同的消息传送机制。这种机制被用于和操作系统通讯、与其它语言编写的程序交互。如果出于高效率的需要，这种机制的一个特殊版本也允许例如C程序这样的代码直接链接到Erlang运行时系统中来。</p>
<p>入门参考文档：</p>
<ul>
    <li><a href="http://erlang.org/about.html">http://erlang.org/about.html</a></li>
    <li><a href="http://www.matrix.org.cn/resource/article/2007-09-04/2948b459-5ac5-11dc-af81-f34262335978.html">http://www.matrix.org.cn/resource/article/2007-09-04/2948b459-5ac5-11dc-af81-f34262335978.html</a></li>
    <li><a href="http://erlang-china.org/misc/simplified_erlang.html">http://erlang-china.org/misc/simplified_erlang.html</a></li>
    <li><a href="http://www.douban.com/subject/3260311/">http://www.douban.com/subject/3260311/</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>知道Erlang很久了，在我接触Ruby不久之后就了解了Erlang，但是一直没静下心好好看，恰巧利用这段时间开始我的Erlang之旅吧。</p>
<p>说句题外话，Erlang这个名字我很有亲切感，要是熟悉我的人肯定不会奇怪，呵呵。</p>
<p><strong>Erlang概述</strong><br />
<br />
Erlang不但是一种编程语言，而且它具有比编程语言更加贴近操作系统的一些特性：并发线程、作业调度、内存管理、分布式、网络化等。据说使用Erlang编写的Yaws Web服务器，其并发性能是apache的15倍！（这个没啥好炫耀的吧～）<br />
<br />
这个Erlang初始开源版本包含了Erlang的实现，同时它也是用于构建分布式高可用性系统的Ericsson中间件的最大组成部分。<br />
<br />
<strong>Erlang具有以下特性：</strong><br />
<br />
<strong>并发性 </strong>- Erlang具有超强的轻量级进程，这种进程对内存的需求是动态变化的，并且它没有共享内存和通过异步消息传送的通讯。Erlang支持超大量级的并发线程，并且不需要操作系统具有并发机制。<br />
<br />
<strong>分布式 </strong>- Erlang被设计用于运行在分布式环境下。一个Erlang虚拟机被成为Erlang节点。一个分布式Erlang系统是多个Erlang节点组成的网 络（通常每个处理器被作为一个节点）。一个Erlang节点能够创建运行在其它节点上的并行线程，而其它节点可以使用其它操作系统。线程依赖不同节点之间 的通讯，这完全和它依赖于单一节点一样。<br />
<br />
<strong>健壮性 </strong>- Erlang具有多种基本的错误检测能力，它们能够用于构建容错系统。例如，进程能够监控其它进程的状态和活动，甚至这些进程是在其它节点上执行。在分布式系统中的线程能够配置为在其它节点故障的情况下自动进行故障恢复，并在故障节点恢复时自动迁移回到恢复节点。<br />
<br />
<strong>软实时性 </strong>- Erlang支持可编程的&ldquo;软&rdquo;实时系统，这种系统需要反应时间在毫秒级。而在这种系统中，长时间的垃圾收集（garbage collection）延迟是无法接受的，因此Erlang使用了递增式垃圾收集技术。<br />
<br />
<strong>热代码升级 </strong>- 一些系统不能够由于软件维护而停止运行。Erlang允许程序代码在运行系统中被修改。旧代码能被逐步淘汰而后被新代码替换。在此过渡期间，新旧代码是共存的。这也使得安装bug补丁、在运行系统上升级而不干扰系统操作成为了可能。<br />
<br />
<strong>递增式代码装载 </strong>- 用户能够控制代码如何被装载的细节。在嵌入式系统中，所有代码通常是在启动时就被完全装载。而在开发系统中，代码是按需装载的，甚至在系统运行时被装载的。如果测试到了未覆盖的bug，那么只有具有bug的代码需要被替换。<br />
<br />
<strong>外部接口 </strong>- Erlang进程与外部世界之间的通讯使用和在Erlang进程之间相同的消息传送机制。这种机制被用于和操作系统通讯、与其它语言编写的程序交互。如果出于高效率的需要，这种机制的一个特殊版本也允许例如C程序这样的代码直接链接到Erlang运行时系统中来。</p>
<p>入门参考文档：</p>
<ul>
    <li><a href="http://erlang.org/about.html">http://erlang.org/about.html</a></li>
    <li><a href="http://www.matrix.org.cn/resource/article/2007-09-04/2948b459-5ac5-11dc-af81-f34262335978.html">http://www.matrix.org.cn/resource/article/2007-09-04/2948b459-5ac5-11dc-af81-f34262335978.html</a></li>
    <li><a href="http://erlang-china.org/misc/simplified_erlang.html">http://erlang-china.org/misc/simplified_erlang.html</a></li>
    <li><a href="http://www.douban.com/subject/3260311/">http://www.douban.com/subject/3260311/</a></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2009-01-09 10:44:43</wp:post_date>
		<wp:post_date_gmt>2009-01-09 10:44:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bf%9b%e7%a8%8b%e6%b6%88%e6%81%af%ef%bc%9a-%e5%bc%80%e5%a7%8berlang%e4%b9%8b%e6%97%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>391</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.131.79</wp:comment_author_IP>
			<wp:comment_date>2009-01-09 12:15:19</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Use MySQL with Erlang
http://dawsdesign.com/drupal/use_mysql_with_erlang]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>392</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.131.79</wp:comment_author_IP>
			<wp:comment_date>2009-01-09 12:23:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Erlang 编程手册（第二部分，包括匹配和模块）
http://computebank.spaces.live.com/?_c11_BlogPart_BlogPart=blogview&_c=BlogPart&_c02_owner=1&partqs=cat%3d%25e5%2588%2586%25e5%25b8%2583%25e5%25bc%258f%25e5%25b9%25b6%25e8%25a1%258c%25e8%25ae%25a1%25e7%25ae%2597
http://www.blogjava.net/killme2008/category/20770.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Android的Orientation Sensor三个坐标的含义</title>
		<link>http://www.iceskysl.com/?p=440</link>
		<pubDate>Sun, 18 Jan 2009 14:39:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=440</guid>
		<description></description>
		<content:encoded><![CDATA[<p>以前在黑莓手机里面有个GPS跟踪软件非常有趣，可以显示目前的方向，在Android中使用其提供的Sensor非常方便，如下是强制Landscape时候的情况：<br />
<br />
values[0]：方位角（水平旋转角），简单的说就是手机的头现在朝向哪个方位，0＝北、90＝东、180＝南、270＝西（可是好像不太准）<br />
values[1]：纵向旋转角，0＝面朝上平置、-90＝垂直向上、-180/180＝面朝下平置、90＝垂直向下<br />
values[2]：橫向旋转角，0＝朝前、90＝往右倒、-90＝往左倒</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>以前在黑莓手机里面有个GPS跟踪软件非常有趣，可以显示目前的方向，在Android中使用其提供的Sensor非常方便，如下是强制Landscape时候的情况：<br />
<br />
values[0]：方位角（水平旋转角），简单的说就是手机的头现在朝向哪个方位，0＝北、90＝东、180＝南、270＝西（可是好像不太准）<br />
values[1]：纵向旋转角，0＝面朝上平置、-90＝垂直向上、-180/180＝面朝下平置、90＝垂直向下<br />
values[2]：橫向旋转角，0＝朝前、90＝往右倒、-90＝往左倒</p>]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2009-01-18 14:39:42</wp:post_date>
		<wp:post_date_gmt>2009-01-18 14:39:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e7%9a%84orientation-sensor%e4%b8%89%e4%b8%aa%e5%9d%90%e6%a0%87%e7%9a%84%e5%90%ab%e4%b9%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>394</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.62.47</wp:comment_author_IP>
			<wp:comment_date>2009-01-18 14:43:40</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[自動偵測手機方向

要讓手機自動旋轉的話，只要在AndroidManifest.xml裡面把ORIENTAION改成sensor就好，可是要讓Activity偵測到方向改變的話，要去抓Activity的Display：


if (getWindowManager().getDefaultDisplay().getOrientation() == 0) {
  //Do some portrait
} else {
  //Do some Landscape

要注意的是這裡的常數和ActivityInfo的不一樣，0是直的，1是橫的。

然後因為每次改變螢幕方向都會引發一連串的onPause, onDestory, onCreate，所以需要的處理全部寫在onCreate裡面就大功告成。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>395</wp:comment_id>
			<wp:comment_author><![CDATA[tl3shi]]></wp:comment_author>
			<wp:comment_author_email>admin@i3zhai.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.i3zhai.com</wp:comment_author_url>
			<wp:comment_author_IP>202.197.33.66</wp:comment_author_IP>
			<wp:comment_date>2011-03-18 03:20:31</wp:comment_date>
			<wp:comment_date_gmt>2011-03-18 03:20:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您好。有个问题 想交流下。
关于Android的Orientation Sensor三个坐标的含义 你所说的
values[2]：橫向旋转角，0＝朝前、90＝往右倒、-90＝往左倒
跟我的实验效果是一样的。但是我想不通，为什么跟ANDROID API有冲突？values[2]: Roll, rotation around y-axis (-90 to 90), with positive values when the x-axis moves toward the z-axis. 说的是 X轴绕 Z轴转时为正，但我实验效果跟你一样啊。为负。手机屏幕面向自己竖立时为-90，背对时才90啊。。
你是怎么理解的啊？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>396</wp:comment_id>
			<wp:comment_author><![CDATA[Tickets-News.de]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.BackLinks2RSS.com/feeds/20002.xml</wp:comment_author_url>
			<wp:comment_author_IP>92.230.199.22</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 00:53:40</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 16:53:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... Iceskysl.1sters.com...</strong>

[...] Read More: iceskysl.1sters.com/?p=440 [...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在Android中计算GPS两点间的距离/速度</title>
		<link>http://www.iceskysl.com/?p=441</link>
		<pubDate>Sun, 18 Jan 2009 15:02:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=441</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Q:<span class="postbody">how to get distance between two GeoPoints in sdk 1.0 ? MapPoint.distanceSquared(MapPoint) is gone <img border="0" alt="Sad" src="http://www.anddev.org/images/smiles/sad.png" /> <br />
thaks!! <br />
</span></p>
<p><span class="postbody">A:</span><span class="postbody">you'll need to brush up on your trigonometry, and first compute the Haversine function (this is the standard way of doing it). In order to use the Java trig functions, you'll have to first convert all your angles from degrees to radians. <br />
Given two longitude/latitude pairs, and the earth's average radius (assume 6356.78km for your calculations), <br />
you can calculate the distance between the 2 points via this Java code: <br />
<br />
<strong>     	double EarthRad = 6356.78;	// in km ! </strong><br />
// first convert to radians... <br />
double geo1_lat = geo1.getLatitude()*java.lang.Math.PI/360; <br />
double geo1_lng = geo1.getLongitude()*java.lang.Math.PI/360; <br />
double geo2_lat = geo2.getLatitude()*java.lang.Math.PI/360; <br />
double geo2_lng = geo2.getLongitude()*java.lang.Math.PI/360; <br />
<br />
double deltaLat = java.lang.Math.abs(java.lang.Math.abs(geo2_lat) - java.lang.Math.abs(geo1_lat)); <br />
double deltaLng = java.lang.Math.abs(java.lang.Math.abs(geo2_lng) - java.lang.Math.abs(geo1_lng)); <br />
<br />
double dist = 2*EarthRad*java.lang.Math.asin(java.lang.Math.sqrt(haversine(deltaLat) <br />
+ java.lang.Math.cos(pair1_lat) <br />
*java.lang.Math.cos(pair1_lng)*haversine(deltaLng))); <br />
<br />
Where &quot;dist&quot; now contains the distance between along the earth's surface. <br />
You can find the Haversine function trig equation by Googling it, then construct a method that returns the appropriate value.</span></p>
<p><span class="postbody">Computing the speed is straightforward: you know your sampling frequency, and you now know the distance between the most recent two points, so, employee speed = distance / sampling interval</span></p>
<p><span class="postbody">参考：http://www.anddev.org/distance_between_two_geopoints_in_sdk10-t4195.html</span></p>
<p><span class="postbody">http://www.anddev.org/calculating_distance_between_two_gps_points-t3708.html</span></p>
<p><span class="postbody"><br />
</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Q:<span class="postbody">how to get distance between two GeoPoints in sdk 1.0 ? MapPoint.distanceSquared(MapPoint) is gone <img border="0" alt="Sad" src="http://www.anddev.org/images/smiles/sad.png" /> <br />
thaks!! <br />
</span></p>
<p><span class="postbody">A:</span><span class="postbody">you'll need to brush up on your trigonometry, and first compute the Haversine function (this is the standard way of doing it). In order to use the Java trig functions, you'll have to first convert all your angles from degrees to radians. <br />
Given two longitude/latitude pairs, and the earth's average radius (assume 6356.78km for your calculations), <br />
you can calculate the distance between the 2 points via this Java code: <br />
<br />
double EarthRad = 6356.78;	// in km ! <br />
// first convert to radians... <br />
double geo1_lat = geo1.getLatitude()*java.lang.Math.PI/360; <br />
double geo1_lng = geo1.getLongitude()*java.lang.Math.PI/360; <br />
double geo2_lat = geo2.getLatitude()*java.lang.Math.PI/360; <br />
double geo2_lng = geo2.getLongitude()*java.lang.Math.PI/360; <br />
<br />
double deltaLat = java.lang.Math.abs(java.lang.Math.abs(geo2_lat) - java.lang.Math.abs(geo1_lat)); <br />
double deltaLng = java.lang.Math.abs(java.lang.Math.abs(geo2_lng) - java.lang.Math.abs(geo1_lng)); <br />
<br />
double dist = 2*EarthRad*java.lang.Math.asin(java.lang.Math.sqrt(haversine(deltaLat) <br />
+ java.lang.Math.cos(pair1_lat) <br />
*java.lang.Math.cos(pair1_lng)*haversine(deltaLng))); <br />
<br />
Where &quot;dist&quot; now contains the distance between along the earth's surface. <br />
You can find the Haversine function trig equation by Googling it, then construct a method that returns the appropriate value.</span></p>
<p><span class="postbody">Computing the speed is straightforward: you know your sampling frequency, and you now know the distance between the most recent two points, so, employee speed = distance / sampling interval</span></p>
<p><span class="postbody">参考：http://www.anddev.org/distance_between_two_geopoints_in_sdk10-t4195.html</span></p>
<p><span class="postbody">http://www.anddev.org/calculating_distance_between_two_gps_points-t3708.html</span></p>
<p><span class="postbody"><br />
</span></p>]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2009-01-18 15:02:07</wp:post_date>
		<wp:post_date_gmt>2009-01-18 15:02:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8android%e4%b8%ad%e8%ae%a1%e7%ae%97gps%e4%b8%a4%e7%82%b9%e9%97%b4%e7%9a%84%e8%b7%9d%e7%a6%bb%e9%80%9f%e5%ba%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Android中使用Map需要注意的技巧</title>
		<link>http://www.iceskysl.com/?p=445</link>
		<pubDate>Sun, 18 Jan 2009 07:26:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=445</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在Android中使用GoogleMap非常方便，但是有些小技巧或者注意事项你必须牢记，否则调试半天你也不会找到啥线索，浪费时间不说，更让你狂抓，以下技巧都是我在实际项目中遇到的，不断更新和维护，如果你有类似技巧，欢迎分享：</p>
<p>（以下技巧是基于SDK 1.0的）</p>
<p><strong>一、申请Apikey，并放在正确的位置</strong></p>
<p>这个应该都知道，但是是申请得到的key放哪里很多人不知道，可以放在</p>
<p>1、XML布局文件中</p>
<p>&lt;view android:id=&quot;@+id/mv&quot;<br />
&nbsp;&nbsp; class=&quot;com.google.android.maps.MapView&quot;<br />
&nbsp;&nbsp; android:layout_width=&quot;fill_parent&quot;<br />
&nbsp;&nbsp; android:layout_height=&quot;fill_parent&quot;<br />
&nbsp;&nbsp; android:layout_weight=&quot;1&quot; <br />
&nbsp;&nbsp; android:apiKey=&quot;01Yu9W3X3vbpYT3x33chPXXX7U1Z6jy8WYZXNFA&quot; <br />
&nbsp;&nbsp; /&gt;</p>
<p>2、java中</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mMapView = new MapView(this, &quot;01Yu9W3X3vbpYT3x33chPxxx7U1Z6jy8WYZXNFA&quot;);</p>
<p><strong>二、记得导入<span class="postbody">uses-library </span></strong></p>
<p><span class="postbody"> 由于1.0版本的修改，使得map包不再是默认的了，使用的时候需要在manifest中的application节点下加入</span></p>
<p><span class="postbody">&lt;uses-library android:name=&quot;com.google.android.maps&quot; /&gt; <br />
</span></p>
<p><span class="postbody">否则，你将遇到可恶的&ldquo;</span><span class="postbody">java.lang.NoClassDefFoundError: </span><span class="postbody">&rdquo;，切记！</span></p>
<p><strong><span class="postbody">三、需要给予一定的权限</span></strong></p>
<p><span class="postbody">因为要使用GoogleMAP的service，所以需要<br />
&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;&gt;&lt;/uses-permission&gt;</span></p>
<p><span class="postbody">如果需要GPS等应用，还需要</span></p>
<p><span class="postbody">&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;&gt;&lt;/uses-permission&gt;</span></p>
<p><strong><span class="postbody">四、Activity需要继承自MapActivity</span></strong></p>
<p><span class="postbody">类似如下代码；</span></p>
<p><span class="postbody">package com.iceskysl.showmap;<br />
<br />
import com.google.android.maps.MapActivity;<br />
<br />
import android.os.Bundle;<br />
<br />
public class ShowMap extends MapActivity {<br />
&nbsp;&nbsp;&nbsp; /** Called when the activity is first created. */<br />
&nbsp;&nbsp;&nbsp; @Override<br />
&nbsp;&nbsp;&nbsp; public void onCreate(Bundle savedInstanceState) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super.onCreate(savedInstanceState);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setContentView(R.layout.main);<br />
&nbsp;&nbsp;&nbsp; }<br />
<br />
&nbsp;&nbsp;&nbsp; @Override<br />
&nbsp;&nbsp;&nbsp; protected boolean isRouteDisplayed() {<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // TODO Auto-generated method stub<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return false;<br />
&nbsp;&nbsp;&nbsp; }<br />
}<br />
</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在Android中使用GoogleMap非常方便，但是有些小技巧或者注意事项你必须牢记，否则调试半天你也不会找到啥线索，浪费时间不说，更让你狂抓，以下技巧都是我在实际项目中遇到的，不断更新和维护，如果你有类似技巧，欢迎分享：</p>
<p>（以下技巧是基于SDK 1.0的）</p>
<p><strong>一、申请Apikey，并放在正确的位置</strong></p>
<p>这个应该都知道，但是是申请得到的key放哪里很多人不知道，可以放在</p>
<p>1、XML布局文件中</p>
<p>&lt;view android:id=&quot;@+id/mv&quot;<br />
&nbsp;&nbsp; class=&quot;com.google.android.maps.MapView&quot;<br />
&nbsp;&nbsp; android:layout_width=&quot;fill_parent&quot;<br />
&nbsp;&nbsp; android:layout_height=&quot;fill_parent&quot;<br />
&nbsp;&nbsp; android:layout_weight=&quot;1&quot; <br />
&nbsp;&nbsp; android:apiKey=&quot;01Yu9W3X3vbpYT3x33chPXXX7U1Z6jy8WYZXNFA&quot; <br />
&nbsp;&nbsp; /&gt;</p>
<p>2、java中</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mMapView = new MapView(this, &quot;01Yu9W3X3vbpYT3x33chPxxx7U1Z6jy8WYZXNFA&quot;);</p>
<p><strong>二、记得导入<span class="postbody">uses-library </span></strong></p>
<p><span class="postbody"> 由于1.0版本的修改，使得map包不再是默认的了，使用的时候需要在manifest中的application节点下加入</span></p>
<p><span class="postbody">&lt;uses-library android:name=&quot;com.google.android.maps&quot; /&gt; <br />
</span></p>
<p><span class="postbody">否则，你将遇到可恶的&ldquo;</span><span class="postbody">java.lang.NoClassDefFoundError: </span><span class="postbody">&rdquo;，切记！</span></p>
<p><strong><span class="postbody">三、需要给予一定的权限</span></strong></p>
<p><span class="postbody">因为要使用GoogleMAP的service，所以需要<br />
&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;&gt;&lt;/uses-permission&gt;</span></p>
<p><span class="postbody">如果需要GPS等应用，还需要</span></p>
<p><span class="postbody">&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;&gt;&lt;/uses-permission&gt;</span></p>
<p><strong><span class="postbody">四、Activity需要继承自MapActivity</span></strong></p>
<p><span class="postbody">类似如下代码；</span></p>
<p><span class="postbody">package com.iceskysl.showmap;<br />
<br />
import com.google.android.maps.MapActivity;<br />
<br />
import android.os.Bundle;<br />
<br />
public class ShowMap extends MapActivity {<br />
&nbsp;&nbsp;&nbsp; /** Called when the activity is first created. */<br />
&nbsp;&nbsp;&nbsp; @Override<br />
&nbsp;&nbsp;&nbsp; public void onCreate(Bundle savedInstanceState) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super.onCreate(savedInstanceState);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setContentView(R.layout.main);<br />
&nbsp;&nbsp;&nbsp; }<br />
<br />
&nbsp;&nbsp;&nbsp; @Override<br />
&nbsp;&nbsp;&nbsp; protected boolean isRouteDisplayed() {<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // TODO Auto-generated method stub<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return false;<br />
&nbsp;&nbsp;&nbsp; }<br />
}<br />
</span></p>]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2009-01-18 15:26:23</wp:post_date>
		<wp:post_date_gmt>2009-01-18 07:26:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8android%e4%b8%ad%e4%bd%bf%e7%94%a8map%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="jarsigner"><![CDATA[jarsigner]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[Map]]></category>
		<wp:comment>
			<wp:comment_id>393</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.62.47</wp:comment_author_IP>
			<wp:comment_date>2009-01-19 09:47:42</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[申请APIkey的时候，类似命令如下：
C:\Documents and Settings\Administrator\Local Settings\Application Data\Android>
"C:\Program Files\Java\jdk1.6.0_10\bin\keytool.exe" -list -alias androiddebugkey
 -keystore debug.keystore -storepass android -keypass android
androiddebugkey, 2008-9-23, PrivateKeyEntry,
认证指纹 (MD5)： 1D:68:43:7C:14:2E:CC:CA:35:8B:1F:93:A7:91:AD:45]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>如何使用jarsigner给Android APK签名</title>
		<link>http://www.iceskysl.com/?p=446</link>
		<pubDate>Wed, 21 Jan 2009 04:26:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=446</guid>
		<description></description>
		<content:encoded><![CDATA[F:\keytools&gt;"C:\Program Files\Java\jdk1.6.0_10\bin\jarsigner.exe" -verbose -keystore keys/iceskysl.keystore  -signedjar iTracks_signed.apk iTracks.apk iceskysl.keystore]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><br />
F:\keytools&gt;&quot;C:\Program Files\Java\jdk1.6.0_10\bin\jarsigner.exe&quot; -verbose -keystore keys/iceskysl.keystore&nbsp; -signedjar iTracks_signed.apk iTracks.apk iceskysl.keystore</p>]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2009-01-21 12:26:10</wp:post_date>
		<wp:post_date_gmt>2009-01-21 04:26:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8jarsigner%e7%bb%99android-apk%e7%ad%be%e5%90%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="jarsigner"><![CDATA[jarsigner]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[Map]]></category>
		<wp:comment>
			<wp:comment_id>397</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.136.130.158</wp:comment_author_IP>
			<wp:comment_date>2009-01-21 21:46:03</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jarsigner用法： [选项] jar 文件别名
       jarsigner -verify [选项] jar 文件
[-keystore <url>]           密钥库位置
[-storepass <口令>]         用于密钥库完整性的口令
[-storetype <类型>]         密钥库类型
[-keypass <口令>]           专用密钥的口令（如果不同）
[-sigfile <文件>]           .SF/.DSA 文件的名称
[-signedjar <文件>]         已签名的 JAR 文件的名称
[-digestalg <算法>]    摘要算法的名称
[-sigalg <算法>]       签名算法的名称
[-verify]                   验证已签名的 JAR 文件
[-verbose]                  签名/验证时输出详细信息
[-certs]                    输出详细信息和验证时显示证书
[-tsa <url>]                时间戳机构的位置
[-tsacert <别名>]           时间戳机构的公共密钥证书
[-altsigner <类>]           替代的签名机制的类名
[-altsignerpath <路径列表>] 替代的签名机制的位置
[-internalsf]               在签名块内包含 .SF 文件
[-sectionsonly]             不计算整个清单的散列
[-protected]                密钥库已保护验证路径
[-providerName <名称>]      提供者名称
[-providerClass <类>        加密服务提供者的名称
[-providerArg <参数>]] ... 主类文件和构造函数参数]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>受伤差不多好了，该上班了</title>
		<link>http://www.iceskysl.com/?p=447</link>
		<pubDate>Mon, 02 Feb 2009 00:19:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[<p>从上次滑雪不慎摔伤，到现在已经一个多月了，从请假休息到现在也差不多一个月的时间了，一个月的时间过得好快。受伤的手腕已经拆除石膏了，绑了一个月的石膏，关节好僵硬，活动起来还真不灵活，还要慢慢做功能恢复训练，希望能早日康复。</p>
<p>明天回去工作，新年新气象，希望一切顺利.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>从上次滑雪不慎摔伤，到现在已经一个多月了，从请假休息到现在也差不多一个月的时间了，一个月的时间过得好快。受伤的手腕已经拆除石膏了，绑了一个月的石膏，关节好僵硬，活动起来还真不灵活，还要慢慢做功能恢复训练，希望能早日康复。</p>
<p>明天回去工作，新年新气象，希望一切顺利.</p>]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2009-02-02 08:19:33</wp:post_date>
		<wp:post_date_gmt>2009-02-02 00:19:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%97%e4%bc%a4%e5%b7%ae%e4%b8%8d%e5%a4%9a%e5%a5%bd%e4%ba%86%ef%bc%8c%e8%af%a5%e4%b8%8a%e7%8f%ad%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e5%8f%97%e4%bc%a4"><![CDATA[受伤]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>398</wp:comment_id>
			<wp:comment_author><![CDATA[小虎]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://impunk@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>61.134.52.171</wp:comment_author_IP>
			<wp:comment_date>2009-02-10 03:12:05</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在恢复的怎样了？好了出来和我打篮球啊~~嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>399</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.235.252</wp:comment_author_IP>
			<wp:comment_date>2009-02-11 18:58:43</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哇哈，差不多快好完了。。

但是估计没法打篮球了。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails2.3 is coming..</title>
		<link>http://www.iceskysl.com/?p=448</link>
		<pubDate>Sat, 07 Feb 2009 04:55:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=448</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Rails2.3应该马上就要发布了，从介绍了看，又是一大堆的更新和改进，非常值得期待，正好有个项目，来尝尝鲜，如下：<br />
其他更新请参考：<a href="http://guides.rubyonrails.org/2_3_release_notes.html">http://guides.rubyonrails.org/2_3_release_notes.html</a><br />
<br />
Microsoft Windows XP [版本 5.1.2600]<br />
(C) 版权所有 1985-2001 Microsoft Corp.<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rails --source http://gems.r<br />
ubyonrails.org<br />
ERROR:&nbsp; Error installing rails:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; actionpack requires rack (&gt;= 0.9.0, runtime)<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rack<br />
Successfully installed rack-0.9.1<br />
1 gem installed<br />
Installing ri documentation for rack-0.9.1...<br />
Installing RDoc documentation for rack-0.9.1...<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rails --source http://gems.r<br />
ubyonrails.org<br />
Successfully installed actionpack-2.3.0<br />
Successfully installed actionmailer-2.3.0<br />
Successfully installed activeresource-2.3.0<br />
Successfully installed rails-2.3.0<br />
4 gems installed<br />
Installing ri documentation for actionpack-2.3.0...<br />
Installing ri documentation for actionmailer-2.3.0...<br />
Installing ri documentation for activeresource-2.3.0...<br />
Installing RDoc documentation for actionpack-2.3.0...<br />
Installing RDoc documentation for actionmailer-2.3.0...<br />
Installing RDoc documentation for activeresource-2.3.0...<br />
<br />
C:\Documents and Settings\Administrator&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Rails2.3应该马上就要发布了，从介绍了看，又是一大堆的更新和改进，非常值得期待，正好有个项目，来尝尝鲜，如下：<br />
其他更新请参考：<a href="http://guides.rubyonrails.org/2_3_release_notes.html">http://guides.rubyonrails.org/2_3_release_notes.html</a><br />
<br />
Microsoft Windows XP [版本 5.1.2600]<br />
(C) 版权所有 1985-2001 Microsoft Corp.<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rails --source http://gems.r<br />
ubyonrails.org<br />
ERROR:&nbsp; Error installing rails:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; actionpack requires rack (&gt;= 0.9.0, runtime)<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rack<br />
Successfully installed rack-0.9.1<br />
1 gem installed<br />
Installing ri documentation for rack-0.9.1...<br />
Installing RDoc documentation for rack-0.9.1...<br />
<br />
C:\Documents and Settings\Administrator&gt;gem install rails --source http://gems.r<br />
ubyonrails.org<br />
Successfully installed actionpack-2.3.0<br />
Successfully installed actionmailer-2.3.0<br />
Successfully installed activeresource-2.3.0<br />
Successfully installed rails-2.3.0<br />
4 gems installed<br />
Installing ri documentation for actionpack-2.3.0...<br />
Installing ri documentation for actionmailer-2.3.0...<br />
Installing ri documentation for activeresource-2.3.0...<br />
Installing RDoc documentation for actionpack-2.3.0...<br />
Installing RDoc documentation for actionmailer-2.3.0...<br />
Installing RDoc documentation for activeresource-2.3.0...<br />
<br />
C:\Documents and Settings\Administrator&gt;</p>]]></excerpt:encoded>
		<wp:post_id>448</wp:post_id>
		<wp:post_date>2009-02-07 12:55:42</wp:post_date>
		<wp:post_date_gmt>2009-02-07 04:55:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails2-3-is-coming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<wp:comment>
			<wp:comment_id>400</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.204.236</wp:comment_author_IP>
			<wp:comment_date>2009-02-07 13:06:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[F:/svn/codes/yobo/yobo_ws_api/app/controllers/application.rb has been renamed to F:/svn/codes/yobo/yobo_ws_api/app/controllers/application_controller.rb, update your SCM as necessary]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>401</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.235.252</wp:comment_author_IP>
			<wp:comment_date>2009-02-11 18:59:16</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没啥特殊的感觉。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dynamic Scopes is si cool~</title>
		<link>http://www.iceskysl.com/?p=449</link>
		<pubDate>Fri, 13 Feb 2009 05:56:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=449</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早就见过Rails2中增加的Scope功能，但是一直没在意，今天遇到一个需求，想在@user.topics中按照条件返回指定的数量或者排序，发现按照以往的处理方法比较麻烦，也不够优雅，经一朋友指点，觉得Scope应该有戏，仔细看了下，果然适合我的这个场景，代码非常优雅，如下：</p>
<p>&nbsp;&nbsp;&nbsp; @albums =Album.scoped_by_singer_id(@artist.id).find(:all, :limit =&gt; 5)<br />
不多说，应该都看得懂，如果你想了解更加详细的使用方法，你可以去下面的参考资料地址去看看，再举个例子：</p>
<p><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: verdana; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<pre style="border: 1px solid rgb(204, 204, 204); margin: 0px 0px 10px; padding: 10px; overflow: auto; background-color: rgb(238, 238, 238); line-height: 1.4em;"><tt style="border-width: 0px; margin: 0px; padding: 0px; background-image: none;">Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span><br />Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">).</span>find<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(:</span>all<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">,</span><br />  <span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">:</span>conditions <span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">=&gt;</span> <span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">&quot;status = 'open'&quot;</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span><br />Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">).</span>scoped_by_status<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">&quot;open&quot;</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span></tt></pre>
</span></p>
<p><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: verdana; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<ul style="margin: 1em 0px 10px; padding: 0px; list-style-type: none;">
    <li style="margin: 0px 0px 0px 0.5em; padding: 0px 0px 0px 1em; background-image: url(http://guides.rubyonrails.org/images/bullet.gif); background-repeat: no-repeat; background-position: 0px 0.55em;">
    <p style="margin: 0px 0px 0.5em; padding: 0px;">Lead Contributor:<span class="Apple-converted-space">&nbsp;</span><a style="margin: 0px; padding: 0px; color: rgb(187, 34, 51);" href="http://evilmartians.com/">Yaroslav Markin</a></p>
    </li>
    <li style="margin: 0px 0px 0px 0.5em; padding: 0px 0px 0px 1em; background-image: url(http://guides.rubyonrails.org/images/bullet.gif); background-repeat: no-repeat; background-position: 0px 0.55em;">
    <p style="margin: 0px 0px 0.5em; padding: 0px;">More Information:<span class="Apple-converted-space">&nbsp;</span><a style="margin: 0px; padding: 0px; color: rgb(153, 17, 34);" href="http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods">What&rsquo;s New in Edge Rails: Dynamic Scope Methods</a>.</p>
    </li>
</ul>
</span></p>
<p>参考：</p>
<p><a href="http://guides.rubyonrails.org/2_3_release_notes.html">http://guides.rubyonrails.org/2_3_release_notes.html</a></p>
<p><a href="http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods">http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>早就见过Rails2中增加的Scope功能，但是一直没在意，今天遇到一个需求，想在@user.topics中按照条件返回指定的数量或者排 序，发现按照以往的处理方法比较麻烦，也不够优雅，经一朋友指点，觉得Scope应该有戏，仔细看了下，果然适合我的这个场景，代码非常优雅，如下：</p>
<p>&nbsp;&nbsp;&nbsp; @albums =Album.scoped_by_singer_id(@artist.id).find(:all, :limit =&gt; 5)<br />
不多说，应该都看得懂，如果你想了解更加详细的使用方法，你可以去下面的参考资料地址去看看，再举个例子：</p>
<p><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: verdana; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<pre style="border: 1px solid rgb(204, 204, 204); margin: 0px 0px 10px; padding: 10px; overflow: auto; background-color: rgb(238, 238, 238); line-height: 1.4em;"><tt style="border-width: 0px; margin: 0px; padding: 0px; background-image: none;">Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span><br />Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">).</span>find<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(:</span>all<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">,</span><br />  <span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">:</span>conditions <span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">=&gt;</span> <span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">&quot;status = 'open'&quot;</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span><br />Order<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">.</span>scoped_by_customer_id<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(153, 51, 153);">12</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">).</span>scoped_by_status<span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">(</span><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">&quot;open&quot;</span><span style="margin: 0px; padding: 0px; color: rgb(153, 0, 0);">)</span></tt></pre>
</span></p>
<p><span style="border-collapse: separate; color: rgb(51, 51, 51); font-family: verdana; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<ul style="margin: 1em 0px 10px; padding: 0px; list-style-type: none;">
    <li style="margin: 0px 0px 0px 0.5em; padding: 0px 0px 0px 1em; background-image: url(http://guides.rubyonrails.org/images/bullet.gif); background-repeat: no-repeat; background-position: 0px 0.55em;">
    <p style="margin: 0px 0px 0.5em; padding: 0px;">Lead Contributor:<span class="Apple-converted-space">&nbsp;</span><a style="margin: 0px; padding: 0px; color: rgb(187, 34, 51);" href="http://evilmartians.com/">Yaroslav Markin</a></p>
    </li>
    <li style="margin: 0px 0px 0px 0.5em; padding: 0px 0px 0px 1em; background-image: url(http://guides.rubyonrails.org/images/bullet.gif); background-repeat: no-repeat; background-position: 0px 0.55em;">
    <p style="margin: 0px 0px 0.5em; padding: 0px;">More Information:<span class="Apple-converted-space">&nbsp;</span><a style="margin: 0px; padding: 0px; color: rgb(153, 17, 34);" href="http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods">What&rsquo;s New in Edge Rails: Dynamic Scope Methods</a>.</p>
    </li>
</ul>
</span></p>
<p>参考：</p>
<p><a href="http://guides.rubyonrails.org/2_3_release_notes.html">http://guides.rubyonrails.org/2_3_release_notes.html</a></p>
<p><a href="http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods">http://ryandaigle.com/articles/2008/12/29/what-s-new-in-edge-rails-dynamic-scope-methods</a></p>]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date>2009-02-13 13:56:00</wp:post_date>
		<wp:post_date_gmt>2009-02-13 05:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-scopes-is-si-cool</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="scopes"><![CDATA[Scopes]]></category>
		<wp:comment>
			<wp:comment_id>402</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.235.252</wp:comment_author_IP>
			<wp:comment_date>2009-02-13 13:56:33</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Article.scoped_by_published_and_user_id(true, 1).find(:all, :limit => 5)
  #=> "SELECT * FROM articles WHERE published = 1 AND user_id = 1 LIMIT 5"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>403</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.235.252</wp:comment_author_IP>
			<wp:comment_date>2009-02-13 13:57:02</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Article.scoped_by_published(true).scoped_by_user_id(1)
  #=> "SELECT * FROM articles WHERE published = 1 AND user_id = 1"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Url encode&amp;URLDecode in ruby</title>
		<link>http://www.iceskysl.com/?p=450</link>
		<pubDate>Tue, 17 Feb 2009 05:02:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=450</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在一些API接口传递参数的时候，需要对URL做一些编码，有人写了两个脚本，如下：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;URLDecode(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;str.gsub!(/%[a-fA-F0-9]{2}/)&nbsp;{&nbsp;|x|&nbsp;x&nbsp;=&nbsp;x[1..2].hex.chr&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;URLEncode(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;str.gsub!(/[^\w$&amp;\-+.,\/:;=?@]/)&nbsp;{&nbsp;|x|&nbsp;x&nbsp;=&nbsp;format(<span class="string">&quot;%%%x&quot;</span><span>,&nbsp;x[0])&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
其实不需要这么麻烦，在Ruby中提供了现成的函数，比如CGI::escape, CGI::inescape, CGI::escapeHTML, CGI::inescapeHTML，CGI::unescape()等，详细的可以看：<a href="http://www.ruby-doc.org/core/classes/CGI.html">http://www.ruby-doc.org/core/classes/CGI.html</a></p>
<p>看下他的写法：</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;File&nbsp;lib/cgi-lib.rb,&nbsp;line&nbsp;134</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;CGI:</span><span class="symbol">:escape</span><span>(str)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str.gsub(/[^a-zA-Z0-9_\-.]/n){&nbsp;sprintf(<span class="string">&quot;%%%02X&quot;</span><span>,&nbsp;$&amp;.unpack(</span><span class="string">&quot;C&quot;</span><span>)[0])&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;File&nbsp;lib/cgi-lib.rb,&nbsp;line&nbsp;139</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;CGI:</span><span class="symbol">:unescape</span><span>(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str.gsub(/\+/,&nbsp;<span class="string">'&nbsp;'</span><span>).gsub(/%([0-9a-fA-F]{2})/){&nbsp;[</span><span class="variable">$1</span><span>.hex].pack(</span><span class="string">&quot;c&quot;</span><span>)&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>在一些API接口传递参数的时候，需要对URL做一些编码，有人写了两个脚本，如下：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;URLDecode(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;str.gsub!(/%[a-fA-F0-9]{2}/)&nbsp;{&nbsp;|x|&nbsp;x&nbsp;=&nbsp;x[1..2].hex.chr&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;URLEncode(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;str.gsub!(/[^\w$&amp;\-+.,\/:;=?@]/)&nbsp;{&nbsp;|x|&nbsp;x&nbsp;=&nbsp;format(<span class="string">&quot;%%%x&quot;</span><span>,&nbsp;x[0])&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>其实不需要这么麻烦，在Ruby中提供了现成的函数，比如CGI::escape, CGI::inescape, CGI::escapeHTML, CGI::inescapeHTML，CGI::unescape()等，详细的可以看：<a href="http://www.ruby-doc.org/core/classes/CGI.html">http://www.ruby-doc.org/core/classes/CGI.html</a></p>
<p>看下他的写法：</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="comment">#&nbsp;File&nbsp;lib/cgi-lib.rb,&nbsp;line&nbsp;134</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;CGI:</span><span class="symbol">:escape</span><span>(str)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str.gsub(/[^a-zA-Z0-9_\-.]/n){&nbsp;sprintf(<span class="string">&quot;%%%02X&quot;</span><span>,&nbsp;$&amp;.unpack(</span><span class="string">&quot;C&quot;</span><span>)[0])&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;File&nbsp;lib/cgi-lib.rb,&nbsp;line&nbsp;139</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;CGI:</span><span class="symbol">:unescape</span><span>(str)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str.gsub(/\+/,&nbsp;<span class="string">'&nbsp;'</span><span>).gsub(/%([0-9a-fA-F]{2})/){&nbsp;[</span><span class="variable">$1</span><span>.hex].pack(</span><span class="string">&quot;c&quot;</span><span>)&nbsp;}&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>450</wp:post_id>
		<wp:post_date>2009-02-17 13:02:02</wp:post_date>
		<wp:post_date_gmt>2009-02-17 05:02:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>url-encodeurldecode-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="encode"><![CDATA[encode]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="urldecode"><![CDATA[URLDecode]]></category>
	</item>
	<item>
		<title>Rails: Disabling XML character escaping for to_xml &amp; xml builder</title>
		<link>http://www.iceskysl.com/?p=451</link>
		<pubDate>Wed, 18 Feb 2009 17:46:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In my case, I had to genarate the xml view&nbsp; for api render,but in rails, i got a &amp;XXX format string for non englisg, it also appears to_xml will automatically escape any entities into their corresponding &amp;XXX representation.&nbsp; There's a piece in the documentation that says &quot;If $KCODE is set to u and encoding set to UTF8, then escaping will NOT be performed.&quot;<br />
<br />
Unfortunately, this doesn't appear to be the case.&nbsp; Even after following the docs and ensuring that default_charset is indeed UTF-8 (actually the default for Rails nowadays), we still get encoded characters in to_xml output.<br />
<br />
Since our client is UTF-8 aware, we need to pass thru the UTF-8 data intact. The only way we've found to do this is thru the following horrible monkey-patch:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Builder&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">class</span><span>&nbsp;XmlBase&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;_escape(text)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
What's the proper way to do this?<br />
<br />
PS:<br />
somebody say that to &quot;set $KCODE='UTF8' in config/environment.rb can solve this issue.&quot; but it's not for me.<br />
<br />
more infos:<br />
http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/2c13ad7c0f8c0781</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>In my case, I had to genarate the xml view&nbsp; for api render,but in rails, i got a &amp;XXX format string for non englisg, it also appears to_xml will automatically escape any entities into their corresponding &amp;XXX representation.&nbsp; There's a piece in the documentation that says &quot;If $KCODE is set to u and encoding set to UTF8, then escaping will NOT be performed.&quot;<br />
<br />
Unfortunately, this doesn't appear to be the case.&nbsp; Even after following the docs and ensuring that default_charset is indeed UTF-8 (actually the default for Rails nowadays), we still get encoded characters in to_xml output.<br />
<br />
Since our client is UTF-8 aware, we need to pass thru the UTF-8 data intact. The only way we've found to do this is thru the following horrible monkey-patch:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">module</span><span>&nbsp;Builder&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">class</span><span>&nbsp;XmlBase&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;_escape(text)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p><br />
What's the proper way to do this?<br />
<br />
PS:<br />
somebody say that to &quot;set $KCODE='UTF8' in config/environment.rb can solve this issue.&quot; but it's not for me.</p>]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2009-02-19 01:46:06</wp:post_date>
		<wp:post_date_gmt>2009-02-18 17:46:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-disabling-xml-character-escaping-for-to_xml-xml-builder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="to_xml"><![CDATA[to_xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_4584d88f8d5fa342772454f6cfbf5cf4</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7db9e0dafaccbb3aab8082f852a527cf</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Generate a random string</title>
		<link>http://www.iceskysl.com/?p=452</link>
		<pubDate>Sun, 22 Feb 2009 22:15:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=452</guid>
		<description></description>
		<content:encoded><![CDATA[Generates a random string of lowercase letters. Great for email verification codes  or user password salt....
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb">
	<li class="alt"><span><span class="builtin">Array</span><span>.</span><span class="keyword">new</span><span>(6) { (rand(122-97) + 97).chr }.join
</span></span></li>
</ol>
</div>
or:
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb">
	<li class="alt"><span><span class="keyword">def</span><span> newpass( len ) </span></span></li>
	<li><span> chars = (<span class="string">"a"</span><span>..</span><span class="string">"z"</span><span>).to_a + (</span><span class="string">"A"</span><span>..</span><span class="string">"Z"</span><span>).to_a + (</span><span class="string">"0"</span><span>..</span><span class="string">"9"</span><span>).to_a </span></span></li>
	<li class="alt"><span> newpass = <span class="string">""</span><span> </span></span></li>
	<li><span> 1.upto(len) { |i| newpass &lt;&lt; chars[rand(chars.size-1)] } </span></li>
	<li class="alt"><span> <span class="keyword">return</span><span> newpass </span></span></li>
	<li><span><span class="keyword">end</span><span> </span></span></li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Generates a random string of lowercase letters. Great for email verification codes&nbsp; or user password salt....</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="builtin">Array</span><span>.</span><span class="keyword">new</span><span>(6)&nbsp;{&nbsp;(rand(122-97)&nbsp;+&nbsp;97).chr&nbsp;}.join&nbsp; <br />
    </span></span></li>
</ol>
</div>
<p>or:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;newpass(&nbsp;len&nbsp;)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;chars&nbsp;=&nbsp;(<span class="string">&quot;a&quot;</span><span>..</span><span class="string">&quot;z&quot;</span><span>).to_a&nbsp;+&nbsp;(</span><span class="string">&quot;A&quot;</span><span>..</span><span class="string">&quot;Z&quot;</span><span>).to_a&nbsp;+&nbsp;(</span><span class="string">&quot;0&quot;</span><span>..</span><span class="string">&quot;9&quot;</span><span>).to_a&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;newpass&nbsp;=&nbsp;<span class="string">&quot;&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;1.upto(len)&nbsp;{&nbsp;|i|&nbsp;newpass&nbsp;&lt;&lt;&nbsp;chars[rand(chars.size-1)]&nbsp;}&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;newpass&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2009-02-22 22:15:10</wp:post_date>
		<wp:post_date_gmt>2009-02-22 22:15:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generate-a-random-string</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="random"><![CDATA[random]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:comment>
			<wp:comment_id>404</wp:comment_id>
			<wp:comment_author><![CDATA[KaiChen]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://chenk85.com</wp:comment_author_url>
			<wp:comment_author_IP>220.242.138.194</wp:comment_author_IP>
			<wp:comment_date>2009-02-23 10:21:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[使用rendexp 这个gem就好了，用正则表达式创建随机单词。

http://github.com/benburkert/randexp/tree/master]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Install mysql(&amp;mysql gem) on Mac OSX</title>
		<link>http://www.iceskysl.com/?p=453</link>
		<pubDate>Fri, 27 Feb 2009 04:56:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="border-collapse: collapse; color: rgb(0, 0, 0); font-family: arial; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<div>here is some tips:<br />
<br />
1、Install MYSQL：sudo port install mysql5</div>
<div>2、init some tables：sudo mysql_install_db5</div>
<div>3、install mysql gem：ARCHFLAGS=&quot;-arch i386&quot; gem install mysql -- --with-mysql-dir=/usr/local/<wbr></wbr>mysql</div>
</span></p>
<p>Here is some userfull resource links:<br />
<a href="http://www.macruby.org/trac/wiki/Troubleshooting">http://www.macruby.org/trac/wiki/Troubleshooting</a><br />
<a href="http://www.caibaohua.com/blog/2008/12/02/51/">http://www.caibaohua.com/blog/2008/12/02/51/</a><br />
<a href="http://haoxiai.net/shujuku/mysql/102114.html">http://haoxiai.net/shujuku/mysql/102114.html</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="border-collapse: collapse; color: rgb(0, 0, 0); font-family: arial; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<div>here is some tips:<br />
<br />
1、Install MYSQL：sudo port install mysql5</div>
<div>2、init some tables：sudo mysql_install_db5</div>
<div>3、install mysql gem：ARCHFLAGS=&quot;-arch i386&quot; gem install mysql -- --with-mysql-dir=/usr/local/<wbr></wbr>mysql</div>
</span></p>
<p>Here is some userfull resource links:<br />
<a href="http://www.macruby.org/trac/wiki/Troubleshooting">http://www.macruby.org/trac/wiki/Troubleshooting</a><br />
<a href="http://www.caibaohua.com/blog/2008/12/02/51/">http://www.caibaohua.com/blog/2008/12/02/51/</a><br />
<a href="http://haoxiai.net/shujuku/mysql/102114.html">http://haoxiai.net/shujuku/mysql/102114.html</a></p>]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2009-02-27 12:56:59</wp:post_date>
		<wp:post_date_gmt>2009-02-27 04:56:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-mysqlmysql-gem-on-mac-osx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:comment>
			<wp:comment_id>405</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.product&amp;catID=233&amp;productID=651&amp;p=1&amp;title=3000-MX</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 13:37:16</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 05:37:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>beli cctv...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>406</wp:comment_id>
			<wp:comment_author><![CDATA[konsultan seo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/Testimonial.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 14:31:47</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 06:31:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>seo indonesia...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>407</wp:comment_id>
			<wp:comment_author><![CDATA[Fredericksburg real estate]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://realestatelistingsfredericksburg.com/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 19:17:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 11:17:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>real estate listings Fredericksburg...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>408</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.article&amp;articleID=10&amp;title=Trimitratech-Article</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-10-03 18:22:09</wp:comment_date>
			<wp:comment_date_gmt>2011-10-03 10:22:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>kamera cctv...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>409</wp:comment_id>
			<wp:comment_author><![CDATA[financing a mortgage]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://financingamortgage.net/getting-to-know-mortgage-lenders/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-10-04 11:12:31</wp:comment_date>
			<wp:comment_date_gmt>2011-10-04 03:12:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>financing a mortgage...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>410</wp:comment_id>
			<wp:comment_author><![CDATA[back link building]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.19.231.113</wp:comment_author_IP>
			<wp:comment_date>2011-10-05 11:23:54</wp:comment_date>
			<wp:comment_date_gmt>2011-10-05 03:23:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>page ranking service...</strong>

[...]Install mysql(&amp;mysql gem) on Mac OSX[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>mount&amp;umount on unix</title>
		<link>http://www.iceskysl.com/?p=454</link>
		<pubDate>Fri, 27 Feb 2009 18:10:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=454</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Some tips for mount&amp;umount ,maybe give you some help..</p>
<p><strong>cdrom:</strong><br />
# mount -t is09660 /dev/cdrom /mnt/cdrom<br />
# umount /mnt/cdrom<br />
<br />
<strong>floppy:</strong><br />
# mount /dev/fd0 /mnt/floppy<br />
#umount /mnt/floppy<br />
<br />
<strong>usb:</strong><br />
1.use 'fdisk -l' to show the usb nums,something like '/dev/sda';<br />
2.then use 'mkdir /mnt/usb' to create a dir for mount this usb;<br />
3.at last,use '# mount -t msdos /dev/sda1 /mnt/usb&quot; to mount it.<br />
4.#umount /mnt/usb<br />
<br />
<strong>hda:</strong><br />
1.use 'fdisk -l' to show the disk nums,like '/dev/hda1';<br />
2.then use 'make /mnt/vfat' to create a mount point;<br />
3.at last,use '# mount -t vfat /dev/hda1 /mnt/vfat'to mount it..<br />
4.#umount /mnt/vfat</p>
<p>and some usefull resource links and docs here:</p>
<p><a href="http://unix-cd.com/unixcd12/article_3967.html">http://unix-cd.com/unixcd12/article_3967.html</a></p>
<p><a href="http://blog.oracle.com.cn/index.php/121320/viewspace-6733.html">http://blog.oracle.com.cn/index.php/121320/viewspace-6733.html</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Some tips for mount&amp;umount ,maybe give you some help..</p>
<p><strong>cdrom:</strong><br />
# mount -t is09660 /dev/cdrom /mnt/cdrom<br />
# umount /mnt/cdrom<br />
<br />
<strong>floppy:</strong><br />
# mount /dev/fd0 /mnt/floppy<br />
#umount /mnt/floppy<br />
<br />
<strong>usb:</strong><br />
1.use 'fdisk -l' to show the usb nums,something like '/dev/sda';<br />
2.then use 'mkdir /mnt/usb' to create a dir for mount this usb;<br />
3.at last,use '# mount -t msdos /dev/sda1 /mnt/usb&quot; to mount it.<br />
4.#umount /mnt/usb<br />
<br />
<strong>hda:</strong><br />
1.use 'fdisk -l' to show the disk nums,like '/dev/hda1';<br />
2.then use 'make /mnt/vfat' to create a mount point;<br />
3.at last,use '# mount -t vfat /dev/hda1 /mnt/vfat'to mount it..<br />
4.#umount /mnt/vfat</p>
<p>and some usefull resource links and docs here:</p>
<p><a href="http://unix-cd.com/unixcd12/article_3967.html">http://unix-cd.com/unixcd12/article_3967.html</a></p>
<p><a href="http://blog.oracle.com.cn/index.php/121320/viewspace-6733.html">http://blog.oracle.com.cn/index.php/121320/viewspace-6733.html</a></p>]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2009-02-28 02:10:57</wp:post_date>
		<wp:post_date_gmt>2009-02-27 18:10:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mountumount-on-unix</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="mount"><![CDATA[mount]]></category>
		<category domain="post_tag" nicename="umount"><![CDATA[umount]]></category>
	</item>
	<item>
		<title>use screen to manager your sessions</title>
		<link>http://www.iceskysl.com/?p=455</link>
		<pubDate>Mon, 02 Mar 2009 06:49:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[<p>you can use nohup and &amp; to let long time task run backgrond,and you can do this with screen ,here is some userfull tips to do this.</p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/keybindings.jpg" alt="" /></p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/newkeybinding.jpg" alt="" /></p>
<p>&nbsp;</p>
<p>and here is some resource link url:</p>
<p><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/">http://www.ibm.com/developerworks/cn/linux/l-cn-screen/</a></p>
<p><a href="http://tech.ddvip.com/2008-10/122492041983595.html">http://tech.ddvip.com/2008-10/122492041983595.html</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>you can use nohup and &amp; to let long time task run backgrond,and you can do this with screen ,here is some userfull tips to do this.</p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/keybindings.jpg" alt="" /></p>
<p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/newkeybinding.jpg" alt="" /></p>
<p>&nbsp;</p>
<p>and here is some resource link url:</p>
<p><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/">http://www.ibm.com/developerworks/cn/linux/l-cn-screen/</a></p>
<p><a href="http://tech.ddvip.com/2008-10/122492041983595.html">http://tech.ddvip.com/2008-10/122492041983595.html</a></p>]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2009-03-02 14:49:23</wp:post_date>
		<wp:post_date_gmt>2009-03-02 06:49:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>use-screen-to-manager-your-sessions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="screen"><![CDATA[screen]]></category>
		<wp:comment>
			<wp:comment_id>411</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.23.134</wp:comment_author_IP>
			<wp:comment_date>2009-03-06 21:45:49</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.ibm.com/developerworks/cn/linux/l-cn-screen/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Using nginx to send files with X-Accel-Redirect</title>
		<link>http://www.iceskysl.com/?p=456</link>
		<pubDate>Tue, 03 Mar 2009 10:49:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=456</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In my case, I need do send big files to users, yes, you can do it with nginx,just like others static files,but i need some control for the request action,The delivery of a static file which depends on an application header is known as the X-Sendfile feature.<br />
Lighttpd has this feature and there is a mod_xsendfile for Apache2.<br />
Nginx also has this feature, but implemented a little bit differently. In Nginx this feature is called X-Accel-Redirect.<br />
There are two main differences:</p>
<ol>
    <li>The header must contain a URI</li>
    <li>The location should be defined as internal; to prevent the client going directly to the URI</li>
</ol>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>location&nbsp;/files&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/var/www;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;internal;&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>//&nbsp;Get&nbsp;requested&nbsp;file&nbsp;name&nbsp;&nbsp;</span></span></li>
    <li class=""><span>path&nbsp;=&nbsp;<span class="variable">@params</span><span>[</span><span class="string">&quot;path&quot;</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;Perform&nbsp;any&nbsp;required&nbsp;security&nbsp;checks,&nbsp;validation&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;and/or&nbsp;stats&nbsp;accounting</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;And&nbsp;redirect&nbsp;user&nbsp;to&nbsp;internal&nbsp;location</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>response.headers[<span class="string">'X-Accel-Redirect'</span><span>]&nbsp;=&nbsp;</span><span class="string">&quot;/files/&quot;</span><span>&nbsp;+&nbsp;path&nbsp;&nbsp;</span></span></li>
</ol>
</div>
</p>
<p>some userfull link resource come here:</p>
<ul>
    <li><a href="http://blog.kovyrin.net/2006/11/01/nginx-x-accel-redirect-php-rails/">http://blog.kovyrin.net/2006/11/01/nginx-x-accel-redirect-php-rails/</a></li>
    <li><a href="http://wiki.codemongers.com/NginxXSendfile">http://wiki.codemongers.com/NginxXSendfile</a></li>
    <li><a href="http://www.motionstandingstill.com/using-nginx-to-send-files-with-x-accel-redirect/2008-09-03/">http://www.motionstandingstill.com/using-nginx-to-send-files-with-x-accel-redirect/2008-09-03/</a></li>
</ul>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>In my case, I need do send big files to users, yes, you can do it with nginx,just like others static files,but i need some control for the request action,The delivery of a static file which depends on an application header is known as the X-Sendfile feature.<br />
Lighttpd has this feature and there is a mod_xsendfile for Apache2.<br />
Nginx also has this feature, but implemented a little bit differently. In Nginx this feature is called X-Accel-Redirect.<br />
There are two main differences:</p>
<ol>
    <li>The header must contain a URI</li>
    <li>The location should be defined as internal; to prevent the client going directly to the URI</li>
</ol>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>location&nbsp;/files&nbsp;{&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/var/www;&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;internal;&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>//&nbsp;Get&nbsp;requested&nbsp;file&nbsp;name&nbsp;&nbsp;</span></span></li>
    <li class=""><span>path&nbsp;=&nbsp;<span class="variable">@params</span><span>[</span><span class="string">&quot;path&quot;</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="comment">#&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;Perform&nbsp;any&nbsp;required&nbsp;security&nbsp;checks,&nbsp;validation&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="comment">#&nbsp;and/or&nbsp;stats&nbsp;accounting</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span><span class="comment">#&nbsp;...</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="comment">#&nbsp;And&nbsp;redirect&nbsp;user&nbsp;to&nbsp;internal&nbsp;location</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>response.headers[<span class="string">'X-Accel-Redirect'</span><span>]&nbsp;=&nbsp;</span><span class="string">&quot;/files/&quot;</span><span>&nbsp;+&nbsp;path&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>some userfull link resource come here:</p>
<ul>
    <li><a href="http://blog.kovyrin.net/2006/11/01/nginx-x-accel-redirect-php-rails/">http://blog.kovyrin.net/2006/11/01/nginx-x-accel-redirect-php-rails/</a></li>
    <li><a href="http://wiki.codemongers.com/NginxXSendfile">http://wiki.codemongers.com/NginxXSendfile</a></li>
    <li><a href="http://www.motionstandingstill.com/using-nginx-to-send-files-with-x-accel-redirect/2008-09-03/">http://www.motionstandingstill.com/using-nginx-to-send-files-with-x-accel-redirect/2008-09-03/</a></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date>2009-03-03 18:49:19</wp:post_date>
		<wp:post_date_gmt>2009-03-03 10:49:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-nginx-to-send-files-with-x-accel-redirect</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="files"><![CDATA[files]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="x-accel-redirect"><![CDATA[X-Accel-Redirect]]></category>
	</item>
	<item>
		<title>I hate hardcode configs in plugins like cache_fu</title>
		<link>http://www.iceskysl.com/?p=457</link>
		<pubDate>Tue, 03 Mar 2009 18:16:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=457</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I store user sessions in memcache,and then i want do share theres sessions with sub domains,but i notice some strange things when i put session&nbsp; into memcached,there are:<br />
1. In my older website(rails 2.0),It genenrated sessions key for memcached as #{namespace}-#{RAILS_ENV}:&quot;session:#{id}&quot;;<br />
2.In my newer website(reails 2.3),It generated seesions key for memcached just as &quot;#{namespace}:#{id}&quot;;<br />
<br />
so,i can not get the same seesion datas with diff session keys. i do have spend lots of&nbsp; time for sove this , i do have some userfull dis,<br />
<br />
1. In rails2.3 ,it's vendor memcache-client-1.5.0.5 in ruby\lib\ruby\gems\1.8\gems\activesupport-2.3.0\lib\active_support\vendor;<br />
2. you can config namespace in you environment.rb file like &quot;&nbsp; ActionController::Base.session_options[:namespace] = 'session'&quot;<br />
3. In rails2.0,when you use memcached,you will use cached_fu&nbsp; and act_as_cache plugins,and you may have a config file in your config dir named memcached.yml, and in this file,you can config defaults,production,test and developer..with lots of filed,like namespace,servers etc..<br />
4. you will notice it generate memcached key as mentioned above.<br />
<br />
I track it,and got this:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;setup_memcache(config)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;config[<span class="symbol">:namespace</span><span>]&nbsp;&lt;&lt;&nbsp;</span><span class="string">&quot;-#{RAILS_ENV}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;silence_warnings&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="builtin">Object</span><span>.const_set&nbsp;:CACHE,&nbsp;memcache_klass.</span><span class="keyword">new</span><span>(config)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;CACHE.servers&nbsp;=&nbsp;<span class="builtin">Array</span><span>(config.delete(</span><span class="symbol">:servers</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;setup_session_store&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:sessions</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;setup_fragment_store!&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fragments</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;setup_fast_hash!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fast_hash</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;setup_fastest_hash!&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fastest_hash</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;CACHE&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>shit,it append RAILS_ENV to namespace with &quot;-&quot;,that's it...I hate some hardcode config in plugin,blalal....</p>
<p>some userfull link resources...</p>
<ul>
    <li><a href="http://errtheblog.com/posts/22-sessions-n-such">http://errtheblog.com/posts/22-sessions-n-such</a></li>
    <li><a href="http://www.raecoo.com/2008/10/25/rails-store-format-in-memcache/">http://www.raecoo.com/2008/10/25/rails-store-format-in-memcache/</a></li>
    <li><a href="http://www.scribd.com/doc/2203398/Scaling-Rails-with-memcached">http://www.scribd.com/doc/2203398/Scaling-Rails-with-memcached</a></li>
    <li><a href="http://railscasts.com/episodes/115-caching-in-rails-2-1">http://railscasts.com/episodes/115-caching-in-rails-2-1</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>I store user sessions in memcache,and then i want do share theres sessions with sub domains,but i notice some strange things when i put session&nbsp; into memcached,there are:<br />
1. In my older website(rails 2.0),It genenrated sessions key for memcached as #{namespace}-#{RAILS_ENV}:&quot;session:#{id}&quot;;<br />
2.In my newer website(reails 2.3),It generated seesions key for memcached just as &quot;#{namespace}:#{id}&quot;;<br />
<br />
so,i can not get the same seesion datas with diff session keys. i do have spend lots of&nbsp; time for sove this , i do have some userfull dis,<br />
<br />
1. In rails2.3 ,it's vendor memcache-client-1.5.0.5 in ruby\lib\ruby\gems\1.8\gems\activesupport-2.3.0\lib\active_support\vendor;<br />
2. you can config namespace in you environment.rb file like &quot;&nbsp; ActionController::Base.session_options[:namespace] = 'session'&quot;<br />
3. In rails2.0,when you use memcached,you will use cached_fu&nbsp; and act_as_cache plugins,and you may have a config file in your config dir named memcached.yml, and in this file,you can config defaults,production,test and developer..with lots of filed,like namespace,servers etc..<br />
4. you will notice it generate memcached key as mentioned above.<br />
<br />
I track it,and got this:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol class="dp-rb" start="1">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;setup_memcache(config)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;config[<span class="symbol">:namespace</span><span>]&nbsp;&lt;&lt;&nbsp;</span><span class="string">&quot;-#{RAILS_ENV}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;silence_warnings&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="builtin">Object</span><span>.const_set&nbsp;:CACHE,&nbsp;memcache_klass.</span><span class="keyword">new</span><span>(config)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;CACHE.servers&nbsp;=&nbsp;<span class="builtin">Array</span><span>(config.delete(</span><span class="symbol">:servers</span><span>))&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;setup_session_store&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:sessions</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;setup_fragment_store!&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fragments</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;setup_fast_hash!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fast_hash</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;setup_fastest_hash!&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;config[</span><span class="symbol">:fastest_hash</span><span>]&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;CACHE&nbsp;&nbsp;</span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>shit,it append RAILS_ENV to namespace with &quot;-&quot;,that's it...I hate some hardcode config in plugin,blalal....</p>
<p>some userfull link resources...</p>
<ul>
    <li><a href="http://errtheblog.com/posts/22-sessions-n-such">http://errtheblog.com/posts/22-sessions-n-such</a></li>
    <li><a href="http://www.raecoo.com/2008/10/25/rails-store-format-in-memcache/">http://www.raecoo.com/2008/10/25/rails-store-format-in-memcache/</a></li>
    <li><a href="http://www.scribd.com/doc/2203398/Scaling-Rails-with-memcached">http://www.scribd.com/doc/2203398/Scaling-Rails-with-memcached</a></li>
    <li><a href="http://railscasts.com/episodes/115-caching-in-rails-2-1">http://railscasts.com/episodes/115-caching-in-rails-2-1</a></li>
</ul>]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2009-03-04 02:16:27</wp:post_date>
		<wp:post_date_gmt>2009-03-03 18:16:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-hate-hardcode-configs-in-plugins-like-cache_fu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="cache_fu"><![CDATA[cache_fu]]></category>
		<category domain="post_tag" nicename="hardcode"><![CDATA[hardcode]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
	</item>
	<item>
		<title>Get Uniquely Identifying Android Devices without special permissions.</title>
		<link>http://www.iceskysl.com/?p=458</link>
		<pubDate>Wed, 04 Mar 2009 11:52:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=458</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In some case,you may want do get&nbsp; Uniquely Identifying&nbsp; for a&nbsp; 'real' android phone,and you can do it like this:</p>
<p>In <a href="http://code.google.com/android/reference/android/provider/Settings.System.html">Android.Provider.Settings.System</a> we have some interesting values that could be of use, one specifically is &ldquo;Android_ID&rdquo;. From the documentation it is the following;</p>
<blockquote>
<p>String   	ANDROID_ID   	The Android ID (a unique 64-bit value) as a hex string.   	&ldquo;android_id&rdquo;</p>
</blockquote>
<p>
<div class="codeText">
<div class="codeHead">C++代码</div>
<ol start="1" class="dp-cpp">
    <li class="alt"><span><span>import&nbsp;Android.Provider.Settings.System;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>...&nbsp;&nbsp;</span></li>
    <li class="alt"><span>String&nbsp;Android_ID&nbsp;=&nbsp;System.getString(<span class="keyword">this</span><span>.getContentResolver(),&nbsp;System.ANDROID_ID);&nbsp;&nbsp;</span></span></li>
</ol>
</div>
Also, note that in an emulator this will return &ldquo;<strong>null</strong>&rdquo;, though a real device will return an actual value. The nice thing about this tid-bit of code is that you are not required any special permissions to call it, since it&rsquo;s essentially a passive call to get information. No write access is (obviously) required.</p>
<p>Some userfull link resource come here:</p>
<ul>
    <li>http://strazzere.com/blog/?tag=android_id</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/93d1c9333fae0e07</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/ab70f142148e5801/0af3468a7d92d095?lnk=gst&amp;q=%22mark+murphy%22</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/c0d243345b90c8a5</li>
    <li>http://code.google.com/intl/zh-CN/android/reference/android/provider/Settings.System.html#ANDROID_ID</li>
</ul>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>In some case,you may want do get&nbsp; Uniquely Identifying&nbsp; for a&nbsp; 'real' android phone,and you can do it like this:</p>
<p>In <a href="http://code.google.com/android/reference/android/provider/Settings.System.html">Android.Provider.Settings.System</a> we have some interesting values that could be of use, one specifically is &ldquo;Android_ID&rdquo;. From the documentation it is the following;</p>
<blockquote>
<p>String   	ANDROID_ID   	The Android ID (a unique 64-bit value) as a hex string.   	&ldquo;android_id&rdquo;</p>
</blockquote>
<div class="codeText">
<div class="codeHead">C++代码</div>
<ol start="1" class="dp-cpp">
    <li class="alt"><span><span>import&nbsp;Android.Provider.Settings.System;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>...&nbsp;&nbsp;</span></li>
    <li class="alt"><span>String&nbsp;Android_ID&nbsp;=&nbsp;System.getString(<span class="keyword">this</span><span>.getContentResolver(),&nbsp;System.ANDROID_ID);&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>Also, note that in an emulator this will return &ldquo;<strong>null</strong>&rdquo;, though a real device will return an actual value. The nice thing about this tid-bit of code is that you are not required any special permissions to call it, since it&rsquo;s essentially a passive call to get information. No write access is (obviously) required.</p>
<p>Some userfull link resource come here:</p>
<ul>
    <li>http://strazzere.com/blog/?tag=android_id</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/93d1c9333fae0e07</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/ab70f142148e5801/0af3468a7d92d095?lnk=gst&amp;q=%22mark+murphy%22</li>
    <li>http://groups.google.com/group/android-developers/browse_thread/thread/c0d243345b90c8a5</li>
    <li>http://code.google.com/intl/zh-CN/android/reference/android/provider/Settings.System.html#ANDROID_ID</li>
</ul>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date>2009-03-04 19:52:30</wp:post_date>
		<wp:post_date_gmt>2009-03-04 11:52:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-uniquely-identifying-android-devices-without-special-permissions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="identifying"><![CDATA[Identifying]]></category>
		<wp:comment>
			<wp:comment_id>412</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.23.134</wp:comment_author_IP>
			<wp:comment_date>2009-03-04 21:40:48</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uniquely Identifying Android Devices with special permissions
http://strazzere.com/blog/?p=116]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>413</wp:comment_id>
			<wp:comment_author><![CDATA[empangeni accommodation]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.babblingbrookbnb.co.za</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 00:20:30</wp:comment_date>
			<wp:comment_date_gmt>2011-09-19 16:20:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>empangeni bed and breakfast...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>414</wp:comment_id>
			<wp:comment_author><![CDATA[zimbali accommodation,zimbali self catering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.villazimbali.co.za</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 02:35:41</wp:comment_date>
			<wp:comment_date_gmt>2011-09-19 18:35:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>zimbali accommodation,zimbali self catering...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>415</wp:comment_id>
			<wp:comment_author><![CDATA[simons town self catering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.themilestone.co.za/index.html</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 04:57:04</wp:comment_date>
			<wp:comment_date_gmt>2011-09-19 20:57:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>simons town self catering...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>416</wp:comment_id>
			<wp:comment_author><![CDATA[mbt shoes clearance sale]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.embt-shoes.com/mbt-shoes-clearance.html</wp:comment_author_url>
			<wp:comment_author_IP>173.234.229.167</wp:comment_author_IP>
			<wp:comment_date>2011-09-21 04:34:18</wp:comment_date>
			<wp:comment_date_gmt>2011-09-20 20:34:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>mbt shoes clearance...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>417</wp:comment_id>
			<wp:comment_author><![CDATA[bloubergstrand]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.wendysguesthouse.co.za</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-21 13:23:08</wp:comment_date>
			<wp:comment_date_gmt>2011-09-21 05:23:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bloubergstrand...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>418</wp:comment_id>
			<wp:comment_author><![CDATA[yoplait greek yogurt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://sme-webdesign.com/keep-yourself-healthy-with-yoplait-greek-yogurt</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-21 17:36:28</wp:comment_date>
			<wp:comment_date_gmt>2011-09-21 09:36:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>yoplait greek yogurt...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>419</wp:comment_id>
			<wp:comment_author><![CDATA[chobani greek yogurt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mehrdadzahed.com/treat-your-health-right-with-chobani-greek-yogurt</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-21 19:16:27</wp:comment_date>
			<wp:comment_date_gmt>2011-09-21 11:16:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>chobani greek yogurt...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>420</wp:comment_id>
			<wp:comment_author><![CDATA[oikos greek yogurt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mehrdadzahed.com/savor-oikos-greek-yogurt</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 09:28:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 01:28:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>oikos greek yogurt...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[bissell carpet cleaner shampoo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pvpaymon.com/how-bissell-carpet-shampoo-works</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 12:46:45</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 04:46:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bissell carpet shampoo...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[purchase backlinks]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://6thphdsymposium.com/why-purchase-backlinks</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 14:00:21</wp:comment_date>
			<wp:comment_date_gmt>2011-09-25 06:00:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>buy backlinks...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>423</wp:comment_id>
			<wp:comment_author><![CDATA[konsultan seo indonesia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/?format=feed&amp;moduleID=75</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 21:10:54</wp:comment_date>
			<wp:comment_date_gmt>2011-09-25 13:10:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>seo indonesia...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>424</wp:comment_id>
			<wp:comment_author><![CDATA[Wireless Portable Sound Syste]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.parchain.co.id/parchain.product/180/433/id/Wireless-Portable-Sound-System.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 12:27:12</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 04:27:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wireless Portable Sound Syste...</strong>

[...]Get Uniquely Identifying Android Devices without special permissions.[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Building&amp;Scaling a Startup on Rails: 12 Things We Learned</title>
		<link>http://www.iceskysl.com/?p=459</link>
		<pubDate>Sun, 08 Mar 2009 12:32:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Garry Tan, cofounder of Posterous, lists 12 lessons for scaling that apply to more than just Rails,and i mark some word below.</p>
<div class="content">
<li>Use cloud storage for static files. <em><span style="background-color: rgb(255, 0, 0);">--S3,I do not care it 's fine in china.</span></em></li>
<li>Use HTTP Cache Control to tell the browser what it can cache.&nbsp; <em>--this is true,etag is great.</em></li>
<li>Use Sphinx for text search.&nbsp; <em>--sometimes,you do have others chose.</em></li>
<li>Use InnoDB for more crash resistant and faster writes.&nbsp; -<em>-maybe it's right.</em></li>
<li>Don't use textbook Rails ActiveRecord objects. Use New Relic to find exactly what is slow in your system. <em>--yep</em></li>
<li>Use memcache later so you find your database bottlenecks now. <em>--this is very important.</em></li>
<li>Use mongrel proctitle to find your slow queries. You are only as fast as your slowest queries. -maybe mongrel is not only chose,think about thin,ok?</li>
<li>Use asynchronous job queuing to do work in parallel.&nbsp; <em>--yes,but sometimes crontab is enough.</em></li>
<li>Use monitoring so you'll know when your site went down and why. <em>--that's it,just do it.</em></li>
<li>Learn by reading the source code, fixing problems, and submitting them back to the community.&nbsp; <em>--very userfull when you got some strange questions..</em></li>
<li>Use new plugins. Old plugins can't be trusted. -<em>-and check chang histroy carefully.</em></li>
<li>Use new information. Old information can't be trusted.&nbsp; <em>--and what's this?</em></li>
</div>
<p>go to <a href="http://axonflux.com/building-and-scaling-a-startup">http://axonflux.com/building-and-scaling-a-startup</a> for more infos.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Garry Tan, cofounder of Posterous, lists 12 lessons for scaling that apply to more than just Rails,and i mark some word below.</p>
<div class="content">
<li>Use cloud storage for static files. <em><span style="background-color: rgb(255, 0, 0);">--S3,I do not care it 's fine in china.</span></em></li>
<li>Use HTTP Cache Control to tell the browser what it can cache.&nbsp; <em>--this is true,etag is great.</em></li>
<li>Use Sphinx for text search.&nbsp; <em>--sometimes,you do have others chose.</em></li>
<li>Use InnoDB for more crash resistant and faster writes.&nbsp; -<em>-maybe it's right.</em></li>
<li>Don't use textbook Rails ActiveRecord objects. Use New Relic to find exactly what is slow in your system. <em>--yep</em></li>
<li>Use memcache later so you find your database bottlenecks now. <em>--this is very important.</em></li>
<li>Use mongrel proctitle to find your slow queries. You are only as fast as your slowest queries. -maybe mongrel is not only chose,think about thin,ok?</li>
<li>Use asynchronous job queuing to do work in parallel.&nbsp; <em>--yes,but sometimes crontab is enough.</em></li>
<li>Use monitoring so you'll know when your site went down and why. <em>--that's it,just do it.</em></li>
<li>Learn by reading the source code, fixing problems, and submitting them back to the community.&nbsp; <em>--very userfull when you got some strange questions..</em></li>
<li>Use new plugins. Old plugins can't be trusted. -<em>-and check chang histroy carefully.</em></li>
<li>Use new information. Old information can't be trusted.&nbsp; <em>--and what's this?</em></li>
</div>
<p>go to <a href="http://axonflux.com/building-and-scaling-a-startup">http://axonflux.com/building-and-scaling-a-startup</a> for more infos.</p>]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2009-03-08 20:32:11</wp:post_date>
		<wp:post_date_gmt>2009-03-08 12:32:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buildingscaling-a-startup-on-rails-12-things-we-learned</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[Build]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="scale"><![CDATA[Scale]]></category>
	</item>
	<item>
		<title>Debugging/Installing apps on the G1 ( Real Driver)</title>
		<link>http://www.iceskysl.com/?p=460</link>
		<pubDate>Tue, 10 Mar 2009 07:21:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=460</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Verdana; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 18px; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">I konw,you can dev app and test it on the </span>simulator,but if you had a real driver,G1,you can do debug on it,very great,here is the tips for this:<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Verdana; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 18px; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<ol type="1">
    <li>On your G1, go to Settings<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>Applications<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>Development<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>[X] USB debugging<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Download this file:<span class="Apple-converted-space">&nbsp;</span><a style="text-decoration: none; color: rgb(39, 138, 26);" class="postlink" target="_blank" href="http://href.to/eNE">android_usb_windows.zip</a><span class="Apple-converted-space">&nbsp;</span></li>
    <li>Unzip it to a folder<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Connect your G1 with your PC<span class="Apple-converted-space">&nbsp;</span></li>
    <li>When it asks for driver location choose the unzipped folder<span class="Apple-converted-space"> </span>and install the driver for it.</li>
    <li>You'll see sth like &quot;HTC Dream Composite ADB Interface&quot; on success<span class="Apple-converted-space">&nbsp;</span></li>
    <li>(Re)Start Eclipse<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Your G1 should now be listed in the DDMS-Perspective under Devices<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Go to the AndroidManifest.xml of your App and modify it to contain<span class="Apple-converted-space">&nbsp;</span><span style="font-family: 'Courier New';">android:debuggable=&quot;true&quot;<span class="Apple-converted-space">&nbsp;</span></span>in the &lt;application ... &gt;-Tag<span class="Apple-converted-space"> </span>,look like this:&lt;application android:icon=&quot;@drawable/icon&quot; android:label=&quot;@string/app_name&quot; <span style="background-color: rgb(255, 255, 0);">android:debuggable=&quot;true&quot;</span>&gt;</li>
    <li>Go Debug<span class="Apple-converted-space"> as usual.<br />
    </span></li>
</ol>
</span>ps: I do not upload the zip file here,you can find it via the link above,but if you can not download it,you can mail me to fetch one.</p>
<p><strong>Btw: </strong><br />
You can now install (signed)APKs via USB:</p>
<blockquote><em>D:\dev\Android\android-sdk-windows-1.0_r1\tools&gt;adb -d install D:\Workspace\keytools\AndNav_signed.apk <br />
1305 KB/s (1975987 bytes in 1.478s) <br />
pkg: /data/local/tmp/AndNav_signed.apk <br />
Success</em><br />
</blockquote>
<p><br />
And uninstall them:</p>
<blockquote><em>D:\dev\Android\android-sdk-windows-1.0_r1\tools&gt;adb uninstall org.andnav <br />
Success<br />
</em></blockquote>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Verdana; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 18px; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">I konw,you can dev app and test it on the </span>simulator,but if you had a real driver,G1,you can do debug on it,very great,here is the tips for this:<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Verdana; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 18px; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span">
<ol type="1">
    <li>On your G1, go to Settings<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>Applications<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>Development<span class="Apple-converted-space">&nbsp;</span><img border="0" alt="Arrow" src="images/smiles/icon_arrow.gif" /><span class="Apple-converted-space">&nbsp;</span>[X] USB debugging<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Download this file:<span class="Apple-converted-space">&nbsp;</span><a style="text-decoration: none; color: rgb(39, 138, 26);" class="postlink" target="_blank" href="http://href.to/eNE">android_usb_windows.zip</a><span class="Apple-converted-space">&nbsp;</span></li>
    <li>Unzip it to a folder<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Connect your G1 with your PC<span class="Apple-converted-space">&nbsp;</span></li>
    <li>When it asks for driver location choose the unzipped folder<span class="Apple-converted-space"> </span>and install the driver for it.</li>
    <li>You'll see sth like &quot;HTC Dream Composite ADB Interface&quot; on success<span class="Apple-converted-space">&nbsp;</span></li>
    <li>(Re)Start Eclipse<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Your G1 should now be listed in the DDMS-Perspective under Devices<span class="Apple-converted-space">&nbsp;</span></li>
    <li>Go to the AndroidManifest.xml of your App and modify it to contain<span class="Apple-converted-space">&nbsp;</span><span style="font-family: 'Courier New';">android:debuggable=&quot;true&quot;<span class="Apple-converted-space">&nbsp;</span></span>in the &lt;application ... &gt;-Tag<span class="Apple-converted-space"> </span>,look like this:&lt;application android:icon=&quot;@drawable/icon&quot; android:label=&quot;@string/app_name&quot; <span style="background-color: rgb(255, 255, 0);">android:debuggable=&quot;true&quot;</span>&gt;</li>
    <li>Go Debug<span class="Apple-converted-space"> as usual.<br />
    </span></li>
</ol>
</span>ps: I do not upload the zip file here,you can find it via the link above,but if you can not download it,you can mail me to fetch one.</p>
<p><strong>Btw: </strong><br />
You can now install (signed)APKs via USB:</p>
<blockquote><em>D:\dev\Android\android-sdk-windows-1.0_r1\tools&gt;adb -d install D:\Workspace\keytools\AndNav_signed.apk <br />
1305 KB/s (1975987 bytes in 1.478s) <br />
pkg: /data/local/tmp/AndNav_signed.apk <br />
Success</em><br />
</blockquote>
<p><br />
And uninstall them:</p>
<blockquote><em>D:\dev\Android\android-sdk-windows-1.0_r1\tools&gt;adb uninstall org.andnav <br />
Success<br />
</em></blockquote>]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2009-03-10 15:21:02</wp:post_date>
		<wp:post_date_gmt>2009-03-10 07:21:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugginginstalling-apps-on-the-g1-real-driver</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[Debug]]></category>
		<category domain="post_tag" nicename="g1"><![CDATA[G1]]></category>
		<wp:comment>
			<wp:comment_id>425</wp:comment_id>
			<wp:comment_author><![CDATA[卡通服装]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.hzcarton.com/gsjj.asp</wp:comment_author_url>
			<wp:comment_author_IP>122.235.199.242</wp:comment_author_IP>
			<wp:comment_date>2009-04-02 13:17:56</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这么多英文,看不来]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Got Uniquely Identifying like IMIE code on Android</title>
		<link>http://www.iceskysl.com/?p=461</link>
		<pubDate>Thu, 12 Mar 2009 06:22:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=461</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In some case,you may want do get&nbsp; Uniquely Identifying&nbsp; for a&nbsp; 'real' android phone,such as IMEI code,SimOperator etc, and we all kown ,the IMEI like ID card,and you can use TelephonyManager to get it,some usefull codes like this :</p>
<div class="codeText">
<div class="codeHead">Java代码</div>
<ol class="dp-j" start="1">
    <li class="alt"><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;fetch_status(){&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;TelephonyManager&nbsp;tm&nbsp;=&nbsp;(TelephonyManager)&nbsp;<span class="keyword">this</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;.getSystemService(Context.TELEPHONY_SERVICE);<span class="comment">//&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;<span class="string">&quot;&quot;</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;DeviceId(IMEI)&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getDeviceId()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;DeviceSoftwareVersion&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getDeviceSoftwareVersion()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;Line1Number&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getLine1Number()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkCountryIso&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkCountryIso()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkOperator&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkOperator()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkOperatorName&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkOperatorName()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkType&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkType()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;PhoneType&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getPhoneType()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimCountryIso&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimCountryIso()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimOperator&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimOperator()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimOperatorName&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimOperatorName()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimSerialNumber&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimSerialNumber()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimState&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimState()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SubscriberId(IMSI)&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSubscriberId()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;VoiceMailNumber&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getVoiceMailNumber()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;TextView&nbsp;sys&nbsp;=&nbsp;(TextView)&nbsp;findViewById(R.id.sys);&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sys.setText(str);&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>and,your output like here.</p>
<p>some userfull resource link:</p>
<p><a href="http://developer.android.com/reference/android/telephony/TelephonyManager.html">http://developer.android.com/reference/android/telephony/TelephonyManager.html</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>In some case,you may want do get&nbsp; Uniquely Identifying&nbsp; for a&nbsp; 'real' android phone,such as IMEI code,SimOperator etc, and we all kown ,the IMEI like ID card,and you can use TelephonyManager to get it,some usefull codes like this :</p>
<div class="codeText">
<div class="codeHead">Java代码</div>
<ol class="dp-j" start="1">
    <li class="alt"><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;fetch_status(){&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;TelephonyManager&nbsp;tm&nbsp;=&nbsp;(TelephonyManager)&nbsp;<span class="keyword">this</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;.getSystemService(Context.TELEPHONY_SERVICE);<span class="comment">//&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;<span class="string">&quot;&quot;</span><span>;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;DeviceId(IMEI)&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getDeviceId()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;DeviceSoftwareVersion&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getDeviceSoftwareVersion()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;Line1Number&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getLine1Number()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkCountryIso&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkCountryIso()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkOperator&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkOperator()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkOperatorName&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkOperatorName()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;NetworkType&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getNetworkType()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;PhoneType&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getPhoneType()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimCountryIso&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimCountryIso()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimOperator&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimOperator()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimOperatorName&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimOperatorName()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimSerialNumber&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimSerialNumber()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SimState&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSimState()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;SubscriberId(IMSI)&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getSubscriberId()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;<span class="string">&quot;VoiceMailNumber&nbsp;=&nbsp;&quot;</span><span>&nbsp;+&nbsp;tm.getVoiceMailNumber()&nbsp;+&nbsp;</span><span class="string">&quot;\n&quot;</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;TextView&nbsp;sys&nbsp;=&nbsp;(TextView)&nbsp;findViewById(R.id.sys);&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sys.setText(str);&nbsp;&nbsp;</span></li>
    <li class=""><span>}&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>and,your output like here.</p>
<p>some userfull resource link:</p>
<p><a href="http://developer.android.com/reference/android/telephony/TelephonyManager.html">http://developer.android.com/reference/android/telephony/TelephonyManager.html</a></p>]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2009-03-12 14:22:26</wp:post_date>
		<wp:post_date_gmt>2009-03-12 06:22:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>got-uniquely-identifying-like-imie-code-on-android</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="imie"><![CDATA[IMIE]]></category>
		<category domain="post_tag" nicename="uniquely"><![CDATA[Uniquely]]></category>
		<wp:comment>
			<wp:comment_id>426</wp:comment_id>
			<wp:comment_author><![CDATA[中国兄弟连]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.owner0571.com/about.asp?c=CS</wp:comment_author_url>
			<wp:comment_author_IP>122.234.186.60</wp:comment_author_IP>
			<wp:comment_date>2009-03-30 21:53:47</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[支持一下!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Android Intent is so powerful and great.</title>
		<link>http://www.iceskysl.com/?p=462</link>
		<pubDate>Thu, 12 Mar 2009 08:33:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=462</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Android have lots of intent,it's powerful and useful,here is some tips for you:</p>
<p>1，start web browser<br />
Uri myBlogUri = Uri.parse(&quot;http://kuikui.javaeye.com&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, myBlogUri);</p>
<p><br />
2，Google map<br />
Uri mapUri = Uri.parse(&quot;geo:38.899533,-77.036476&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, mapUri);</p>
<p><br />
3，show dialer tel <br />
Uri telUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_DIAL, telUri);</p>
<p><br />
4，start call dialar<br />
Uri callUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_CALL, callUri);</p>
<p><br />
5，uninstall apk<br />
Uri uninstallUri = Uri.fromParts(&quot;package&quot;, &quot;xxx&quot;, null);<br />
returnIt = new Intent(Intent.ACTION_DELETE, uninstallUri);</p>
<p><br />
6，install apk<br />
Uri installUri = Uri.fromParts(&quot;package&quot;, &quot;xxx&quot;, null);<br />
returnIt = new Intent(Intent.ACTION_PACKAGE_ADDED, installUri);</p>
<p><br />
7，play audio<br />
Uri playUri = Uri.parse(&quot;file:///sdcard/download/everything.mp3&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, playUri);</p>
<p><br />
8，show send email ui<br />
Uri emailUri = Uri.parse(&quot;mailto:shenrenkui@gmail.com&quot;);<br />
returnIt = new Intent(Intent.ACTION_SENDTO, emailUri);</p>
<p><br />
9，send email<br />
returnIt = new Intent(Intent.ACTION_SEND);<br />
String[] tos = { &quot;shenrenkui@gmail.com&quot; };<br />
String[] ccs = { &quot;shenrenkui@gmail.com&quot; };<br />
returnIt.putExtra(Intent.EXTRA_EMAIL, tos);<br />
returnIt.putExtra(Intent.EXTRA_CC, ccs);<br />
returnIt.putExtra(Intent.EXTRA_TEXT, &quot;body&quot;);<br />
returnIt.putExtra(Intent.EXTRA_SUBJECT, &quot;subject&quot;);<br />
returnIt.setType(&quot;message/rfc882&quot;);<br />
Intent.createChooser(returnIt, &quot;Choose Email Client&quot;);</p>
<p><br />
10，send sms<br />
Uri smsUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, smsUri);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);<br />
returnIt.setType(&quot;vnd.android-dir/mms-sms&quot;);</p>
<p><br />
11，send email<br />
Uri smsToUri = Uri.parse(&quot;smsto://100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_SENDTO, smsToUri);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);</p>
<p><br />
12，send mms<br />
Uri mmsUri = Uri.parse(&quot;content://media/external/images/media/23&quot;);<br />
returnIt = new Intent(Intent.ACTION_SEND);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);<br />
returnIt.putExtra(Intent.EXTRA_STREAM, mmsUri);<br />
returnIt.setType(&quot;image/png&quot;);&nbsp;</p>
<p>if you have other intent,please share to me ,thx.</p>
<p>useful resource link here:</p>
<p>http://kuikui.javaeye.com/blog/318627</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Android have lots of intent,it's powerful and useful,here is some tips for you:</p>
<p>1，start web browser<br />
Uri myBlogUri = Uri.parse(&quot;http://kuikui.javaeye.com&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, myBlogUri);</p>
<p><br />
2，Google map<br />
Uri mapUri = Uri.parse(&quot;geo:38.899533,-77.036476&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, mapUri);</p>
<p><br />
3，show dialer tel <br />
Uri telUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_DIAL, telUri);</p>
<p><br />
4，start call dialar<br />
Uri callUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_CALL, callUri);</p>
<p><br />
5，uninstall apk<br />
Uri uninstallUri = Uri.fromParts(&quot;package&quot;, &quot;xxx&quot;, null);<br />
returnIt = new Intent(Intent.ACTION_DELETE, uninstallUri);</p>
<p><br />
6，install apk<br />
Uri installUri = Uri.fromParts(&quot;package&quot;, &quot;xxx&quot;, null);<br />
returnIt = new Intent(Intent.ACTION_PACKAGE_ADDED, installUri);</p>
<p><br />
7，play audio<br />
Uri playUri = Uri.parse(&quot;file:///sdcard/download/everything.mp3&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, playUri);</p>
<p><br />
8，show send email ui<br />
Uri emailUri = Uri.parse(&quot;mailto:shenrenkui@gmail.com&quot;);<br />
returnIt = new Intent(Intent.ACTION_SENDTO, emailUri);</p>
<p><br />
9，send email<br />
returnIt = new Intent(Intent.ACTION_SEND);<br />
String[] tos = { &quot;shenrenkui@gmail.com&quot; };<br />
String[] ccs = { &quot;shenrenkui@gmail.com&quot; };<br />
returnIt.putExtra(Intent.EXTRA_EMAIL, tos);<br />
returnIt.putExtra(Intent.EXTRA_CC, ccs);<br />
returnIt.putExtra(Intent.EXTRA_TEXT, &quot;body&quot;);<br />
returnIt.putExtra(Intent.EXTRA_SUBJECT, &quot;subject&quot;);<br />
returnIt.setType(&quot;message/rfc882&quot;);<br />
Intent.createChooser(returnIt, &quot;Choose Email Client&quot;);</p>
<p><br />
10，send sms<br />
Uri smsUri = Uri.parse(&quot;tel:100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_VIEW, smsUri);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);<br />
returnIt.setType(&quot;vnd.android-dir/mms-sms&quot;);</p>
<p><br />
11，send email<br />
Uri smsToUri = Uri.parse(&quot;smsto://100861&quot;);<br />
returnIt = new Intent(Intent.ACTION_SENDTO, smsToUri);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);</p>
<p><br />
12，send mms<br />
Uri mmsUri = Uri.parse(&quot;content://media/external/images/media/23&quot;);<br />
returnIt = new Intent(Intent.ACTION_SEND);<br />
returnIt.putExtra(&quot;sms_body&quot;, &quot;shenrenkui&quot;);<br />
returnIt.putExtra(Intent.EXTRA_STREAM, mmsUri);<br />
returnIt.setType(&quot;image/png&quot;);&nbsp;</p>
<p>if you have other intent,please share to me ,thx.</p>
<p>useful resource link here:</p>
<p>http://kuikui.javaeye.com/blog/318627</p>]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date>2009-03-12 16:33:06</wp:post_date>
		<wp:post_date_gmt>2009-03-12 08:33:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-intent-is-so-powerful-and-great</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="intent"><![CDATA[Intent]]></category>
		<wp:comment>
			<wp:comment_id>427</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.200.19</wp:comment_author_IP>
			<wp:comment_date>2009-03-12 17:15:00</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uninstall 應用程式

Uri uri = Uri.fromParts("package", strPackageName, null);
Intent it = new Intent(Intent.ACTION_DELETE, uri);
startActivity(it);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>428</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.200.19</wp:comment_author_IP>
			<wp:comment_date>2009-03-12 17:15:18</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Market 相關

//尋找某個應用程式
Uri uri = Uri.parse("market://search?q=pname:pkg_name");
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);
//where pkg_name is the full package path for an application
//顯示某應用程式詳細畫面
Uri uri = Uri.parse("market://details?id=app_id");
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);
//where app_id is the application ID, find the ID
//by clicking on your application on Market home
//page, and notice the ID from the address bar]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>429</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.200.19</wp:comment_author_IP>
			<wp:comment_date>2009-03-12 17:16:02</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[播放多媒體

Uri uri = Uri.parse("file:///sdcard/song.mp3");
Intent it = new Intent(Intent.ACTION_VIEW, uri);
it.setType("audio/mp3");
startActivity(it);
Uri uri = Uri.withAppendedPath(MediaStore.Audio.Media.INTERNAL_CONTENT_URI, "1");
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>430</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.200.19</wp:comment_author_IP>
			<wp:comment_date>2009-03-12 17:16:17</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[//傳送附件檔
Intent it = new Intent(Intent.ACTION_SEND);
it.putExtra(Intent.EXTRA_SUBJECT, "The email subject text");
it.putExtra(Intent.EXTRA_STREAM, "file:///sdcard/mysong.mp3");
sendIntent.setType("audio/mp3");
startActivity(Intent.createChooser(it, "Choose Email Client"));]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>About ip_conntrack: table full, dropping packet messages suppressed</title>
		<link>http://www.iceskysl.com/?p=463</link>
		<pubDate>Tue, 07 Apr 2009 05:32:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=463</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a mp3 files server,<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">restart it ,and got some messages in /var/log/message ,like this:</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:34:24 garden kernel: ip_conntrack: table full, dropping packet.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:40:11 garden<span class="Apple-converted-space">&nbsp;</span><strong><font color="#ff0000" class="Apple-style-span">kernel: ip_conntrack: table full, dropping packet.</font></strong></div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:58:52 garden last message repeated 3 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 13:11:36 garden last message repeated 2 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 13:15:44 garden last message repeated 3 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">--and restart here ------</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden syslogd 1.4.1: restart.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden kernel: klogd 1.4.1, log source = /proc/kmsg started.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden kernel: Linux version 2.6.18-92.1.17.el5 (mockbuild@builder10.centos.org) (gcc version 4.1.2 20071124 (Red Hat 4.1.2-42)) #1 SMP Tue Nov 4 13:43:30 EST 2008</div>
</div>
</span></span><br />
looks like something wrong about &quot;<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">ip_conntrack&quot;,and i do some check like this:<br />
</span></span><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">[root@garden log]# cat /proc/sys/net/ipv4/ip_conntrack_max</div>
<div style="margin-top: 0px; margin-bottom: 0px;">65536</div>
<div style="margin-top: 0px; margin-bottom: 0px;">&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">got ip_conntrack timeout setting：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">[root@garden log]# cat /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established</div>
<div style="margin-top: 0px; margin-bottom: 0px;">432000</div>
</div>
</span></span><br />
and you can sove it like this:<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">vi /etc/sysctl.conf&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">#Add this</div>
<div style="margin-top: 0px; margin-bottom: 0px;">net.ipv4.ip_conntrack_max = 655360&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180 <br />
<br />
and then ,refrech it.<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">sysctl -p </span></span></div>
</span></span><br />
any ideas?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>Here is a mp3 files server,<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">restart it ,and got some messages in /var/log/message ,like this:</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:34:24 garden kernel: ip_conntrack: table full, dropping packet.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:40:11 garden<span class="Apple-converted-space">&nbsp;</span><strong><font color="#ff0000" class="Apple-style-span">kernel: ip_conntrack: table full, dropping packet.</font></strong></div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 12:58:52 garden last message repeated 3 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 13:11:36 garden last message repeated 2 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Mar 31 13:15:44 garden last message repeated 3 times</div>
<div style="margin-top: 0px; margin-bottom: 0px;">&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">--and restart here ------</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden syslogd 1.4.1: restart.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden kernel: klogd 1.4.1, log source = /proc/kmsg started.</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Apr &nbsp;1 01:47:49 garden kernel: Linux version 2.6.18-92.1.17.el5 (mockbuild@builder10.centos.org) (gcc version 4.1.2 20071124 (Red Hat 4.1.2-42)) #1 SMP Tue Nov 4 13:43:30 EST 2008</div>
</div>
</span></span><br />
looks like something wrong about &quot;<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">ip_conntrack&quot;,and i do some check like this:<br />
</span></span><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">[root@garden log]# cat /proc/sys/net/ipv4/ip_conntrack_max</div>
<div style="margin-top: 0px; margin-bottom: 0px;">65536</div>
<div style="margin-top: 0px; margin-bottom: 0px;">&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">got ip_conntrack timeout setting：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">[root@garden log]# cat /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established</div>
<div style="margin-top: 0px; margin-bottom: 0px;">432000</div>
</div>
</span></span><br />
and you can sove it like this:<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">
<div style="margin-top: 0px; margin-bottom: 0px;">vi /etc/sysctl.conf&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">#Add this</div>
<div style="margin-top: 0px; margin-bottom: 0px;">net.ipv4.ip_conntrack_max = 655360&nbsp;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180 <br />
<br />
and then ,refrech it.<br />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: SimSun; font-size: 13px;" class="Apple-style-span">sysctl -p </span></span></div>
</span></span><br />
any ideas?</p>]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date>2009-04-07 13:32:41</wp:post_date>
		<wp:post_date_gmt>2009-04-07 05:32:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-ip_conntrack-table-full-dropping-packet-messages-suppressed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="ip_conntrack"><![CDATA[ip_conntrack]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="packet"><![CDATA[packet]]></category>
	</item>
	<item>
		<title>域名差点又丢了，真危险</title>
		<link>http://www.iceskysl.com/?p=464</link>
		<pubDate>Sun, 19 Apr 2009 18:02:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[<p>丢域名已经不是一次两次了，这次差点又把这个域名丢了，真危险呀，这些天一直都比较忙，好像好几天没来写Blog了，今天下午打开一看，发现一个陌生的页面，完蛋，突然想起，域名应该是到期了。</p>
<p>一查记录，果然，18号到期，今天已经19号了，一遍想咋连个提醒邮件都没呢，郁闷之余，赶紧续费，幸好我有当时买郁闷的代码的帐号和密码，直接登录管理控制台，充值，续费。</p>
<p>然后就比较顺利了，等到晚上的时候，发现我的域名又可以正常解析了。</p>
<p>回头想想，差点又丢了，还是早点转回玩万网，再转出去吧。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>丢域名已经不是一次两次了，这次差点又把这个域名丢了，真危险呀，这些天一直都比较忙，好像好几天没来写Blog了，今天下午打开一看，发现一个陌生的页面，完蛋，突然想起，域名应该是到期了。</p>
<p>一查记录，果然，18号到期，今天已经19号了，一遍想咋连个提醒邮件都没呢，郁闷之余，赶紧续费，幸好我有当时买郁闷的代码的帐号和密码，直接登录管理控制台，充值，续费。</p>
<p>然后就比较顺利了，等到晚上的时候，发现我的域名又可以正常解析了。</p>
<p>回头想想，差点又丢了，还是早点转回玩万网，再转出去吧。</p>]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2009-04-20 02:02:16</wp:post_date>
		<wp:post_date_gmt>2009-04-19 18:02:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9f%9f%e5%90%8d%e5%b7%ae%e7%82%b9%e5%8f%88%e4%b8%a2%e4%ba%86%ef%bc%8c%e7%9c%9f%e5%8d%b1%e9%99%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e5%9f%9f%e5%90%8d"><![CDATA[域名]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Use FasterCSV to import data into csv file in ruby.</title>
		<link>http://www.iceskysl.com/?p=465</link>
		<pubDate>Wed, 22 Apr 2009 17:12:15 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=465</guid>
		<description></description>
		<content:encoded><![CDATA[<p>some tips is here.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.imp_init_owner_data&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;fp&nbsp;=&nbsp;<span class="string">&quot;#{RAILS_ROOT}/datas/inumbers/ini_owner.csv&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;FasterCSV.open(fp,&nbsp;<span class="string">&quot;w&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|csv|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;InumberCate.find_all_by_typee(<span class="string">&quot;owner&quot;</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|owner|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;csv&nbsp;&lt;&lt;&nbsp;[owner.name,owner.id]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>install <span><span>fastercsv&nbsp; gems like this..<br />
</span></span></p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>iceskysl&nbsp;~/webroot:&nbsp;gem&nbsp;install&nbsp;fastercsv&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Successfully&nbsp;installed&nbsp;fastercsv-1.4.0&nbsp;&nbsp;</span></li>
    <li class="alt"><span>1&nbsp;gem&nbsp;installed&nbsp;&nbsp;</span></li>
    <li class=""><span>Installing&nbsp;ri&nbsp;documentation&nbsp;<span class="keyword">for</span><span>&nbsp;fastercsv-1.4.0...&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Installing&nbsp;RDoc&nbsp;documentation&nbsp;<span class="keyword">for</span><span>&nbsp;fastercsv-1.4.0...&nbsp;&nbsp;</span></span></li>
    <li class=""><span>iceskysl&nbsp;~/webroot:&nbsp;cd&nbsp;..&nbsp;&nbsp;</span></li>
</ol>
</div>
and do not forget to add &quot;require 'fastercsv'&quot; in your class file.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>some tips is here.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span class="keyword">def</span><span>&nbsp;</span><span class="keyword">self</span><span>.imp_init_owner_data&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;fp&nbsp;=&nbsp;<span class="string">&quot;#{RAILS_ROOT}/datas/inumbers/ini_owner.csv&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;FasterCSV.open(fp,&nbsp;<span class="string">&quot;w&quot;</span><span>)&nbsp;</span><span class="keyword">do</span><span>&nbsp;|csv|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;InumberCate.find_all_by_typee(<span class="string">&quot;owner&quot;</span><span>).</span><span class="keyword">each</span><span>&nbsp;</span><span class="keyword">do</span><span>&nbsp;|owner|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;csv&nbsp;&lt;&lt;&nbsp;[owner.name,owner.id]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>install <span><span>fastercsv&nbsp; gems like this..<br />
</span></span></p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>iceskysl&nbsp;~/webroot:&nbsp;gem&nbsp;install&nbsp;fastercsv&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Successfully&nbsp;installed&nbsp;fastercsv-1.4.0&nbsp;&nbsp;</span></li>
    <li class="alt"><span>1&nbsp;gem&nbsp;installed&nbsp;&nbsp;</span></li>
    <li class=""><span>Installing&nbsp;ri&nbsp;documentation&nbsp;<span class="keyword">for</span><span>&nbsp;fastercsv-1.4.0...&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Installing&nbsp;RDoc&nbsp;documentation&nbsp;<span class="keyword">for</span><span>&nbsp;fastercsv-1.4.0...&nbsp;&nbsp;</span></span></li>
    <li class=""><span>iceskysl&nbsp;~/webroot:&nbsp;cd&nbsp;..&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>and do not forget to add &quot;require 'fastercsv'&quot; in your class file.</p>]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date>2009-04-23 01:12:15</wp:post_date>
		<wp:post_date_gmt>2009-04-22 17:12:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>use-fastercsv-to-import-data-into-csv-file-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="csv"><![CDATA[csv]]></category>
		<category domain="post_tag" nicename="fastercsv"><![CDATA[FasterCSV]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<wp:comment>
			<wp:comment_id>431</wp:comment_id>
			<wp:comment_author><![CDATA[dd]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.38.40.58</wp:comment_author_IP>
			<wp:comment_date>2009-04-24 22:53:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好~最近搜RAILS的东西老能搜到你这,想加你经常聊下技术可以通过GTALK或者GMAIL
邮箱是
destinyd.war@gmail.com
希望能如愿=.=]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>432</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.5.21</wp:comment_author_IP>
			<wp:comment_date>2009-04-25 00:32:50</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thx,you can touch me at iceskysl#gmail.com via Email or GoogelTalk.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Auto update sources.list  on Debian</title>
		<link>http://www.iceskysl.com/?p=466</link>
		<pubDate>Fri, 24 Apr 2009 16:43:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=466</guid>
		<description></description>
		<content:encoded><![CDATA[<p>you can use apt-spy to update sources.list ,here is some step and tips.<br />
1.open&nbsp; /etc/apt/sources.list and add this<br />
deb http://http.us.debian.org/debian/ stable main<br />
2.do &quot;apt-get update&quot;<br />
3.then &quot;apt-get install apt-spy&quot;<br />
4.then &quot;apt-spy update&quot;<br />
5.last,&quot;apt-spy -d unstable -a asia -t 5&quot;<br />
<strong><br />
ref:</strong><br />
http://http.us.debian.org/debian/README.mirrors.txt</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>you can use apt-spy to update sources.list ,here is some step and tips.<br />
1.open&nbsp; /etc/apt/sources.list and add this<br />
deb http://http.us.debian.org/debian/ stable main<br />
2.do &quot;apt-get update&quot;<br />
3.then &quot;apt-get install apt-spy&quot;<br />
4.then &quot;apt-spy update&quot;<br />
5.last,&quot;apt-spy -d unstable -a asia -t 5&quot;<br />
<strong><br />
ref:</strong><br />
http://http.us.debian.org/debian/README.mirrors.txt</p>]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2009-04-25 00:43:23</wp:post_date>
		<wp:post_date_gmt>2009-04-24 16:43:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>auto-update-sources-list-on-debian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="debian"><![CDATA[Debian]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_0cee28923c553b3e71721d1ddaced9b6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_21433fd2a4fc48900d247b1528628abc</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How can I find out what is generating iowait on my server?</title>
		<link>http://www.iceskysl.com/?p=467</link>
		<pubDate>Fri, 24 Apr 2009 16:59:35 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=467</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A question I&rsquo;m asked daily is &ldquo;How can I find out what is generating iowait on my server?&rdquo; Sure, you can dig through pages of lsof output, restart services, or run strace, but it can be a frustrating process. I saw a process on this blog post, and&nbsp; a guy changed the regexes to fit Red Hat and CentOS systems a bit better:<br />
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>[root</span><span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;/etc/init.d/syslog&nbsp;stop</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Shutting&nbsp;down&nbsp;kernel&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Shutting&nbsp;down&nbsp;system&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class=""><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;echo&nbsp;1&nbsp;&gt;&nbsp;/proc/sys/vm/block_dump</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;dmesg&nbsp;|&nbsp;egrep&nbsp;&quot;READ|WRITE|dirtied&quot;&nbsp;|&nbsp;egrep&nbsp;-o&nbsp;'([a-zA-Z]*)'&nbsp;|&nbsp;sort&nbsp;|&nbsp;uniq&nbsp;-c&nbsp;|&nbsp;sort&nbsp;-rn&nbsp;|&nbsp;head</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;202&nbsp;kjournald&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;egrep&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;irqbalance&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;bash&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;java&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;sda&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;mailserver&nbsp;&nbsp;</span></li>
    <li class="alt"><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;echo&nbsp;0&nbsp;&gt;&nbsp;/proc/sys/vm/block_dump</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;/etc/init.d/syslog&nbsp;start</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Starting&nbsp;system&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class=""><span>Starting&nbsp;kernel&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
</ol>
</div>
In my specific situation, it looks like <span>kjournald&nbsp; </span>is the biggest abuser of my disk.</p>
<p>Don&rsquo;t forget to set things back to their normal state when you&rsquo;re done!</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>#&nbsp;echo&nbsp;0&nbsp;</span><span class="tag">&gt;</span><span>&nbsp;/proc/sys/vm/block_dump&nbsp;&nbsp;</span></span></li>
    <li class=""><span>#&nbsp;/etc/init.d/syslog&nbsp;start&nbsp; <br />
    </span></li>
</ol>
</div>
<p><br />
<strong>ref:</strong><br />
http://rackerhacker.com/2008/03/11/hunting-down-elusive-sources-of-iowait/<br />
http://blog.eikke.com/index.php/ikke/2007/03/22/who_s_abusing_my_sata_controller<br />
http://hi.baidu.com/dipsey/blog/item/900bbbaf3e46dcc97cd92aba.html<br />
<a href="http://www.ducea.com/2009/03/11/howto-install-iotop-on-debian-etch/">http://www.ducea.com/2009/03/11/howto-install-iotop-on-debian-etch/</a></p>
<p>&nbsp;</p>
<p><a href="http://www.cppblog.com/go-benny/archive/2008/04/23/47908.html">http://www.cppblog.com/go-benny/archive/2008/04/23/47908.html</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>A question I&rsquo;m asked daily is &ldquo;How can I find out what is generating iowait on my server?&rdquo; Sure, you can dig through pages of lsof output, restart services, or run strace, but it can be a frustrating process. I saw a process on this blog post, and&nbsp; a guy changed the regexes to fit Red Hat and CentOS systems a bit better:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>[root</span><span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;/etc/init.d/syslog&nbsp;stop</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>Shutting&nbsp;down&nbsp;kernel&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>Shutting&nbsp;down&nbsp;system&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class=""><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;echo&nbsp;1&nbsp;&gt;&nbsp;/proc/sys/vm/block_dump</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;dmesg&nbsp;|&nbsp;egrep&nbsp;&quot;READ|WRITE|dirtied&quot;&nbsp;|&nbsp;egrep&nbsp;-o&nbsp;'([a-zA-Z]*)'&nbsp;|&nbsp;sort&nbsp;|&nbsp;uniq&nbsp;-c&nbsp;|&nbsp;sort&nbsp;-rn&nbsp;|&nbsp;head</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;202&nbsp;kjournald&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;egrep&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;irqbalance&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;bash&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;java&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;sda&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;mailserver&nbsp;&nbsp;</span></li>
    <li class="alt"><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;echo&nbsp;0&nbsp;&gt;&nbsp;/proc/sys/vm/block_dump</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>[root<span class="variable">@5</span><span>-3&nbsp;~]</span><span class="comment">#&nbsp;/etc/init.d/syslog&nbsp;start</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>Starting&nbsp;system&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
    <li class=""><span>Starting&nbsp;kernel&nbsp;logger:&nbsp;[&nbsp;&nbsp;OK&nbsp;&nbsp;]&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>In my specific situation, it looks like <span>kjournald&nbsp; </span>is the biggest abuser of my disk.<br />
Don&rsquo;t forget to set things back to their normal state when you&rsquo;re done!</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol class="dp-xml" start="1">
    <li class="alt"><span><span>#&nbsp;echo&nbsp;0&nbsp;</span><span class="tag">&gt;</span><span>&nbsp;/proc/sys/vm/block_dump&nbsp;&nbsp;</span></span></li>
    <li class=""><span>#&nbsp;/etc/init.d/syslog&nbsp;start&nbsp; <br />
    </span></li>
</ol>
</div>
<p><br />
<strong>ref:</strong><br />
http://rackerhacker.com/2008/03/11/hunting-down-elusive-sources-of-iowait/<br />
http://blog.eikke.com/index.php/ikke/2007/03/22/who_s_abusing_my_sata_controller<br />
http://hi.baidu.com/dipsey/blog/item/900bbbaf3e46dcc97cd92aba.html<br />
<a href="http://www.ducea.com/2009/03/11/howto-install-iotop-on-debian-etch/">http://www.ducea.com/2009/03/11/howto-install-iotop-on-debian-etch/</a></p>
<p><a href="http://www.cppblog.com/go-benny/archive/2008/04/23/47908.html">http://www.cppblog.com/go-benny/archive/2008/04/23/47908.html</a></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>467</wp:post_id>
		<wp:post_date>2009-04-25 00:59:35</wp:post_date>
		<wp:post_date_gmt>2009-04-24 16:59:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-can-i-find-out-what-is-generating-iowait-on-my-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="iowait"><![CDATA[iowait]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:comment>
			<wp:comment_id>433</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.126.5.21</wp:comment_author_IP>
			<wp:comment_date>2009-04-25 01:00:12</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[this is a great tools:
http://guichaz.free.fr/iotop/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Read EXIF messages from a Image  file with ruby.</title>
		<link>http://www.iceskysl.com/?p=468</link>
		<pubDate>Sat, 25 Apr 2009 16:40:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=468</guid>
		<description></description>
		<content:encoded><![CDATA[<p>today, i register into <a href="http://footbig.com">bigfoot</a>,and notice some interesting info like this:</p>
<p><em>EXIF 是 Exchangeable Image File Format 的缩写。<br />
数码相机在拍摄时，会将一些信息保存到照片文件中，这些信息包括相机厂商和型号、拍摄时间及当前照片的曝光参数（快门速度、光圈、ISO、焦距等等）。</em></p>
<p>so i&nbsp; find some libs to do this with ruby,and here is some useful codes:</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'exifr'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;image_file&nbsp;=&nbsp;ARGV.first&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;<span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;image_file.downcase&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;/.jpg\Z/&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;EXIFR::JPEG.<span class="keyword">new</span><span>(image_file)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;/.tiff?\Z/&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;EXIFR::TIFF.<span class="keyword">new</span><span>(image_file)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;Standard&nbsp;items&quot;</span><span>.center(72)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;=&quot;</span><span>&nbsp;*&nbsp;72&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;:&nbsp;#{image_file}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Height&nbsp;:&nbsp;#{exif_info.height}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Width&nbsp;:&nbsp;#{exif_info.width}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;exif_info.exif?&nbsp;</span><span class="keyword">then</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;EXIF&nbsp;information&quot;</span><span>.center(72)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;=&quot;</span><span>&nbsp;*&nbsp;72&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;exif_info.exif.to_hash&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h.each_pair&nbsp;<span class="keyword">do</span><span>&nbsp;|k,v|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{k.to_s.rjust(30)}&nbsp;:&nbsp;#{v}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;No&nbsp;EXIF&nbsp;information&nbsp;in&nbsp;this&nbsp;image&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
and output like this:</p>
<p>F:\codes\ruby\exif&gt;ruby exif-test.rb.rb S6003504.JPG<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Standard items<br />
========================================================================<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File : S6003504.JPG<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Height : 1200<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Width : 1600<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXIF information<br />
========================================================================<br />
&nbsp;&nbsp;&nbsp;&nbsp; compressed_bits_per_pixel : 453653/120000<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; orientation : #&lt;EXIFR::TIFF::Orientation:0x2e20e44&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_index : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x_resolution : 96<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_mode : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shutter_speed_value : 21/4<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_time : 1/45<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sensing_method : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color_space : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; metering_mode : 5<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_description : &lt;Digimax S600 / Kenox S600 / Digimax Cyber 630&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y_resolution : 96<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resolution_unit : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; white_balance : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aperture_value : 79/25<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; f_number : 3<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saturation : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pixel_x_dimension : 1600<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; light_source : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time_original : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; make : Samsung Techwin<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; digital_zoom_ratio : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_program : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ycb_cr_positioning : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharpness : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pixel_y_dimension : 1200<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flash : 24<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time_digitized : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; model : &lt;Digimax S600 / Kenox S600 / Digimax Cyber 630&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; software : 611131<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; copyright : COPYRIGHT, 2006<br />
&nbsp;&nbsp;&nbsp;&nbsp; focal_length_in_35mm_film : 43<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_bias_value : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; related_sound_file : RelatedSound<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; focal_length : 36/5<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scene_capture_type : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max_aperture_value : 79/25<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iso_speed_ratings : 69</p>
<p>great,yep?</p>
<p>and some resources here:</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: 'Lucida Grande'; font-size: 12px; line-height: 16px; text-align: justify;" class="Apple-style-span">
<ul style="padding: 0px 0px 0px 10px; margin-left: 0px; list-style-type: none; text-indent: -10px;">
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://rubyforge.org/projects/exifr">Exifr</a><span class="Apple-converted-space">&nbsp;</span>(Exif Reader. Read EXIF information from JPEG and TIFF)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://www.exiv2.org/">Exiv2</a><span class="Apple-converted-space">&nbsp;</span>(C++ Library, Read and Write EXIF information. No write support for TIFF)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://rubyforge.org/projects/ruby-exiv2/">Ruby-Exiv2</a><span class="Apple-converted-space">&nbsp;</span>(Ruby binding for exiv2)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://libexif.sourceforge.net/">Libexif</a><span class="Apple-converted-space">&nbsp;</span>(C Library)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://packages.debian.org/de/sid/libexif-ruby1.8">Libexif-Ruby</a><span class="Apple-converted-space">&nbsp;</span>(Ruby interface for libexif, did not test it but I read somewhere that it only supports reading)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://www.sno.phy.queensu.ca/~phil/exiftool/">ExifTool</a><span class="Apple-converted-space">&nbsp;</span>(Perl LIbrary/CLI for reading/writing meta information)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="https://rubyforge.org/projects/miniexiftool/">Mini-Exiftool</a><span class="Apple-converted-space">&nbsp;</span>(a gem which uses the exiftool CLI)</li>
</ul>
</span></span></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>today, i register into bigfoot,and notice some interesting info like this:</p>
<p><em>EXIF 是 Exchangeable Image File Format 的缩写。<br />
数码相机在拍摄时，会将一些信息保存到照片文件中，这些信息包括相机厂商和型号、拍摄时间及当前照片的曝光参数（快门速度、光圈、ISO、焦距等等）。</em></p>
<p>so i&nbsp; find some libs to do this with ruby,and here is some useful codes:</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>require&nbsp;</span><span class="string">'rubygems'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>require&nbsp;<span class="string">'exifr'</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;image_file&nbsp;=&nbsp;ARGV.first&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;<span class="keyword">nil</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;image_file.downcase&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;/.jpg\Z/&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;EXIFR::JPEG.<span class="keyword">new</span><span>(image_file)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">when</span><span>&nbsp;/.tiff?\Z/&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exif_info&nbsp;=&nbsp;EXIFR::TIFF.<span class="keyword">new</span><span>(image_file)&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;Standard&nbsp;items&quot;</span><span>.center(72)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;=&quot;</span><span>&nbsp;*&nbsp;72&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;:&nbsp;#{image_file}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Height&nbsp;:&nbsp;#{exif_info.height}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Width&nbsp;:&nbsp;#{exif_info.width}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;exif_info.exif?&nbsp;</span><span class="keyword">then</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;EXIF&nbsp;information&quot;</span><span>.center(72)&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;=&quot;</span><span>&nbsp;*&nbsp;72&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;exif_info.exif.to_hash&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h.each_pair&nbsp;<span class="keyword">do</span><span>&nbsp;|k,v|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;#{k.to_s.rjust(30)}&nbsp;:&nbsp;#{v}&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts&nbsp;<span class="string">&quot;No&nbsp;EXIF&nbsp;information&nbsp;in&nbsp;this&nbsp;image&quot;</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>and output like this:</p>
<p>F:\codes\ruby\exif&gt;ruby exif-test.rb.rb S6003504.JPG<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Standard items<br />
========================================================================<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File : S6003504.JPG<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Height : 1200<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Width : 1600<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXIF information<br />
========================================================================<br />
&nbsp;&nbsp;&nbsp;&nbsp; compressed_bits_per_pixel : 453653/120000<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; orientation : #&lt;EXIFR::TIFF::Orientation:0x2e20e44&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_index : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x_resolution : 96<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_mode : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shutter_speed_value : 21/4<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_time : 1/45<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sensing_method : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color_space : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; metering_mode : 5<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image_description : &lt;Digimax S600 / Kenox S600 / Digimax Cyber 630&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y_resolution : 96<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resolution_unit : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; white_balance : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aperture_value : 79/25<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; f_number : 3<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saturation : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pixel_x_dimension : 1600<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; light_source : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time_original : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; make : Samsung Techwin<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; digital_zoom_ratio : 1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_program : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ycb_cr_positioning : 2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharpness : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pixel_y_dimension : 1200<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flash : 24<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time_digitized : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; model : &lt;Digimax S600 / Kenox S600 / Digimax Cyber 630&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; software : 611131<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; copyright : COPYRIGHT, 2006<br />
&nbsp;&nbsp;&nbsp;&nbsp; focal_length_in_35mm_film : 43<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exposure_bias_value : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; related_sound_file : RelatedSound<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; focal_length : 36/5<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date_time : Sat Feb 28 23:36:58 +0800 2009<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scene_capture_type : 0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max_aperture_value : 79/25<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iso_speed_ratings : 69</p>
<p>great,yep?</p>
<p>and some resources here:</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: 'Lucida Grande'; font-size: 12px; line-height: 16px; text-align: justify;" class="Apple-style-span">
<ul style="padding: 0px 0px 0px 10px; margin-left: 0px; list-style-type: none; text-indent: -10px;">
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://rubyforge.org/projects/exifr">Exifr</a><span class="Apple-converted-space">&nbsp;</span>(Exif Reader. Read EXIF information from JPEG and TIFF)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://www.exiv2.org/">Exiv2</a><span class="Apple-converted-space">&nbsp;</span>(C++ Library, Read and Write EXIF information. No write support for TIFF)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://rubyforge.org/projects/ruby-exiv2/">Ruby-Exiv2</a><span class="Apple-converted-space">&nbsp;</span>(Ruby binding for exiv2)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://libexif.sourceforge.net/">Libexif</a><span class="Apple-converted-space">&nbsp;</span>(C Library)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://packages.debian.org/de/sid/libexif-ruby1.8">Libexif-Ruby</a><span class="Apple-converted-space">&nbsp;</span>(Ruby interface for libexif, did not test it but I read somewhere that it only supports reading)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="http://www.sno.phy.queensu.ca/%7Ephil/exiftool/">ExifTool</a><span class="Apple-converted-space">&nbsp;</span>(Perl LIbrary/CLI for reading/writing meta information)</li>
    <li style="margin: 7px 0px 8px 10px;"><a style="color: rgb(0, 102, 204); text-decoration: none;" href="https://rubyforge.org/projects/miniexiftool/">Mini-Exiftool</a><span class="Apple-converted-space">&nbsp;</span>(a gem which uses the exiftool CLI)</li>
</ul>
</span></span></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2009-04-26 00:40:06</wp:post_date>
		<wp:post_date_gmt>2009-04-25 16:40:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>read-exif-messages-from-a-image-file-with-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="exif"><![CDATA[EXIF]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<wp:comment>
			<wp:comment_id>434</wp:comment_id>
			<wp:comment_author><![CDATA[非主流]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.fzl988.cn/</wp:comment_author_url>
			<wp:comment_author_IP>218.58.176.27</wp:comment_author_IP>
			<wp:comment_date>2009-04-29 10:26:22</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good,i like it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Some useful tips for god usage</title>
		<link>http://www.iceskysl.com/?p=469</link>
		<pubDate>Thu, 30 Apr 2009 08:25:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=469</guid>
		<description></description>
		<content:encoded><![CDATA[<p>some days before,i&nbsp; posted a article 《<a href="http://iceskysl.1sters.com/?action=show&amp;id=364">God: 比Monit更好用的monitoring</a>》,today,i will post more useful tips for God.</p>
<p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>[iceskysl</span><span class="variable">@ws_api</span><span>]</span><span class="comment">#&nbsp;god&nbsp;--help</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;Usage:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Starting:&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;[-c&nbsp;&lt;config&nbsp;file&gt;]&nbsp;[-p&nbsp;&lt;port&gt;&nbsp;|&nbsp;-b]&nbsp;[-P&nbsp;&lt;file&gt;]&nbsp;[-l&nbsp;&lt;file&gt;]&nbsp;[-D]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Querying:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;&lt;command&gt;&nbsp;&lt;argument&gt;&nbsp;[-p&nbsp;&lt;port&gt;]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;&lt;command&gt;&nbsp;[-p&nbsp;&lt;port&gt;]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;-v&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;-V&nbsp;(must&nbsp;be&nbsp;run&nbsp;as&nbsp;root&nbsp;to&nbsp;be&nbsp;accurate&nbsp;on&nbsp;Linux)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Commands:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;monitor&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;monitor&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unmonitor&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unmonitor&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;from&nbsp;god&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load&nbsp;&lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load&nbsp;a&nbsp;config&nbsp;into&nbsp;a&nbsp;running&nbsp;god&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;&lt;task&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;realtime&nbsp;log&nbsp;<span class="keyword">for</span><span>&nbsp;given&nbsp;task&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;status&nbsp;of&nbsp;<span class="keyword">each</span><span>&nbsp;task&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;god&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;terminate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;god&nbsp;<span class="keyword">and</span><span>&nbsp;all&nbsp;tasks&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;<span class="keyword">self</span><span>&nbsp;diagnostic&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Options:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-c,&nbsp;--config-file&nbsp;CONFIG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configuration&nbsp;file&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-p,&nbsp;--port&nbsp;PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Communications&nbsp;port&nbsp;(default&nbsp;17165)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-b,&nbsp;--auto-bind&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Auto-bind&nbsp;to&nbsp;an&nbsp;unused&nbsp;port&nbsp;number&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-P,&nbsp;--pid&nbsp;FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where&nbsp;to&nbsp;write&nbsp;the&nbsp;PID&nbsp;file&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-l,&nbsp;--log&nbsp;FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where&nbsp;to&nbsp;write&nbsp;the&nbsp;log&nbsp;file&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-D,&nbsp;--no-daemonize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Don't&nbsp;daemonize&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-v,&nbsp;--version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;the&nbsp;version&nbsp;number&nbsp;<span class="keyword">and</span><span>&nbsp;exit&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;extended&nbsp;version&nbsp;<span class="keyword">and</span><span>&nbsp;build&nbsp;information&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--log-level&nbsp;LEVEL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log&nbsp;level&nbsp;[debug|info|warn|error|fatal]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--no-syslog&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disable&nbsp;output&nbsp;to&nbsp;syslog&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--attach&nbsp;PID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Quit&nbsp;god&nbsp;<span class="keyword">when</span><span>&nbsp;the&nbsp;attached&nbsp;process&nbsp;dies&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--no-events&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disable&nbsp;the&nbsp;event&nbsp;system&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--bleakhouse&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable&nbsp;bleakhouse&nbsp;profiling&nbsp;&nbsp;</span></li>
    <li class=""><span>[iceskysl<span class="variable">@ws_api</span><span>]</span><span class="comment">#&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
1.DYNAMICALLY LOADING CONFIG FILES INTO AN ALREADY RUNNING GOD</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(72, 72, 72); font-family: 'Trebuchet MS'; font-size: 13px; line-height: 19px;" class="Apple-style-span">
<p style="margin: 0px 0px 1em; font-size: 13px;">God allows you to load or reload configurations into an already running instance. There are a few things to consider when doing this:</p>
<ul style="margin: 0px 0px 1em; font-size: 13px;">
    <li style="margin: 0px; font-size: 13px;">Existng Watches with the same<span class="Apple-converted-space">&nbsp;</span><code style="margin: 0px; font-size: 1.2em;">name</code><span class="Apple-converted-space">&nbsp;</span>as the incoming Watches will be overidden by the new config.</li>
    <li style="margin: 0px; font-size: 13px;">All paths must be either absolute or relative to the path from which god was started.</li>
</ul>
<p style="margin: 0px 0px 1em; font-size: 13px;">To load a config into a running god, issue the following command:</p>
<pre style="border: 1px solid rgb(204, 204, 204); margin: 1em 0px; padding: 1em; font-size: 10px; line-height: 1.3; background-color: rgb(239, 239, 239);">$ sudo god load path/to/config.god<br /># god load /data/www/api/config/config_thin_api.god</pre>
<p style="margin: 0px 0px 1em; font-size: 13px;">Config files that are loaded dynamically can contain anything that a normal config file contains, however, global options such as<span class="Apple-converted-space">&nbsp;</span><code style="margin: 0px; font-size: 1.2em;">God.pid_file_directory</code><span class="Apple-converted-space">&nbsp;</span>blocks will be ignored (and produce a warning in the logs).</p>
</span></span></p>
<p><strong>2.show logs</strong></p>
<p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>[iceskysl@ws_api]#&nbsp;god&nbsp;log&nbsp;thin-thin-7514&nbsp;&nbsp;</span></span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.705870&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;moved&nbsp;'up'&nbsp;to&nbsp;'up'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.706346&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;[trigger]&nbsp;process&nbsp;is&nbsp;not&nbsp;running&nbsp;(ProcessRunning)&nbsp;&nbsp;</span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.888477&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;sent&nbsp;email&nbsp;to&nbsp;iceskysl@gmail.com&nbsp;(Email)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.888642&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;move&nbsp;'up'&nbsp;to&nbsp;'start'&nbsp;&nbsp;</span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.888976&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;before_start:&nbsp;no&nbsp;pid&nbsp;file&nbsp;to&nbsp;delete&nbsp;(CleanPidFile)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.889109&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;start:&nbsp;thin&nbsp;start&nbsp;-C&nbsp;/data/www/web/current/config/thin.yml&nbsp;-o&nbsp;7514&nbsp;&nbsp;</span></li>
</ol>
</div>
</p>
<p>resource links:</p>
<p><a href="http://god.rubyforge.org/">http://god.rubyforge.org/</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>some days before,i&nbsp; posted a article 《<a href="../../../?action=show&amp;id=364">God: 比Monit更好用的monitoring</a>》,today,i will post more useful tips for God.</p>
<div class="codeText">
<div class="codeHead">Ruby代码</div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>[iceskysl</span><span class="variable">@ws_api</span><span>]</span><span class="comment">#&nbsp;god&nbsp;--help</span><span>&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;Usage:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Starting:&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;[-c&nbsp;&lt;config&nbsp;file&gt;]&nbsp;[-p&nbsp;&lt;port&gt;&nbsp;|&nbsp;-b]&nbsp;[-P&nbsp;&lt;file&gt;]&nbsp;[-l&nbsp;&lt;file&gt;]&nbsp;[-D]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Querying:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;&lt;command&gt;&nbsp;&lt;argument&gt;&nbsp;[-p&nbsp;&lt;port&gt;]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;&lt;command&gt;&nbsp;[-p&nbsp;&lt;port&gt;]&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;-v&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;god&nbsp;-V&nbsp;(must&nbsp;be&nbsp;run&nbsp;as&nbsp;root&nbsp;to&nbsp;be&nbsp;accurate&nbsp;on&nbsp;Linux)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Commands:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restart&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;monitor&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;monitor&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unmonitor&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unmonitor&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove&nbsp;&lt;task&nbsp;<span class="keyword">or</span><span>&nbsp;group&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove&nbsp;task&nbsp;</span><span class="keyword">or</span><span>&nbsp;group&nbsp;from&nbsp;god&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load&nbsp;&lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load&nbsp;a&nbsp;config&nbsp;into&nbsp;a&nbsp;running&nbsp;god&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;&lt;task&nbsp;name&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;realtime&nbsp;log&nbsp;<span class="keyword">for</span><span>&nbsp;given&nbsp;task&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;status&nbsp;of&nbsp;<span class="keyword">each</span><span>&nbsp;task&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;god&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;terminate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;god&nbsp;<span class="keyword">and</span><span>&nbsp;all&nbsp;tasks&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;<span class="keyword">self</span><span>&nbsp;diagnostic&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Options:&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-c,&nbsp;--config-file&nbsp;CONFIG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configuration&nbsp;file&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-p,&nbsp;--port&nbsp;PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Communications&nbsp;port&nbsp;(default&nbsp;17165)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-b,&nbsp;--auto-bind&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Auto-bind&nbsp;to&nbsp;an&nbsp;unused&nbsp;port&nbsp;number&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-P,&nbsp;--pid&nbsp;FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where&nbsp;to&nbsp;write&nbsp;the&nbsp;PID&nbsp;file&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-l,&nbsp;--log&nbsp;FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Where&nbsp;to&nbsp;write&nbsp;the&nbsp;log&nbsp;file&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-D,&nbsp;--no-daemonize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Don't&nbsp;daemonize&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;-v,&nbsp;--version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;the&nbsp;version&nbsp;number&nbsp;<span class="keyword">and</span><span>&nbsp;exit&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;extended&nbsp;version&nbsp;<span class="keyword">and</span><span>&nbsp;build&nbsp;information&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--log-level&nbsp;LEVEL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log&nbsp;level&nbsp;[debug|info|warn|error|fatal]&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--no-syslog&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disable&nbsp;output&nbsp;to&nbsp;syslog&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--attach&nbsp;PID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Quit&nbsp;god&nbsp;<span class="keyword">when</span><span>&nbsp;the&nbsp;attached&nbsp;process&nbsp;dies&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--no-events&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disable&nbsp;the&nbsp;event&nbsp;system&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--bleakhouse&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable&nbsp;bleakhouse&nbsp;profiling&nbsp;&nbsp;</span></li>
    <li class=""><span>[iceskysl<span class="variable">@ws_api</span><span>]</span><span class="comment">#&nbsp;</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>1.DYNAMICALLY LOADING CONFIG FILES INTO AN ALREADY RUNNING GOD</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(72, 72, 72); font-family: 'Trebuchet MS'; font-size: 13px; line-height: 19px;" class="Apple-style-span">
<p style="margin: 0px 0px 1em; font-size: 13px;">God allows you to load or reload configurations into an already running instance. There are a few things to consider when doing this:</p>
<ul style="margin: 0px 0px 1em; font-size: 13px;">
    <li style="margin: 0px; font-size: 13px;">Existng Watches with the same<span class="Apple-converted-space">&nbsp;</span><code style="margin: 0px; font-size: 1.2em;">name</code><span class="Apple-converted-space">&nbsp;</span>as the incoming Watches will be overidden by the new config.</li>
    <li style="margin: 0px; font-size: 13px;">All paths must be either absolute or relative to the path from which god was started.</li>
</ul>
<p style="margin: 0px 0px 1em; font-size: 13px;">To load a config into a running god, issue the following command:</p>
<pre style="border: 1px solid rgb(204, 204, 204); margin: 1em 0px; padding: 1em; font-size: 10px; line-height: 1.3; background-color: rgb(239, 239, 239);">$ sudo god load path/to/config.god<br /># god load /data/www/api/config/config_thin_api.god</pre>
<p style="margin: 0px 0px 1em; font-size: 13px;">Config files that are loaded dynamically can contain anything that a normal config file contains, however, global options such as<span class="Apple-converted-space">&nbsp;</span><code style="margin: 0px; font-size: 1.2em;">God.pid_file_directory</code><span class="Apple-converted-space">&nbsp;</span>blocks will be ignored (and produce a warning in the logs).</p>
</span></span></p>
<p><strong>2.show logs</strong></p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>[iceskysl@ws_api]#&nbsp;god&nbsp;log&nbsp;thin-thin-7514&nbsp;&nbsp;</span></span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.705870&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;moved&nbsp;'up'&nbsp;to&nbsp;'up'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.706346&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;[trigger]&nbsp;process&nbsp;is&nbsp;not&nbsp;running&nbsp;(ProcessRunning)&nbsp;&nbsp;</span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.888477&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;sent&nbsp;email&nbsp;to&nbsp;iceskysl@gmail.com&nbsp;(Email)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.888642&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;move&nbsp;'up'&nbsp;to&nbsp;'start'&nbsp;&nbsp;</span></li>
    <li class=""><span>I,&nbsp;[2009-04-28T08:24:16.888976&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;before_start:&nbsp;no&nbsp;pid&nbsp;file&nbsp;to&nbsp;delete&nbsp;(CleanPidFile)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>I,&nbsp;[2009-04-28T08:24:16.889109&nbsp;#23174]&nbsp;&nbsp;INFO&nbsp;--&nbsp;:&nbsp;thin-thin-7514&nbsp;start:&nbsp;thin&nbsp;start&nbsp;-C&nbsp;/data/www/web/current/config/thin.yml&nbsp;-o&nbsp;7514&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>resource links:</p>
<p><a href="http://god.rubyforge.org/">http://god.rubyforge.org/</a></p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2009-04-30 16:25:06</wp:post_date>
		<wp:post_date_gmt>2009-04-30 08:25:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-useful-tips-for-god-usage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="god"><![CDATA[God]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<category domain="post_tag" nicename="tips"><![CDATA[tips]]></category>
	</item>
	<item>
		<title>NameError: uninitialized constant Inflector</title>
		<link>http://www.iceskysl.com/?p=470</link>
		<pubDate>Tue, 05 May 2009 13:37:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you have recently updated to Rails 2.2.2, you may encounter this error when you want to start your application:<br />
<br />
<font color="#ff0000"><em>/.gem/ruby/1.8/gems/activesupport-2.2.2/lib/active_support/dependencies.rb:445:in<br />
`load_missing_constant': uninitialized constant Inflector (NameError)</em></font><br />
<br />
the usage of Inflector class is changed a bit. You can see the difference when you compare the inflections.rb files. Path of the file is yourApp/config/initializers/inflections.rb<br />
<br />
<div class="codeText">
<div class="codeHead"><strong><span><span>inflections.rb&nbsp;(Rails&nbsp;2.1.0)</span></span></strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>&nbsp; <br />
    </span></span></li>
    <li class=""><span>&nbsp;Inflector.inflections&nbsp;<span class="keyword">do</span><span>&nbsp;|inflect|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<br />
<div class="codeText">
<div class="codeHead"><strong>inflections.rb (Rails 2.2.2)</strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ActiveSupport::Inflector.inflections&nbsp;</span><span class="keyword">do</span><span>&nbsp;|inflect|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
the situation changing <strong>Inflector </strong>to <strong>ActiveSupport::Inflector </strong>was enough to solve the problem.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>If you have recently updated to Rails 2.2.2, you may encounter this error when you want to start your application:<br />
<br />
<font color="#ff0000"><em>/.gem/ruby/1.8/gems/activesupport-2.2.2/lib/active_support/dependencies.rb:445:in<br />
`load_missing_constant': uninitialized constant Inflector (NameError)</em></font><br />
<br />
the usage of Inflector class is changed a bit. You can see the difference when you compare the inflections.rb files. Path of the file is yourApp/config/initializers/inflections.rb</p>
<div class="codeText">
<div class="codeHead"><strong><span><span>inflections.rb&nbsp;(Rails&nbsp;2.1.0)</span></span></strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>&nbsp; <br />
    </span></span></li>
    <li class=""><span>&nbsp;Inflector.inflections&nbsp;<span class="keyword">do</span><span>&nbsp;|inflect|&nbsp;&nbsp;</span></span></li>
    <li class="alt"><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;<span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>&nbsp;</p>
<div class="codeText">
<div class="codeHead"><strong>inflections.rb (Rails 2.2.2)</strong></div>
<ol start="1" class="dp-rb">
    <li class="alt"><span><span>ActiveSupport::Inflector.inflections&nbsp;</span><span class="keyword">do</span><span>&nbsp;|inflect|&nbsp;&nbsp;</span></span></li>
    <li class=""><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;.&nbsp;&nbsp;</span></li>
    <li class="alt"><span><span class="keyword">end</span><span>&nbsp;&nbsp;</span></span></li>
</ol>
</div>
<p>the situation changing <strong>Inflector </strong>to <strong>ActiveSupport::Inflector </strong>was enough to solve the problem.</p>
<p>&nbsp;</p>]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2009-05-05 21:37:01</wp:post_date>
		<wp:post_date_gmt>2009-05-05 13:37:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nameerror-uninitialized-constant-inflector</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="inflector"><![CDATA[Inflector]]></category>
		<category domain="post_tag" nicename="nameerror"><![CDATA[NameError]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
		<wp:comment>
			<wp:comment_id>435</wp:comment_id>
			<wp:comment_author><![CDATA[丽江婚纱摄影]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.tlsy99.com/about.asp</wp:comment_author_url>
			<wp:comment_author_IP>122.234.190.239</wp:comment_author_IP>
			<wp:comment_date>2009-05-07 11:38:09</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[沙发,嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Socket Errno::EAFNOSUPPORT with God in ruby</title>
		<link>http://www.iceskysl.com/?p=471</link>
		<pubDate>Sat, 16 May 2009 13:48:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[<p>when i start god.sh,then give some error msg like this:</p>
<p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>I&nbsp;[2009-05-16&nbsp;21:25:41]&nbsp;&nbsp;INFO:&nbsp;Using&nbsp;pid&nbsp;file&nbsp;directory:&nbsp;/var/run/god&nbsp;&nbsp;</span></span></li>
    <li class=""><span>/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`initialize':&nbsp;Address&nbsp;family&nbsp;not&nbsp;supported&nbsp;by&nbsp;protocol&nbsp;-&nbsp;socket(2)&nbsp;(Errno::EAFNOSUPPORT)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`open'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`open_server_inaddr_any'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:863:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:759:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:757:in&nbsp;`each'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:757:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1340:in&nbsp;`initialize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1628:in&nbsp;`new'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1628:in&nbsp;`start_service'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/socket.rb:78:in&nbsp;`start'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/socket.rb:43:in&nbsp;`initialize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:607:in&nbsp;`new'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:607:in&nbsp;`start'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:633:in&nbsp;`at_exit'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:666&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/cli/run.rb:87&nbsp;&nbsp;</span></li>
</ol>
</div>
ok,then i find some userful messsage,like here:</p>
<p style="background-color: rgb(255, 0, 0);"><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: Verdana; font-size: 14px;" class="Apple-style-span">Errno::EAFNOSUPPORT - the specified<span class="Apple-converted-space">&nbsp;</span><em>sockaddr</em><span class="Apple-converted-space">&nbsp;</span>isnot a valid address for the family of the calling<span class="Apple-converted-space">&nbsp;</span><tt>socket</tt></span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: Verdana; font-size: 14px;" class="Apple-style-span"><tt>and here, i notice where is the problen,the god find hostname,name map it to ip address,then create some sockets on the ip,and the error point is here,so i nano my /etc/hosts file,and add map for hostname and 127.0.0.1,that's it!<br />
</tt></span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>when i start god.sh,then give some error msg like this:</p>
<div class="codeText">
<div class="codeHead">XML/HTML代码</div>
<ol start="1" class="dp-xml">
    <li class="alt"><span><span>I&nbsp;[2009-05-16&nbsp;21:25:41]&nbsp;&nbsp;INFO:&nbsp;Using&nbsp;pid&nbsp;file&nbsp;directory:&nbsp;/var/run/god&nbsp;&nbsp;</span></span></li>
    <li class=""><span>/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`initialize':&nbsp;Address&nbsp;family&nbsp;not&nbsp;supported&nbsp;by&nbsp;protocol&nbsp;-&nbsp;socket(2)&nbsp;(Errno::EAFNOSUPPORT)&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`open'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:850:in&nbsp;`open_server_inaddr_any'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:863:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:759:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:757:in&nbsp;`each'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:757:in&nbsp;`open_server'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1340:in&nbsp;`initialize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1628:in&nbsp;`new'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/1.8/drb/drb.rb:1628:in&nbsp;`start_service'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/socket.rb:78:in&nbsp;`start'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/socket.rb:43:in&nbsp;`initialize'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:607:in&nbsp;`new'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:607:in&nbsp;`start'&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:633:in&nbsp;`at_exit'&nbsp;&nbsp;</span></li>
    <li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god.rb:666&nbsp;&nbsp;</span></li>
    <li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;/usr/local/ruby/lib/ruby/gems/1.8/gems/god-0.7.13/bin/../lib/god/cli/run.rb:87&nbsp;&nbsp;</span></li>
</ol>
</div>
<p>ok,then i find some userful messsage,like here:</p>
<p style="background-color: rgb(255, 0, 0);"><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: Verdana; font-size: 14px;" class="Apple-style-span">Errno::EAFNOSUPPORT - the specified<span class="Apple-converted-space">&nbsp;</span><em>sockaddr</em><span class="Apple-converted-space">&nbsp;</span>isnot a valid address for the family of the calling<span class="Apple-converted-space">&nbsp;</span><tt>socket</tt></span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'times new roman'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: Verdana; font-size: 14px;" class="Apple-style-span"><tt>and here, i notice where is the problen,the god find hostname,name map it to ip address,then create some sockets on the ip,and the error point is here,so i nano my /etc/hosts file,and add map for hostname and 127.0.0.1,that's it!<br />
</tt></span></span></p>]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2009-05-16 21:48:50</wp:post_date>
		<wp:post_date_gmt>2009-05-16 13:48:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>socket-errnoeafnosupport-with-god-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="god"><![CDATA[God]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubyrails"><![CDATA[Ruby&amp;Rails]]></category>
	</item>
	<item>
		<title>我写的书：《Google Android开发入门与实战》等即将上市.</title>
		<link>http://www.iceskysl.com/?p=472</link>
		<pubDate>Tue, 19 May 2009 19:09:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=472</guid>
		<description></description>
		<content:encoded><![CDATA[这篇文章是非技术性的，所以使用中文写，免得写了大家看不懂，呵呵。

写书不是第一次，出版却是第一本，至于原因，就不详述了，去年9月开始参与一些图书的翻译和撰写中，截至到目前，这段时间一共参与了三本书，按照参与的先后顺序，分别是《The Rails Way》，《Google API 编程.开发.实例》以及《Google Android开发入门与实战》。

其中<strong>《The Rails Way》</strong>是做为译者参与，其他翻译者都是国内第一批Rails技术人员，分散在全国各地，还有一名译者在加拿大，我一共翻译了5章内容，分别是第2章“Working_with_Controllers”，第10章“ActionView”，第13章“Session__Session_Management”，第15章“XML_and_ActiveResource”和第16章“ActionMailer”，翻译很早前就结束了，目前好像还在审稿、校核工作，由YiTan在跟，至于何时出版，我还真不知道。

<strong>《Google API 编程.开发.实例》</strong>我是从去年9月份介入，开始参与选题和策划，截至撰写相关内容，因为我自身是Google重度使用者，平时也比较多的使用和了解GoogleAPI，所以写起来得心应手，一共写了“Google Account Authentication”，“Google AJAX Language API”，“Google Chart API”，“Blogger Data API”，“Feedburner API”，“Google Code Search Data API”和“Google Book Search Book Viewability API”这些章节，前前后后也花了不少零碎的时间。其他作者大多都Google内部的同学，本书已经进入出版流程，由<em><strong>博文视点出版社</strong></em>策划出版，应该在6.5号Google开发者大会上可以看到，如下是本书第一版封面。

<img src="http://lh3.ggpht.com/_GiZR7A3zZ6s/Sia51aYjlYI/AAAAAAAAEQQ/fn6E_7nW0OM/s400/%E5%B0%81%E9%9D%A2%EF%BC%88%E5%B0%8F%EF%BC%89.jpg" alt="" />

<strong>本书特点：</strong>本书覆盖了Google绝大多数的API，其中针对每个API就其原理、用法做了详细说明，最后基本上都有实际的例子演示如何使用。

<strong>《Google Android开发入门与实战》</strong>是08年11月份开始撰写的，和另外一个朋友一起，两个人陆续的差不多用了半年时间，在09年4月份差不多全部写完，后面主要是都在校核和审稿，由<em><strong>人民邮电出版社</strong></em>出版，5月底6月初即可上市，封面如下：

<img src="http://lh5.ggpht.com/_GiZR7A3zZ6s/Sia-Kho8JgI/AAAAAAAAEQc/UFMp_3V_etA/s400/google_android.jpg" alt="" />

&nbsp;
<pre class="note" style="font-family: monospace; font-size: 1em;">本书内容特点：     * 国内第一本原创Android图书     * 完全基于Android最新的SDK1.5     * 全书除了大量小型案例之外还包含了5个Android平台下的完整商业实例及源码分析，分别是RSS阅读器、      基于GoogleMap的个人GPS、豆瓣客户端、在线音乐播放器、手机信息助手     * 随书附赠的光盘中包含300分钟的详细教学视频以及Android开发必备的开发资源     * 读者对于此书内容的疑问可以访问<a style="color: #666699; text-decoration: none; cursor: pointer;" href="http://www.eoeandroid.com/" rel="nofollow" target="_blank">http://www.eoeandroid.com</a>社区，作者团队将会及时解答，不在这里解答，谢谢。</pre>
<pre class="note" style="font-family: monospace; font-size: 1em;">    样章下载：<a style="color: #666699; text-decoration: none; cursor: pointer;" href="http://www.eoeandroid.com/viewthread.php?tid=314&amp;extra=page%3D1" rel="nofollow" target="_blank">http://www.eoeandroid.com/viewthread.php?tid=314&amp;extra=page%3D1</a>    视频下载：<a style="color: #666699; text-decoration: none; cursor: pointer;" href="http://www.eoeandroid.com/viewthread.php?tid=328&amp;extra=page%3D1" rel="nofollow" target="_blank">http://www.eoeandroid.com/viewthread.php?tid=328&amp;extra=page%3D1</a></pre>
<strong>PS:</strong>

这里只是我个人技术随笔，理论上不保证在这里解答图书中问题，如果你对图书有问题，

请前往其支持社区“<a href="http://www.eoeandroid.com/forumdisplay.php?fid=35&amp;page=1">《Google Android开发入门与实战》专版</a>”寻求解答；

如果你想对我个人说些什么，那非常欢迎。]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>这篇文章是非技术性的，所以使用中文写，免得写了大家看不懂，呵呵。</p>
<p>写书不是第一次，出版却是第一本，至于原因，就不详述了，去年9月开始参与一些图书的翻译个撰写中，截至到目前，一共参与了三本书，按照参与的先后 顺序，分别是《The Rails Way》，《Google API 编程.开发.实例》以及《Google Android开发入门与实战》。</p>
<p>其中<strong>《The Rails Way》</strong>是做为译者参与，一共翻译了5章内容，分别是第2章 &ldquo;Working_with_Controllers&rdquo;，第10章&ldquo;ActionView&rdquo;，第13章 &ldquo;Session__Session_Management&rdquo;，第15章&ldquo;XML_and_ActiveResource&rdquo;和第16章 &ldquo;ActionMailer&rdquo;，翻译很早前就结束了，目前好像还在审稿、校核工作，至于何时出版，我还真不知道。</p>
<p><strong>《Google API 编程.开发.实例》</strong>从去年9月份介入，开始撰写相关内容，因为我自身是Google重度使用者，所以写起来 得心应手，一共写了&ldquo;Google Account Authentication&rdquo;，&ldquo;Google AJAX Language API&rdquo;，&ldquo;Google Chart API&rdquo;，&ldquo;Blogger Data API&rdquo;，&ldquo;Feedburner API&rdquo;，&ldquo;Google Code Search Data API&rdquo;和&ldquo;Google Book Search Book Viewability API&rdquo;，前前后后也花了不少零碎的时间，本书已经进入出版流程，由博文策划出版，应该在6.5号Google开发者大会上可以看到，如下是本书第一版封 面。</p>
<p><strong>《Google Android开发入门与实战》</strong>是08年11月份开始撰写的，和另外一个朋友一起，两个人陆续的差不多用了半年时间，在09年4月份差不多全部写完，后面主要是都在校核和审稿，由人民邮电出版社出版，5月底6月初即可上市，第一版封面如下：</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: Arial; font-size: 12px; line-height: 18px; text-align: left;" class="Apple-style-span">
<pre style="font-family: monospace; font-size: 1em;" class="note">本书内容特点： <br />    * 国内第一本原创Android图书 <br />    * 完全基于Android最新的SDK1.5 <br />    * 全书除了大量小型案例之外还包含了5个Android平台下的完整商业实例及源码分析，分别是RSS阅读器、基于GoogleMap的个人GPS、<br />豆瓣客户端、在线音乐播放器、手机信息助手 <br />    * 随书附赠的光盘中包含300分钟的详细教学视频以及Android开发必备的开发资源 <br /><br />    * 读者对于此书内容的疑问可以访问<a style="color: rgb(102, 102, 153); text-decoration: none; cursor: pointer;" target="_blank" href="http://www.eoeandroid.com/" rel="nofollow">http://www.eoeandroid.com</a>社区，作者团队将会及时解答，不在这里解答，谢谢。</pre>
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2009-05-20 03:09:11</wp:post_date>
		<wp:post_date_gmt>2009-05-19 19:09:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e5%86%99%e7%9a%84%e4%b9%a6%ef%bc%9a%e3%80%8agoogle-android%e5%bc%80%e5%8f%91%e5%85%a5%e9%97%a8%e4%b8%8e%e5%ae%9e%e6%88%98%e3%80%8b%e7%ad%89%e5%8d%b3%e5%b0%86%e4%b8%8a%e5%b8%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="%e4%b9%a6"><![CDATA[书]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>436</wp:comment_id>
			<wp:comment_author><![CDATA[DestinyD]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://destinyd.war@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>125.38.44.22</wp:comment_author_IP>
			<wp:comment_date>2009-05-29 20:34:08</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[牛人啊=.= 都快出书了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>437</wp:comment_id>
			<wp:comment_author><![CDATA[zhongcp]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.231</wp:comment_author_IP>
			<wp:comment_date>2009-06-02 21:04:21</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[强人啊！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[纪念我的第一本Android技术书籍销量过万]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/?p=751</wp:comment_author_url>
			<wp:comment_author_IP>74.207.242.64</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 08:47:54</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 08:47:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  《Google Android开发入门与实战》是我主导撰写的第一本技术书籍（之前的《Google API 大全》我是参与者），20096月上市后，我GF聊天时问我，对这本书有什么期待，我说：我的期待时做为技术书籍能销量超过1万本。 到2010年7月的时候，这个期待实现了，人民邮电的编辑张涛说“咱那本书又加印了2000册”，喜，终于过万，回忆下： [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>439</wp:comment_id>
			<wp:comment_author><![CDATA[bean]]></wp:comment_author>
			<wp:comment_author_email>foo.bean@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.190.38.234</wp:comment_author_IP>
			<wp:comment_date>2011-03-08 09:25:45</wp:comment_date>
			<wp:comment_date_gmt>2011-03-08 09:25:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[google Reader API有吗，求解?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Installing SQLite 3 on Windows</title>
		<link>http://www.iceskysl.com/?p=473</link>
		<pubDate>Sun, 24 May 2009 02:11:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">Install SQLite3 for Windows by downloading the following 2 zip files and unzipping them into /WINDOWS/system32<br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/sqlite-3_2_7.zip">http://www.sqlite.org/sqlite-3_6_14_1.zip</a><br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/sqlitedll-3_2_7.zip">http://www.sqlite.org/sqlitedll-3_6_14_1.zip</a><br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/download.html">If those don't work try the official download site here</a></span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">and now,you can open a cmd shell,and input </span></span><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">sqlite3 like this:<br />
</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">C:\Documents and Settings\Administrator&gt;sqlite3<br />
SQLite version 3.5.9<br />
Enter &quot;.help&quot; for instructions</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">and some help infos is here:</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">sqlite&gt; .help<br />
.bail ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stop after hitting an error.&nbsp; Default OFF<br />
.databases&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List names and files of attached databases<br />
.dump ?TABLE? ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dump the database in an SQL text format<br />
.echo ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn command echo on or off<br />
.exit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit this program<br />
.explain ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn output mode suitable for EXPLAIN on or off.<br />
.header(s) ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn display of headers on or off<br />
.help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show this message<br />
.import FILE TABLE&nbsp;&nbsp;&nbsp;&nbsp; Import data from FILE into TABLE<br />
.indices TABLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show names of all indices on TABLE<br />
.load FILE ?ENTRY?&nbsp;&nbsp;&nbsp;&nbsp; Load an extension library<br />
.mode MODE ?TABLE?&nbsp;&nbsp;&nbsp;&nbsp; Set output mode where MODE is one of:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; csv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Comma-separated values<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; column&nbsp;&nbsp; Left-aligned columns.&nbsp; (See .width)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html&nbsp;&nbsp;&nbsp;&nbsp; HTML &lt;table&gt; code<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insert&nbsp;&nbsp; SQL insert statements for TABLE<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line&nbsp;&nbsp;&nbsp;&nbsp; One value per line<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list&nbsp;&nbsp;&nbsp;&nbsp; Values delimited by .separator string<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tabs&nbsp;&nbsp;&nbsp;&nbsp; Tab-separated values<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tcl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCL list elements<br />
.nullvalue STRING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Print STRING in place of NULL values<br />
.output FILENAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send output to FILENAME<br />
.output stdout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send output to the screen<br />
.prompt MAIN CONTINUE&nbsp; Replace the standard prompts<br />
.quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit this program<br />
.read FILENAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute SQL in FILENAME<br />
.schema ?TABLE?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show the CREATE statements<br />
.separator STRING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Change separator used by output mode and .import<br />
.show&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show the current values for various settings<br />
.tables ?PATTERN?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List names of tables matching a LIKE pattern<br />
.timeout MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Try opening locked tables for MS milliseconds<br />
.width NUM NUM ...&nbsp;&nbsp;&nbsp;&nbsp; Set column widths for &quot;column&quot; mode</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">Install SQLite3 for Windows by downloading the following 2 zip files and unzipping them into /WINDOWS/system32<br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/sqlite-3_2_7.zip">http://www.sqlite.org/sqlite-3_6_14_1.zip</a><br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/sqlitedll-3_2_7.zip">http://www.sqlite.org/sqlitedll-3_6_14_1.zip</a><br />
<a style="border-bottom: 1px dotted rgb(170, 34, 68); text-decoration: none; font-weight: bold; color: rgb(136, 51, 34);" href="http://www.sqlite.org/download.html">If those don't work try the official download site here</a></span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">and now,you can open a cmd shell,and input </span></span><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">sqlite3 like this:<br />
</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">C:\Documents and Settings\Administrator&gt;sqlite3<br />
SQLite version 3.5.9<br />
Enter &quot;.help&quot; for instructions</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">and some help infos is here:</span></span></p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="color: rgb(102, 0, 0); font-family: Georgia; font-size: 15px; letter-spacing: 1px; line-height: 24px;" class="Apple-style-span">sqlite&gt; .help<br />
.bail ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stop after hitting an error.&nbsp; Default OFF<br />
.databases&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List names and files of attached databases<br />
.dump ?TABLE? ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dump the database in an SQL text format<br />
.echo ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn command echo on or off<br />
.exit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit this program<br />
.explain ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn output mode suitable for EXPLAIN on or off.<br />
.header(s) ON|OFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Turn display of headers on or off<br />
.help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show this message<br />
.import FILE TABLE&nbsp;&nbsp;&nbsp;&nbsp; Import data from FILE into TABLE<br />
.indices TABLE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show names of all indices on TABLE<br />
.load FILE ?ENTRY?&nbsp;&nbsp;&nbsp;&nbsp; Load an extension library<br />
.mode MODE ?TABLE?&nbsp;&nbsp;&nbsp;&nbsp; Set output mode where MODE is one of:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; csv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Comma-separated values<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; column&nbsp;&nbsp; Left-aligned columns.&nbsp; (See .width)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html&nbsp;&nbsp;&nbsp;&nbsp; HTML &lt;table&gt; code<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; insert&nbsp;&nbsp; SQL insert statements for TABLE<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line&nbsp;&nbsp;&nbsp;&nbsp; One value per line<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list&nbsp;&nbsp;&nbsp;&nbsp; Values delimited by .separator string<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tabs&nbsp;&nbsp;&nbsp;&nbsp; Tab-separated values<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tcl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCL list elements<br />
.nullvalue STRING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Print STRING in place of NULL values<br />
.output FILENAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send output to FILENAME<br />
.output stdout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send output to the screen<br />
.prompt MAIN CONTINUE&nbsp; Replace the standard prompts<br />
.quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit this program<br />
.read FILENAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute SQL in FILENAME<br />
.schema ?TABLE?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show the CREATE statements<br />
.separator STRING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Change separator used by output mode and .import<br />
.show&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Show the current values for various settings<br />
.tables ?PATTERN?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List names of tables matching a LIKE pattern<br />
.timeout MS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Try opening locked tables for MS milliseconds<br />
.width NUM NUM ...&nbsp;&nbsp;&nbsp;&nbsp; Set column widths for &quot;column&quot; mode<br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2009-05-24 10:11:13</wp:post_date>
		<wp:post_date_gmt>2009-05-24 02:11:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-sqlite-3-on-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="sqlite"><![CDATA[SQLite]]></category>
		<wp:comment>
			<wp:comment_id>440</wp:comment_id>
			<wp:comment_author><![CDATA[Harry]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.liuhongwei.cn/</wp:comment_author_url>
			<wp:comment_author_IP>116.87.92.28</wp:comment_author_IP>
			<wp:comment_date>2009-06-12 23:03:13</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[以前一直把SQLite作为Windows软件的桌面数据库，不过最近发现，在Web上用的也越来越多了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>《Google API大全：编程·开发·实例》将在6月5日的GDD上面世</title>
		<link>http://www.iceskysl.com/?p=474</link>
		<pubDate>Thu, 04 Jun 2009 02:58:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=474</guid>
		<description></description>
		<content:encoded><![CDATA[不久前的一个深夜，在GT上收到diuera的消息，说自己在乌镇旅游，收到博文关于GOOGLE API》将于出版的消息，写了一篇《<a href="http://diuera.blogbus.com/logs/40249425.html">Google的葡萄熟了</a>》策划手记；再前些日子请了些假回老家呆了几天，没有网络的日子里我和外界保持同步的唯一途径是在我的blackberry和G1上收Gmail，收到<a href="http://www.gaoang.com">高昂</a>发的邮件说《GOOGLE API》如期，将在本周五，也就是6月5日的Google 2009 年开发者日大会上正式发布，格外欣慰。

回想这本书从策划到发布差不多快8个多月的时间，从去年9月的样子原博文编辑<a href="http://diuera.blogbus.com">diuera</a>策划这本书，找到我的时候，加入编写，而后作者群一路飙升，到今年全部书稿全部结束的时候，作者有12位之多，其中数位Google公司的一线工程师，还有几位活跃在技术社区的开发者一起合著了《<a href="http://iceskysl.1sters.com/?action=show&amp;id=471">Google API大全：编程·开发·实例</a>》，其历时之久和作者的数量都让我非常的吃惊。

本书的撰写过程得益Google自身的很多服务，比如Google Doc，Google Group等等，在撰写的过程中，可以非常顺利、自然、流畅的协作。

《<a href="http://iceskysl.1sters.com/?action=show&amp;id=471">Google API大全：编程·开发·实例</a>》这本书是国内的第一本较为完整的介绍Google API的书，内容囊括了所有主要的Google API，并用大量的实例展示了Google API的应用方法。想更快的了解这些强大的API，本书无疑是个很好的枕边书。

“<em>Google改变了我的生活方式，Google API改变了我的工作方式，感谢Google，感谢一起编写本书的朋友们。</em>”是我写给本书的一句话，做为一个比较活跃的技术工作者，我被Google深深的影响着。

<img src="http://lh5.ggpht.com/_GiZR7A3zZ6s/Sia51WvlE2I/AAAAAAAAEQU/SuK_QyEmh9g/s400/%E5%B0%81%E9%9D%A2.jpg" alt="" width="595" height="242" />

<strong>本书相关的链接：</strong>

互动出版网：<a href="http://www.china-pub.com/195616 ">http://www.china-pub.com/195616 </a>
豆瓣 ：<a href="http://www.douban.com/subject/3764948/ ">http://www.douban.com/subject/3764948/ </a>

<strong>配套源代码和相关的说明</strong>
<a href="http://code.google.com/p/google-api-broadview/ ">http://code.google.com/p/google-api-broadview/ </a>

<strong>推荐序 </strong>
<a href="http://blog.csdn.net/bvbook/archive/2009/05/31/4227452.aspx ">http://blog.csdn.net/bvbook/archive/2009/05/31/4227452.aspx </a>
<a href="http://bvbook.javaeye.com/blog/398813 ">http://bvbook.javaeye.com/blog/398813 </a>

&nbsp;

<strong>本书作者、编辑们的博客记录
</strong><a href="http://www.gaoang.com/archives/125">http://www.gaoang.com/archives/125</a>
<a href="http://www.cnblogs.com/guanhe/archive/2009/06/01/1493789.html">http://www.cnblogs.com/guanhe/archive/2009/06/01/1493789.html</a>
<a href="http://diuera.blogbus.com/logs/40249425.html">http://diuera.blogbus.com/logs/40249425.html</a>
<a href="http://iceskysl.1sters.com/?action=show&amp;id=471">http://iceskysl.1sters.com/?action=show&amp;id=471</a>
<a href="http://blog.liuhongwei.cn/my-opensource/google-api-bible-release/">http://blog.liuhongwei.cn/my-opensource/google-api-bible-release/</a>

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>不久前的一个深夜，在GT上收到diuera的消息，说自己在乌镇旅游，收到博文关于GOOGLE API》将于出版的消息，写了一篇《<a href="http://diuera.blogbus.com/logs/40249425.html">Google的葡萄熟了</a>》策划手记；再前些日子请了些假回老家呆了几天，没有网络的日子里我和外界保持同步的唯一途径是在我的blackberry和G1上收Gmail，收到<a href="http://www.gaoang.com/">高昂</a>发的邮件说《GOOGLE API》如期，将在本周五，也就是6月5日的Google 2009 年开发者日大会上正式发布，格外欣慰。</p>
<p>回想这本书从策划到发布差不多快8个多月的时间，从去年9月的样子原博文编辑<a href="http://diuera.blogbus.com/">diuera</a>策划这本书，找到我的时候，加入编写，而后作者群一路飙升，到今年全部书稿全部结束的时候，作者有12位之多，其中数位Google公司的一线工程师，还有几位活跃在技术社区的开发者一起合著了《<a href="../../../?action=show&amp;id=471">Google API大全：编程&middot;开发&middot;实例</a>》，其历时之久和作者的数量都让我非常的吃惊。</p>
<p>本书的撰写过程得益Google自身的很多服务，比如Google Doc，Google Group等等，在撰写的过程中，可以非常顺利、自然、流畅的协作。</p>
<p>《<a href="../../../?action=show&amp;id=471">Google API大全：编程&middot;开发&middot;实例</a>》这本书是国内的第一本较为完整的介绍Google API的书，内容囊括了所有主要的Google API，并用大量的实例展示了Google API的应用方法。想更快的了解这些强大的API，本书无疑是个很好的枕边书。</p>
<p>&ldquo;<em>Google改变了我的生活方式，Google API改变了我的工作方式，感谢Google，感谢一起编写本书的朋友们。</em>&rdquo;是我写给本书的一句话，做为一个比较活跃的技术工作者，我被Google深深的影响着。</p>
<p><strong>本书相关的链接：</strong><br />
<br />
互动出版网：<a href="http://www.china-pub.com/195616">http://www.china-pub.com/195616 </a><br />
豆瓣 ：<a href="http://www.douban.com/subject/3764948/">http://www.douban.com/subject/3764948/ </a><br />
<br />
<strong>配套源代码和相关的说明</strong><br />
<a href="http://code.google.com/p/google-api-broadview/">http://code.google.com/p/google-api-broadview/ </a><br />
<br />
<strong>推荐序 </strong><br />
<a href="http://blog.csdn.net/bvbook/archive/2009/05/31/4227452.aspx">http://blog.csdn.net/bvbook/archive/2009/05/31/4227452.aspx </a><br />
<a href="http://bvbook.javaeye.com/blog/398813">http://bvbook.javaeye.com/blog/398813 </a></p>
<p>&nbsp;</p>
<p><strong>本书作者、编辑们的博客记录<br />
</strong><a href="http://www.gaoang.com/archives/125">http://www.gaoang.com/archives/125</a><br />
<a href="http://www.cnblogs.com/guanhe/archive/2009/06/01/1493789.html">http://www.cnblogs.com/guanhe/archive/2009/06/01/1493789.html</a><br />
<a href="http://diuera.blogbus.com/logs/40249425.html">http://diuera.blogbus.com/logs/40249425.html</a><br />
<a href="../../../?action=show&amp;id=471">http://iceskysl.1sters.com/?action=show&amp;id=471</a><br />
<a href="http://blog.liuhongwei.cn/my-opensource/google-api-bible-release/">http://blog.liuhongwei.cn/my-opensource/google-api-bible-release/</a></p>]]></excerpt:encoded>
		<wp:post_id>474</wp:post_id>
		<wp:post_date>2009-06-04 02:58:52</wp:post_date>
		<wp:post_date_gmt>2009-06-04 02:58:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%8agoogle-api%e5%a4%a7%e5%85%a8%ef%bc%9a%e7%bc%96%e7%a8%8b%c2%b7%e5%bc%80%e5%8f%91%c2%b7%e5%ae%9e%e4%be%8b%e3%80%8b%e5%b0%86%e5%9c%a86%e6%9c%885%e6%97%a5%e7%9a%84gdd%e4%b8%8a%e9%9d%a2%e4%b8%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="gdd"><![CDATA[GDD]]></category>
		<category domain="post_tag" nicename="google-api"><![CDATA[Google API]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>set limit-rate fot lftp upload&amp;downlod</title>
		<link>http://www.iceskysl.com/?p=475</link>
		<pubDate>Mon, 08 Jun 2009 05:03:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[<p>add this line into /etc/lftp.conf<br />
<font color="#0000ff"><em>set net:limit-rate 10240000,40960</em></font><br />
<br />
that's limit upload rate to 10M,and download to 40K<br />
<br />
some useful resource:</p>
<p><a href="http://plog.longwin.com.tw/my_note-app-setting/2006/04/02/lftp_limit_conf_2006">http://plog.longwin.com.tw/my_note-app-setting/2006/04/02/lftp_limit_conf_2006</a></p>
<p><a href="http://blog.chinaunix.net/u/24834/showart_520018.html">http://blog.chinaunix.net/u/24834/showart_520018.html</a></p>
<p>&nbsp;</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: -webkit-monospace; font-size: 10px; line-height: 22px; text-align: justify;" class="Apple-style-span"><br />
</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>add this line into /etc/lftp.conf<br />
<font color="#0000ff"><em>set net:limit-rate 10240000,40960</em></font><br />
<br />
that's limit upload rate to 10M,and download to 40K<br />
<br />
some useful resource:</p>
<p><a href="http://plog.longwin.com.tw/my_note-app-setting/2006/04/02/lftp_limit_conf_2006">http://plog.longwin.com.tw/my_note-app-setting/2006/04/02/lftp_limit_conf_2006</a></p>
<p><a href="http://blog.chinaunix.net/u/24834/showart_520018.html">http://blog.chinaunix.net/u/24834/showart_520018.html</a></p>
<p>&nbsp;</p>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="font-family: -webkit-monospace; font-size: 10px; line-height: 22px; text-align: justify;" class="Apple-style-span"><br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date>2009-06-08 13:03:37</wp:post_date>
		<wp:post_date_gmt>2009-06-08 05:03:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>set-limit-rate-fot-lftp-uploaddownlod</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="lftp"><![CDATA[lftp]]></category>
		<category domain="post_tag" nicename="limit-rate"><![CDATA[limit-rate]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:comment>
			<wp:comment_id>441</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.113.227.118</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 13:04:29</wp:comment_date>
			<wp:comment_date_gmt>0000-00-00 00:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://forum.ubuntu.org.cn/viewtopic.php?f=73&t=59102&start=30]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>【Mysql】truncate MERGE table的过程</title>
		<link>http://www.iceskysl.com/?p=476</link>
		<pubDate>Mon, 08 Jun 2009 13:12:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=476</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="border-collapse: separate; color: #000000; font-family: Simsun; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"> </span>
<div style="margin: 15px auto 25px; padding: 40px 50px; font-family: SimSun,宋体,'MS Song',serif; font-size: 10pt; background-color: #ffffff; min-height: 1100px; counter-reset: __goog_page__ 0; line-height: normal; width: 548px ! important; border: 1px 2px 2px 1px solid #cccccc #bbbbbb #bbbbbb #cccccc;">数据库告警空间不足，看了下数据文件
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">db1:/var/lib/mysql/yobo_beta_log # du -sm * | sort -nr | more</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">2187    rails_logs_081023.MYD</div>
<div style="margin-top: 0px; margin-bottom: 0px;">1447    rails_logs_081023.MYI</div>
</div>
<div style="margin-top: 0px; margin-bottom: 0px;">687     uwa_sessions_080808.MYD</div>
<div style="margin-top: 0px; margin-bottom: 0px;">607     uwa_sessions_080808.MYI</div>
<div style="margin-top: 0px; margin-bottom: 0px;">591     uplay_daily_stats.MYI</div>
<div style="margin-top: 0px; margin-bottom: 0px;">351     uplay_daily_stats.MYD</div>
<div style="margin-top: 0px; margin-bottom: 0px;">313     uplay_tmp_logs.MYD</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">原来有个日志表文件这么大，看看有多大</div>
</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">-rw-r-----+ 1 4294967294 4294967294      13082 Jun  8 20:20 rails_logs_081023.frm</div>
<div style="margin-top: 0px; margin-bottom: 0px;">-rw-r-----+ 1 4294967294 4294967294 2290840288 Jun  8 20:24 rails_logs_081023.MYD</div>
<div style="margin-top: 0px; margin-bottom: 0px;">-rw-r-----+ 1 4294967294 4294967294 1515332608 Jun  8 20:27 rails_logs_081023.MYI</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">原来有2G多的大小，看看有多少数据</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; select count(id) from rails_logs_081023;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">| count(id) |</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">|  11042292 |</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">1 row in set (0.00 sec)</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">wow，千万级的，看来够大，这个没啥用，先备份下数据文件，然后truncate掉</div>
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; truncate table  rails_logs_081023;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">ERROR 1105 (HY000): MyISAM table 'rails_logs_081023' is in use (most likely by a MERGE table). Try FLUSH TABLES.</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">出错了，这边表貌似被MERGE用了，查了一下，果然是被rails_logs这个表MERGE着用了，那我直接truncate这个rails_logs试试看。</div>
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; truncate table  rails_logs;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">ERROR 1 (HY000): Can't create/write to file './iceskysl_beta_log/rails_logs.MRG' (Errcode: 17)</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">呀，还是出错，文件不可写？Errcode: 17</div>
<div style="margin-top: 0px; margin-bottom: 0px;">查下资料，原来：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">System error: 17 = File exists</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">这咋回事，再查资料，原来.MRG是创建MERGE表的时候创建的，已经存在了。</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">那就先把这个MERGE表干掉，再创建：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">先看下这个表是咋定义的：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt;  show create table rails_logs;</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">记录下SQL，接着drop掉。</div>
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; DROP  table rails_logs;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Query OK, 0 rows affected (0.36 sec)</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">再truncate我的目标表</div>
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; truncate table  rails_logs_081023;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">Query OK, 0 rows affected (4.22 sec)</div>
</div>
</div>
<div style="margin-top: 0px; margin-bottom: 0px;">够快的，11042292条数据4S搞定，接着再创建下这个MERGE表，执行下上面记录的SQL就好了。</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">最后确认下这表没啥问题：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">mysql&gt; select count(id) from rails_logs;</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">| count(id) |</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">|         0 |</div>
<div style="margin-top: 0px; margin-bottom: 0px;">+-----------+</div>
<div style="margin-top: 0px; margin-bottom: 0px;">1 row in set (0.00 sec)</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">OK，搞定，空间有了，天下太平了。</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">附录：如何删除大表</div>
<div style="margin-top: 0px; margin-bottom: 0px;">
<div style="margin-top: 0px; margin-bottom: 0px;">问题：有一个拥有1亿条数据的表，只需要保留其中的5条，其他删除，如何做？</div>
<div style="margin-top: 0px; margin-bottom: 0px;">这就需要用truncate table来搞定了，如下：</div>
<div style="margin-top: 0px; margin-bottom: 0px;">select 5条数据 into #临时表 from 1亿条数据的牛X表</div>
<div style="margin-top: 0px; margin-bottom: 0px;">truncate table 1亿条数据的牛X表</div>
<div style="margin-top: 0px; margin-bottom: 0px;">--让它牛X，不到10毫秒干掉它。</div>
<div style="margin-top: 0px; margin-bottom: 0px;">insert 1亿条数据的牛X表 select * from #临时表</div>
<div style="margin-top: 0px; margin-bottom: 0px;">drop table #临时表</div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
</div>
</div>
<div style="margin-top: 0px; margin-bottom: 0px;">参考资料：</div>
<div style="margin-top: 0px; margin-bottom: 0px;"><a style="color: #551a8b;" href="http://www.vbulletin.com/forum/archive/index.php/t-210887.html">http://www.vbulletin.com/forum/archive/index.php/t-210887.html</a></div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">大表删除数据的思路</div>
<div style="margin-top: 0px; margin-bottom: 0px;"><a style="color: #551a8b;" href="http://www.mysqlsupport.cn/node/21">http://www.mysqlsupport.cn/node/21</a></div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
mysql 的 MERGE存储引擎
<div style="margin-top: 0px; margin-bottom: 0px;"><a style="color: #551a8b;" href="http://bbs.hxxsh.com/thread-52688-1-8.html">http://bbs.hxxsh.com/thread-52688-1-8.html</a></div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
Truncate table,Delete,与Drop table的区别
<div style="margin-top: 0px; margin-bottom: 0px;"><a style="color: #551a8b;" href="http://gaijing814.javaeye.com/blog/403243">http://gaijing814.javaeye.com/blog/403243</a></div>
<div style="margin-top: 0px; margin-bottom: 0px;"></div>
<div style="margin-top: 0px; margin-bottom: 0px;">MySQL删除表中大批量的数据</div>
<div style="margin-top: 0px; margin-bottom: 0px;"><a style="color: #551a8b;" href="http://www.javayou.com/diary/146633154">http://www.javayou.com/diary/146633154</a></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p>本文记录我使用truncate删除一个MERGE 表的过程，其中包含了数据表的数据查询，探测，删除过程以及删除中出现问题的时候的排查和解决。</p>]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2009-06-08 21:12:55</wp:post_date>
		<wp:post_date_gmt>2009-06-08 13:12:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90mysql%e3%80%91truncate-merge-table%e7%9a%84%e8%bf%87%e7%a8%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="merge"><![CDATA[MERGE]]></category>
		<category domain="post_tag" nicename="truncate"><![CDATA[truncate]]></category>
	</item>
	<item>
		<title>遭遇爬虫,关闭所有文章的评论</title>
		<link>http://www.iceskysl.com/?p=477</link>
		<pubDate>Thu, 18 Jun 2009 03:04:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[遭遇万恶的爬虫和网络灌水机，奇怪的是我的验证码无法挡住，每篇文章都被垃圾灌了几百给回复，我懒得改这套blog系统的代码，早上把DB里的垃圾回复都删掉了，同时将所有文章的回复都关闭了，望周知。

如果您需要和我交流，可以通过右侧方式联系到我。]]></content:encoded>
		<excerpt:encoded><![CDATA[遭遇万恶的爬虫和网络灌水机，奇怪的是我的验证码无法挡住，每篇文章都被垃圾灌了几百给回复，我懒得改这套blog系统的代码，早上把DB里的垃圾回复都删掉了，同时将所有文章的回复都关闭了，望周知。

如果您需要和我交流，可以通过右侧方式联系到我。]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2009-06-18 11:04:22</wp:post_date>
		<wp:post_date_gmt>2009-06-18 03:04:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%81%ad%e9%81%87%e7%88%ac%e8%99%ab%e5%85%b3%e9%97%ad%e6%89%80%e6%9c%89%e6%96%87%e7%ab%a0%e7%9a%84%e8%af%84%e8%ae%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>iceskysl+admin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.88</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 15:11:17</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 07:11:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在换了WP，可以评论留言了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Get POSSIBLE BREAK-IN ATTEMPT msg when i ssh to s server</title>
		<link>http://www.iceskysl.com/?p=478</link>
		<pubDate>Fri, 19 Jun 2009 02:17:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=478</guid>
		<description></description>
		<content:encoded><![CDATA[<p>when i ssh to a server,i get some message like this：</p>
<p>Address 192.168.5.12 maps to localhost, but this does not map back to the address - POSSIBLE BREAKIN ATTEMPT!</p>
<p><strong>Solution：</strong></p>
<p>Modify the &quot;/etc/ssh/ssh_config&quot; file at localhost</p>
<p>&nbsp;GSSAPIAuthentication no</p>
<p>exp：</p>
<p>ssh 192.168.1.110时报错上述错，本地是192.168.1.20 ，则修改本地192.168.1.20中的/etc/ssh/ssh_config，把参数GSSAPIAuthentication no修改就可以了。。或者修改服务器端192.168.1.110上的/etc/ssh/sshd_config ，把参数GSSAPIAuthentication no改了也可以。要注意的是/etc/ssh/ssh_config和/etc/ssh/sshd_confg的区别。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date>2009-06-19 10:17:03</wp:post_date>
		<wp:post_date_gmt>2009-06-19 02:17:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-possible-break-in-attempt-msg-when-i-ssh-to-s-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
	</item>
	<item>
		<title>MMarket发布会, 中国移动应用商店正式亮相</title>
		<link>http://www.iceskysl.com/?p=479</link>
		<pubDate>Mon, 17 Aug 2009 03:32:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=479</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">接到发布会主办方卓望数码（深圳）通知，此次MM发布会会议举办是是8月17日下午14:30-16:00，地点在北京市东二环光华路9号-世贸天阶时尚大厦5层多<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%8A%9F%E8%83%BD">功能</span>厅。<br style="word-wrap: break-word; line-height: normal;" />
本次MM发布会参与者需要受邀请，参会人员需要持有入场证券，在一楼领取。<br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
明天是否有人同去。<br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
另，接<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=eoe">eoe</span>通知，明天早上eoeMobile团队将发布其国内著名的第三方<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%BA%94%E7%94%A8">应用</span>商店<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%B9%B3%E5%8F%B0">平台</span>eoeMarket的2.0版，届时将有如下更新：<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;1.错误提示信息采用 服务器端 返回的 error 提示信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;2.添加了核心功能&nbsp;&nbsp;我的eoeMarket 模块<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;3.我的<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E4%B8%8B%E8%BD%BD">下载</span>，可以查看我从eoeMarket下载的应用列表和详细信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;4.我的收藏，可以从服务器<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E8%8E%B7%E5%8F%96">获取</span>到我收藏的应用列表和详细信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;5.个性推荐，根据<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E7%94%A8%E6%88%B7">用户</span>的安装和收藏列表，推荐适合你的应用<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E8%BD%AF%E4%BB%B6">软件</span><br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
更多详细信息，请参考 <a href="http://www.eoeandroid.com/viewthread.php?tid=2410">eoeMarket 在中国移动的MMarket发布前发布2.0版 </a><br />
</span></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">接到发布会主办方卓望数码（深圳）通知，此次MM发布会会议举办是是8月17日下午14:30-16:00，地点在北京市东二环光华路9号-世贸天阶时尚大厦5层多<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E5%8A%9F%E8%83%BD">功能</span>厅。<br style="word-wrap: break-word; line-height: normal;" />
本次MM发布会参与者需要受邀请，参会人员需要持有入场证券，在一楼领取。<br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
明天是否有人同去。<br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
另，接<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=eoe">eoe</span>通知，明天早上eoeMobile团队将发布其国内著名的第三方<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E5%BA%94%E7%94%A8">应用</span>商店<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E5%B9%B3%E5%8F%B0">平台</span>eoeMarket的2.0版，届时将有如下更新：<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;1.错误提示信息采用 服务器端 返回的 error 提示信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;2.添加了核心功能&nbsp;&nbsp;我的eoeMarket 模块<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;3.我的<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E4%B8%8B%E8%BD%BD">下载</span>，可以查看我从eoeMarket下载的应用列表和详细信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;4.我的收藏，可以从服务器<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E8%8E%B7%E5%8F%96">获取</span>到我收藏的应用列表和详细信息<br style="word-wrap: break-word; line-height: normal;" />
&nbsp; &nbsp;&nbsp; &nbsp;5.个性推荐，根据<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E7%94%A8%E6%88%B7">用户</span>的安装和收藏列表，推荐适合你的应用<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="tag.php?name=%E8%BD%AF%E4%BB%B6">软件</span><br style="word-wrap: break-word; line-height: normal;" />
<br style="word-wrap: break-word; line-height: normal;" />
更多详细信息，请参考 <a href="http://www.eoeandroid.com/viewthread.php?tid=2410">eoeMarket 在中国移动的MMarket发布前发布2.0版 </a><br />
</span></span></p>]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2009-08-17 03:32:25</wp:post_date>
		<wp:post_date_gmt>2009-08-17 03:32:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mmarket%e5%8f%91%e5%b8%83%e4%bc%9a-%e4%b8%ad%e5%9b%bd%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8%e5%95%86%e5%ba%97%e6%ad%a3%e5%bc%8f%e4%ba%ae%e7%9b%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="eoe"><![CDATA[eoe]]></category>
		<category domain="post_tag" nicename="eoemarket"><![CDATA[eoemarket]]></category>
		<category domain="post_tag" nicename="mmarket"><![CDATA[mmarket]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>eoeMarket 在中国移动的MMarket发布前发布2.0版</title>
		<link>http://www.iceskysl.com/?p=480</link>
		<pubDate>Mon, 17 Aug 2009 03:35:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=480</guid>
		<description></description>
		<content:encoded><![CDATA[eoeMarket发布了2.0的Wheat(小麦)版本。2.0的版本是一个里程碑的版本。客户端和web端都有了比较大的完善。而且从2.0版本开始eoeMarket的注册不再受限了。大家现在可以自由的注册eoeMarket.要是现在还没有注册的人赶紧去抢注一个好号吧。
8.17日是中国移动的MMarket发布的日子，我们很高兴看到官方的market正式的发布了。在网上我看到有一些人用过eoeMarket说eoeMarket是MMarket(美眉market)的一个重要的竞争对手，在这里我想澄清一点eoeMarket是一个第三方的Android应用发布平台，它应该是MMarket的一个很好的补充，而不应该和Market是竞争关系。
有人说eoeMarket是山寨的google Market,对于这点我们有不同的看法。googleMarket从用户的使用性上做的比较差，连评论都要在手机上来看。但是eoeMarket在google Market功能的基础上，增加和探索了更多的对用户友好的本地化功能，比如应用收藏和应用推荐功能。
eoeMarket目前正在迅速的发展和完善。我们来回顾和澄清一下eoeMarket的发布路线图：

8.9–&gt;rice 1.5版本
8.16–&gt;wheat 2.0 版本
8.23–&gt;corn  2.5  版本
8.30–&gt;potato 3.0 版本

大家可以看到eoeMarket基本上每一周就会有一个版本，我们会保证在兼容以前版本的基础上增加更好的有用的本土化功能，和完善相关功能。eoeMarket的工作人员真的很辛苦，为了给广大android开发者提供一个好的第三方发布平台，日夜兼程，马不停蹄。有些开发人员甚至晚上自愿工作通宵。向这些eoeMarket的开发人员致敬。
wheat 2.0 版本主要的更新如下：
<p style="text-align: left;">1.错误提示信息采用 服务器端 返回的 error 提示信息
2.添加了核心功能 我的eoeMarket 模块
3.我的下载，可以查看我从eoeMarket下载的应用列表和详细信息
4.我的收藏，可以从服务器获取到我收藏的应用列表和详细信息
5.个性推荐，根据用户的安装和收藏列表，推荐适合你的应用软件

下边截图一些，更多功能大家赶紧去体验
1) eoeMarket客户端首界面。大家发现了，有一个新的功能。

2)点击进入 My eoeMarket 后的界面如下：

3)点击进入widget下载页面，用户可以去下载好玩，好用的widget了。

4) about us.

5.eoeMarket 的主界面

6.什么是eoeMarket?]]></content:encoded>
		<excerpt:encoded><![CDATA[<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">8.16日<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=eoe">eoe</span>Market 发布了2.0的Wheat(小麦)版本。2.0的版本是一个里程碑的版本。客户端和web端都有了比较大的完善。而且从2.0版本开始eoeMarket 的注册不再受限了。大家现在可以自由的注册eoeMarket.要是现在还没有注册的人赶紧去抢注一个好号吧。<br />
<br style="word-wrap: break-word; line-height: normal;" />
8.17日是中国移动的MMarket发布的日子，我们很高兴看到官方的<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=market">market</span>正式的发布了。在网上我看到有一些人用过eoeMarket说eoeMarket是MMarket(美眉market)的一个重要的竞争对手，在这里我想澄清一点eoeMarket是一个第三方的Android<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%BA%94%E7%94%A8">应用</span>发布<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%B9%B3%E5%8F%B0">平台</span>，它应该是MMarket的一个很好的补充，而不应该和Market是竞争关系。<br />
<br style="word-wrap: break-word; line-height: normal;" />
有人说eoeMarket是<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%B1%B1%E5%AF%A8">山寨</span>的google Market,对于这点我们有不同的看法。googleMarket从<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E7%94%A8%E6%88%B7">用户</span>的使用性上做的比较差，连评论都要在<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E6%89%8B%E6%9C%BA">手机</span>上来看。但是eoeMarket在google Market<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%8A%9F%E8%83%BD">功能</span>的基础上，增加和探索了更多的对用户友好的本地化功能，比如应用收藏和应用推荐功能。<br />
<br style="word-wrap: break-word; line-height: normal;" />
eoeMarket目前正在迅速的发展和完善。我们来回顾和澄清一下eoeMarket的发布路线图：<br style="word-wrap: break-word; line-height: normal;" />
</span></span></p>
<ul>
    <li><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">8.9&ndash;&gt;rice 1.5版本</span></span></li>
    <li><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">8.16&ndash;&gt;wheat 2.0 版本</span></span></li>
    <li><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">8.23&ndash;&gt;corn&nbsp;&nbsp;2.5&nbsp;&nbsp;版本</span></span></li>
    <li><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">8.30&ndash;&gt;potato 3.0 版本</span></span></li>
</ul>
<p><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">大家可以看到eoeMarket基本上每一周就会有一个版本，我们会保证在兼容以前版本的基础上增加更好的有用的本土化功能，和完善相关功能。eoeMarket的工作人员真的很辛苦，为了给广大<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=android">android</span><span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E5%BC%80%E5%8F%91">开发</span>者提供一个好的第三方发布平台，日夜兼程，马不停蹄。有些开发人员甚至晚上自愿工作通宵。向这些eoeMarket的开发人员致敬。<br style="word-wrap: break-word; line-height: normal;" />
wheat 2.0 版本主要的更新如下：<br style="word-wrap: break-word; line-height: normal;" />
</span></span></p>
<blockquote><span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">1.错误提示信息采用 服务器端 返回的 error 提示信息</span></span><br style="word-wrap: break-word; line-height: normal;" />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">2.添加了<strong style="word-wrap: break-word; text-align: left; font-style: normal; line-height: normal; font-weight: bold;">核心功能</strong><span class="Apple-converted-space">&nbsp;</span>我的eoeMarket 模块</span></span><br style="word-wrap: break-word; line-height: normal;" />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">3.我的<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E4%B8%8B%E8%BD%BD">下载</span>，可以查看我从eoeMarket下载的应用列表和详细信息</span></span><br style="word-wrap: break-word; line-height: normal;" />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">4.我的收藏，可以从服务器<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E8%8E%B7%E5%8F%96">获取</span>到我收藏的应用列表和详细信息</span></span><br style="word-wrap: break-word; line-height: normal;" />
<span style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;" class="Apple-style-span"><span style="border-collapse: collapse; color: rgb(68, 68, 68); font-family: Verdana,Helvetica,Arial,sans-serif; font-size: 14px; line-height: 22px; text-align: left;" class="Apple-style-span">5.个性推荐，根据用户的安装和收藏列表，推荐适合你的应用<span style="border-bottom: 1px solid rgb(255, 0, 0); word-wrap: break-word; line-height: normal; cursor: pointer; white-space: nowrap;" class="t_tag" onclick="tagshow(event)" href="http://iceskysl.1sters.com/admin/editor/editor/tag.php?name=%E8%BD%AF%E4%BB%B6">软件</span></span></span></blockquote>]]></excerpt:encoded>
		<wp:post_id>480</wp:post_id>
		<wp:post_date>2009-08-17 03:35:18</wp:post_date>
		<wp:post_date_gmt>2009-08-17 03:35:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eoemarket-%e5%9c%a8%e4%b8%ad%e5%9b%bd%e7%a7%bb%e5%8a%a8%e7%9a%84mmarket%e5%8f%91%e5%b8%83%e5%89%8d%e5%8f%91%e5%b8%832-0%e7%89%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="eoe"><![CDATA[eoe]]></category>
		<category domain="post_tag" nicename="eoemarket"><![CDATA[eoemarket]]></category>
		<category domain="post_tag" nicename="mmarket"><![CDATA[mmarket]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>443</wp:comment_id>
			<wp:comment_author><![CDATA[jackjajack]]></wp:comment_author>
			<wp:comment_author_email>jackjajack@vip.qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.57.143.132</wp:comment_author_IP>
			<wp:comment_date>2009-10-15 11:26:28</wp:comment_date>
			<wp:comment_date_gmt>2009-10-15 03:26:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[因为我的G3刷的是官方Rom，无法取得权限，加上经常无法登入Gmail帐号，因此无缘于Market。往后升级已经决定统一安装官方Ruu，不再为刷机折腾。好的软件和应用，就只能通过论坛下载和eoemarket下载。这就是我支持你们的原因。

此外，eoe对于本地化的优化，肯定比Market强悍的多。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>444</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>116.7.3.19</wp:comment_author_IP>
			<wp:comment_date>2009-10-15 12:32:00</wp:comment_date>
			<wp:comment_date_gmt>2009-10-15 04:32:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@jackjajack
我们一直在完善这个产品，希望大家喜欢，用户满意。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>博客迁移到WP</title>
		<link>http://www.iceskysl.com/?p=482</link>
		<pubDate>Mon, 24 Aug 2009 05:59:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/wp/?p=481</guid>
		<description></description>
		<content:encoded><![CDATA[我的blog写了很久了，之前使用的国内一个安全团队写的Sablog-x，一直用着比较舒服，但是后来觉得满足不了我的需要了，比如防爬虫，灌水机机制不够，编辑器不支持chrome等。

忍了很久，一直没动手，是不想手工转我之前的文章，今天忍无可忍，动手了，找了一段转换代码，再修改修改，还挺顺利，把以前的内容转过来了。

希望这个可以用上一段时间。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>482</wp:post_id>
		<wp:post_date>2009-08-24 05:59:59</wp:post_date>
		<wp:post_date_gmt>2009-08-24 05:59:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%9a%e5%ae%a2%e8%bf%81%e7%a7%bb%e5%88%b0wp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="sablog"><![CDATA[sablog]]></category>
		<category domain="post_tag" nicename="wp"><![CDATA[wp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>445</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.88</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 06:09:22</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 06:09:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[测试评论，评论很久没开了，以前的sablog被爬虫盯上了，删到我手软。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>446</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.90</wp:comment_author_IP>
			<wp:comment_date>2009-08-25 09:40:31</wp:comment_date>
			<wp:comment_date_gmt>2009-08-25 01:40:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[换了还不是很满意的主题，还是有点不习惯黑色的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>447</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.87</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 09:41:52</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 01:41:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在这个主题貌似还可以～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>448</wp:comment_id>
			<wp:comment_author><![CDATA[404]]></wp:comment_author>
			<wp:comment_author_email>xuliicom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xuli.info</wp:comment_author_url>
			<wp:comment_author_IP>115.193.176.106</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:20:41</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 03:20:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[喜欢这套博客风格~
问下ice哥，右侧的Reader用的哪个plugin/widget哦?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>449</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.47</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:23:25</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 03:23:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@404
就是google reader自己的一个widget～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>回到深圳，安静的体会生活...</title>
		<link>http://www.iceskysl.com/?p=550</link>
		<pubDate>Tue, 22 Sep 2009 02:38:50 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=550</guid>
		<description></description>
		<content:encoded><![CDATA[时隔几个月之后，我再次回到深圳，一切都还是那么熟悉，前两天去办理护照，坐在公交车上，快速的浏览深圳的感觉，很好，这是个充满活力的城市，和北京的感觉截然不同。
深圳是年轻的，跳动的，每个人都在演绎着自己的角色～这次回来要呆上很长一段时间，在10月中旬，会去一次马来西亚，然后到合肥举办婚礼，再就要回老家呆上几天。
在深圳，安静的体会生活...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2009-09-22 10:38:50</wp:post_date>
		<wp:post_date_gmt>2009-09-22 02:38:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9b%9e%e5%88%b0%e6%b7%b1%e5%9c%b3%ef%bc%8c%e5%ae%89%e9%9d%99%e7%9a%84%e4%bd%93%e4%bc%9a%e7%94%9f%e6%b4%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:comment>
			<wp:comment_id>450</wp:comment_id>
			<wp:comment_author><![CDATA[Leon]]></wp:comment_author>
			<wp:comment_author_email>leondu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.42.83.84</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 11:47:21</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 03:47:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[跳了，还是暂时休息一下？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>451</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.87</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 13:30:24</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 05:30:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Leon
休息，呵呵，准备结婚相关事情～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>452</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email>g.zhen.ning@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.8drink.com</wp:comment_author_url>
			<wp:comment_author_IP>116.22.228.233</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 16:29:30</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 08:29:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[回深圳休息，回合肥完婚，又回京工作？为什么不直接回合肥休息呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>453</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.87</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 17:25:32</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 09:25:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@g.zhen.ning
回深圳的原因是GF在深圳，且需要回深圳领证和办护照等。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[Leon]]></wp:comment_author>
			<wp:comment_author_email>leondu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.42.83.84</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 17:30:15</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 09:30:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[噢.. 那预祝你新婚快乐，白头偕老！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>455</wp:comment_id>
			<wp:comment_author><![CDATA[404]]></wp:comment_author>
			<wp:comment_author_email>xuliicom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xuli.info</wp:comment_author_url>
			<wp:comment_author_IP>115.193.176.106</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:25:57</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 03:25:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[祝福ice哥新婚快乐哈！
有点怀念过去在深圳的美好时光，喜欢蓝天白云吹着清风的日子。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>456</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.122.79.47</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:34:13</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 03:34:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@404
我在合肥摆酒，貌似杭州不远，有空的话来喝喜酒~

我现在正在享受深圳蓝天白云吹着清风的日子。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>457</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email>cash.zhao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.226</wp:comment_author_IP>
			<wp:comment_date>2009-09-24 17:05:02</wp:comment_date>
			<wp:comment_date_gmt>2009-09-24 09:05:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[安逸啊，就结婚了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>458</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>119.137.37.111</wp:comment_author_IP>
			<wp:comment_date>2009-09-24 17:10:40</wp:comment_date>
			<wp:comment_date_gmt>2009-09-24 09:10:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@cashplk
你还在杭州不？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>android market的通信协议还是比较安全的</title>
		<link>http://www.iceskysl.com/?p=552</link>
		<pubDate>Thu, 24 Sep 2009 02:00:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=552</guid>
		<description></description>
		<content:encoded><![CDATA[今天起了大大早，搬出十八般武器研究起android market的数据通讯，想看看是数据传输的方式以加以借鉴和参考。
最终结果是Sniffer到数据通信了，但是无法破解其使用的协议，最终很多内容无法还原，如此看来其走的肯定是一套私有的协议，那么下一步就是，有时间的话反编译android market客户端的源代码，看看其协议是怎么样的。
截图一张：
<img src="http://iceskysl.1sters.com/v2/wp-content/uploads/2009/09/TM截图未命名.png" alt="TM截图未命名" title="TM截图未命名" width="594" height="394" class="alignnone size-full wp-image-553" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>552</wp:post_id>
		<wp:post_date>2009-09-24 10:00:39</wp:post_date>
		<wp:post_date_gmt>2009-09-24 02:00:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-market%e7%9a%84%e9%80%9a%e4%bf%a1%e5%8d%8f%e8%ae%ae%e8%bf%98%e6%98%af%e6%af%94%e8%be%83%e5%ae%89%e5%85%a8%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:comment>
			<wp:comment_id>459</wp:comment_id>
			<wp:comment_author><![CDATA[lyb]]></wp:comment_author>
			<wp:comment_author_email>linux.lyb@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>183.12.74.161</wp:comment_author_IP>
			<wp:comment_date>2010-08-01 00:56:49</wp:comment_date>
			<wp:comment_date_gmt>2010-08-01 00:56:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://strazzere.com/blog/?p=291]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Updating Twitter with cURL</title>
		<link>http://www.iceskysl.com/?p=555</link>
		<pubDate>Sun, 27 Sep 2009 18:26:17 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=555</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>curl -u email:passw -d status="text" http://twitter.com/statuses/update.xml</blockquote>
cURL figures out which protocol to use from the URL you provide, and when "http:" is specified will, unless otherwise instructed (using -0), default to using HTTP 1.1. The first argument, -u, instructs cURL to use the next two parameters (separated by a colon) as the account name and password for basic authentication. The next argument, -d, specifies the data (maximum 140 characters) to be sent via a POST request.

Of course what cURL expects is a response to the POST request so the result will be the requested page (update.xml) sent to stdout. This page will be encoded according to the file type used in the request, thus as we just requested update.xml we’ll get XML-formatted data. The alternatives are JSON (JavaScript Object Notation), RSS and Atom formats.

from:
http://www.networkworld.com/columnists/2008/052108-gearhead.html?page=2]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>555</wp:post_id>
		<wp:post_date>2009-09-28 02:26:17</wp:post_date>
		<wp:post_date_gmt>2009-09-27 18:26:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updating-twitter-with-curl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="curl"><![CDATA[cURL]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_dbab443127baf3765d07398e354aa550</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_576d22d25c98559712ffe7fa382801c8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>解决Nginx的413 Request Entity Too Large的方法</title>
		<link>http://www.iceskysl.com/?p=557</link>
		<pubDate>Sun, 04 Oct 2009 16:44:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=557</guid>
		<description></description>
		<content:encoded><![CDATA[项目中使用nginx，上传一个大文件，出来错误提示，413 Request Entity Too Large！
查了下资料，解决方法：打开nginx主配置文件nginx.conf，找到http{}段，添加


<blockquote>client_max_body_size 20m; </blockquote>

最好也调整下：
<blockquote> keepalive_timeout  105;</blockquote>
免得链接超时被关！


该文件一般在/etc/nginx/nginx.conf]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>557</wp:post_id>
		<wp:post_date>2009-10-05 00:44:28</wp:post_date>
		<wp:post_date_gmt>2009-10-04 16:44:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3nginx%e7%9a%84413-request-entity-too-large%e7%9a%84%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
	</item>
	<item>
		<title>eoeMobile实习生计划</title>
		<link>http://www.iceskysl.com/?p=561</link>
		<pubDate>Sat, 10 Oct 2009 07:54:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=561</guid>
		<description></description>
		<content:encoded><![CDATA[开始招实习生了，有兴趣的帮忙留意和推荐下。

eoeMobile是一支立足于移动互联网，平均年龄大概在25岁左右的创业公司，在eoeMobile里你会天天享受和eoeMobile一起实现目标的兴奋和快乐，这里没有死板而无趣没用的制度，也没有如履薄冰的分层级的感觉，在这里我们平等，互助，尊重，高效，这里就是你实现梦想的起点。

不同阶段我们会有不同的实习生计划，目前需要的实习生如下：

【网站前端 (front end) 实习工程师, 设计师】
1，CS/EE或相关专业本科
2，必须熟悉HTML, CSS，JS
3，对界面设计极为敏感，关注细节的完美主义者优先
4，关注WEB2.0应用和移动平台技术发展
6，有创业激情！求知欲强，学习能力强，有高度责任感和集体荣誉感

P.S. 加入eoeMobile，你将成为国内顶级移动互联网开发团队一员，在高速发展的最新移动平台上做创新应用

<strong>【Android实习工程师】 </strong>
1，CS/EE或相关专业本科或研究生；本科成绩优秀，或有实习工作经验
2，必须熟悉Java语言，可以使用linux工作环境
3，熟悉MySQL, Rails, HTML，CSS， subversion（svn）者优先
4，有移动平台开发经验者优先
5，关注WEB2.0应用和移动平台技术(Android, iphone, webkit)发展
6，有创业激情！求知欲强，学习能力强，有高度责任感和集体荣誉感。
7.  喜欢做有挑战的事情，不服输，不达目标誓不罢休。
8.  有幽默感者优先。
加入eoeMobile你就会和大量优秀而又有趣的人并肩工作，你就可以看到大量Android商战的源码，你可以以更快的速度成长。

eoeMobile正在快速发展中，我们相信eoeMobile在我们的努力下会有很大的发展舞台（请有兴趣应聘的工程师将中文或英文简历发至 iceskysl@eoemobile.com ）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>561</wp:post_id>
		<wp:post_date>2009-10-10 07:54:14</wp:post_date>
		<wp:post_date_gmt>2009-10-10 07:54:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eoemobile%e5%ae%9e%e4%b9%a0%e7%94%9f%e8%ae%a1%e5%88%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unicorn: Rack HTTP server for fast clients and Unix</title>
		<link>http://www.iceskysl.com/?p=563</link>
		<pubDate>Sun, 11 Oct 2009 00:52:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=563</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://images-2.redbubble.com/img/clothing/bodycolor:white/size:medium/style:mens/view:main/76841-16-the-wrong-unicorn-t-shirt.jpg"><img class="alignnone" title="unicorn" src="http://images-2.redbubble.com/img/clothing/bodycolor:white/size:medium/style:mens/view:main/76841-16-the-wrong-unicorn-t-shirt.jpg" alt="" width="300" height="300" /></a>

<a style="color: #006699; text-decoration: underline;" href="http://unicorn.bogomips.org/" target="_blank">Unicorn</a>是一个几乎使用纯Ruby编写的HTTP server，主要用于Rack应用。Unicon的创建作者是Eric Wong，它基于Mongrel（包括Ragel/C HTTP分析器），采用同样的许可-Ruby license和GPL2，但对Mongrel进行了改良。
<ul style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">Unicorn设计的初衷是为了Rack，Unix，更快的客户端，易于调试等；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">很好的兼容了Ruby 1.8和Ruby 1.9，并且对Rubinius的支持也在计划之内；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">流程管理： Unicorn会重新启动出错的应用。你无需管理多个进程或端口，Unicorn可以管理任意数量的进程；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">负载平衡：完全使用操作系统内核；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">支持所有Rack应用；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">简单方面的Ruby DSL配置；</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;">……</li>
</ul>
<p style="padding: 0px; margin: 0px;"><strong style="font-weight: bold;">点击阅读详情：
</strong>

<strong style="font-weight: bold;">
<ul style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;"><a style="color: #006699; text-decoration: underline;" href="http://www.tomayko.com/writings/unicorn-is-unix" target="_blank">I like Unicorn because it's Unix</a></li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.25em; margin-left: 30px; padding: 0px;"><a style="color: #006699; text-decoration: underline;" href="http://www.snowgiraffe.com/tech/483/railsconf-powered-by-unicorns/" target="_blank">RailsConf 2009: powered by OMG UNICORNS!!!!</a></li>
</ul>
</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>563</wp:post_id>
		<wp:post_date>2009-10-11 08:52:20</wp:post_date>
		<wp:post_date_gmt>2009-10-11 00:52:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unicorn-rack-http-server-for-fast-clients-and-unix</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>rails-2.3.4 发布了</title>
		<link>http://www.iceskysl.com/?p=565</link>
		<pubDate>Wed, 14 Oct 2009 15:47:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=565</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby on Rails 2.3.4, this release fixes bugs and introduces a few minor features. Due to the inclusion of two security fixes, all users of the 2.3 series are recommended to upgrade as soon as possible.

C:\Documents and Settings\Administrator&gt;gem install rails
Successfully installed activesupport-2.3.4
Successfully installed activerecord-2.3.4
Successfully installed actionpack-2.3.4
Successfully installed actionmailer-2.3.4
Successfully installed activeresource-2.3.4
Successfully installed rails-2.3.4
6 gems installed
Installing ri documentation for activesupport-2.3.4...
Installing ri documentation for activerecord-2.3.4...
Installing ri documentation for actionpack-2.3.4...
Installing ri documentation for actionmailer-2.3.4...
Installing ri documentation for activeresource-2.3.4...
Installing RDoc documentation for activesupport-2.3.4...
Installing RDoc documentation for activerecord-2.3.4...
Installing RDoc documentation for actionpack-2.3.4...
Installing RDoc documentation for actionmailer-2.3.4...
Installing RDoc documentation for activeresource-2.3.4...

详细信息：

<a href="http://weblog.rubyonrails.org/2009/9/4/ruby-on-rails-2-3-4">http://weblog.rubyonrails.org/2009/9/4/ruby-on-rails-2-3-4</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>565</wp:post_id>
		<wp:post_date>2009-10-14 15:47:04</wp:post_date>
		<wp:post_date_gmt>2009-10-14 15:47:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-2-3-4-%e5%8f%91%e5%b8%83%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails-2-3-4"><![CDATA[rails-2.3.4]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>第一次去香港随笔</title>
		<link>http://www.iceskysl.com/?p=567</link>
		<pubDate>Thu, 15 Oct 2009 04:51:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[在深圳呆了3年了，一直没去过香港，前段时间办护照的时候，顺带把港澳通行证也办了下，找了个时间去那边转了下，总体来说，和我想象中的还有些不一样。

深圳去香港比较方便，在我住的不远的地方，就没半个小时一趟直通香港的大巴车，到佐敦下车，票价也不是很贵，单程60，来回90，非常方便。

8点爬起来，拿着信用卡就去车站了，买票，上车，8点半出发，途径深圳湾大桥，在海关排了一会队，都比较顺利，也熟悉了过关的手续。到达香港佐敦10点半不到，由于第一次来，也没仔细查地图，下了车还是有点小晕，幸好在不远处发现一个7-11，闪进去买了点早餐，换了点港币（亏了），然后就一边吃东西，一遍瞎逛，满街卖珠宝和银行，真不愧是金融中心。

吃完早餐，路过一个书局，跑进去找了地图研究了一把，把地铁搞清楚差不多就不晕了，出来直奔地铁，买票去旺角，电影里经常看到这个地方，2站，香港地铁很完善，但是里面的设计也不是很清晰，我拿了卡，试了几次才晓得要塞进去，再从另外一个地冒出来，和北京的直接刷，深圳的地铁笔还是很不一样的。

出了旺角地铁，迎面而来的就是熙熙攘攘的街道和人了，数码产品，衣服，银行，珠宝等等非常多，眼花缭乱，不多停留，凭感觉找到主干道，办事！

办完事，在街上瞎逛，竟然遇到了轮子的宣传，狂汗！买了些化妆品，买了些特产，去找回来的车，6点半回来，过关，也没人检查，8点半到我住的地方。

由于时间不多，加上第一次不是很熟悉，另外几个地方诸如中环，铜锣湾，湾仔这些地方都还没去，下次去的时候再去。

总体感受，还没看到非常现代化的大楼，见到的是比较原始面貌的，这也许就是以前的香港吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2009-10-15 12:51:32</wp:post_date>
		<wp:post_date_gmt>2009-10-15 04:51:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ac%ac%e4%b8%80%e6%ac%a1%e5%8e%bb%e9%a6%99%e6%b8%af%e9%9a%8f%e7%ac%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:comment>
			<wp:comment_id>460</wp:comment_id>
			<wp:comment_author><![CDATA[g.zhen.ning]]></wp:comment_author>
			<wp:comment_author_email>g.zhen.ning@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.8drink.com</wp:comment_author_url>
			<wp:comment_author_IP>59.41.156.174</wp:comment_author_IP>
			<wp:comment_date>2009-10-15 13:56:00</wp:comment_date>
			<wp:comment_date_gmt>2009-10-15 05:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[香港的地面很干净。治安很好。
这是香港给我的第一感觉。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>461</wp:comment_id>
			<wp:comment_author><![CDATA[DavidLau]]></wp:comment_author>
			<wp:comment_author_email>zhikook@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.88.212.100</wp:comment_author_IP>
			<wp:comment_date>2009-10-23 16:09:39</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 08:09:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[拜访博主小站，留脚印。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>462</wp:comment_id>
			<wp:comment_author><![CDATA[白牙]]></wp:comment_author>
			<wp:comment_author_email>ubuntu.bai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gttol.com</wp:comment_author_url>
			<wp:comment_author_IP>123.124.185.162</wp:comment_author_IP>
			<wp:comment_date>2009-10-29 17:11:07</wp:comment_date>
			<wp:comment_date_gmt>2009-10-29 09:11:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[居然没照片]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.89</wp:comment_author_IP>
			<wp:comment_date>2009-11-08 11:08:42</wp:comment_date>
			<wp:comment_date_gmt>2009-11-08 03:08:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再次去香港，去了传说中的核心地带，铜锣湾，发现和旺角的感觉差别很大～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>&#31508;&#35760;&#26412;&#35201;&#32610;&#24037;&#20102;&#12290;</title>
		<link>http://www.iceskysl.com/?p=569</link>
		<pubDate>Fri, 30 Oct 2009 09:00:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/index.php/archives/569</guid>
		<description></description>
		<content:encoded><![CDATA[&#32467;&#23130;&#21518;&#65292;&#36824;&#27809;&#26469;&#24471;&#21450;&#25972;&#29702;&#19979;&#29983;&#27963;&#65292;&#26368;&#36817;&#20960;&#26085;&#37117;&#22312;&#36335;&#19978;&#65292;&#37202;&#24109;&#19968;&#22330;&#25509;&#30528;&#19968;&#22330;&#65292;&#36214;&#30340;&#24456;&#12290;
&#19981;&#24184;&#30340;&#26159;&#36319;&#38543;&#25105;3&#24180;&#22810;&#30340;&#31508;&#35760;&#26412;&#32610;&#24037;&#20102;&#65292;&#24320;&#22987;&#26159;&#30005;&#27744;&#26080;&#27861;&#20351;&#29992;&#20102;&#65292;&#25509;&#30528;&#26159;&#31995;&#32479;&#22312;&#19968;&#27425;&#26029;&#30005;&#21518;&#23849;&#28291;&#20102;&#65292;&#28982;&#21518;&#30828;&#30424;&#22909;&#20687;&#20063;&#26377;&#28857;&#19981;&#23545;&#21170;&#65292;&#21152;&#19978;&#26089;&#23601;&#32610;&#24037;&#34987;&#25105;&#25286;&#38500;&#30340;&#20809;&#39537;&#65292;&#29616;&#22312;&#21097;&#19979;&#30340;&#37096;&#20214;&#22909;&#20687;&#19981;&#22810;&#20102;&#12290;
&#30495;&#35201;&#25442;&#26412;&#20102;&#65292;&#22909;&#20687;&#12290;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>569</wp:post_id>
		<wp:post_date>2009-10-30 17:00:38</wp:post_date>
		<wp:post_date_gmt>2009-10-30 09:00:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>569</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>开始使用mac pro</title>
		<link>http://www.iceskysl.com/?p=570</link>
		<pubDate>Sun, 08 Nov 2009 03:01:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=570</guid>
		<description></description>
		<content:encoded><![CDATA[前面说道，我用了3年多的本本终于再办完他最后一件重要的事情后罢工了，在tina的坚持下，我终于败家了一把，使用上了mac pro，机器是自己去香港买的，价格比大陆行货便宜不少，由于之对mac系统了解不是很多，所以使用起来还不是非常的顺手。

自我感觉mac非常适合懒人，因为其帮你做了很多事情，不需要你自己再去折腾，但是对我这种比较爱折腾的人，还是有些不适应，win xp倒是被我折腾的很顺手。

偶也算加入mac一族了，但是感觉没有我想象中的那么激动～

ps：昨天去村子里买了一个键膜，发现很不好用，搞得我手指超级疲劳，就丢一边去了，还是原始的键盘敲着舒服。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>570</wp:post_id>
		<wp:post_date>2009-11-08 11:01:52</wp:post_date>
		<wp:post_date_gmt>2009-11-08 03:01:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bc%80%e5%a7%8b%e4%bd%bf%e7%94%a8mac-pro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:comment>
			<wp:comment_id>464</wp:comment_id>
			<wp:comment_author><![CDATA[ning]]></wp:comment_author>
			<wp:comment_author_email>g.zhen.ning@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zhenning.github.com</wp:comment_author_url>
			<wp:comment_author_IP>116.22.228.97</wp:comment_author_IP>
			<wp:comment_date>2009-11-09 09:18:24</wp:comment_date>
			<wp:comment_date_gmt>2009-11-09 01:18:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[什么型号，能否报个价呢？如果便宜的话，真的过香港买算了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>465</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.88</wp:comment_author_IP>
			<wp:comment_date>2009-11-09 09:22:04</wp:comment_date>
			<wp:comment_date_gmt>2009-11-09 01:22:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我买的是990 mac pro，港行，用现金买的（在渣打兑换花了50港元），机器标价9288港币，现金打95折，加上rmb比港币贵，总体算下来应该在7900之内。
ps：什么东西都不送了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[ning]]></wp:comment_author>
			<wp:comment_author_email>g.zhen.ning@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zhenning.github.com</wp:comment_author_url>
			<wp:comment_author_IP>116.22.228.97</wp:comment_author_IP>
			<wp:comment_date>2009-11-09 11:46:51</wp:comment_date>
			<wp:comment_date_gmt>2009-11-09 03:46:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这样算下来，比machome的要便宜上400多。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>467</wp:comment_id>
			<wp:comment_author><![CDATA[shaokun]]></wp:comment_author>
			<wp:comment_author_email>shaokun@kudelabs.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.109.169.70</wp:comment_author_IP>
			<wp:comment_date>2010-01-25 07:59:31</wp:comment_date>
			<wp:comment_date_gmt>2010-01-25 07:59:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我想最cool的是用textmate写ruby吧，在windows、linux上找不到比它好的编辑器了。另外还有一点就是基本上不用怕中病毒。

iceskysl兄，无意中看到你的blog，记得好像在github也看到过，珠三角的rails团队似乎越来越多了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>468</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.91.63.62</wp:comment_author_IP>
			<wp:comment_date>2010-02-03 11:22:13</wp:comment_date>
			<wp:comment_date_gmt>2010-02-03 11:22:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[◎shaokun
textmate确实好用，已经取代了我原来的neatbean（NB太耗内存），中毒倒是都不怕的。
github上我又帐号，但是大多是索取，没什么贡献，老兄也是在广东？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>469</wp:comment_id>
			<wp:comment_author><![CDATA[haini]]></wp:comment_author>
			<wp:comment_author_email>haini369@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.46.10.234</wp:comment_author_IP>
			<wp:comment_date>2010-04-03 03:51:08</wp:comment_date>
			<wp:comment_date_gmt>2010-04-03 03:51:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能不能告诉我哪里买的990？ 最近今天要去香港，打95折还是很实惠的，急求答复，谢谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>如何让 Safari 默认使用新标签打开链接</title>
		<link>http://www.iceskysl.com/?p=572</link>
		<pubDate>Sun, 08 Nov 2009 03:06:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=572</guid>
		<description></description>
		<content:encoded><![CDATA[xi喜欢chorme而不喜欢safari的原因之一就是safari每次打开链接都是新窗口，除非你按着Command，很不习惯，然后我找了半天也没再其设置中找到可以设置的地方，搞得我桌面上经常一大堆的safari窗口。

于是开始寻找如何修改可以似的safari默认打开的链接是在信标签中的，于是找到如下方法：

方法：

1、打开 Terminal，Finder -&gt; Applications -&gt; Utilitys -&gt; Terminal。。

2、粘贴下面这段代码到 Terminal 中并回车，进行执行，即完成了激活。

<strong>defaults write com.apple.Safari TargetedClicksCreateTabs -bool true</strong>

3、要撤销这个设置，你只需在 Terminal 中执行下面这条命令就行。

<strong>defaults delete com.apple.Safari TargetedClicksCreateTabs</strong>

注意，在执行这两个命令后，重启 Safari 浏览器就ok了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>572</wp:post_id>
		<wp:post_date>2009-11-08 11:06:48</wp:post_date>
		<wp:post_date_gmt>2009-11-08 03:06:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a6%82%e4%bd%95%e8%ae%a9-safari-%e9%bb%98%e8%ae%a4%e4%bd%bf%e7%94%a8%e6%96%b0%e6%a0%87%e7%ad%be%e6%89%93%e5%bc%80%e9%93%be%e6%8e%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>install mercurial and Go Programming Language</title>
		<link>http://www.iceskysl.com/?p=574</link>
		<pubDate>Thu, 12 Nov 2009 17:53:55 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=574</guid>
		<description></description>
		<content:encoded><![CDATA[Having installed mercurial via easy_install,
<blockquote>eoe:~ IceskYsl$ sudo easy_install mercurial
Password:
Searching for mercurial
Reading http://pypi.python.org/simple/mercurial/
Reading http://www.selenic.com/mercurial
Best match: mercurial 1.3.1</blockquote>
any hg command fails with:
ValueError: unknown locale: UTF-8

This is mercurial 1.3.1and Python 2.6.1, but its seem that its caused by Leopard’s Term.app not setting the local encoding correctly. To resolve this, add the following to .profile:
<blockquote>export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8</blockquote>
then i clone the code for   Go Programming Language
<blockquote>eoe:system IceskYsl$ printenv LANG
eoe:system IceskYsl$ export LC_ALL=en_US.UTF-8
eoe:system IceskYsl$   export LANG=en_US.UTF-8
eoe:system IceskYsl$ hg clone -r release https://go.googlecode.com/hg/  go
requesting all changes
adding changesets
adding manifests
adding file changes
added 3976 changesets with 16799 changes to 2931 files
updating working directory
1640 files updated, 0 files merged, 0 files removed, 0 files unresolved</blockquote>
<a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-mercurial/" target="_blank">http://www.ibm.com/developerworks/cn/opensource/os-cn-mercurial/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>574</wp:post_id>
		<wp:post_date>2009-11-13 01:53:55</wp:post_date>
		<wp:post_date_gmt>2009-11-12 17:53:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-mercurial-and-go-programming-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:comment>
			<wp:comment_id>7996</wp:comment_id>
			<wp:comment_author><![CDATA[Nike Lunar Shoes]]></wp:comment_author>
			<wp:comment_author_email>fffrthtty@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nikerunshoes.net/</wp:comment_author_url>
			<wp:comment_author_IP>59.58.153.20</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 16:26:52</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 16:26:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.pexuha.info]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336580812.5488";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";s:3:"574";s:14:"comment_author";s:16:"Nike Lunar Shoes";s:20:"comment_author_email";s:19:"fffrthtty@gmail.com";s:18:"comment_author_url";s:28:"http://www.nikerunshoes.net/";s:15:"comment_content";s:22:"http://www.pexuha.info";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"59.58.153.20";s:10:"user_agent";s:112:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)";s:8:"referrer";s:26:"http://iceskysl.1sters.com";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:30:"http://www.iceskysl.com/?p=574";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:16:"Nike Lunar Shoes";s:10:"POST_email";s:19:"fffrthtty@gmail.com";s:8:"POST_url";s:28:"http://www.nikerunshoes.net/";s:12:"POST_comment";s:22:"http://www.pexuha.info";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"574";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"185";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"59.58.153.20";s:11:"REMOTE_PORT";s:5:"45981";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:26:"http://iceskysl.1sters.com";s:20:"HTTP_ACCEPT_LANGUAGE";s:1:"*";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:112:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"185";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1336580811";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>how to avoid Net::SMTPFatalError (555 5.5.2 Syntax error.</title>
		<link>http://www.iceskysl.com/?p=577</link>
		<pubDate>Thu, 12 Nov 2009 19:58:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=577</guid>
		<description></description>
		<content:encoded><![CDATA[i can not get notify email from my ExceptionNotifier in rails project,i notice some useful msg in the production logs:
<blockquote>Net::SMTPFatalError (555 5.5.2 Syntax error. b17sm72261fka.43</blockquote>

 google....
<blockquote>@from = "#{sender}<a...@xxxxxxx>"
 If I submit an email id, It is giving error as
 (Net::SMTPFatalError) "555 5.5.2 Syntax error. d29sm1994943and.38\n"

The from line is the problem. The Net::SMTP library was recently changed
so it adds angle brackets to your sender, so you cannot have any in your
string. Try this as a workaround:
@from = "a...@xxxxxxx"</blockquote>

so,just fix it like this:
ExceptionNotifier.sender_address = %("iceskysl" <iceskysl@eoemobile.com>)
to
ExceptionNotifier.sender_address = %(iceskysl@eoemobile.com)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>577</wp:post_id>
		<wp:post_date>2009-11-13 03:58:54</wp:post_date>
		<wp:post_date_gmt>2009-11-12 19:58:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-avoid-netsmtpfatalerror-555-5-5-2-syntax-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>清理svn的垃圾文件.svn文件夹</title>
		<link>http://www.iceskysl.com/?p=579</link>
		<pubDate>Tue, 17 Nov 2009 08:22:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=579</guid>
		<description></description>
		<content:encoded><![CDATA[有时候把svn的代码传到服务器，会不小心传上svn的系统文件，这些文件都是用于版本控制的，在生产环境，总有点不爽。在linux下可以用一个命令删除，命令如下：
<blockquote>find . -name .svn | xargs rm -rf</blockquote>
上述命令要在代码所在目录运行。

cvs的版本控制，也会有类似问题，方法类似，换一下名字，如下：
<blockquote>find . -name .cvs | xargs rm -rf</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>579</wp:post_id>
		<wp:post_date>2009-11-17 16:22:20</wp:post_date>
		<wp:post_date_gmt>2009-11-17 08:22:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%85%e7%90%86svn%e7%9a%84%e5%9e%83%e5%9c%be%e6%96%87%e4%bb%b6-svn%e6%96%87%e4%bb%b6%e5%a4%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="cvs"><![CDATA[cvs]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
		<wp:comment>
			<wp:comment_id>470</wp:comment_id>
			<wp:comment_author><![CDATA[microdict]]></wp:comment_author>
			<wp:comment_author_email>micro.dict@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.newdict.com</wp:comment_author_url>
			<wp:comment_author_IP>218.202.128.12</wp:comment_author_IP>
			<wp:comment_date>2009-11-17 18:24:27</wp:comment_date>
			<wp:comment_date_gmt>2009-11-17 10:24:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[svn的发布时可以用svn export直接就不含.svn目录了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>471</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>114.255.142.88</wp:comment_author_IP>
			<wp:comment_date>2009-11-17 22:01:03</wp:comment_date>
			<wp:comment_date_gmt>2009-11-17 14:01:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，主要是从一个项目把一个文件夹拷到另外一个工程下导致得，呵呵～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>472</wp:comment_id>
			<wp:comment_author><![CDATA[cnsoft]]></wp:comment_author>
			<wp:comment_author_email>cnsoft@12c.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.donews.com/cnsoft</wp:comment_author_url>
			<wp:comment_author_IP>60.26.152.50</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 09:27:39</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 01:27:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1楼正解.
另一个版本 我用的
find . -name "*.svn" -exec rm -R {} \;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Uninstall / Delete / Remove Package</title>
		<link>http://www.iceskysl.com/?p=581</link>
		<pubDate>Sun, 22 Nov 2009 18:48:23 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=581</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="background-color: #ffffff;">Just use the following syntax:</span>

sudo apt-get remove {package-name}

For example remove package called mplayer, enter:
$ sudo apt-get remove mplayer

Remove package called lighttpd along with all configuration files, enter:
$ sudo apt-get --purge remove lighttpd

To list all installed package, enter:\
dpkg --list
dpkg --list | less
dpkg --list | grep -i 'http']]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>581</wp:post_id>
		<wp:post_date>2009-11-23 02:48:23</wp:post_date>
		<wp:post_date_gmt>2009-11-22 18:48:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uninstall-delete-remove-package</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="package"><![CDATA[package]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
		<category domain="post_tag" nicename="uninstall"><![CDATA[uninstall]]></category>
	</item>
	<item>
		<title>ImageMagick够折腾得，no decode delegate</title>
		<link>http://www.iceskysl.com/?p=583</link>
		<pubDate>Sun, 22 Nov 2009 20:30:32 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[估计RP出问题了，以前安装和今天在mac上安装都很顺利，但是在服务器上装得时候，出现一大堆得问题，极度诡异，最后查了N多资料，改了N多东西，也不晓得最后是哪个生效了，终于折腾好了.
记录下我参考过得资料：
http://www.imagemagick.org/script/command-line-processing.php
http://wanguan2000.blog.ubuntu.org.cn/2009/01/04/ubuntu-下rmagick的安装/
http://infrastacks.com/?p=57
http://hi.baidu.com/yttxuehui/blog/item/9f1a21978d6fa96a55fb96d5.html
http://www.blogjava.net/fl1429/archive/2009/06/17/282895.html
http://hi.baidu.com/countryroadtao/blog/item/225c72dad2adc16cd0164e97.html
http://www.cnscn.org/htm_data/602/0705/8717.html
http://stackoverflow.com/questions/1483968/imagemagick-convert-error-wrong-jpeg-library-version-library-is-62-caller-expe
我读最后一个问题印象深刻
"Looks like it is reading the wrong jpeg ibrary, but I have jpeg 7 installed. How do i tell ImageMagick to look up the right JPEG library version(I don't care 62 or 70 as long as it works)."
root@li84-64:/data/soft/ImageMagick-6.5.7-9# convert -list format | grep JPEG
           see part 5 which describes the image encoding (RLE, JPEG, JPEG-LS),
           and supplement 61 which adds JPEG-2000 encoding.
      JNG* PNG       rw-   JPEG Network Graphics
      JP2* JP2       rw-   JPEG-2000 File Format Syntax
      JPC* JPC       rw-   JPEG-2000 Code Stream Syntax
     JPEG* JPEG      rw-   Joint Photographic Experts Group JFIF format (70)
      JPG* JPEG      rw-   Joint Photographic Experts Group JFIF format (70)
      JPX* JPX       rw-   JPEG-2000 File Format Syntax
      PGX* PGX       r--   JPEG-2000 VM Format
    PJPEG* JPEG      rw-   Joint Photographic Experts Group JFIF format (70)

看到其需要得JPEG得lib是70，但是我装得是

root@li84-64:/data/soft/ImageMagick-6.5.7-9# dpkg --list | grep "magick"
rc  imagemagick                       7:6.4.5.4.dfsg1-1ubuntu3.1       image manipulation programs
ii  libmagick++10                     7:6.3.7.9.dfsg1-2ubuntu1.1       C++ API to the ImageMagick library
ii  libmagick++9-dev                  7:6.3.7.9.dfsg1-2ubuntu1.1       C++ API to the ImageMagick library - develop
ii  libmagick10                       7:6.3.7.9.dfsg1-2ubuntu1.1       image manipulation library
ii  libmagick9-dev                    7:6.3.7.9.dfsg1-2ubuntu1.1       image manipulation library - development fil
ii  libmagickcore1                    7:6.4.5.4.dfsg1-1ubuntu3.1       low-level image manipulation library
ii  libmagickwand1                    7:6.4.5.4.dfsg1-1ubuntu3.1       image manipulation library
ii  librmagick-ruby                   1.15.11-1ubuntu1                 ImageMagick API for Ruby
ii  librmagick-ruby1.8                1.15.11-1ubuntu1                 ImageMagick API for Ruby]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2009-11-23 04:30:32</wp:post_date>
		<wp:post_date_gmt>2009-11-22 20:30:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imagemagick%e5%a4%9f%e6%8a%98%e8%85%be%e5%be%97%ef%bc%8cno-decode-delegate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="delegate"><![CDATA[delegate]]></category>
		<category domain="post_tag" nicename="imagemagick"><![CDATA[ImageMagick]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_d7723eaea9a9493eb93c4e4d18d406e3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_43e95b7ddbc46d380d4334cfe2d5f088</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_47247317d43f511b3212779123b0597b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ba2c5b95973a00302128150d497ac693</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e6b8a6b283ab5a9f721fbac8b071b0c3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8c08a51087a4b9331f7d878dad15ad14</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1fd010bd41ebec2f2429b142cdd5505d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_32ed92599433c6f88e5dddf35bf3cb88</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f426ef9fd820c008b233d0c354d14294</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_410021b3c782029307a0742fd9e5eb8c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_afea80843fa55c29bf0782c1e0d77713</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c6442a55ad5ce90d718efd87c84fce97</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d14150c8dd1c5f2c8191c4177702c40b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3c4171115cad040c4ae1e5f12bc2363c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1e0baf18919d165b97485a17e89a7c03</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d39b052561ed569ec3f70f91c0d0e0f8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5e03a1b32cf6985d07cf059ab4332f7e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e750d1fc0b92cf55f6ca8ca5eaae3cd9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_66ef2420e3415e57350acee117bed3d3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4c3eebc31e0d3e31514b0eae50f62edb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_038c34d5749a36dcad7dfee915c5b889</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2b70e7d8907c105a9aed641eb3d56657</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c75fb757f2de17376708763b48b6aaee</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_043c9348a3e12f8afea766b83a5c9442</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>用Ruby在已知数组中找到和目标最匹配得元素</title>
		<link>http://www.iceskysl.com/?p=587</link>
		<pubDate>Tue, 24 Nov 2009 08:06:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=587</guid>
		<description></description>
		<content:encoded><![CDATA[有个需求，给定一个数组，然后给出一个变量，需要在这个数组中找到和这个变量得值最接近得那个元素，开始用find或者select都不是很合适，最后找到inject，很好得解决了这个需求，现在记录下：
首先看下inject这个函数
<code>
enum.inject(initial) {| memo, obj | block } => obj
enum.inject {| memo, obj | block } => obj
Combines the elements of enum by applying the block to an accumulator value (memo) and each element in turn. At each step, memo is set to the value returned by the block. The first form lets you supply an initial value for memo. The second form uses the first element of the collection as a the initial value (and skips that element while iterating).

   # Sum some numbers
   (5..10).inject {|sum, n| sum + n }              #=> 45
   # Multiply some numbers
   (5..10).inject(1) {|product, n| product * n }   #=> 151200

   # find the longest word
   longest = %w{ cat sheep bear }.inject do |memo,word|
      memo.length > word.length ? memo : word
   end
   longest                                         #=> "sheep"

   # find the length of the longest word
   longest = %w{ cat sheep bear }.inject(0) do |memo,word|
      memo >= word.length ? memo : word.length
   end
   longest                                         #=> 5
</code>

然后根据我得需求，写出一个函数如下：
<code>
  # find the min abs size
  def self.select_h(h)
    if ALL_FORMATS.include?(h)
      return h
    else
      ok_size = ALL_FORMATS.inject do |i,j|
        (i-h).abs < (j-h).abs ? i : j
      end
      return ok_size
    end
  end
</code>
首先看是否包含这个变量，如果又，直接返回，如果没有就inject来取一个最合适得。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>587</wp:post_id>
		<wp:post_date>2009-11-24 16:06:13</wp:post_date>
		<wp:post_date_gmt>2009-11-24 08:06:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8ruby%e5%9c%a8%e5%b7%b2%e7%9f%a5%e6%95%b0%e7%bb%84%e4%b8%ad%e6%89%be%e5%88%b0%e5%92%8c%e7%9b%ae%e6%a0%87%e6%9c%80%e5%8c%b9%e9%85%8d%e5%be%97%e5%85%83%e7%b4%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="find"><![CDATA[find]]></category>
		<category domain="post_tag" nicename="inject"><![CDATA[inject]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="select"><![CDATA[select]]></category>
	</item>
	<item>
		<title>Facebooker error UnableToLoadAdapter</title>
		<link>http://www.iceskysl.com/?p=589</link>
		<pubDate>Thu, 26 Nov 2009 13:31:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/v2/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[If you see an error that looks like
<blockquote>/home/brickfactor/facebooker_tutorial/vendor/plugins/facebooker/lib/facebooker
/adapters/adapter_base.rb:43:in `load_adapter': Facebooker::AdapterBase::UnableToLoadAdapter (Facebooker::AdapterBase::UnableToLoadAdapter)
/RAILS_APP/vendor/plugins/facebooker/lib/facebooker/adapters/adapter_base.rb:43:in `load_adapter': Facebooker::AdapterBase::UnableToLoadAdapter (Facebooker::AdapterBase::UnableToLoadAdapter)
from /RAILS_APP/vendor/plugins/facebooker/lib/facebooker.rb:121:in `load_adapter'
from /RAILS_APP/vendor/plugins/facebooker/lib/facebooker.rb:65:in `apply_configuration'
from /RAILS_APP/vendor/plugins/facebooker/lib/facebooker.rb:45:in `load_configuration'
from /RAILS_APP/vendor/plugins/facebooker/rails/../init.rb:6</blockquote>
Its because you haven’t configured config/facebooker.yml file correctly, or at all. (Most tutorials etc. have you creating and editing this file after you install facebooker)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2009-11-26 21:31:29</wp:post_date>
		<wp:post_date_gmt>2009-11-26 13:31:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>facebooker-error-unabletoloadadapter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>blog迁移完，继续写</title>
		<link>http://www.iceskysl.com/?p=592</link>
		<pubDate>Wed, 13 Jan 2010 08:42:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=592</guid>
		<description></description>
		<content:encoded><![CDATA[前段时间原来用的slicehost的VPS不想用了，其速度越来越慢，特别是SSH的时候超级慢，导致我每次SSH都是煎熬，终于下定决心抛弃。
后来购买了linode，说实在的，linode比slicehost要好用，特别是数据migrate的时候，真是一件幸福的事情，本来linode的VPS早就买了，只是这些天从北京到深圳，一直有很多事情在折腾，也没来得及将之前的blog内容恢复。
昨天夜里看到闲逛到一个朋友的地盘，其记录了4年的广州生活，旅游，点点滴滴，很不错，今天得闲就把自己的blog恢复了～
还好，数据我全部都备份了，导入导出还算顺利，折腾了一会PHP，倒是顺利，这个blog还是主要记录我的技术话题，生活blog内容不在这里写很多。
回头看下，我这个blog貌似从2007年5月就开始写了，到现在也差不多2年多了～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>592</wp:post_id>
		<wp:post_date>2010-01-13 08:42:39</wp:post_date>
		<wp:post_date_gmt>2010-01-13 08:42:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog%e8%bf%81%e7%a7%bb%e5%ae%8c%ef%bc%8c%e7%bb%a7%e7%bb%ad%e5%86%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>nginx+spawn-fcgi+php</title>
		<link>http://www.iceskysl.com/?p=594</link>
		<pubDate>Wed, 13 Jan 2010 08:56:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=594</guid>
		<description></description>
		<content:encoded><![CDATA[由于这个blog用的是wordpress，需要在VPS上搭一套PHP的环境，以前折腾过，倒也不费事，最后用spawn-fcgi来跑，记录一条如下
<blockquote>
/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9100 -u www-data -g www-data -f /usr/bin/php-cgi -C 10</blockquote>

然后修改下php.ini的upload_max_filesize，就差不多OK了～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>594</wp:post_id>
		<wp:post_date>2010-01-13 08:56:43</wp:post_date>
		<wp:post_date_gmt>2010-01-13 08:56:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginxspawn-fcgiphp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fcgi"><![CDATA[fcgi]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<wp:comment>
			<wp:comment_id>473</wp:comment_id>
			<wp:comment_author><![CDATA[404]]></wp:comment_author>
			<wp:comment_author_email>xuliicom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xuli.info</wp:comment_author_url>
			<wp:comment_author_IP>115.193.167.146</wp:comment_author_IP>
			<wp:comment_date>2010-01-13 14:47:29</wp:comment_date>
			<wp:comment_date_gmt>2010-01-13 14:47:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[博客终于复活了，不容易！

推荐用  PHP + FPM 实现FastCGI, 好处见这里: http://blog.phpwap.net/?p=91

年末整理了一篇配置笔记（要拖到页尾哈） http://www.xuli.info/?p=120]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>474</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.91.63.97</wp:comment_author_IP>
			<wp:comment_date>2010-01-21 05:10:22</wp:comment_date>
			<wp:comment_date_gmt>2010-01-21 05:10:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@404
你啥时也开始搞PHP了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>友链没了，需要链接的请留言</title>
		<link>http://www.iceskysl.com/?p=600</link>
		<pubDate>Wed, 13 Jan 2010 09:18:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=600</guid>
		<description></description>
		<content:encoded><![CDATA[数据导出的时候只顾导出文章和评论，没注意到友情联系，加上有一些链接已经失效了，也就不想回去找了，需要链接的朋友给我留言，看到后我会添加的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>600</wp:post_id>
		<wp:post_date>2010-01-13 09:18:05</wp:post_date>
		<wp:post_date_gmt>2010-01-13 09:18:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%8b%e9%93%be%e6%b2%a1%e4%ba%86%ef%bc%8c%e9%9c%80%e8%a6%81%e9%93%be%e6%8e%a5%e7%9a%84%e8%af%b7%e7%95%99%e8%a8%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e5%8f%8b%e9%93%be"><![CDATA[友链]]></category>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[404]]></wp:comment_author>
			<wp:comment_author_email>xuliicom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xuli.info</wp:comment_author_url>
			<wp:comment_author_IP>115.193.167.146</wp:comment_author_IP>
			<wp:comment_date>2010-01-13 14:40:34</wp:comment_date>
			<wp:comment_date_gmt>2010-01-13 14:40:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那不是成处女地了哈, 顶 Ice 哥, 顺便来打个广告！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Install GD Support for PHP in Ubuntu</title>
		<link>http://www.iceskysl.com/?p=608</link>
		<pubDate>Wed, 13 Jan 2010 10:25:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=608</guid>
		<description></description>
		<content:encoded><![CDATA[I am in the process of building my blog  using wordpress ,then i install SI CAPTCHA Anti-Spam ,but it's say i  didn’t have GD support for PHP5 installed on my server. so i  need to do:

Open terminal and type in the following command:
<blockquote>$ sudo apt-get install php5-gd</blockquote>

Now restart Apache
<blockquote># sudo /etc/init.d/apache2 restart</blockquote>

or restart  spawn-fcgi
<blockquote>/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9100 -u www-data -g www-data -f /usr/bin/php-cgi -C 10</blockquote>

There you go, you now have GD Support for PHP5 in Ubuntu. Get your Drupal on!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>608</wp:post_id>
		<wp:post_date>2010-01-13 10:25:36</wp:post_date>
		<wp:post_date_gmt>2010-01-13 10:25:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-install-gd-support-for-php-in-ubuntu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gd"><![CDATA[GD]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
	</item>
	<item>
		<title>Fixing Ruby no such file to load readline error in centOS</title>
		<link>http://www.iceskysl.com/?p=612</link>
		<pubDate>Wed, 20 Jan 2010 05:46:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=612</guid>
		<description></description>
		<content:encoded><![CDATA[Does this error message look familar when you script/console?
<code>[iceskysl@li1248 current]$ ./script/console production
Loading production environment (Rails 2.3.5)
/usr/local/lib/ruby/1.8/irb/completion.rb:10:in `require': no such file to load -- readline (LoadError)
        from /usr/local/lib/ruby/1.8/irb/completion.rb:10
        from /usr/local/lib/ruby/1.8/irb/init.rb:252:in `require'
        from /usr/local/lib/ruby/1.8/irb/init.rb:252:in `load_modules'
        from /usr/local/lib/ruby/1.8/irb/init.rb:250:in `each'
        from /usr/local/lib/ruby/1.8/irb/init.rb:250:in `load_modules'
        from /usr/local/lib/ruby/1.8/irb/init.rb:21:in `setup'
        from /usr/local/lib/ruby/1.8/irb.rb:54:in `start'
        from /usr/local/bin/irb:13</code>
this happens when readline is somehow different than your current version of ruby or corrupted. The quick fix is to recompile readline. To do it in CentOS with yum:
<code>$> yum install readline-devel -y
$> cd /root/src/ruby-1.8.6-p114/ext/readline/
$> ruby extconf.rb
$> make
$> sudo make install </code>
Now you should have script/console working.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>612</wp:post_id>
		<wp:post_date>2010-01-20 05:46:28</wp:post_date>
		<wp:post_date_gmt>2010-01-20 05:46:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fixing-ruby-no-such-file-to-load-readline-error-in-centos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.91.63.97</wp:comment_author_IP>
			<wp:comment_date>2010-01-21 05:09:37</wp:comment_date>
			<wp:comment_date_gmt>2010-01-21 05:09:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[测试回复～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[Rings for Woman]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://kari-kat.com/cart.php?action=add&amp;product_id=246</wp:comment_author_url>
			<wp:comment_author_IP>50.128.168.231</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 05:30:20</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 21:30:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap Jewelry...</strong>

[...]Fixing Ruby no such file to load readline error in centOS[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[bilo weekly ad]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://biloweeklyad.com</wp:comment_author_url>
			<wp:comment_author_IP>66.30.173.212</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 12:33:08</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 04:33:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bilo weekly ad...</strong>

[...]Fixing Ruby no such file to load readline error in centOS[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>479</wp:comment_id>
			<wp:comment_author><![CDATA[cheap rhinestone jewelry,wholesale cheap jewelry]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nnbbwo.freevar.com/?page_id=2</wp:comment_author_url>
			<wp:comment_author_IP>69.22.186.17</wp:comment_author_IP>
			<wp:comment_date>2011-10-13 13:05:16</wp:comment_date>
			<wp:comment_date_gmt>2011-10-13 05:05:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap rhinestone jewelry,wholesale cheap jewelry...</strong>

[...]Fixing Ruby no such file to load readline error in centOS[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.132</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 17:48:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 09:48:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

[...]Fixing Ruby no such file to load readline error in centOS[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Swap Space in centOS</title>
		<link>http://www.iceskysl.com/?p=614</link>
		<pubDate>Thu, 21 Jan 2010 10:01:34 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=614</guid>
		<description></description>
		<content:encoded><![CDATA[Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space. While swap space can help machines with a small amount of RAM, it should not be considered a replacement for more RAM. Swap space is located on hard drives, which have a slower access time than physical memory.

Swap space can be a dedicated swap partition (recommended), a swap file, or a combination of swap partitions and swap files.

Swap should equal 2x physical RAM for up to 2 GB of physical RAM, and then an additional 1x physical RAM for any amount above 2 GB, but never less than 32 MB.

So, if:

M = Amount of RAM in GB, and S = Amount of swap in GB, then
<blockquote>If M < 2
	S = M *2
Else
	S = M + 2</blockquote>
Using this formula, a system with 2 GB of physical RAM would have 4 GB of swap, while one with 3 GB of physical RAM would have 5 GB of swap. Creating a large swap space partition can be especially helpful if you plan to upgrade your RAM at a later time.

For systems with really large amounts of RAM (more than 32 GB) you can likely get away with a smaller swap partition (around 1x, or less, of physical RAM).

source:<a href="http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-swapspace.html">http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-swapspace.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>614</wp:post_id>
		<wp:post_date>2010-01-21 10:01:34</wp:post_date>
		<wp:post_date_gmt>2010-01-21 10:01:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swap-space-in-centos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="centos"><![CDATA[centOS]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="swap"><![CDATA[Swap]]></category>
	</item>
	<item>
		<title>深圳电信耍流氓，劫持浏览器</title>
		<link>http://www.iceskysl.com/?p=616</link>
		<pubDate>Sat, 23 Jan 2010 13:40:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=616</guid>
		<description></description>
		<content:encoded><![CDATA[今天无意发现在浏览器的左下角经常出现一个页面无法打开的提示，如下
The webpage at http://121.15.207.133:4022/logo.jpg?p=undefined|778|1276|24|800|1280might be temporarily down or it may have moved permanently to a new web address.

看其样式是请求了一个121.15.207.133上的一个logo图片，然后传入了几个参数，但是这个图片的服务器貌似除了电问题，导致请求不到。
无缘无故的，咋会去请求这个玩意呢，查了吓这个IP归属，属于：
<blockquote>
ip138.com IP查询(搜索IP地址的地理位置)
您查询的IP:121.15.207.133
本站主数据：广东省深圳市 电信
参考数据一：广东省深圳市 电信
参考数据二：广东省深圳市 电信
</blockquote>

是深圳电信的，Google下这个IP地址，发现有人（不多）也提到了这个问题，顺藤摸瓜找到月光的一篇2007年文章《<a href="http://www.williamlong.info/archives/1116.html">中国电信又开始耍流氓啦</a>》，描述的差不多是同样的情况。
不晓得邪恶的电信又在监控啥数据，明天警告一下去。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>616</wp:post_id>
		<wp:post_date>2010-01-23 13:40:48</wp:post_date>
		<wp:post_date_gmt>2010-01-23 13:40:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%b1%e5%9c%b3%e7%94%b5%e4%bf%a1%e8%80%8d%e6%b5%81%e6%b0%93%ef%bc%8c%e5%8a%ab%e6%8c%81%e6%b5%8f%e8%a7%88%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="%e5%8a%ab%e6%8c%81"><![CDATA[劫持]]></category>
		<category domain="post_tag" nicename="%e7%94%b5%e4%bf%a1"><![CDATA[电信]]></category>
		<wp:comment>
			<wp:comment_id>481</wp:comment_id>
			<wp:comment_author><![CDATA[jason]]></wp:comment_author>
			<wp:comment_author_email>jason.zhangfan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.103.245</wp:comment_author_IP>
			<wp:comment_date>2010-01-31 13:39:04</wp:comment_date>
			<wp:comment_date_gmt>2010-01-31 13:39:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也遇到一样的情况了，你后来咋样了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>482</wp:comment_id>
			<wp:comment_author><![CDATA[若寒]]></wp:comment_author>
			<wp:comment_author_email>xiong_li_bing@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.111.213.124</wp:comment_author_IP>
			<wp:comment_date>2010-03-17 03:51:25</wp:comment_date>
			<wp:comment_date_gmt>2010-03-17 03:51:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[俺 广州的也是 http://121.32.136.104:4022/logo.jpg?p=undefined|728|1366|32|768|1366  无良的电信偷偷摸摸不知道搞些什么 严重鄙视~~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>483</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.79.242.234</wp:comment_author_IP>
			<wp:comment_date>2010-03-21 14:45:54</wp:comment_date>
			<wp:comment_date_gmt>2010-03-21 14:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恩，好像好多电线服务商都干这个事，无语的很，呵呵～
哪天以侵犯隐私时候可以起诉他。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RubyInline, Making Making Things Faster Easier</title>
		<link>http://www.iceskysl.com/?p=620</link>
		<pubDate>Sun, 24 Jan 2010 18:51:47 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=620</guid>
		<description></description>
		<content:encoded><![CDATA[发现一篇好文，讲的是如何使用RubyInline，在Ruby中直接嵌入C并运行，相比之前些lib，要方便的多，由于这个文章在墙外，就转了一份过来，可以翻墙的可以去看原文
<a href="http://on-ruby.blogspot.com/2006/07/rubyinline-making-making-things-faster.html">http://on-ruby.blogspot.com/2006/07/rubyinline-making-making-things-faster.html</a>

Today on ruby-talk, I caught a thread called "For Performance, Write it in C". I'd like to present a slight amendment to that thesis. Let me explain.

It all started with an email at work. Someone was passing around a bunch of prime number printers in various languages (C, Java, C#, Perl, and Python). They all used the same (ugly) algorithm, and were supposed to show just how 'performant the languages were. Since I'm the local Ruby evangelist, I was asked to write a Ruby version. Here's what I came up with (warning, ugly algorithm ahead):

#!/usr/bin/ruby

for num in 1..10_000 do
is_prime = 1
for x in 2..(num - 1) do
if (num % x == 0)
is_prime = x
break
end
end
if is_prime == 1
puts "#{num} is a prime number"
else
puts "#{num} equals #{is_prime} * #{num/is_prime}"
end
end
How fast is it? Well, time says:

$ time ./primes.rb &gt; /dev/null

real    0m2.905s
user    0m2.716s
sys     0m0.004s
$

Certainly, nothing to write home about, but not too far from Perl or Python either.
Wanting to improve it, and not being able to touch the algorithm (we want to be comparing apples to quinces after all, not apples to oranges). I know my only hope is to find the bottleneck(s) and rewrite it (them?) in C. My first step is to grab Ruby's profiler and see what it says (oh, by the way, I reduced the value of num to 100 so that this would complete in my lifetime ... the profiler is slow).

$ ruby -rprofile primes.rb &gt; /dev/null
%   cumulative   self              self     total
time   seconds   seconds    calls  ms/call  ms/call  name
63.64     0.14      0.14      101     1.39     3.56  Range#each
13.64     0.17      0.03     1133     0.03     0.03  Fixnum#%
9.09     0.19      0.02     1233     0.02     0.02  Fixnum#==
4.55     0.20      0.01      100     0.10     0.20  Kernel.puts
4.55     0.21      0.01      200     0.05     0.05  IO#write
4.55     0.22      0.01      248     0.04     0.04  Fixnum#to_s
0.00     0.22      0.00       74     0.00     0.00  Fixnum#/
0.00     0.22      0.00      100     0.00     0.00  Fixnum#-
0.00     0.22      0.00        1     0.00   220.00  #toplevel
$

Which tells me that most of my time is spent in each (well, it's actually spent in the block I sent to each. It's taking a whopping 1.39 msec per call, compared to .0X msec for everything else. What would happen if I rewrote just that block?
Enter RubyInline (A great tool written by zenspider and Eric Hodel). I'm not a C wiz by any stretch of the imagination, but this stuff is pretty easy to bang out. My new code looks like this:

#!/usr/bin/ruby

require "rubygems"
require "inline"

class Primes
inline do |builder|
builder.c '
int prime(int num) {
int x;
for (x = 2; x &lt; (num - 1) ; x++) {         if (num == 2) {           return 1;         }         if (num % x == 0) {           return x;         }       }       return 1;     }'   end end p = Primes.new for num in 2..10_000 do   is_prime = p.prime(num)   if is_prime == 1     puts "#{num} is a prime number"   else     puts "#{num} equals #{is_prime} * #{num/is_prime}"   end end Not too ugly. At least I can still see what's happening. The main loop being in Ruby helps a lot too (especially if this were a much bigger program). How much of a difference does it make? time says: $ time ./cprimes.rb &gt; /dev/null

real    0m0.328s
user    0m0.288s
sys     0m0.020s

An order of magnitude improvement. Not too shabby.
What's the lesson here? Optimize what you need to (and only what you need to), profile find out what that is (it may be slow, but profiling is your friend), and use the right tools (rewriting a bit of code with RubyInline is way better than rewriting the whole app in C).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>620</wp:post_id>
		<wp:post_date>2010-01-24 18:51:47</wp:post_date>
		<wp:post_date_gmt>2010-01-24 18:51:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubyinline-making-making-things-faster-easier</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="rubyinline"><![CDATA[RubyInline]]></category>
	</item>
	<item>
		<title>cache_fu&#039;s find_by_xx解决办法</title>
		<link>http://www.iceskysl.com/?p=622</link>
		<pubDate>Mon, 25 Jan 2010 09:17:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=622</guid>
		<description></description>
		<content:encoded><![CDATA[在项目里用了memcached和cache_fu，其默认的 get_cache(id)还是非常方便的，但是对于另外一个用的比较多的find_by_xx这样的，貌似没看到有现成的方法可以使用。
看到其提供了caches方法，其可以接收参数with参数，那么就可以直接利用了，方法如下
<blockquote>@client =Client.caches(:find_by_api_key,:with => api_key)</blockquote>

如果监控下日志，你会发现如下的日志：
<blockquote>Processing Android::Wallpapers::V3::PhotoController#share (for 192.168.1.103 at 2010-01-25 16:33:53) [GET]
  Parameters: {"api_key"=>"T3yQ0zcNmhpBwWUbfxeAmA", "id"=>"20", "user_id"=>"1"}
==> Got Client:find_by_api_key:T3yQ0zcNmhpBwWUbfxeAmA from cache. (0.00081)
  Client Columns (1.7ms)   SHOW FIELDS FROM `clients`
  Client Load Scrooged (0.3ms)   SELECT `clients`.`id` FROM `clients` WHERE (`clients`.`api_key` = 'T3yQ0zcNmhpBwWUbfxeAmA') LIMIT 1
==> Set Client:find_by_api_key:T3yQ0zcNmhpBwWUbfxeAmA to cache. (0.00352)
</blockquote>

很明显，非常方便！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>622</wp:post_id>
		<wp:post_date>2010-01-25 09:17:58</wp:post_date>
		<wp:post_date_gmt>2010-01-25 09:17:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cache_fus-find_by_xx%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cache_fu"><![CDATA[cache_fu]]></category>
		<category domain="post_tag" nicename="find_by"><![CDATA[find_by]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Make a short link with Bit.ly</title>
		<link>http://www.iceskysl.com/?p=624</link>
		<pubDate>Mon, 25 Jan 2010 13:49:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=624</guid>
		<description></description>
		<content:encoded><![CDATA[link = 'http://www.wired.com'
short_link = open('http://bit.ly/api?url=' + link, "UserAgent" => "Ruby-ShortLinkCreator").read
# => "http://bit.ly/AvxfY"
参考资料：
http://code.google.com/p/bitly-api/wiki/ApiDocumentation
http://j.mp/
http://code.google.com/p/bitlyj/
http://github.com/philnash/bitly]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date>2010-01-25 13:49:36</wp:post_date>
		<wp:post_date_gmt>2010-01-25 13:49:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-a-short-link-with-bit-ly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_440d3f5f997b50ef71fb816a82dcd682</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_27a5550a43ff3ab4f9d5f9cf5895567f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cc7fcaa8f973761106f2def88b57073e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8cab4b4f091bcbf0100cd0615972db8d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_67aeea70e19c1c37d1d24b5f0448e008</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_31ee3e6842ee9a592c47ed7e3069e40a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6fa534827592dc0bd577c987fea0f327</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a711341c339d4131a47efae138fffa35</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linux下抓出哪个进程造成的iowait很高的方法</title>
		<link>http://www.iceskysl.com/?p=627</link>
		<pubDate>Sat, 30 Jan 2010 14:46:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=627</guid>
		<description></description>
		<content:encoded><![CDATA[抓哪个进程干坏事前要先停掉syslog
/etc/init.d/rsyslog stop
echo 1 > /proc/sys/vm/block_dump
dmesg | egrep “READ|WRITE|dirtied” | egrep -o ‘([a-zA-Z]*)’ | sort | uniq -c | sort -rn | head
1423 kjournald
1075 pdflush
209 indexer
3 cronolog
1 rnald
1 mysqld
不要忘记在抓完之后关掉block_dump和启动syslog
echo 0 > /proc/sys/vm/block_dump
/etc/init.d/rsyslog start]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>627</wp:post_id>
		<wp:post_date>2010-01-30 14:46:19</wp:post_date>
		<wp:post_date_gmt>2010-01-30 14:46:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e4%b8%8b%e6%8a%93%e5%87%ba%e5%93%aa%e4%b8%aa%e8%bf%9b%e7%a8%8b%e9%80%a0%e6%88%90%e7%9a%84iowait%e5%be%88%e9%ab%98%e7%9a%84%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iowait"><![CDATA[iowait]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:comment>
			<wp:comment_id>484</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.91.61.64</wp:comment_author_IP>
			<wp:comment_date>2010-01-30 14:46:50</wp:comment_date>
			<wp:comment_date_gmt>2010-01-30 14:46:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IOWait高的一些处理方法

1、检查RAID的状态，比如是否正在重建或者没有初始化
2、替换操作系统的内核，最好使用发行版标准的Linux kernel，因为有比较多的补丁
3、检查/proc/sys/vm下面是否可以优化
4、是否使用了文件系统，文件系统是否有优化的选项，比如在RAID5上采用xfs文件系统时，
   可以调节一些参数优化性能
5、客户端程序是否产生了过大的压力，比如磁盘的读写性能只有10MB/s，每个线程的读写
   速度为5MB/s，那么如果读写线程数为20的话，无疑会造成IOWait过高
6、查看进程状态
ps -eo pid,user,wchan=WIDE-WCHAN-COLUMN -o s,cmd|awk ' $4 ~ /D/ {print $0}'
lsof -p $pid
7、使用block_dump
/etc/init.d/syslog stop
echo 1 > /proc/sys/vm/block_dump
sleep 60
dmesg | awk '/(READ|WRITE|dirtied)/ {process[$1]++} END {for (x in process) \
print process[x],x}' |sort -nr |awk '{print $2 " " $1}' | \
head -n 10

echo 0 > /proc/sys/vm/block_dump
/etc/init.d/syslog start]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>实测无线上网卡，偶进入3G时代</title>
		<link>http://www.iceskysl.com/?p=629</link>
		<pubDate>Tue, 02 Feb 2010 02:56:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=629</guid>
		<description></description>
		<content:encoded><![CDATA[我记得从我06念开始工作时，当时公司里面就在测所谓的3G产品，一直到我08念离开第一家公司的时候，还是再喊3G牌照发放。

然后又过了多久后，3G终于发放，3个运营商，1家1张；

然后有过了不记得多少时间，用了一个杭州的3G联通的卡，在G1手机上，没感觉啥时3G，只是相同资费，多点流量的感觉。

然后再过了记不清多少时间，我自己在深圳电信营业厅买了一个电信3G无线上网卡，为啥选电信，也是大致比较了下3家，无疑这款不分漫游，不限流量按时间计费的无线网卡适合我的需求，只是电信的无线数据终端贵的离谱（好像也是市场价），淘宝了一个华为EC1261的，便宜不少，顺风送的，很快，第二天早上就送到了。

插卡，连USB，测试，很顺利，本来比较担心mac下支持的不好，还好只碰到了“找不到设备”，Google一把，又乱找了一通，找到一个设置的地方，新建一个连接，号码#777,密码用户名card（都默认填写好了），点击连接就连上了。

关了wifi，测试速度，比我预想的要好，参考图：

<img class="alignnone" title="参考" src="http://lh6.ggpht.com/_GiZR7A3zZ6s/S2eQmnMIY0I/AAAAAAAAGok/VB82dLQK_3g/s400/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202010-02-02%20am10.19.23.png" alt="" width="400" height="238" />

<strong><span style="color: #ff0000;">下了一个100M的东西，花了7分多，速度在200K之上，还比较稳定</span></strong>，如下

99% [============&gt; ] 95,496,072   252K/s eta(英国中部时
100%[============&gt;] 95,545,644   252K/s   in 7m 23s

2010-02-02 10:26:17 (211 KB/s) - 已保存 “Tailing-Aaron.mov” [95545644/95545644])

然后在测试下我本地wifi（电信4M带宽）速度，惨不忍睹，如下

正在保存至: “Tailing-Aaron.mov.2”

0% [                                       ] 409,534      126K/s eta(英国中部时

0% [                                       ] 429,526      124K/s eta(英国中部时

0% [                                       ] 456,658      124K/s eta(英国中部时

竟然不如无线上网卡的速度～

用上无线上网卡，应该算进入3G时代了。

<strong>PS：</strong>
唯一不满意的地方就是这个无线网卡的设备有点大，我mac就2USB，被他占了一个后，另外一个耶盖住一点点，鼠标的USB插不进去了，难道还要买个USB分线器，冏～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>629</wp:post_id>
		<wp:post_date>2010-02-02 02:56:48</wp:post_date>
		<wp:post_date_gmt>2010-02-02 02:56:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%9e%e6%b5%8b%e6%97%a0%e7%ba%bf%e4%b8%8a%e7%bd%91%e5%8d%a1%ef%bc%8c%e5%81%b6%e8%bf%9b%e5%85%a53g%e6%97%b6%e4%bb%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="3g"><![CDATA[3G]]></category>
		<category domain="post_tag" nicename="%e6%97%a0%e7%ba%bf%e4%b8%8a%e7%bd%91%e5%8d%a1"><![CDATA[无线上网卡]]></category>
	</item>
	<item>
		<title>实例优化mysql配置文件my.cnf</title>
		<link>http://www.iceskysl.com/?p=633</link>
		<pubDate>Wed, 03 Feb 2010 11:08:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=633</guid>
		<description></description>
		<content:encoded><![CDATA[这些天给我们的一个产品的服务器端加上了memcached，发现性能相当好，在newrelic上监控到每个请求差不多能稳定在100ms以下，开上10个ruby实例，每分钟处理几千个请求不是问题，但是耶发现munin的监控，MYSQL在过期缓冲的时候还是又慢查询，因为我有个表应该又100W的数据了。

晓得MYSQL默认的一些配置不合适，只是一直没来得及调整，今天查了下资料，讲相关的配置调整了下，调整后的如下，如果你是又这方面的经验，发现不合理的还请指出，谢谢。
机器配置：
CentOS release 5.3，CPU（Intel(R) Xeon(R) CPU           L5420  @ 2.50GHz） RAM 3G，disk 200G

my.cnf配置
<blockquote>
# Example MySQL config file for large systems.
#
# This is for a large system with memory = 512M where the system runs mainly
# MySQL.
#
# You can copy this file to
# /etc/my.cnf to set global options,
# mysql-data-dir/my.cnf to set server-specific options (in this
# installation this directory is /var/lib/mysql) or
# ~/.my.cnf to set user-specific options.
#
# In this file, you can use all long options that a program supports.
# If you want to know which options a program supports, run the program
# with the "--help" option.

# The following options will be passed to all MySQL clients
[client]
port            = 3306
socket          = /var/lib/mysql/mysql.sock

# Here follows entries for some specific programs

# The MySQL server
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
user=mysql
skip-locking

# By default, the wait_timeout value is 28800. Unless you want MySQL to keep waiting for 28800 seconds (480 minutes or 8 hours),
# please decrease its value according to your application needs.
wait_timeout=60
# Increase connect_timeout from 5 to 10
connect_timeout=10
# Decrease interactive_timeout from 28800 to 100
interactive_timeout=120
# Increase join_buffer_size from 131072 to 1M
join_buffer_size=1M
# Increase query_cache_size from 0 to 128M
query_cache_size=32M
# Increase query cache limit from 1048576 to 2M
query_cache_limit=2M
# Increase max allowed packet size from 1M to 16M
max_allowed_packet=2M
# Increase table cache cache from 256 to 1024
table_cache=1024
# Increase sort buffer size from 1M
sort_buffer_size=2M
# Increase read buffer size from 1M
read_buffer_size=2M
# Increase read_rnd_buffer_size to 4M
read_rnd_buffer_size=4M

#Other settings
sort_buffer_size=8M
key_buffer = 256M
key_buffer_size=64M
myisam_sort_buffer_size = 64M
thread_cache_size = 8
# Try number of CPU's*2 for thread_concurrency
thread_concurrency = 2


# Don't listen on a TCP/IP port at all. This can be a security enhancement,
# if all processes that need to connect to mysqld run on the same host.
# All interaction with mysqld must be made via Unix sockets or named pipes.
# Note that using this option without enabling named pipes on Windows
# (via the "enable-named-pipe" option) will render mysqld useless!
#
#skip-networking

# Disable Federated by default
skip-federated

old_passwords=1

#for slow queries
log-slow-queries = /var/log/mysql-slow.log
long_query_time = 3

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[isamchk]
key_buffer = 128M
sort_buffer_size = 128M
read_buffer = 2M
write_buffer = 2M

[myisamchk]
key_buffer = 128M
sort_buffer_size = 128M
read_buffer = 2M
write_buffer = 2M

[mysqlhotcopy]
interactive-timeout

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[这些天给我们的一个产品的服务器端加上了memcached，发现性能相当好，在newrelic上监控到每个请求差不多能稳定在100ms以下，开上10个ruby实例，每分钟处理几千个请求不是问题，但是耶发现munin的监控，MYSQL在过期缓冲的时候还是又慢查询，因为我有个表应该又100W的数据了。

晓得MYSQL默认的一些配置不合适，只是一直没来得及调整，今天查了下资料，讲相关的配置调整了下，调整后的如下，如果你是又这方面的经验，发现不合理的还请指出，谢谢。
机器配置：
CentOS release 5.3，CPU（Intel(R) Xeon(R) CPU           L5420  @ 2.50GHz） RAM 3G，disk 200G

my.cnf配置]]></excerpt:encoded>
		<wp:post_id>633</wp:post_id>
		<wp:post_date>2010-02-03 11:08:13</wp:post_date>
		<wp:post_date_gmt>2010-02-03 11:08:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%9e%e4%be%8b%e4%bc%98%e5%8c%96mysql%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6my-cnf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="centos"><![CDATA[centOS]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="my-cnf"><![CDATA[my.cnf]]></category>
		<wp:comment>
			<wp:comment_id>485</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.91.63.62</wp:comment_author_IP>
			<wp:comment_date>2010-02-03 11:37:35</wp:comment_date>
			<wp:comment_date_gmt>2010-02-03 11:37:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[加2个参数到mysqld_safe里面
nice = -10
open_files_limit = 8192]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>486</wp:comment_id>
			<wp:comment_author><![CDATA[Megan30]]></wp:comment_author>
			<wp:comment_author_email>Megan30@unique-papers.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.quality-papers.com</wp:comment_author_url>
			<wp:comment_author_IP>193.41.186.100</wp:comment_author_IP>
			<wp:comment_date>2010-02-11 19:33:08</wp:comment_date>
			<wp:comment_date_gmt>2010-02-11 19:33:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A lot of various people understand the basic keys of business term paper accomplishing, but it does not mean they will accomplish high quality term papers, nevertheless a <a href="http://quality-papers.com" rel="nofollow">paper writing service</a> would assist to write the academic essay of A+ quality and demonstrate writing skills of some students.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>mysql sort 性能优化：max_length_for_sort_data</title>
		<link>http://www.iceskysl.com/?p=636</link>
		<pubDate>Wed, 03 Feb 2010 11:30:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=636</guid>
		<description></description>
		<content:encoded><![CDATA[发现VARIABLES里有个max_length_for_sort_data，其值是1024，感觉很小，如下
<blockquote>mysql> SHOW VARIABLES like "%sort%";
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| max_length_for_sort_data  | 1024       |
| max_sort_length           | 1024       |
| myisam_max_sort_file_size | 2146435072 |
| myisam_sort_buffer_size   | 67108864   |
| sort_buffer_size          | 8388608    |
+---------------------------+------------+
5 rows in set (0.00 sec)</blockquote>

不晓得是做啥用的，查了下资料：
<blockquote>http://forge.mysql.com/wiki/MySQL_Internals_Algorithms

Using the modified filesort algorithm, the tuples are longer than the pairs used in the original method, and fewer of them fit in the sort buffer (the size of which is given by sort_buffer_size). As a result, it is possible for the extra I/O to make the modified approach slower, not faster. To avoid a slowdown, the optimization is used only if the total size of the extra columns in the sort tuple does not exceed the value of the max_length_for_sort_data system variable. (A symptom of setting the value of this variable too high is that you should see high disk activity and low CPU activity.)</blockquote>

mysql的filesort有两个方法,MySQL 4.1之前是使用方法A, 之后版本会使用改进的算法B, 但使用方法B的前提是列长度的值小于max_length_for_sort_data, 但我们系统中的列的长度的值会大于1024. 因此也就是说在sort的时候, 是在使用方法A, 而方法A的性能比较差]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>636</wp:post_id>
		<wp:post_date>2010-02-03 11:30:44</wp:post_date>
		<wp:post_date_gmt>2010-02-03 11:30:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-sort-%e6%80%a7%e8%83%bd%e4%bc%98%e5%8c%96%ef%bc%9amax_length_for_sort_data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="max_length_for_sort_data"><![CDATA[max_length_for_sort_data]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="sort_buffer_size"><![CDATA[sort_buffer_size]]></category>
		<wp:comment>
			<wp:comment_id>487</wp:comment_id>
			<wp:comment_author><![CDATA[ever]]></wp:comment_author>
			<wp:comment_author_email>tm00tm@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.49.58.218</wp:comment_author_IP>
			<wp:comment_date>2010-06-28 08:27:24</wp:comment_date>
			<wp:comment_date_gmt>2010-06-28 08:27:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“但我们系统中的列的长度的值会大于1024,”这个是怎么得出来的，如何何查看列长度，
“使用方法B的前提是列长度的值小于max_length_for_sort_data”
这个列长度如何得知？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>What does Using filesort mean in MySQL?</title>
		<link>http://www.iceskysl.com/?p=638</link>
		<pubDate>Wed, 03 Feb 2010 11:51:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=638</guid>
		<description></description>
		<content:encoded><![CDATA[一直以来，只要我看到explain出来的结果有“Using filesort ”，我就要想方设法的优化和改善，因为我以前以为这个的意思就是使用文件系统来排序（那该多慢呀！），其实不是这样的。
在mysqlperformanceblog上看到一篇文章《<a href="http://www.mysqlperformanceblog.com/2009/03/05/what-does-using-filesort-mean-in-mysql/">What does Using filesort mean in MySQL?</a>》其中作者说自己每次面世的时候都会问“what does Using filesort mean in EXPLAIN,” 结果没有一个人回答的是对的，结果让其比较郁闷，就写了这个文章说明：
<blockquote>The usual answer is something like “rows are being placed into a temporary table which is too big to fit in memory, so it gets sorted on disk.” Unfortunately, this is not the same thing. First of all, this is Using temporary. Secondly, temporary tables may go to disk if they are too big, but EXPLAIN doesn’t show that. (If I interview you, I might ask you what “too big” means, or I might ask you the other reason temporary tables go to disk!)</blockquote>
通常的解释是：选择出来的记录太多了，需要排序时内存中放不下了，所以会存储在磁盘中，并通过操作磁盘的文件的方式来排序。但是呢，这是不对的。

<blockquote>The truth is, filesort is badly named. Anytime a sort can’t be performed from an index, it’s a filesort. It has nothing to do with files. Filesort should be called “sort.” It is quicksort at heart.</blockquote>
正解是，filesort这个名字有问题，容易给人误解，在mysql中，任何不能通过index进行的sort都称之为filesort，这里的filesort和文件没有任何关系，应该称之为“sort”而不是“filesort”，它的内部实现就是快速排序。

参考资料：
What does Using filesort mean in MySQL?
http://www.mysqlperformanceblog.com/2009/03/05/what-does-using-filesort-mean-in-mysql/

How MySQL executes ORDER BY
http://s.petrunia.net/blog/?p=24]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>638</wp:post_id>
		<wp:post_date>2010-02-03 11:51:36</wp:post_date>
		<wp:post_date_gmt>2010-02-03 11:51:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-does-using-filesort-mean-in-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="filesort"><![CDATA[filesort]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_bce574f83f1d0dedf8f57843f504022d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6c731f872e384bbe7183b44a148a6f22</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_45629a202ad2e80f155cfa8c998b488a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_78c9ee3f9daf7089a1339a914bfb3c49</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mysql动态修改参数</title>
		<link>http://www.iceskysl.com/?p=640</link>
		<pubDate>Wed, 03 Feb 2010 12:00:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=640</guid>
		<description></description>
		<content:encoded><![CDATA[mysql数据库也像ORACLE数据库一样，可以动态的修改参数，可以修改会话级变量只对当前会话产生影响；也可以修改全局变量，对所有新连接的会话都产生影响。

修改会话级变量
用show variables 命令查看当前参数的值,like 'pattern'用于模式匹配，查找指定的参数

mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 6291448    |
+---------------------------+------------+
1 rows in set (0.00 sec)

用set SESSION命令设置会话级变量的新值

mysql> set SESSION sort_buffer_size=7000000;
Query OK, 0 rows affected (0.00 sec)

--修改会话级变量对当前会话来说立刻生效
mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 7000000    |
+---------------------------+------------+
1 rows in set (0.00 sec)

mysql> exit
Bye
退出重新连接后，此参数恢复原值
[root@devdbc_stb root]# mysql
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 40 to server version: 5.0.37-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 6291448    |
+---------------------------+------------+
1 rows in set (0.00 sec)

修改全局变量
[root@devdbc_stb root]# mysql
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 40 to server version: 5.0.37-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 6291448    |
+---------------------------+------------+
1 rows in set (0.00 sec)

用set GLOBAL 命令设置全局变量

mysql> set GLOBAL sort_buffer_size = 7000000;
Query OK, 0 rows affected (0.00 sec)

mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 6291448    |
+---------------------------+------------+
1 rows in set (0.00 sec)
当前此参数的值并不发生变化，先退出，然后重新连进去
mysql> exit
Bye
[root@devdbc_stb root]# mysql
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 41 to server version: 5.0.37-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> show variables like '%sort_buffer_size%';
+---------------------------+------------+
| Variable_name             | Value      |
+---------------------------+------------+
| sort_buffer_size          | 7000000    |
+---------------------------+------------+
1 rows in set (0.00 sec)
新的参数值生效]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>640</wp:post_id>
		<wp:post_date>2010-02-03 12:00:12</wp:post_date>
		<wp:post_date_gmt>2010-02-03 12:00:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%8a%a8%e6%80%81%e4%bf%ae%e6%94%b9%e5%8f%82%e6%95%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="variables"><![CDATA[variables]]></category>
	</item>
	<item>
		<title>android&#29256;&#26412;&#30340;&#23458;&#25143;&#31471;&#21457;&#24067;&#20102;</title>
		<link>http://www.iceskysl.com/?p=643</link>
		<pubDate>Fri, 05 Feb 2010 00:55:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=643</guid>
		<description></description>
		<content:encoded><![CDATA[WP&#32456;&#20110;&#21457;&#24067;&#20102;android&#30340;&#23458;&#25143;&#31471;&#65292;&#20197;&#21518;&#21487;&#20197;&#38543;&#26102;&#21457;&#34920;&#21338;&#23458;&#20102;&#12290;
&#36825;&#20010;&#23458;&#25143;&#31471;&#36824;&#30495;&#19981;&#36182;&#12290;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>643</wp:post_id>
		<wp:post_date>2010-02-05 00:55:13</wp:post_date>
		<wp:post_date_gmt>2010-02-05 00:55:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="120"><![CDATA[&#23458;&#25143;&#31471;]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>Installing a New Textmate Theme</title>
		<link>http://www.iceskysl.com/?p=644</link>
		<pubDate>Fri, 05 Feb 2010 02:24:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=644</guid>
		<description></description>
		<content:encoded><![CDATA[To install a new theme, select one of the .tmTheme links listed below, download it to your desktop and double-click on the file. This will place it in ~/Library/Application Support/TextMate/Themes, at which point the new theme will appear in the list found in Preferences → Fonts &amp; Colors. This will also set it as the active theme. (Once the theme is installed, you may remove the .tmTheme from your desktop.)

Rails Envy TextMate Theme
<a href="http://railsenvy.com/2008/9/18/rails-envy-textmate-theme" target="_blank"> http://railsenvy.com/2008/9/18/rails-envy-textmate-theme</a>

User Submitted Themes
<a href="http://wiki.macromates.com/Themes/UserSubmittedThemes" target="_blank"> http://wiki.macromates.com/Themes/UserSubmittedThemes</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date>2010-02-05 02:24:02</wp:post_date>
		<wp:post_date_gmt>2010-02-05 02:24:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-a-new-textmate-theme</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="textmate"><![CDATA[Textmate]]></category>
		<category domain="post_tag" nicename="theme"><![CDATA[theme]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:comment>
			<wp:comment_id>488</wp:comment_id>
			<wp:comment_author><![CDATA[Buy xanax.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.webjam.com/xanax</wp:comment_author_url>
			<wp:comment_author_IP>212.227.29.41</wp:comment_author_IP>
			<wp:comment_date>2011-09-05 06:12:07</wp:comment_date>
			<wp:comment_date_gmt>2011-09-04 22:12:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Buy xanax....</strong>

Buy xanax....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Git TextMate Bundle</title>
		<link>http://www.iceskysl.com/?p=648</link>
		<pubDate>Fri, 05 Feb 2010 07:39:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=648</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate中已经集成了SVN的Bundle，使用起来非常方便，要用Git的话也可以装Bundle，方法如下：

<strong>Installation</strong>
<blockquote>mkdir -p ~/Library/Application\ Support/TextMate/Bundles
  cd ~/Library/Application\ Support/TextMate/Bundles
  git clone git://github.com/jcf/git-tmbundle Git.tmbundle</blockquote>

restart teatmate and it's done!

In the TextMate preferences, advanced tab, shell variables, set the TM_GIT variable to point to your installation of git (ie /usr/local/bin/git)
Many shortcuts are available from the Git-shortcut (Ctrl-Shift-G). Subversion commands are Command-Option-g. Less frequent commands are accessed via the menu.
Update your bundle by running the “Update Git Bundle” command.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>648</wp:post_id>
		<wp:post_date>2010-02-05 07:39:24</wp:post_date>
		<wp:post_date_gmt>2010-02-05 07:39:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-git-textmate-bundle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="post_tag" nicename="bundle"><![CDATA[Bundle]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[Textmate]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:comment>
			<wp:comment_id>489</wp:comment_id>
			<wp:comment_author><![CDATA[greek yogurt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://eltule.org/greek-yogurt-or-regular-yogurt</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 09:00:47</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 01:00:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>greek yogurt...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>490</wp:comment_id>
			<wp:comment_author><![CDATA[Wireless Portable Sound Syste]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.parchain.co.id/parchain.product/180/433/id/Wireless-Portable-Sound-System.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 12:22:09</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 04:22:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wireless Portable Sound Syste...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>491</wp:comment_id>
			<wp:comment_author><![CDATA[Cheap Louis Vuitton Handbags]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cheaplouisvuittonhandbags.us/</wp:comment_author_url>
			<wp:comment_author_IP>208.115.215.242</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 23:07:53</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 15:07:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Discount Louis Vuitton Handbags...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>492</wp:comment_id>
			<wp:comment_author><![CDATA[cam chat]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.the-chatting-room.com/camchat/index.html</wp:comment_author_url>
			<wp:comment_author_IP>174.88.150.6</wp:comment_author_IP>
			<wp:comment_date>2011-09-27 21:58:04</wp:comment_date>
			<wp:comment_date_gmt>2011-09-27 13:58:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cam chat...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>493</wp:comment_id>
			<wp:comment_author><![CDATA[Cheap wedding dresses]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressiton.com</wp:comment_author_url>
			<wp:comment_author_IP>126.15.5.115</wp:comment_author_IP>
			<wp:comment_date>2011-09-28 08:12:10</wp:comment_date>
			<wp:comment_date_gmt>2011-09-28 00:12:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap wedding dresses...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>494</wp:comment_id>
			<wp:comment_author><![CDATA[Replique sacs]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.replique-sac.com/</wp:comment_author_url>
			<wp:comment_author_IP>208.115.215.242</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 11:55:55</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 03:55:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Replique sacs...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>495</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.product&amp;catID=223&amp;productID=628&amp;p=1&amp;title=Total-Service</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 13:08:05</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 05:08:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>beli cctv...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>496</wp:comment_id>
			<wp:comment_author><![CDATA[seo indonesia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/SEO-Blog/Gunakan-jasa-SEO-atau-Belajar-SEO-sendiriya.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 14:57:45</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 06:57:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>konsultan seo...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>497</wp:comment_id>
			<wp:comment_author><![CDATA[real estate Fredericksburg]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://realestatelistingsfredericksburg.com/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 17:54:11</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 09:54:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>real estate listings Fredericksburg...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>498</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.134</wp:comment_author_IP>
			<wp:comment_date>2011-10-01 06:04:44</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 22:04:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren outlet...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>499</wp:comment_id>
			<wp:comment_author><![CDATA[Free Painless Houston tattoo removal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://free-tattoo-removal-centers.com/free-tattoo-removal-in-houston-tx/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 08:52:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 00:52:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Free Painless Houston tattoo removal...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>500</wp:comment_id>
			<wp:comment_author><![CDATA[free professional kids swimming lessons]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://free-swimming-lessons.com/privacy-policy/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 11:28:48</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 03:28:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>free professional kids swimming lessons...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>501</wp:comment_id>
			<wp:comment_author><![CDATA[Listing no credit check apartments in Houston]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://badcreditapartments.net/apartmentguide/rent-in-houston-with-bad-credit-broken-lease-or-misdemeanor/houston/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 13:01:31</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 05:01:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Listing no credit check apartments in Houston...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>502</wp:comment_id>
			<wp:comment_author><![CDATA[adult christian dating]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://zazts.com</wp:comment_author_url>
			<wp:comment_author_IP>64.186.147.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-09 05:41:20</wp:comment_date>
			<wp:comment_date_gmt>2011-10-08 21:41:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>women seeking men...</strong>

[...]The Git TextMate Bundle[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Visor for OSX，随处调出Terminal</title>
		<link>http://www.iceskysl.com/?p=650</link>
		<pubDate>Fri, 05 Feb 2010 08:03:45 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=650</guid>
		<description></description>
		<content:encoded><![CDATA[如果你和我一样经常使用终端程序，这个小程序一定可以帮到你。他能将终端窗口变成类似雷神或CS那样的下拉窗口，非常酷。
可以从这里下载 http://visor.binaryage.com/
这个软件需要SIMBL ，如果你没有安装，要先安装这个。
<a href="http://www.culater.net/software/SIMBL/http://www.culater.net/software/SIMBL/SIMBL.php">http://www.culater.net/software/SIMBL/SIMBL.php</a>
<blockquote>SIMBL (SIMple Bundle Loader) - pronounced like "symbol" or "cymbal" - enables hacks and plugins. For instance, SIMBL enables PithHelmet to enhance Safari.</blockquote>
之后将下载下来的文件解压，将解压后的文件拷贝至/Library/Application Support/SIMBL/Plugins，之后再重新启动你的终端你就可以看到效果了。 默认的快捷启动键是Ctrl+`
visor：<a href=" http://visor.binaryage.com/"> http://visor.binaryage.com/</a>

<strong>Installation</strong>


<blockquote>Install SIMBL and make sure you have latest SIMBL 0.9.x
Place Visor.bundle into ~/Library/Application Support/SIMBL/Plugins (create this directory if it does not exist)
Relaunch Terminal.app - You should now see the Visor Status Menu Item
Configure your keyboard trigger by selecting the Visor Status Menu Item -> Visor Preferences ... and edit your keyboard hot-key
You can now trigger Visor with your hot-key from any application to get an instant terminal session.

To hide Visor, you can either:
re-trigger with your key-combo
optionally you can click off of the Visor window</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>650</wp:post_id>
		<wp:post_date>2010-02-05 08:03:45</wp:post_date>
		<wp:post_date_gmt>2010-02-05 08:03:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visor-for-osx%ef%bc%8c%e9%9a%8f%e5%a4%84%e8%b0%83%e5%87%baterminal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="post_tag" nicename="visor"><![CDATA[Visor]]></category>
	</item>
	<item>
		<title>mysql实例优化效果</title>
		<link>http://www.iceskysl.com/?p=652</link>
		<pubDate>Fri, 05 Feb 2010 08:49:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=652</guid>
		<description></description>
		<content:encoded><![CDATA[前段时间写了一篇《实例优化mysql配置文件my.cnf》，这几天看到效果非常明显，别的不说，单mysql cache_hits就很不错（之前竟然没注意到这个参数）
<blockquote># Increase query_cache_size from 0 to 128M
query_cache_size=128M
# Increase query cache limit from 1048576 to 2M
query_cache_limit=2M</blockquote>
看到效果很明显，如下是munin的监控图：
<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/02/li127-248-mysql_queries-week.png"><img class="alignleft size-medium wp-image-653" title="li127-248-mysql_queries-week" src="http://iceskysl.1sters.com/wp-content/uploads/2010/02/li127-248-mysql_queries-week-300x205.png" alt="" width="300" height="205" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>652</wp:post_id>
		<wp:post_date>2010-02-05 08:49:22</wp:post_date>
		<wp:post_date_gmt>2010-02-05 08:49:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%ae%9e%e4%be%8b%e4%bc%98%e5%8c%96%e6%95%88%e6%9e%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="query_cache_size"><![CDATA[query_cache_size]]></category>
	</item>
	<item>
		<title>Rails 3.0: Beta release &amp; Rails3 Tutorials</title>
		<link>http://www.iceskysl.com/?p=655</link>
		<pubDate>Fri, 05 Feb 2010 09:52:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=655</guid>
		<description></description>
		<content:encoded><![CDATA[我已经记不清距离上次大版本更新时什么时间了，好像很久很久了，自从去年（具体时间忘记了）Merb和Rails宣布合并推出Rails3后，N多人就在期待其发布的一天，终于，来了！

这次升级需要新装很多的gem，如下：
<blockquote>gem install tzinfo builder memcache-client rack rack-test rack-mount erubis mail text-format thor bundler i18n
gem install rails --pre</blockquote>
期间遇到一个错误：
<blockquote>Due to a rubygems bug, you must uninstall all older versions of bundler for 0.9 to work</blockquote>
然后这边有N多关于Rails3的资料供参考：
<h2>Rails 3 Tutorials &amp; Blog Posts</h2>
<ul>
	<li><a href="http://medevyoujane.com/blog/2009/12/17/edging-your-way-towards-ruby-191-and-rails-30pre.html">Edging your way towards Ruby 1.9.1 and Rails 3.0pre</a></li>
	<li><a href="http://zaa.ch/past/2009/5/23/unobtrusive_javascript_in_rails_3/" target="_blank">Unobtrusive JavaScript in Rails 3</a> by Zach Carter</li>
	<li><a href="http://afreshcup.com/2009/05/11/seed-data-in-rails-3/">A Fresh Cup: Seed Data in Rails 3</a> tutorial – feature summary + code example by Mike Gunderloy.</li>
	<li><a href="http://www.slideshare.net/mattetti/rails3-stepping-off-of-the-golden-path?type=presentation" target="_blank">Rails3: Stepping off of the golden path</a> slides by Matt Aimonetti</li>
	<li><a href="http://rails.webintellix.com/index.php/2009/05/rails-magazine-releases-pdf-version-of-special-edition-railsconf-2009-report/" target="_blank">Rails Magazine – RailsConf 2009 Edition</a> page 5 has a section called <em>The Unofficial Guide to What’s New in Rails 3</em> by Rupak Ganguly</li>
	<li><a href="http://www.jzlabs.com/2009/05/12/railsconf-2009-notes/" target="_blank">Jason Ting’s RailsConf 2009 Notes</a> includes some basic notes about Rails 3</li>
	<li><a href="http://www.pathf.com/blogs/2009/05/railsconf-09-after-the-railsconfening/" target="_blank">Noel Rappin: Railsconf 09 – After the RailsConfening</a> article</li>
	<li><a href="http://yehudakatz.com/2009/05/08/railsconf-wrapup/">Yehuda Katz: Railsconf Wrapup</a> blog – contains links to jQuery talk by Katz at RailsConf 09</li>
	<li><a href="http://oscardelben.com/articles/2009/12/06/how-to-test-rails-3.html" target="_blank">How to Begin Playing With Rails 3</a> by Oscar Del Ben</li>
	<li><a href="http://www.engineyard.com/blog/2009/my-five-favorite-things-about-rails-3/" target="_blank">My Five Favorite Things About Rails 3</a> by Yehuda Katz</li>
	<li><a href="http://yehudakatz.com/2009/07/19/rails-3-the-great-decoupling/" target="_blank">Rails 3: The Great Decoupling</a> by Yehuda Katz</li>
	<li><a href="http://yehudakatz.com/2009/06/11/rails-edge-architecture/" target="_blank">Rails Edge Architecture</a> by Yehuda Katz</li>
	<li><a href="http://yehudakatz.com/2009/08/26/how-to-build-sinatra-on-rails-3/" target="_blank">How to Build Sinatra on Rails 3</a> by Yehuda Katz</li>
</ul>
<h2>Rails 3 Presentations &amp; Conference Talks</h2>
<ul>
	<li><a href="http://www.oreillynet.com/pub/e/1338" target="_blank">Yehuda: What to Expect in Rails 3.0</a> webcast recording</li>
	<li><a href="http://scotland-on-rails.s3.amazonaws.com/1A04_YehudaKatz-SOR.mp4">Scotland on Rails: Yehuda on Rails &amp; Merb Merge</a> video. For more <a href="http://scotlandonrails.com/" target="_blank">Scotland on Rails</a> videos, check out <a href="http://www.rubyinside.com/scotland-on-rails-presentations-now-online-27-awesome-videos-1799.html" target="_blank">this Ruby Inside post</a>.</li>
	<li><a href="http://www.rails-underground.com/2009/05/yehuda-on-rails-3-and-beyond.html" target="_blank">Yehuda Katz on Rails 3 and beyond</a> interview by Mark Coleman</li>
	<li><a href="http://vimeo.com/4611379" target="_blank">RailsConf: Yehuda – The Russian Doll Pattern</a> video</li>
	<li><a href="http://railsconf.blip.tv/file/2081411" target="_blank">RailsConf 09: DHH Keynote</a> video – DHH previews unobtrusive javascript, default escaping &amp; more.</li>
</ul>
<h2>Rails 3 Books</h2>
<ul>
	<li><a href="http://www.manning.com/katz/" target="_blank">Rails 3 in Action</a> by Yehuda Katz and Mike Gunderloy. Currently available is their Early Access Edition, which gives you access to chapters as they are written.</li>
	<li><a href="http://www.apress.com/book/view/9781430224334" target="_blank">Beginning Rails 3</a> by Jeffrey Allan Hardy , Cloves Carneiro Jr. &amp; Rida Al Barazi</li>
</ul>
<h2>Rails 3 Commentary</h2>
<ul>
	<li><a href="http://www.internetnews.com/dev-news/article.php/3819116/Rails+3+Gets+Supersized+With+Merb.htm" target="_blank">Internet News: Rails 3 Gets Supersized With Merb</a></li>
	<li><a href="http://www.eweek.com/c/a/Application-Development/Rubyists-Unite-Ruby-on-Rails-and-Merb-to-Merge-in-Rails-3/" target="_blank">eWeek: Rubyists Unite Ruby on Rails and Merb to Merge in Rails 3</a></li>
	<li><a href="http://www.cio.com.au/article/301952/rails_3_add_security_enhancement">CIO: Rails 3 to add security enhancement</a></li>
	<li><a href="http://www.eweek.com/c/a/Application-Development/Rubyists-Unite-Ruby-on-Rails-and-Merb-to-Merge-in-Rails-3/" target="_blank"></a><a href="http://yehudakatz.com/2008/12/23/rails-and-merb-merge/" target="_blank">Yehuda Katz: Rails and Merb Merge</a></li>
	<li><a href="http://yehudakatz.com/2008/12/23/rails-and-merb-merge/" target="_blank"></a><a href="http://weblog.rubyonrails.org/2008/12/23/merb-gets-merged-into-rails-3" target="_blank">RubyOnRails.org: Rails + Merb Merge Announcement</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>655</wp:post_id>
		<wp:post_date>2010-02-05 09:52:19</wp:post_date>
		<wp:post_date_gmt>2010-02-05 09:52:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-3-0-beta-release-rails3-tutorials</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails-3-0"><![CDATA[rails 3.0]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://scotland-on-rails.s3.amazonaws.com/1A04_YehudaKatz-SOR.mp4
286351404
video/mp4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>503</wp:comment_id>
			<wp:comment_author><![CDATA[Wireless Portable Sound Syste]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.parchain.co.id/parchain.product/180/433/id/Wireless-Portable-Sound-System.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 12:43:25</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 04:43:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wireless Portable Sound Syste...</strong>

[...]Rails 3.0: Beta release &amp; Rails3 Tutorials[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Balsamiq Mockups，理想的原型设计工具</title>
		<link>http://www.iceskysl.com/?p=657</link>
		<pubDate>Mon, 22 Feb 2010 02:39:26 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=657</guid>
		<description></description>
		<content:encoded><![CDATA[由于经常要讨论产品，包括web和手机(Aandroid，Iphone）的产品原型设计，尝试过很多的原型设计工具，例如Axure等，后来换了mac book，就一直找不到合适的原型设计工具，就一直在Google Doc中直接draw，其做了很多无用功。
比较偶然的机会看到Balsamiq Mockups这个软件，和Pixelmator一样，是个人开发者（意大利人Peldi）开发的产品，其地址为http://www.balsamiq.com/ ，在其提供的demo页面上试了下http://www.balsamiq.com/demos/mockups/Mockups.html，效果很好，符合我的预期。
虽然是由个人设计的，但功能却一点不弱于其他大牌的原型设计工具：
操作方面，拖拽，控件分组，甚至元素之间的对齐都做得很贴心；
预制了很多界面元素，从简单的输入框，下拉框，浏览器主要元素，到经常用得到的导航条，日历，表格，到复杂的Tag Cloud，Cover Flow, 地图，WYSWYG的格式工具栏等，有了这些不用从头画起，往往比用白板都快；
界面元素的修改很简单，比如导航条的几个标签页的label，就是用逗号分隔的文字，下拉框的选项就是分行的文字；
使用xml语言来记录和保存界面元素和布局，
这使得每个设计都能被很好得放进SVN，Git，和CVS等工具中进行管理和跟踪；
可以设计复杂的界面元素，保存后，以后可以重复使用（包括修改）；
可以将设计导出成PNG格式的图片；
可以用命令行进行导出操作，这样就能让我写个脚本，从svn里checkout某个目录下的所有设计文件后，导出图片，打包后用邮件发到项目经理，工程师甚至客户那；
跨平台，Balsamiq Mokups是用Flex和Air实现的，所以在Mac OS, Linux和Windows下都能使用；
不仅仅有桌面版本，还有能集成在Confluence，JIRA，和XWiki中的版本，使得异地在线协作更方便有效。

以下是关于Balsamiq Mockups的一些特点：
易操作：从 Balsamiq Mockups 自带的元素里可以很方便地拖拽，效果图轻易形成；元素对齐很贴心；
可偷懒：根据 Balsamiq Mockups 提供的 Wiki 风格的代码规则，画图时可以「偷懒」，输入文本符号则能生成图标。因此相比其它繁琐的软件操作，Balsamiq Mockups 也能更快地完成画图任务。
控件足：Balsamiq Mockups 软件包括 50 多个控件， 70 多个图标。基本自带了所有常用的小控件，并在导航处进行分类；图标设计赏心悦目。要是 Balsamiq Mockups 允许用户导入自定义的控件就更好了，当然现有的也足够了 -
新风格：让人眼前一亮的涂鸦风格，很能还原手绘效果；
可中文：在菜单栏 View 里将 Use System Fonts 勾上，就能完美支持中文输入（注：非 Balsamiq Mockups 中文版）；
其它点：Balsamiq Mockups 使用 xml 记录，方便移植、二次利用；可导出为 png 格式图片。

另外还有跨平台与多版本两个优点：
跨平台：Balsamiq Mockups 基于 Air ，因此能同时在 Windows、Mac OS 及 Linux 下使用；
多版本：包括桌面版本，以及集成于 Confluence、JIRA、XWiki、FogBugz 中的版本

软件可以从其网站上下载，其中桌面版本售价是$79。但作者非常厚道，提供了几种免费使用的方式：http://www.balsamiq.com/products/mockups/desktop

You can download Mockups for Desktop for free. Some of the features of the app, like saving and loading multiple mockups or linking mockups together can only get unlocked using a license key.
<img src="http://lh3.ggpht.com/_GiZR7A3zZ6s/S4Hu-KohUhI/AAAAAAAAGpM/mibP8JtGvi0/s400/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202010-02-22%20am10.40.13.png" alt="demo" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>657</wp:post_id>
		<wp:post_date>2010-02-22 02:39:26</wp:post_date>
		<wp:post_date_gmt>2010-02-22 02:39:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>balsamiq-mockups%ef%bc%8c%e7%90%86%e6%83%b3%e7%9a%84%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pm"><![CDATA[02. 产品设计 | PM]]></category>
		<category domain="post_tag" nicename="axure"><![CDATA[Axure]]></category>
		<category domain="post_tag" nicename="balsamiq-mockups"><![CDATA[Balsamiq Mockups]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1"><![CDATA[原型设计]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>504</wp:comment_id>
			<wp:comment_author><![CDATA[wayne_deng]]></wp:comment_author>
			<wp:comment_author_email>wayne.deng.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.waynedeng.com</wp:comment_author_url>
			<wp:comment_author_IP>123.116.193.157</wp:comment_author_IP>
			<wp:comment_date>2010-02-22 05:18:18</wp:comment_date>
			<wp:comment_date_gmt>2010-02-22 05:18:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MockFlow也不错的
http://www.mockflow.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.89.123.215</wp:comment_author_IP>
			<wp:comment_date>2010-02-22 15:08:24</wp:comment_date>
			<wp:comment_date_gmt>2010-02-22 15:08:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[已经收到免费的license

MockFlow的UI widget稍微多点～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Can’t connect to local MySQL server through socket 解决办法</title>
		<link>http://www.iceskysl.com/?p=661</link>
		<pubDate>Wed, 24 Feb 2010 05:24:14 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=661</guid>
		<description></description>
		<content:encoded><![CDATA[Rails启动后报错，ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/temp/mysql.sock’ (2)

1、先查看 /etc/rc.d/init.d/mysqld status 看看m y s q l 是否已经启动.
另外看看是不是权限问题.

2、确定你的mysql.sock是不是在那个位置，
mysql -u 你的mysql用户名 -p -S /var/lib/mysql/mysql.sock

3、试试：service mysqld start

4、如果是权限问题，则先改变权限 #chown -R mysql:mysql /var/lib/mysql

[root@localhost ~]# /etc/init.d/mysqld start
启动 MySQL： [ 确定 ]
[root@localhost ~]# mysql -uroot -p]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date>2010-02-24 05:24:14</wp:post_date>
		<wp:post_date_gmt>2010-02-24 05:24:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>can%e2%80%99t-connect-to-local-mysql-server-through-socket-%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="socket"><![CDATA[socket]]></category>
	</item>
	<item>
		<title>Download Ruby Enterprise Edition(REE)</title>
		<link>http://www.iceskysl.com/?p=663</link>
		<pubDate>Thu, 04 Mar 2010 00:53:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=663</guid>
		<description></description>
		<content:encoded><![CDATA[前段时间用上了Passenger ，尔后就看到很多的人推荐使用Ruby Enterprise Edition(REE)，今天得闲，试了一把。
Step 1: Download
Source code: <a href="http://rubyforge.org/frs/download.php/68719/ruby-enterprise-1.8.7-2010.01.tar.gz" target="_blank">version 1.8.7-2010.01</a>
Step 2: Install
Extract it:
tar xzvf ruby-enterprise-X.X.X.tar.gz
Run the installer (completely safe, none of your system files will be touched!):
./ruby-enterprise-X.X.X/installer
<div id="_mcePaste">Welcome to the Ruby Enterprise Edition installer</div>
<div id="_mcePaste">This installer will help you install Ruby Enterprise Edition 1.8.7-2010.01.</div>
<div id="_mcePaste">Don't worry, none of your system files will be touched if you don't want them</div>
<div id="_mcePaste">to, so there is no risk that things will screw up.</div>
<div id="_mcePaste">You can expect this from the installation process:</div>
<div id="_mcePaste">1. Ruby Enterprise Edition will be compiled and optimized for speed for this</div>
<div id="_mcePaste">system.</div>
<div id="_mcePaste">2. Ruby on Rails will be installed for Ruby Enterprise Edition.</div>
<div id="_mcePaste">3. You will learn how to tell Phusion Passenger to use Ruby Enterprise</div>
<div id="_mcePaste">Edition instead of regular Ruby.</div>
<div id="_mcePaste">Press Enter to continue, or Ctrl-C to abort.</div>
<blockquote>Welcome to the Ruby Enterprise Edition installerThis installer will help you install Ruby Enterprise Edition 1.8.7-2010.01.Don't worry, none of your system files will be touched if you don't want themto, so there is no risk that things will screw up.
You can expect this from the installation process:
1. Ruby Enterprise Edition will be compiled and optimized for speed for this     system.

2. Ruby on Rails will be installed for Ruby Enterprise Edition.

3. You will learn how to tell Phusion Passenger to use Ruby Enterprise     Edition instead of regular Ruby.
Press Enter to continue, or Ctrl-C to abort.</blockquote>
Step 3: Make Phusion Passenger use Ruby Enterprise Edition instead of regular Ruby
Follow the instructions that the Ruby Enterprise Edition installer gave you.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>663</wp:post_id>
		<wp:post_date>2010-03-04 00:53:29</wp:post_date>
		<wp:post_date_gmt>2010-03-04 00:53:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>download-ruby-enterprise-editionree</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="passenger"><![CDATA[Passenger]]></category>
		<category domain="post_tag" nicename="ree"><![CDATA[REE]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>506</wp:comment_id>
			<wp:comment_author><![CDATA[real estate listings Fredericksburg]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://realestatelistingsfredericksburg.com/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-10-01 00:55:33</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 16:55:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>real estate listings Fredericksburg...</strong>

[...]Download Ruby Enterprise Edition(REE)[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>507</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.product&amp;catID=215&amp;title=Line-Filter</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-10-04 14:08:43</wp:comment_date>
			<wp:comment_date_gmt>2011-10-04 06:08:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>beli cctv...</strong>

[...]Download Ruby Enterprise Edition(REE)[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>508</wp:comment_id>
			<wp:comment_author><![CDATA[penis enlargement]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ccacad.org</wp:comment_author_url>
			<wp:comment_author_IP>64.186.147.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-10 13:22:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 05:22:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>penis enlargement device...</strong>

[...]Download Ruby Enterprise Edition(REE)[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>509</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.142</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 14:39:25</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 06:39:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

[...]Download Ruby Enterprise Edition(REE)[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Border-radius: create rounded corners with CSS!</title>
		<link>http://www.iceskysl.com/?p=665</link>
		<pubDate>Fri, 05 Mar 2010 18:38:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=665</guid>
		<description></description>
		<content:encoded><![CDATA[W3C has offered some new options for borders in CSS3, of which one is border-radius. Both Mozila/Firefox and Safari 3 have implemented this function, which allows you to create round corners on box-items. This is an example:

Mozilla/Firefox and Safari 3 users should see a nicely rounded box, with a nicely rounded border.
The code for this example above is actually quite simple:
<blockquote></blockquote>
These different corners can also each be handled on their own, Mozilla has other names for the feature than the spec says it should have though, as it has f.i. -moz-border-radius-topright as opposed to -webkit-border-top-right-radius:

Mozilla/Firefox and Safari 3 users should see a box with a rounded left upper corner.
Mozilla/Firefox and Safari 3 users should see a box with a rounded right upper corner.
Mozilla/Firefox and Safari 3 users should see a box with a rounded left lower corner.
Mozilla/Firefox and Safari 3 users should see a box with a rounded right lower corner.
These are handled by / should be handled by:

<code>-moz-border-radius-topleft / -webkit-border-top-left-radius
-moz-border-radius-topright / -webkit-border-top-right-radius
-moz-border-radius-bottomleft / -webkit-border-bottom-left-radius
-moz-border-radius-bottomright / -webkit-border-bottom-right-radius</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>665</wp:post_id>
		<wp:post_date>2010-03-05 18:38:13</wp:post_date>
		<wp:post_date_gmt>2010-03-05 18:38:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>border-radius-create-rounded-corners-with-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pm"><![CDATA[02. 产品设计 | PM]]></category>
		<category domain="post_tag" nicename="border-radius"><![CDATA[Border-radius]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>510</wp:comment_id>
			<wp:comment_author><![CDATA[empangeni accommodation]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.babblingbrookbnb.co.za</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 07:32:16</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 23:32:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>empangeni bed and breakfast...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>511</wp:comment_id>
			<wp:comment_author><![CDATA[zimbali accommodation,zimbali self catering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.villazimbali.co.za/postinfo.html</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 12:55:54</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 04:55:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>zimbali accommodation,zimbali self catering...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>512</wp:comment_id>
			<wp:comment_author><![CDATA[beli cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.dealer&amp;cityID=6&amp;title=CPFOne-Dealer-Bandung</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 15:22:04</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 07:22:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>kamera cctv...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>513</wp:comment_id>
			<wp:comment_author><![CDATA[simons town self catering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.themilestone.co.za/gallery.htm</wp:comment_author_url>
			<wp:comment_author_IP>109.169.66.243</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 15:37:25</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 07:37:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>simons town self catering...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>514</wp:comment_id>
			<wp:comment_author><![CDATA[Cheap wedding dresses]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressiton.com</wp:comment_author_url>
			<wp:comment_author_IP>126.15.0.82</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 16:23:58</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 08:23:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cheap wedding dresses...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>515</wp:comment_id>
			<wp:comment_author><![CDATA[targeted traffic]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.6.148.146</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 18:43:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 10:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>page ranking service...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>516</wp:comment_id>
			<wp:comment_author><![CDATA[backlinks indexing]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://sme-webdesign.com/indexing-service-for-your-backlinks</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 02:44:42</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 18:44:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>backlinks indexing...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>517</wp:comment_id>
			<wp:comment_author><![CDATA[indexing backlinks]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://rlstevens.biz/indexing-backlinks</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 02:58:33</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 18:58:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>indexing backlinks...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>518</wp:comment_id>
			<wp:comment_author><![CDATA[Wireless Portable Sound Syste]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.parchain.co.id/parchain.product/180/433/id/Wireless-Portable-Sound-System.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 02:59:40</wp:comment_date>
			<wp:comment_date_gmt>2011-09-23 18:59:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wireless Portable Sound Syste...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>519</wp:comment_id>
			<wp:comment_author><![CDATA[financing a mortgage]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://financingamortgage.net/mortgage-cap/</wp:comment_author_url>
			<wp:comment_author_IP>24.241.251.248</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 10:05:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 02:05:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>financing a mortgage...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>520</wp:comment_id>
			<wp:comment_author><![CDATA[Ugg Outlet UK]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ugg-boots-outlet-online.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>208.115.215.242</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 10:26:27</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 02:26:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Ugg Outlet...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>521</wp:comment_id>
			<wp:comment_author><![CDATA[pathmark circular]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pathmarkweeklycircular.net/pathmark-circular-coupons/</wp:comment_author_url>
			<wp:comment_author_IP>66.30.175.148</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 15:49:45</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 07:49:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>pathmark circular...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>522</wp:comment_id>
			<wp:comment_author><![CDATA[purchase backlinks]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mehrdadzahed.com/why-do-we-buy-backlinks</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 19:29:34</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 11:29:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>purchase backlinks...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>523</wp:comment_id>
			<wp:comment_author><![CDATA[konsultan seo indonesia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/?format=feed&amp;moduleID=75</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 01:51:46</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 17:51:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>konsultan seo indonesia...</strong>

[...]Border-radius: create rounded corners with CSS![...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>rails multi database,在Rails中一次连接多个数据库</title>
		<link>http://www.iceskysl.com/?p=669</link>
		<pubDate>Sat, 06 Mar 2010 11:19:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=669</guid>
		<description></description>
		<content:encoded><![CDATA[有很多插件可以做这个事情，例如<a href="http://github.com/remi/use_db">use_db</a> ,<a href="http://magicmodels.rubyforge.org/magic_multi_connections/">magic_multi_connections</a>等等，但是也有更简单得方法，如下，2步就好了

1. 设置database的config
extradb_production:
adapter:     mysql
host:        localhost
username:    root
password:    blabla
database:    extradb_prod
2. 在相关得 Model 利用 estabilish_connection 去做连接即可
class lala &lt; ActiveRecord::Base
establish_connection :extradb_production
end]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date>2010-03-06 11:19:06</wp:post_date>
		<wp:post_date_gmt>2010-03-06 11:19:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-multi-database%e5%9c%a8rails%e4%b8%ad%e4%b8%80%e6%ac%a1%e8%bf%9e%e6%8e%a5%e5%a4%9a%e4%b8%aa%e6%95%b0%e6%8d%ae%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="multi"><![CDATA[multi]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Gem::Exception,update to rails 3.0 bate</title>
		<link>http://www.iceskysl.com/?p=672</link>
		<pubDate>Sat, 06 Mar 2010 13:35:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=672</guid>
		<description></description>
		<content:encoded><![CDATA[上次装完后发现rails命令没法使用，一直不晓得原因，就卸载了，今天又装了一次，然后运行下rails，看到
<blockquote>eoe:~ IceskYsl$ rails -v
/Library/Ruby/Site/1.8/rubygems.rb:334:in `bin_path': can't find executable rails for rails-3.0.0.beta (Gem::Exception)
	from /usr/bin/rails:19</blockquote>

看来还是有问题，看看都装了啥gems，如下
eoe:~ IceskYsl$ gem list

*** LOCAL GEMS ***

abstract (1.0.0)
actionmailer (3.0.0.beta, 2.3.5, 2.3.4, 2.2.2, 1.3.6)
actionpack (3.0.0.beta, 2.3.5, 2.3.4, 2.2.2, 1.13.6)
actionwebservice (1.2.6)
activemodel (3.0.0.beta)
activerecord (3.0.0.beta, 2.3.5, 2.3.4, 2.2.2, 1.15.6)
activeresource (3.0.0.beta, 2.3.5, 2.3.4, 2.2.2)
activesupport (3.0.0.beta, 2.3.5, 2.3.4, 2.2.2, 1.4.4)
奇怪，没看到railties，看来这个没装上，我再装一次。
eoe:~ IceskYsl$ sudo gem install railties --pre
Successfully installed railties-3.0.0.beta
1 gem installed
Installing ri documentation for railties-3.0.0.beta...
Installing RDoc documentation for railties-3.0.0.beta...
eoe:~ IceskYsl$ rails -v
Rails 3.0.0.beta

ok，可以了!

参考资料：
http://oscardelben.com/articles/2009/12/06/how-to-test-rails-3.html
http://adamfortuna.com/2010/02/06/getting-rails-3-beta-setup/
http://d.hatena.ne.jp/h-nakao/20100210/1265775935]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>672</wp:post_id>
		<wp:post_date>2010-03-06 13:35:57</wp:post_date>
		<wp:post_date_gmt>2010-03-06 13:35:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gemexceptionupdate-to-rails-3-0-bate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails3"><![CDATA[rails3]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6dcd43af58d41d912ed31464b5a5910d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ae6a0462cd9956b35c58e7dfcd76bb3f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fa87b8a2317c414a0bca384dcb1d1d06</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>524</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email>cash.zhao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.205.15.135</wp:comment_author_IP>
			<wp:comment_date>2010-03-16 04:12:04</wp:comment_date>
			<wp:comment_date_gmt>2010-03-16 04:12:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[应该是这个吧：

sudo gem install railties --pre]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Setup Redmine to send email using GMail</title>
		<link>http://www.iceskysl.com/?p=675</link>
		<pubDate>Mon, 15 Mar 2010 02:31:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=675</guid>
		<description></description>
		<content:encoded><![CDATA[Redmine是用Rails写的一套很不错的项目管理系统，其提供了诸多很方便实用的功能，诸如里程碑管理，BUG跟踪，代码库变更管理等等。
搭建以后在管理面板中测试邮件不通，主要原因是由于采用的Gmail的邮箱，于是找到一些解决方案，如下：
<strong>1. Install the action_mailer_optional_tls plugin</strong>
The action_mailer_optional_tls_plugin adds a TLS option to Redmine's emailing library, ActionMailer. TLS is a version of SSL which is required by GMail in order to send email.

To install this plugin, use the script/plugin command in your Redmine directory:
  ./script/plugin install git://github.com/collectiveidea/action_mailer_optional_tls.git

<strong>2. Configure your email.yml</strong>
# File: config/email.yml
production:
   delivery_method: :smtp
   smtp_settings:
     tls: true
     address: "smtp.gmail.com"
     port: 587
     domain: "www.YOURDOAMIN.com" # 'your.domain.com' for GoogleApps
     authentication: :plain
     user_name: "username@youdomain.com"
     password: "password"

<strong>3. Start up Redmine and test your Email</strong>
Next it's time to start up Redmine and to send a test email. Make sure that you start Redmine in the same mode as you configured above (e.g. production). To send a test email:
Login as an administrator
Go to the Administration panel
Go into the Settings and select the "Email notifications" tab
In the bottom right, click the link to "Send a test email"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date>2010-03-15 02:31:57</wp:post_date>
		<wp:post_date_gmt>2010-03-15 02:31:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setup-redmine-to-send-email-using-gmail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="action_mailer_optional_tls"><![CDATA[action_mailer_optional_tls]]></category>
		<category domain="post_tag" nicename="gmail"><![CDATA[Gmail]]></category>
		<category domain="post_tag" nicename="redmine"><![CDATA[Redmine]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>525</wp:comment_id>
			<wp:comment_author><![CDATA[back link building]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.6.152.71</wp:comment_author_IP>
			<wp:comment_date>2011-10-07 06:21:23</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 22:21:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>targeted traffic...</strong>

[...]Setup Redmine to send email using GMail[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>1sters.com域名成功转出到Godaddy</title>
		<link>http://www.iceskysl.com/?p=677</link>
		<pubDate>Tue, 16 Mar 2010 05:30:44 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=677</guid>
		<description></description>
		<content:encoded><![CDATA[终于收到邮件：
<blockquote>Congratulations! The transfer request for the following domain name(s) has been completed:
1STERS.COM</blockquote>

历尽很多次的交涉，希望和失望，气愤和感慨，我的域名1sters.com终于转出到Godaddy了，终于有了一个满意的结果。
期间发生了很多事情，大致提几个，域名开始是在万网的一个三级代理（之前网上认识的一个朋友）注册的，而他是在一个很不正规的，不靠谱的二级代理商注册的；后来我这个朋友不怎么上网，我差点续费无门丢失域名，还好联系到要到了他的三级代理的帐号，才一直在那个二级代理那边续费一直使用到今天。
但是越来越觉得不安全（从代理那边可以做任何事情），于是一直想转出，查了N多资料后得到的结论是：万网不是一个好说话的主，转出手续复杂的很。像我这个在代理注册的还得线转回万网，才可以办理转出手续，转出手续中包括邮寄N多证明材料，无语。
过程很复杂，我从开始操作得时候记录过一个Doc文档，内容很精彩，但是比较杂乱，等我有空了整理出来，这里说几个关节点：
1. 万网要求我必须将找注册得那个代理商将域名转回到万网我自己得ID上才可以办理转出；
2. 代理商以这个为理由，要收我200块钱手续费（BS一下），被我以正规理由否决后，立马提价到400，hoho，不欢而散（我肯定会说要投诉他）。
3.两边踢皮球，我没抱太大希望，一边寻找好得域名重新注册，一方面看是否又其他途径解决问题；
4.然后发现很多人提到可以去ICAAN投诉万网，于是按照网上得投诉范本，投诉了一次；
5.然后就被其他事忙忘了，自然我也注册了新得域名(ysler.com)备用；
6.N天后收到那个代理商转来得邮件，惊奇得发现投诉起作用了，ICAAN找了万网麻烦，万网就去找那个代理商得麻烦，以为代理商投诉得，自然最后就找到了我；
7.万网要我和代理商协调转回到万网，再给我办转出，协调结果，代理商坚持要我给100元手续费，再次被我否决，再次不欢而散；
8.我给万网和代理商发了邮件，阐述问题，并告诉他们如果在这样踢皮球得话，我会一直去ICCAN投诉（后来没时间投诉了，呵呵）
9.过了几天，邮件貌似生效了，万网一个客服给我邮件，发来了转移密码（我也没邮件身份证明材料等）；
10.喜，感觉去Godaddy办理转入（之前办理过一次，被万网拒绝转出了），然后给万网发邮件，说我得转出申请已经提交，尽快给我通过。
11.收到万网回复，说已经通过，13后将生效，然后等到14号发现还没成功，给Godaddy得support一封邮件，问问是咋回事；
12.不得不说，Godaddy得服务号很多，立即帮我查了原因，并告诉我现在需要5-7天得时间才能转过去；
13.再等，今天16号终于收到Godaddy的转出成功通知邮件，这个域名我终于放心了。

故事的梗概就是这样，期间很多次的交涉很有意思的，以后再分享，这里得出几个结论：
1.万网的很多手续都是人为设置的障碍；
2.万网很惧ICAAN的；
3.万网的服务质量提高了不少，但是还需要摆好心态，把自己的口碑做上去，现在的口碑很差了；
4.代理商的诸多的手续费之类的坚决不低头，不合理的就不给；
5.交涉过程需要做好功课，做到有理有据]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>677</wp:post_id>
		<wp:post_date>2010-03-16 05:30:44</wp:post_date>
		<wp:post_date_gmt>2010-03-16 05:30:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1sters-com%e5%9f%9f%e5%90%8d%e6%88%90%e5%8a%9f%e8%bd%ac%e5%87%ba%e5%88%b0godaddy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="1sters"><![CDATA[1sters]]></category>
		<category domain="post_tag" nicename="godaddy"><![CDATA[Godaddy]]></category>
		<category domain="post_tag" nicename="%e4%b8%87%e7%bd%91"><![CDATA[万网]]></category>
		<category domain="post_tag" nicename="%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba"><![CDATA[域名转出]]></category>
	</item>
	<item>
		<title>MySQL CONCAT</title>
		<link>http://www.iceskysl.com/?p=680</link>
		<pubDate>Sat, 20 Mar 2010 04:34:34 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=680</guid>
		<description></description>
		<content:encoded><![CDATA[MySQL CONCAT function is used to concatenate two strings to form a single string. Try out following example:
mysql> SELECT CONCAT('FIRST ', 'SECOND');
+----------------------------+
| CONCAT('FIRST ', 'SECOND') |
+----------------------------+
| FIRST SECOND               |
+----------------------------+
1 row in set (0.00 sec)

ie.
mysql -u eoewallpapers -p123456123 wallpapers -e 'set names 'utf8'; select CONCAT(base_url,"400",title) from photos where state > 10 ' > photos_400.txt]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date>2010-03-20 04:34:34</wp:post_date>
		<wp:post_date_gmt>2010-03-20 04:34:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-concat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="concat"><![CDATA[concat]]></category>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>天翼工厂的APIs是个思路，因缺失根基使得其只有华丽的外表</title>
		<link>http://www.iceskysl.com/?p=683</link>
		<pubDate>Sun, 21 Mar 2010 14:36:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=683</guid>
		<description></description>
		<content:encoded><![CDATA[以前有听人说过电线的天翼工厂（天翼空间）是华为和中兴搭建的，其<a href="http://api.189works.com/">APIs</a>的好棒～今天得闲，过去看了一眼，第一眼看上去，确实很不错，点了几个仔细看了看后发现其实只是一个面子工程，华丽的外表下没有多少实质性的东西，不外乎就是把市面上可以看到的API仔细的罗列了一边基本信息（和古老的公司黄页有点想象），但是其连基本信息都没提供全，越看越觉得差劲！
APIs的价值在哪里？不外乎是提供数据接口，进而指导开发者进行开发和实战，最终能培养开发者，产生好的内容（应用），但是这是一个从基础开始的过程，需要不断的培养和引导，但是你罗列一堆apis价值在哪里，不外乎可以给领导看上去量大，多！呵呵，KPI？
我们后面也会做这个方面的事情，但是我们思路肯定和这个不一样，切入点也不一样，我们会从一个或者几个API开始，这些API需要是成熟的，或者实际自己可控的，对开发者进行1-3轮的培养，让其熟悉这个概念和使用流程，然后还会总结开发一些通用的jar包简化开发，然后再引入其他第三方的apis，这个时候才是积累出成果的时候，天翼工厂的做法很急功近利！仔细分析，也是不难理解的，他们缺少大量的开发者，不像eoe已经通过教程，<a href="http://www.eoeandroid.com/">eoeAndroid社区</a>和开发者建立了很良好的信任关系，可以持续的培养和引导，这也就是eoe做的优势所在，如果我们开始做，一定做的比天翼好，而且我们做出来后，其产品可以在<a href="http://www.eoemarket.com/">eoeMarket</a>里直接发布，推荐～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>683</wp:post_id>
		<wp:post_date>2010-03-21 14:36:43</wp:post_date>
		<wp:post_date_gmt>2010-03-21 14:36:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a4%a9%e7%bf%bc%e5%b7%a5%e5%8e%82%e7%9a%84apis%e6%98%af%e4%b8%aa%e5%a5%bd%e6%80%9d%e8%b7%af%ef%bc%8c%e4%bd%86%e6%98%af%e5%81%9a%e7%9a%84%e5%be%88%e5%b7%ae%e5%8a%b2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="apis"><![CDATA[APIs]]></category>
		<category domain="post_tag" nicename="eoe"><![CDATA[eoe]]></category>
		<category domain="post_tag" nicename="eoeandroid"><![CDATA[eoeAndroid]]></category>
		<category domain="post_tag" nicename="eoemarket"><![CDATA[eoemarket]]></category>
		<category domain="post_tag" nicename="%e5%a4%a9%e7%bf%bc%e5%b7%a5%e5%8e%82"><![CDATA[天翼工厂]]></category>
	</item>
	<item>
		<title>为了不忘却的Google记忆</title>
		<link>http://www.iceskysl.com/?p=686</link>
		<pubDate>Tue, 23 Mar 2010 15:02:54 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=686</guid>
		<description></description>
		<content:encoded><![CDATA[北京时间2010年凌晨3点半，还没睡，看到Google Buzz里有人喊“还没睡的赶紧来见证这一刻，一辈子只有这么一次”，得知Google宣布了最终的决定，退出大陆市场，转战香港，这其实不像老美能想的出来的招，哪位高人指点过Google？
网上充裕着无数的论调和舆论，早就不能相信所谓的媒体和舆论，我们有着自己的思维和判断力，也无需辩论是非，也别抱着任何期盼！多了一份麻木，学会淡定，再淡定！
其实我很少用Google.cn，我生活在互联网，我的互联网没有国界～为了不忘却这个特殊的纪念日，我还是呢喃一篇，不要忘却Google的记忆！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>686</wp:post_id>
		<wp:post_date>2010-03-23 15:02:54</wp:post_date>
		<wp:post_date_gmt>2010-03-23 15:02:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ba%e4%ba%86%e4%b8%8d%e5%bf%98%e5%8d%b4%e7%9a%84google%e8%ae%b0%e5%bf%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
	</item>
	<item>
		<title>acts_as_taggable_on_steroids 与 will_paginate 的整合分页</title>
		<link>http://www.iceskysl.com/?p=688</link>
		<pubDate>Wed, 24 Mar 2010 07:07:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=688</guid>
		<description></description>
		<content:encoded><![CDATA[用了acts_as_taggable_on_steroid和will_paginate插件，发现不能分页，查找解决办法，如下得最方便：
options = Product.find_options_for_find_tagged_with(params[:tag_name],:order => "updated_at DESC").merge(:page => params[:page] ||1,:per_page =>20 )
@products = Product.paginate(options)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>688</wp:post_id>
		<wp:post_date>2010-03-24 07:07:25</wp:post_date>
		<wp:post_date_gmt>2010-03-24 07:07:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acts_as_taggable_on_steroids-%e4%b8%8e-will_paginate-%e7%9a%84%e6%95%b4%e5%90%88%e5%88%86%e9%a1%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="acts_as_taggable_on_steroids"><![CDATA[acts_as_taggable_on_steroids]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="will_paginate"><![CDATA[will_paginate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>expire_list_cache in cache_fu</title>
		<link>http://www.iceskysl.com/?p=690</link>
		<pubDate>Thu, 25 Mar 2010 06:15:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=690</guid>
		<description></description>
		<content:encoded><![CDATA[cache_fu在过期单个记录的时候很方便，但是对以那些列表分页的就有点弱了，没法过滤以制定前缀的key来过滤，所以变通下，需要用过loop来过滤，如下是个例子：

<code>#expire_list_cache
  def expire_caches
    Song.expire_cache(self.id)
    ApkFile.expire_cache(self.main_apk_file_id) if self.main_apk_file_id
    AppStat.expire_cache("app_stat#{self.id}")
    0.upto(PAGES) do |page|
      SongScreenshot.expire_cache("song_screenshots#{self.id}#{page}#{PER_PAGE}")
      Song.expire_cache("list_items_status_state:11#{"updated_at desc"}#{page}#{PER_PAGE}")
      Song.expire_cache("list_items_in_category_status_state:#{self.category_id}11#{"updated_at desc"}#{page}#{PER_PAGE}")
      Song.expire_cache("items_in_autthor:#{self.author_id}11#{"updated_at desc"}#{page}#{PER_PAGE}")
    end
  end</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2010-03-25 06:15:05</wp:post_date>
		<wp:post_date_gmt>2010-03-25 06:15:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expire_list_cache-in-cache_fu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cache_fu"><![CDATA[cache_fu]]></category>
		<category domain="post_tag" nicename="expire"><![CDATA[expire]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>MAC+iTerm定制目录显示颜色和提示符</title>
		<link>http://www.iceskysl.com/?p=692</link>
		<pubDate>Wed, 31 Mar 2010 04:34:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=692</guid>
		<description></description>
		<content:encoded><![CDATA[很简单,就是在.bash_profile下加了三行.
export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad

另外加了一行个性化提示符.
export PS1="\[\e[32;1;40m\]\u@\H \w \$ \[\e[0m\]"

相关的文章参见:
http://mac.linsheng.me/archives/530.html
http://www.ibm.com/developerworks/cn/linux/l-tip-prompt/tip01/
http://hi.baidu.com/rainfish_tju/blog/item/0f54458f849141f0513d9284.html

<strong>配置</strong>

那么应该怎样来配置成我喜欢的颜色呢？下面我们就来详细说一些这些配置。

~/.bash_profile是bash shell中当前登录用户的配置文件。bash是“终端”中默认的shell。

alias ls=”ls -G”是给”ls -G”起了一个别名，当执行ls时，就相当于执行了ls -G。

CLICOLOR是用来设置是否进行颜色的显示。CLI是Command Line Interface的缩写。
LSCOLORS是用来设置当CLICOLOR被启用后，各种文件类型的颜色。LSCOLORS的值中每两个字母为一组，分别设置某个文件类型的文字颜色和背景颜色。LSCOLORS中一共11组颜色设置，按照先后顺序，分别对以下的文件类型进行设置：

directory
symbolic link
socket
pipe
executable
block special
character special
executable with setuid bit set
executable with setgid bit set
directory writable to others, with sticky bit
directory writable to others, without sticky bit
LSCOLORS中，字母代表的颜色如下：

a 黑色
b 红色
c 绿色
d 棕色
e 蓝色
f 洋红色
g 青色
h 浅灰色
A 黑色粗体
B 红色粗体
C 绿色粗体
D 棕色粗体
E 蓝色粗体
F 洋红色粗体
G 青色粗体
H 浅灰色粗体
x 系统默认颜色
所以，如果我们想把目录显示成红色，就可以把LSCOLORS设置为bxfxaxdxcxegedabagacad就可以了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date>2010-03-31 04:34:48</wp:post_date>
		<wp:post_date_gmt>2010-03-31 04:34:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maciterm%e5%ae%9a%e5%88%b6%e7%9b%ae%e5%bd%95%e6%98%be%e7%a4%ba%e9%a2%9c%e8%89%b2%e5%92%8c%e6%8f%90%e7%a4%ba%e7%ac%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iterm"><![CDATA[iTerm]]></category>
		<category domain="post_tag" nicename="lscolors"><![CDATA[LSCOLORS]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_a775af8211a126c054a0aa564b077d60</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_41b852d92ab4e3c4df8acb7aa93a6672</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_480dde82ca588406056b47370d7cbd60</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3abd8e0b8cf20944d1e53a57ce378125</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0faa0350c12607c9792215786fe1fcee</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c26958ceb64b81880f7a90b271a54fc2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>526</wp:comment_id>
			<wp:comment_author><![CDATA[真相]]></wp:comment_author>
			<wp:comment_author_email>zhenxiang@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.193.167.1</wp:comment_author_IP>
			<wp:comment_date>2011-03-21 02:24:40</wp:comment_date>
			<wp:comment_date_gmt>2011-03-21 02:24:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没图没真相，你说了一大堆，谁知道啥样啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>解决升级mac OS 10.6.3后rails3无法启动的问题</title>
		<link>http://www.iceskysl.com/?p=694</link>
		<pubDate>Thu, 01 Apr 2010 06:01:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=694</guid>
		<description></description>
		<content:encoded><![CDATA[昨晚看hero的时候顺带update到mac OS 10.6.3，早上重启机器安装成功，发现rails3无法启动，报：
/Library/Ruby/Site/1.8/rubygems.rb:334:in `bin_path': can't find executable rails for rails-3.0.0.beta (Gem::Exception)
from /usr/bin/rails:19

这个错误我之前安装rails3的时候遇到过，解决如下：
1.先尝试下重新安装rails
IceskYsl@eoe /svnroot/eoe/dev/rails/eoelogs $ sudo gem install rails --pre
Password:
Successfully installed treetop-1.4.5
1 gem installed
Installing ri documentation for treetop-1.4.5...
Installing RDoc documentation for treetop-1.4.5..
发现多了个treetop的gem，查查是啥：
<blockquote>Treetop is a language for describing languages. Combining the elegance of Ruby with cutting-edge parsing expression grammars, it helps you analyze syntax with revolutionarily ease.</blockquote>

再次执行rails，发现
/Library/Ruby/Site/1.8/rubygems.rb:334:in `bin_path': can't find executable rails for rails-3.0.0.beta (Gem::Exception)
        from /usr/bin/rails:19

还是不行，那就是railties的问题了，重新装下
IceskYsl@eoe /svnroot/eoe/dev/rails/eoelogs $ sudo gem  install railties --pre
Successfully installed railties-3.0.0.beta
1 gem installed
Installing ri documentation for railties-3.0.0.beta...
Installing RDoc documentation for railties-3.0.0.beta...
IceskYsl@eoe /svnroot/eoe/dev/rails/eoelogs $ rails -v
Rails 3.0.0.beta

OK，可以了～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>694</wp:post_id>
		<wp:post_date>2010-04-01 06:01:38</wp:post_date>
		<wp:post_date_gmt>2010-04-01 06:01:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3%e5%8d%87%e7%ba%a7mac-os-10-6-3%e5%90%8erails3%e6%97%a0%e6%b3%95%e5%90%af%e5%8a%a8%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="10-6-3"><![CDATA[10.6.3]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="rails3"><![CDATA[rails3]]></category>
		<category domain="post_tag" nicename="railties"><![CDATA[railties]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>在rails下实现多线程下载和断点续传</title>
		<link>http://www.iceskysl.com/?p=696</link>
		<pubDate>Sat, 17 Apr 2010 12:01:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=696</guid>
		<description></description>
		<content:encoded><![CDATA[最近一个项目用到了断点续传的需求，找了一些资料，
ror下文件下载是通过send_file完成的，但是如果使用多线程并支持断点续传的客户端（FlashGet等），send_file是不能正确工作的，原因在于，send_file函数没有对HTTP协议的Range头做相应的支持，并且也不支持HTTP/1.1 206 Partial Content相应
我修改了send_file函数，并做了一个plugin 将起解压到vendor/plugins/就可以了
（必要的地方我都写了注释，欢迎大家提出建议和意见）
记录一下相关的code：
 <pre class="brush:ruby">
module ActionController
  module Streaming
    protected
      def send_file(path, options = {})
        raise MissingFile, "Cannot read file #{path}" unless File.file?(path) and File.readable?(path)

        options[:length]   ||= File.size(path) # 文件长度
        options[:filename] ||= File.basename(path) # 文件名称

        options[:from] ||= 0 # 首偏移量（从哪里开始下载）
        options[:to] ||= options[:length] # 结束位置

        m_send_file_headers! options # 设置必要的 http 头

        @performed_render = false

        if options[:stream]
          render :status => options[:status], :text => Proc.new { |response, output|
            logger.info "Streaming file #{path}" unless logger.nil?
            len = options[:buffer_size] || 8192 # 原来的实现是4K， 不过APUE 上说，8K 要好一些，所有我调整了一下
            File.open(path, 'rb') do |file|
              file.seek(options[:from].to_i, IO::SEEK_SET) if options[:status] == 206 # 如果是多线程下载，则将流定位到首偏移量位置，从此处开始传输
              while buf = file.read(len)
                output.write(buf)
              end
            end
          }
        else
          logger.info "Sending file #{path}" unless logger.nil?
          File.open(path, 'rb') { |file| render :status => options[:status], :text => file.read }
        end
      end

    private
      def m_send_file_headers!(options)
        options.update(DEFAULT_SEND_FILE_OPTIONS.merge(options))
        [:length, :type, :disposition].each do |arg|
          raise ArgumentError, ":#{arg} option required" if options[arg].nil?
        end

        disposition = options[:disposition].dup || 'attachment'

        disposition <<= %(; filename="#{options[:filename]}") if options[:filename]

	# 先输出一些通用的HTTP头
        headers.update(
          'Content-Type'              => options[:type].strip,  # fixes a problem with extra '\r' with some browsers
          'Content-Disposition'       => disposition,
          'Content-Transfer-Encoding' => 'binary'
        )

	# 判断是否存在Range头，并使用正则表达式匹配 from 和 to
	# 如果匹配成功，则表示客户端使用多线程下载，同时一定要将http status 设置为 206
        if request.env['HTTP_RANGE'] =~ /bytes=(\d+)-(\d*)/ then # 注意后一个\d*，有一些多线程客户端并不完全符合http协议的要求（例如FlashGet）
          options[:from] = $1
          options[:to] = $2 unless $2.nil? # 如果客户端不标准，就将 to 设置为文件末尾

	  # 匹配成功，设置status 为 206
          options[:status] = 206

	  # 一下3个http 头仅在多线程下载是有用
          headers['Accept-Ranges'] = 'bytes'
          headers['content-Range'] = "bytes #{options[:from]}-#{options[:to]}/#{options[:length]}" # 格式为 bytes from-to/total
          headers['Content-Length'] = options[:to].to_i - options[:from].to_i + 1 # 注意 在多线程下载下，Content-Length 为传输的实际字节数（从0开始算起，所有要+1）
        else
	  # 非多现场下载
          options[:status] = 200 # 请求正常标志
          headers['Content-Length'] = options[:length] # 非多线程下载下，Content-Length为文件长度
        end

        headers['Cache-Control'] = 'private' if headers['Cache-Control'] == 'no-cache'
      end
  end
end
</pre>

用法：
 <pre class="brush:ruby">
class FileController 〈 ApplicationController
def download
#logger.debug request.env['Range'];
#    request.env.each do |key, value|
#      logger.debug key + '--------' + value
#    end
send_file 'public/jdk.tgz'
end
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date>2010-04-17 12:01:25</wp:post_date>
		<wp:post_date_gmt>2010-04-17 12:01:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%8b%e5%ae%9e%e7%8e%b0%e5%a4%9a%e7%ba%bf%e7%a8%8b%e4%b8%8b%e8%bd%bd%e5%92%8c%e6%96%ad%e7%82%b9%e7%bb%ad%e4%bc%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="%e6%96%ad%e7%82%b9%e7%bb%ad%e4%bc%a0"><![CDATA[断点续传]]></category>
		<wp:comment>
			<wp:comment_id>527</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.79.246.4</wp:comment_author_IP>
			<wp:comment_date>2010-04-18 01:08:25</wp:comment_date>
			<wp:comment_date_gmt>2010-04-18 01:08:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用Java实现断点续传(HTTP)
http://www.ibm.com/developerworks/cn/java/joy-down/index.html

Http多线程下载与断点续传分析
http://www.blogjava.net/huliqing/archive/2008/04/10/191725.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>528</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.79.246.4</wp:comment_author_IP>
			<wp:comment_date>2010-04-18 04:17:11</wp:comment_date>
			<wp:comment_date_gmt>2010-04-18 04:17:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[源码：
http://dev.rubyonrails.org/browser/trunk/actionpack/lib/action_controller/streaming.rb]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>529</wp:comment_id>
			<wp:comment_author><![CDATA[Mimosa]]></wp:comment_author>
			<wp:comment_author_email>mimosa@shareday.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.74.9.90</wp:comment_author_IP>
			<wp:comment_date>2010-06-22 04:33:41</wp:comment_date>
			<wp:comment_date_gmt>2010-06-22 04:33:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[使用后，通过Safari和谷歌浏览器下载到的文件扩展名都带.html是为什么？！

使用原生send_file下载后是：
attachments.zip

使用你的多线程后是：
attachments.zip.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用Nginx的X-Accel-Redirect在Rails中发送文件</title>
		<link>http://www.iceskysl.com/?p=709</link>
		<pubDate>Sun, 18 Apr 2010 02:06:38 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=708</guid>
		<description></description>
		<content:encoded><![CDATA[很多时候，我们会遇到需要一些业务逻辑（例如鉴权）后才将文件发送给客户端，那么如果将附件保存在public目录下将是非常不合适的，为了安全起见，你最好是将其保存在客户端无法直接访问的到的目录下，在处理完业务逻辑后，在将文件发送给客户端，Rails中提供了 send_XXXX来发送文件；

但是使用Rails的app server(thin,mongrel,passenger etc.)来发送文件（特别是大文件）一直都不是一个靠谱的方案，rails提供的send_file和send_data在理论上是可以工作的，但是其会阻塞进程，消耗内存，等等系列的弊端，而诸如apache,<a title="http://www.lighttpd.net" rel="nofollow" href="http://www.lighttpd.net">Lighttpd</a>,Nginx等web server在处理静态文件上有着得天独厚的优势。

于是聪明的人们就想，可以使用app server处理业务逻辑，然后再让web server来接管处理剩下的文件发送，所以就有了<a title="http://celebnamer.celebworld.ws/stuff/mod_xsendfile/" rel="nofollow" href="http://celebnamer.celebworld.ws/stuff/mod_xsendfile/">mod_xsendfile for Apache2</a>和<a title="http://www.lighttpd.net" rel="nofollow" href="http://www.lighttpd.net">Lighttp</a>中提供的X-Sendfile功能，Nginx自然也有类似的功能，只是其名字不叫X-Sendfile，而是叫<strong>X-Accel-Redirect</strong>（这个名字好像更容易理解）。  这里主要说Nginx，Apache的自行查阅资料，先了解下原理：
<ol>
	<li>The header must contain a <strong>URI</strong></li>
	<li>The location <strong>should</strong> be defined as <strong>internal;</strong> to prevent the client going directly to the URI</li>
</ol>
定义一段配置：
<pre><a href="/NginxHttpCoreModule#location">location</a> /protected/ {
  <a href="/NginxHttpCoreModule#internal">internal</a>;
  <a href="/NginxHttpCoreModule#root">root</a>   /some/path;
}</pre>
<pre>然后在你的应用中：</pre>
<pre>
<pre>add_header("X-Accel-Redirect: /protected/iso.img");</pre>
<pre>然后Nginx就接管了你的请求，发送<strong>/some/path/protected/iso.img</strong>这个文件。</pre>
<pre>原理了解了，看看如何使用更快捷，自然是用插件，有人写出了一个插件：<a href="http://github.com/goncalossilva/X-Accel-Redirect">X-Accel-Redirect</a></pre>
<pre>
<pre style="font: normal normal normal 12px/18px Consolas, Monaco, 'Courier New', Courier, monospace;">
<div id="_mcePaste">= X-Accel-Redirect</div>
This Rails plugin allows users to take advantage of nginx's X-Accel-Redirect header, similar to X-Send-File.</pre>
<pre style="font: normal normal normal 12px/18px Consolas, Monaco, 'Courier New', Courier, monospace;">== Install
You should install it as a plugin, running this command on your projects root directory:
     $ script/plugin install git://github.com/goncalossilva/X-Accel-Redirect.git</pre>
<pre style="font: normal normal normal 12px/18px Consolas, Monaco, 'Courier New', Courier, monospace;">== Usage
X-Accel-Redirect has an equivalent method to Rails &lt;i&gt;send_file&lt;/i&gt;, called &lt;b&gt;x_accel_redirect&lt;/b&gt;. Using is as easy as:
     x_accel_redirect "/path/to/file", :filename =&gt; "filename"
All &lt;i&gt;send_file&lt;/i&gt; options are available using this method. Now you can even let your old &lt;b&gt;:x_sendfile&lt;/b&gt; option since the plugin will discard it.</pre>
<div></div></pre>
<div id="_mcePaste"><strong>参考：</strong></div></pre>
<pre>
<pre><a href="http://wiki.nginx.org/NginxXSendfile">wiki.nginx.org/NginxXSendfile</a></pre>
<pre><span style="font-family: Georgia, Times, 'Times New Roman', serif; line-height: 21px; white-space: normal; color: #21211e; font-size: 13px;">
<h1 class="entry-title" style="outline-width: 0px; outline-style: initial; outline-color: initial; font-size: 14px; vertical-align: baseline; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; font-weight: bold; clear: both; text-transform: uppercase; letter-spacing: 2px; background-position: initial initial; background-repeat: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"><a href="http://www.motionstandingstill.com/using-nginx-to-send-files-with-x-accel-redirect/2008-09-03/">USING NGINX TO SEND FILES WITH X-ACCEL-REDIRECT</a></h1>
</span></pre>
<a href="http://spongetech.wordpress.com/2007/11/13/the-complete-nginx-solution-to-sending-flowers-and-files-with-rails/">The complete nginx solution to sending flowers and files with rails</a><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: small;"><span style="line-height: 19px; white-space: normal;"> </span></span></pre>
<pre><a href="http://bianbian.org/technology/linux/154.html">[译]利用Nginx的X-Accel-Redirect头实现下载控制（附带php和rails实例）</a></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>709</wp:post_id>
		<wp:post_date>2010-04-18 02:06:38</wp:post_date>
		<wp:post_date_gmt>2010-04-18 02:06:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8nginx%e7%9a%84x-accel-redirect%e5%9c%a8rails%e4%b8%ad%e5%8f%91%e9%80%81%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[publish a rails plugin:Nginx-X-Accel-Redirect]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/?p=715</wp:comment_author_url>
			<wp:comment_author_IP>74.207.242.64</wp:comment_author_IP>
			<wp:comment_date>2010-04-18 05:38:03</wp:comment_date>
			<wp:comment_date_gmt>2010-04-18 05:38:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 前面2个文章说到了在Rails中使用send_file实现断点续传《在rails下实现多线程下载和断点续传》和利用Nginx的X-Accel-Redirect实现发送大文件《使用Nginx的X-Accel-Redirect在Rails中发送文件》，项目中需要两个功能，就把他整合起来，同时发布到github上了，Nginx-X-Accel-Redirect。 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>publish a rails plugin:Nginx-X-Accel-Redirect</title>
		<link>http://www.iceskysl.com/?p=715</link>
		<pubDate>Sun, 18 Apr 2010 05:37:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=715</guid>
		<description></description>
		<content:encoded><![CDATA[前面2个文章说到了在Rails中使用send_file实现断点续传《<a href="iceskysl.1sters.com/?p=696">在rails下实现多线程下载和断点续传</a>》和利用Nginx的X-Accel-Redirect实现发送大文件《<a href="http://iceskysl.1sters.com/?p=708">使用Nginx的X-Accel-Redirect在Rails中发送文件</a>》，项目中需要两个功能，就把他整合起来，同时发布到github上了，<a href="http://github.com/IceskYsl/Nginx-X-Accel-Redirect">Nginx-X-Accel-Redirect</a>。

<strong>简介：</strong>
This Rails plugin allows users to take advantage of nginx’s X-Accel-Redirect header, similar to X-Send-File and Content-Range.

<strong>安装：</strong>
$ script/plugin install git://github.com/IceskYsl/Nginx-X-Accel-Redirect.git

<strong>使用：</strong>
x_accel_redirect "/path/to/file", :filename =&gt; "filename",:root=&gt;"/path/to/root"

详细信息：<a href="http://github.com/IceskYsl/Nginx-X-Accel-Redirect">github.com/IceskYsl/Nginx-X-Accel-Redirect</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>715</wp:post_id>
		<wp:post_date>2010-04-18 05:37:59</wp:post_date>
		<wp:post_date_gmt>2010-04-18 05:37:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>publish-a-rails-pluginnginx-x-accel-redirect</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>restful_authentication的加密真复杂</title>
		<link>http://www.iceskysl.com/?p=717</link>
		<pubDate>Sun, 18 Apr 2010 18:29:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=717</guid>
		<description></description>
		<content:encoded><![CDATA[以前一个项目中直接使用了restful_authentication，耶没怎么管生成的密码是啥样的，最近有几个系统要对接，需要统一用户，于是看了下restful_authentication的密码加密原则，发现其真是负责，一共分成下面几个部分：

1.定义了一个40位的REST_AUTH_SITE_KEY和一样我常量10的REST_AUTH_DIGEST_STRETCHES；

2.随机生成一个salt，其salt生成的规则是secure_digest(Time.now, (1..10).map{ rand.to_s })，而secure_digest是Digest::SHA1.hexdigest来生成的，也是40位。

3.将salt和原始密码，混合前面定义的REST_AUTH_SITE_KEY，反复加密REST_AUTH_DIGEST_STRETCHES次，得到最终的一个digest就是密码了。

够复杂～ 为啥搞这么负责呢，直接随机salt加双MD5不可逆加密也应该够用了吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>717</wp:post_id>
		<wp:post_date>2010-04-18 18:29:06</wp:post_date>
		<wp:post_date_gmt>2010-04-18 18:29:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restful_authentication%e7%9a%84%e5%8a%a0%e5%af%86%e7%9c%9f%e5%a4%8d%e6%9d%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>Paperclip，按日期划分目录方法</title>
		<link>http://www.iceskysl.com/?p=719</link>
		<pubDate>Tue, 27 Apr 2010 19:11:25 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=719</guid>
		<description></description>
		<content:encoded><![CDATA[一个项目用到了图片上传，不想自己写处理过程了，于是就找找可以使用的插件，看到了<a href="http://www.thoughtbot.com/projects/paperclip" target="_blank">Paperclip</a>，大概了看了下代码和使用介绍，比较简洁。

装上测试了下，整个过程比较顺利，很快就集成了需要的功能，但是具体到我的需求 上，花了点时间，我的需求也比较常见，就是大量的图片不能就存在一个文件夹下（否则这么多的小文件会带来很多的隐患），于是看代码找找其是否支持分目录的方案，我直接基本上都是按时间来分成诸如"2010/0428/"这样的目录，但是找了一圈，发现其提供了timestamp的一个变量，但是其结果比较糟糕，文件夹中还会根据当代的locale出现一些等下，不太合适；

然后看到其提供了一个：id_partition的参数，其意思是：
<blockquote># Returns the id of the instance in a split path form. e.g. returns

# 000/001/234 for an id of 1234.</blockquote>
<div id="_mcePaste">和我预期的差不多，如果决定这个数字还不够，可以修改其代码，如下：</div>
<div>
<div>def id_partition attachment, style_name</div>
<div>("%09d" % attachment.instance.id).scan(/\d{3}/).join("/")</div>
<div>end</div>
<div>你可以再加3位（这下应该足够了，千亿级别的了），分成四个等级</div>
<div>
<div>def id_partition attachment, style_name</div>
<div>("%12d" % attachment.instance.id).scan(/\d{3}/).join("/")</div>
<div>end</div>
</div>
<div></div>
<div>然后我们可以按照这个方式专辑实现安装日期类分目录的，代码如下：</div>
<div>
<div># Returns the timestamp of the instance in a split path form. e.g. returns</div>
<div># 2010/0428 for an id of 2010.04.28</div>
<div>def timestamp_partition attachment, style_name</div>
<div>attachment.instance_read(:updated_at).strftime("%Y/%m%d/")</div>
<div># ("%09d" % attachment.instance.id).scan(/\d{3}/).join("/")</div>
<div>end</div>
</div>
<div>然后给model加上：</div>
<div>
<div>has_attached_file :logo, :styles =&gt; {:thumb =&gt; '64x64&gt;', :small =&gt; "150x150&gt;" },</div>
<div>:url =&gt; "/upload/:class/:attachment/:timestamp_partition/:id/:style/:basename.:extension",</div>
<div>:path =&gt; ":rails_root/upload/:class/:attachment/:timestamp_partition/:id/:style/:basename.:extension"</div>
<div></div>
</div>
<div>其得到的结果类似：</div>
</div>
<div>[paperclip] Saving attachments.</div>
<div id="_mcePaste">[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/original/me.jpg</div>
<div id="_mcePaste">[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/thumb/me.jpg</div>
<div id="_mcePaste">[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/small/me.jpg</div>
[paperclip] Saving attachments.[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/original/me.jpg[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/thumb/me.jpg[paperclip] saving /svnroot/eoe/dev/rails/eoemarket/eoeMarket/upload/shops/logos/2010/0428//5/small/me.jpg

参考：

http://jimneath.org/2008/04/17/paperclip-attaching-files-in-rails/

http://cn.asciicasts.com/episodes/134-paperclip

http://github.com/thoughtbot/paperclip

http://gist.github.com/165072]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date>2010-04-27 19:11:25</wp:post_date>
		<wp:post_date_gmt>2010-04-27 19:11:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paperclip%ef%bc%8c%e6%8c%89%e6%97%a5%e6%9c%9f%e5%88%92%e5%88%86%e7%9b%ae%e5%bd%95%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_37c893479de08a96ea548458baeac71f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4e307438617c71bcf21e3b9d9bc224f3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5b476a97f07e85b7e70323d7d3d203cb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_362d1e30a36fc5a1c1434a008877a555</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d15b2b5c91fff1526ad4c6ae768a3407</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0c7b44d58cbcde7e2ae7a092f184f32a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ba1e4346e91766a75944cd0bb98f7413</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_bd09fd875b2156797513e2b980c2909a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>531</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.79.246.2</wp:comment_author_IP>
			<wp:comment_date>2010-04-27 19:18:58</wp:comment_date>
			<wp:comment_date_gmt>2010-04-27 19:18:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Migrating from attachment_fu to paperclip
http://jystewart.net/process/2009/01/migrating-from-attachment_fu-to-paperclip/
http://gist.github.com/53301]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>532</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.79.246.2</wp:comment_author_IP>
			<wp:comment_date>2010-04-27 19:35:28</wp:comment_date>
			<wp:comment_date_gmt>2010-04-27 19:35:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://wiki.github.com/thoughtbot/paperclip/helpful-links
http://thewebfellas.com/blog/2009/8/29/protecting-your-paperclip-downloads
http://infrastacks.com/?p=57]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在mac下通过USB给Motorola milestone充电</title>
		<link>http://www.iceskysl.com/?p=721</link>
		<pubDate>Tue, 04 May 2010 01:24:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=721</guid>
		<description></description>
		<content:encoded><![CDATA[带了一个moto 的 milestone回来，到家发现我的mac无法给他充电，查了好大一会，找到一个解决的办法，如下：

按照<a href="http://blog.gruby.com/2006/11/27/charging-a-motorola-razr-over-usb" target="_blank">http://blog.gruby.com/2006/11/27/charging-a-motorola-razr-over-usb</a>/ 这个文章说的，下载一个<a href="http://www.gruby.com/downloads/motocharger.app.zip" target="_blank">motocharger.app.zip</a> ，然后解压放在applications目录下，运行就可以充电了。

原因不晓，感兴趣的自己链过去了解～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date>2010-05-04 01:24:48</wp:post_date>
		<wp:post_date_gmt>2010-05-04 01:24:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8mac%e4%b8%8b%e9%80%9a%e8%bf%87usb%e7%bb%99motorola-milestone%e5%85%85%e7%94%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="milestone"><![CDATA[milestone]]></category>
		<category domain="post_tag" nicename="%e5%85%85%e7%94%b5"><![CDATA[充电]]></category>
		<wp:comment>
			<wp:comment_id>533</wp:comment_id>
			<wp:comment_author><![CDATA[robinsun]]></wp:comment_author>
			<wp:comment_author_email>haitao135@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.255.37.227</wp:comment_author_IP>
			<wp:comment_date>2010-05-13 06:01:42</wp:comment_date>
			<wp:comment_date_gmt>2010-05-13 06:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好厉害,果然可以了!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Encrypt &amp; Decrypt in ruby</title>
		<link>http://www.iceskysl.com/?p=723</link>
		<pubDate>Sat, 15 May 2010 05:58:00 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=723</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>require 'openssl'
require 'digest/sha1'
c = OpenSSL::Cipher::Cipher.new("aes-256-cbc")
c.encrypt
# your pass is what is used to encrypt/decrypt
c.key = key = Digest::SHA1.hexdigest("yourpass")
c.iv = iv = c.random_iv
e = c.update("crypt this")
e &lt;&lt; c.final
puts "encrypted: #{e}\n"
c = OpenSSL::Cipher::Cipher.new("aes-256-cbc")
c.decrypt
c.key = key
c.iv = iv
d = c.update(e)
d &lt;&lt; c.final
puts "decrypted: #{d}\n"</pre>
<pre></pre>
<pre>
<pre>require 'openssl'

keyfile = 'test.key'
certfile = 'test.crt'
data = "this is a test"

cert = OpenSSL::X509::Certificate.new(File.read(certfile))
key = OpenSSL::PKey::RSA.new(File.read(keyfile))
cipher = OpenSSL::Cipher::AES.new("128-CBC")

tmp = OpenSSL::PKCS7.encrypt([cert], data, cipher,
OpenSSL::PKCS7::BINARY)
p7 = OpenSSL::PKCS7::PKCS7.new(tmp.to_der)

## Data will be stored as string so emulate that here
p7s = p7.to_s

## Create pkcs7 object out of pkcs7 data
p7 = OpenSSL::PKCS7::PKCS7.new(p7s)
dec = p7.decrypt(key,cert)
print dec</pre>
</pre>
http://nunojob.wordpress.com/2008/12/08/rsa-encrypt-decrypt-in-ruby/

http://www.ruby-forum.com/topic/79319]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date>2010-05-15 05:58:00</wp:post_date>
		<wp:post_date_gmt>2010-05-15 05:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>encrypt-decrypt-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_d5c1f921eff3e0d5234bba7a3ebd8b15</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_16ea05e2dfbcb4f0b17cc753045bda6a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1b989ab3d14943d3b5da3386fd3069d3</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_234e1bd8eac092f1338a6f61bfb8f88a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>534</wp:comment_id>
			<wp:comment_author><![CDATA[seo company]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.6.152.71</wp:comment_author_IP>
			<wp:comment_date>2011-10-07 06:03:18</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 22:03:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>seo company...</strong>

[...]Encrypt &amp; Decrypt in ruby[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>535</wp:comment_id>
			<wp:comment_author><![CDATA[sex dating]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://zazts.com</wp:comment_author_url>
			<wp:comment_author_IP>64.186.147.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-09 04:28:17</wp:comment_date>
			<wp:comment_date_gmt>2011-10-08 20:28:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>sex dating...</strong>

[...]Encrypt &amp; Decrypt in ruby[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[natural penis enlargement]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ccacad.org</wp:comment_author_url>
			<wp:comment_author_IP>64.186.147.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 08:42:18</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 00:42:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>penis enlargement treatments...</strong>

[...]Encrypt &amp; Decrypt in ruby[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>537</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.142</wp:comment_author_IP>
			<wp:comment_date>2011-10-14 14:57:23</wp:comment_date>
			<wp:comment_date_gmt>2011-10-14 06:57:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

[...]Encrypt &amp; Decrypt in ruby[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在ruby中使用des aes rsa 加密解密等安全技术</title>
		<link>http://www.iceskysl.com/?p=726</link>
		<pubDate>Sat, 15 May 2010 07:02:22 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=726</guid>
		<description></description>
		<content:encoded><![CDATA[终结下来三大类

1,md5 sha1等消息摘要

用的很多，比较熟悉，只是用于验证消息的完整性，而消息本省的传递确是明码的，除非想登录密码md5，那要服务器客户端两边都有。如果需要传输数据给另一方，而这段数据又不希望明文发就得使用密钥了。

2，des等 ，私有密钥加密数据

只要约定密钥，然后在通过这个密钥对信息加密然后传送，另一方通过密钥对加密信息解密。

3，rsa ， 公钥和密钥结合的高级货

公钥不是大家都使用的，而是可以公开的，我开始误会错了搞不懂。通过rsa生成一对密钥，公钥和私钥，通过公钥加密的数据，只有私钥才能解开。那在网络中可以随便告诉客户端公钥，然后对方通过公钥加密后传加密信息，即使地球人都知道公钥也不要紧，因为私钥是保密的，解不开得到了加密信息也没办法。当然私钥加密后信息，公钥也可以解开，但速度上差成百上千倍。

ruby中通过openssl这个自带的标准库来实现。举了几个例子，des和rsa的

#!/usr/bin/ruby

require "openssl"
#doc see http://www.ruby-doc.org/stdlib/libdoc/openssl/rdoc/index.html

class Encrypt
    KEY = "aaaabbbb"
    IV = "aaaavvvv"
    def des_encrypt(plaintext)
        c = OpenSSL::Cipher::Cipher.new("DES-CBC")
        c.encrypt
        c.key = KEY
        c.iv = IV
        ret = c.update(plaintext)
        ret << c.final
    end

    def des_decrypt(encrypt_value)
        c = OpenSSL::Cipher::Cipher.new("DES-CBC")
        c.decrypt
        c.key = KEY
        c.iv = IV
        ret = c.update(encrypt_value)
        ret << c.final
    end

    def get_rsa_key
        rsa = OpenSSL::PKey::RSA.new(1024)
        # public_key only can public_encrypt or public_decrypt no private_encrypt nor private_decrypt
        #rsa.public_key.to_pem the class of return value is String
        [rsa.public_key.to_pem , rsa.to_pem]
    end

    def rsa_private_encrypt(value , rsakey)
        rsa = OpenSSL::PKey::RSA.new(rsakey)
        rsa.private_encrypt(value)
    end

    def rsa_private_decrypt(value , rsakey)
        rsa = OpenSSL::PKey::RSA.new(rsakey)
        rsa.private_decrypt(value)
    end

    def rsa_public_encrypt(value , publickey)
        rsa = OpenSSL::PKey::RSA.new(publickey)
        rsa.public_encrypt(value)
    end

    def rsa_public_decrypt(value , publickey)
       rsa = OpenSSL::PKey::RSA.new(publickey)
       rsa.public_decrypt(value)
    end
end

def testrun
    e = Encrypt.new
    text = "a secret message"
    puts "text:#{text}"
    value = e.des_encrypt(text)
    puts "des_encrypt:#{value}"
    des_decrypt = e.des_decrypt(value)
    puts "des_decrypt:#{des_decrypt}"

    puts "-------------------------"
    publickey , privatekey = e.get_rsa_key
    puts "publickey:\n#{publickey} \n privatekey=\n#{privatekey}"

    value1 = e.rsa_private_encrypt(text , privatekey)
    puts "rsa_private_encrypt:#{value1}"
    rsa_public_decrypt = e.rsa_public_decrypt(value1 , publickey)
    puts "rsa_public_decrypt:#{rsa_public_decrypt}"

    value2 = e.rsa_public_encrypt("another message" , publickey)
    puts "rsa_public_encrypt:#{value2}"
    rsa_private_decrypt =  e.rsa_private_decrypt(value2 , privatekey)
    puts "rsa_private_decrypt:#{rsa_private_decrypt}"

    puts "----------------------------"
    rsa = OpenSSL::PKey::RSA.new(1024 , 7)
    value3 = rsa.private_encrypt("myself key")
    puts rsa.public_decrypt(value3)
end

testrun

测试结果：
IceskYsl@eoe ~/Desktop $ ruby encrypt.rb
text:a secret message
des_encrypt:羻"j}####9"q###A##
des_decrypt:a secret message
-------------------------
publickey:
-----BEGIN RSA PUBLIC KEY-----
MIGJAoGBALrAGpm39jexyrrkYuM6kyP0z+pBlY/i3WnIYHrR3PDk9af2GsuIUwqg
vhKRMxv5EZh1CShec++DfRAaBHwM2zCcHA1rDqrzqoSMdyCav+wbVwkSblqGb6gz
Q4Zk/nM73mF1PaOkZvlpKN7B5H7BsUN2ngpaz4u9MxMm0Tn1guIVAgMBAAE=
-----END RSA PUBLIC KEY-----

 privatekey=
-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQC6wBqZt/Y3scq65GLjOpMj9M/qQZWP4t1pyGB60dzw5PWn9hrL
iFMKoL4SkTMb+RGYdQkoXnPvg30QGgR8DNswnBwNaw6q86qEjHcgmr/sG1cJEm5a
hm+oM0OGZP5zO95hdT2jpGb5aSjeweR+wbFDdp4KWs+LvTMTJtE59YLiFQIDAQAB
AoGBAKbgsSR5yfBc1J8LJP6OQhvYUM6xCngILvivEN/PltJAlvAfMDR+Pk558z9e
NsChYcLNmoBTXuBBrEjuJuG/D0GpOmLadoZYDjlciJxj3Y9w85EvfRssdYGsBvIY
ksHVfsYEKJXp41ORux1jZgJXsnxn9276F7Unam65mPyUleiFAkEA8LMpAfgc3y4f
iHiDSon0AcgoIyH4eiiyxGPQEavIVgD2njRCM2pg3Z2uS3c/Et+EAaLjy9N1Cfy6
plZRwHuXqwJBAMafCjgUQaqFisJNSUWWsENVzjmfk2pnGK1TJot3BtpN67rX1dcC
Q3cNWbVhoF6zp6y+Kn/Lrdx1N+eNvhLOrT8CQQCl09jZuXUysVUaMWTKkrZgD+TP
J5VHnAhlUxrDQeU4k1tU7U36nDx2Ei9FYLc8qm8IrY9hGqLUqaBx/qA+CygXAkAu
sAGp7vEEkUFtrNcVWXdzTH8eQmlXcIZ3b302+TKOLBTGJafpU2niWSwGG72jpR07
2LOKuKjUkmUis8nDB/vnAkAxTVKBDYhfInF1/8/bhDAeqrWLifJUmxLEmO9WSRWm
I5ZodXZIaNOBRCSZToQSdfPbhWtQ68sWGNbI0YYwm3OZ
-----END RSA PRIVATE KEY-----
rsa_private_encrypt:#k4#e|########՗#F#####0     ###3
                                                    ##  õë######o#####')
c###########m##7e¼####u $>#######hUKc(#ۯ#####Us0T#######
                                                         rsa_public_decrypt:a secret message
rsa_public_encrypt:t####H
                         "#########'#H7############O#j####H###v#]Q`TR###Hs#U%####L###Z#####rѽ##
                                                                                               ###F##(#X##˵#3####rsa_private_decrypt:another message
----------------------------
myself key]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date>2010-05-15 07:02:22</wp:post_date>
		<wp:post_date_gmt>2010-05-15 07:02:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8ruby%e4%b8%ad%e4%bd%bf%e7%94%a8des-aes-rsa-%e5%8a%a0%e5%af%86%e8%a7%a3%e5%af%86%e7%ad%89%e5%ae%89%e5%85%a8%e6%8a%80%e6%9c%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
	</item>
	<item>
		<title>利用Rails中的国际化规则生成feed消息</title>
		<link>http://www.iceskysl.com/?p=728</link>
		<pubDate>Wed, 26 May 2010 17:29:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=728</guid>
		<description></description>
		<content:encoded><![CDATA[近日需要实现feed（动态）消息，同时需要支持多语言，本来没什么难的，做一个多态表，然后存储消息的目标对象，再规定好一些动作，入库或者出库的时候拼装下就好了。这里有个比较有趣的是如何最大限度的重用代码或者规则，最后实现中借鉴了Rails国际化的规则。
1. 首先定义针对目标可以做的操作，用常量定义好（考虑到数量不会很多，且不会经常变化，就不存数据库），例如：
class FeedAction

  #APP:1 - 99
  APP_DOWNLOAD = 1 #Download
  APP_FAV = 2 #Favorites
  APP_PAY = 3
  APP_INSTALL = 4

2. 对定义好的操作名为key，撰写其对应语言的动作描述，写zh.yml或者en.yml文件，例如：
zh:
  FEED_ACTION:
      APP_DOWNLOAD: "下载了"
      APP_FAV: "收藏了"
      APP_PAY: "购买了"
      APP_RATE: "打了{{rate}}星"

3.生成消息输出的时候，直接
>> I18n.locale = 'zh'
>> I18n.t 'FEED_ACTION.APP_PAY'
=> "购买了"
>> I18n.t 'FEED_ACTION.APP_RATE',:rate=>2
=> "打了2星"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2010-05-26 17:29:41</wp:post_date>
		<wp:post_date_gmt>2010-05-26 17:29:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%a9%e7%94%a8rails%e4%b8%ad%e7%9a%84%e5%9b%bd%e9%99%85%e5%8c%96%e8%a7%84%e5%88%99%e7%94%9f%e6%88%90feed%e6%b6%88%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="feed"><![CDATA[feed]]></category>
		<category domain="post_tag" nicename="i18n"><![CDATA[I18n]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
	</item>
	<item>
		<title>md5sum</title>
		<link>http://www.iceskysl.com/?p=730</link>
		<pubDate>Wed, 02 Jun 2010 06:11:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=730</guid>
		<description></description>
		<content:encoded><![CDATA[MD5算法常常被用来验证网络文件传输的完整性，防止文件被人篡改。MD5 全称是报文摘要算法（Message-Digest Algorithm 5），此算法对任意长度的信息逐位进行计算，产生一个二进制长度为128位（十六进制长度就是32位）的“指纹”（或称“报文摘要”），不同的文件产生相同的报文摘要的可能性是非常非常之小的。
在linux或Unix上，md5sum是用来计算和校验文件报文摘要的工具程序。一般来说，安装了Linux后，就会有md5sum这个工具，直接在命令行终端直接运行。
1、使用md5sum来产生指纹（报文摘要）命令如下：
md5sum filename > filename.md5
或者
md5sum filename >>filename.md5

示例：
[www@iceskysl 20100527]$ md5sum update.zip.1
cd32d060d5e4d1891dfa4d6552cc57bb  update.zip.1

也可以把多个文件的报文摘要输出到一个md5文件中，这要使用通配符*，比如某目录下有几个iso文件，要把这几个iso文件的摘要输出到iso.md5文件中，命令如下：
md5sum *.iso > iso.md5

2、使用md5报文摘要验证文件，方法有二：
把下载的文件file和该文件的file.md5报文摘要文件放在同一个目录下，然后用如下命令进行验证：
md5sum -c file.md5
然后如果验证成功，则会输出:正确]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>730</wp:post_id>
		<wp:post_date>2010-06-02 06:11:30</wp:post_date>
		<wp:post_date_gmt>2010-06-02 06:11:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>md5sum</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
	</item>
	<item>
		<title>delayed_job in rails</title>
		<link>http://www.iceskysl.com/?p=732</link>
		<pubDate>Tue, 08 Jun 2010 06:43:03 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=732</guid>
		<description></description>
		<content:encoded><![CDATA[Delayed_job (or DJ) encapsulates the common pattern of asynchronously executing longer tasks in the background.

ref:
http://adamfortuna.com/2009/08/17/the-amazingness-of-delayed_job-for-rails/
http://www.magnionlabs.com/2009/2/28/background-job-processing-in-rails-with-delayed_job
http://github.com/tobi/delayed_job]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>732</wp:post_id>
		<wp:post_date>2010-06-08 06:43:03</wp:post_date>
		<wp:post_date_gmt>2010-06-08 06:43:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delayed_job-in-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="delayed_job"><![CDATA[delayed_job]]></category>
		<category domain="post_tag" nicename="dj"><![CDATA[dj]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_1a860bb5cffca6c063e4650cce2e513c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_eac3e8e9a569cb47fd44707dcc6c04cf</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5c714477e249552806119928c254b5cd</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3bdbb7f61dcd5f50fc21e85281bab2f1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9ba1e7cab576a5c1abb3cd1b6f677e08</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5ad768e9b4d26fc82ca0c1ae3cea022f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_13cdeb19932278917b0fa8140a4d403a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_160317293fccf17fb2e7e93706ab27b7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_739ddf3ae85149e73d67bd857710ce97</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>538</wp:comment_id>
			<wp:comment_author><![CDATA[konsultan seo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.konsultan-seo-indonesia.com/tag/jasa-seo-indonesia.html</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-09-25 19:07:34</wp:comment_date>
			<wp:comment_date_gmt>2011-09-25 11:07:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>konsultan seo indonesia...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>539</wp:comment_id>
			<wp:comment_author><![CDATA[greek yogurt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://pvpaymon.com/the-benefits-of-greek-yogurt</wp:comment_author_url>
			<wp:comment_author_IP>173.208.245.26</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 09:01:34</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 01:01:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>greek yogurt...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>540</wp:comment_id>
			<wp:comment_author><![CDATA[Borse Louis Vuitton Prezzi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.buy4cheaps.it/</wp:comment_author_url>
			<wp:comment_author_IP>208.115.215.242</wp:comment_author_IP>
			<wp:comment_date>2011-09-28 09:48:30</wp:comment_date>
			<wp:comment_date_gmt>2011-09-28 01:48:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Borse Louis Vuitton Prezzi...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[Replica Clothing]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.women-clothes-store.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>208.115.215.242</wp:comment_author_IP>
			<wp:comment_date>2011-09-28 20:29:19</wp:comment_date>
			<wp:comment_date_gmt>2011-09-28 12:29:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Replica Designer Clothes...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>542</wp:comment_id>
			<wp:comment_author><![CDATA[Amazon Kindle Fire]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.kindle-ebook-reader.de/amazon-kindle-fire-kaufen/</wp:comment_author_url>
			<wp:comment_author_IP>92.230.192.45</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 12:06:16</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 04:06:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... Iceskysl.1sters.com...</strong>

[...] Read More: iceskysl.1sters.com/?p=732 [...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>543</wp:comment_id>
			<wp:comment_author><![CDATA[Fredericksburg real estate]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://realestatelistingsfredericksburg.com/</wp:comment_author_url>
			<wp:comment_author_IP>68.119.168.95</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 17:56:24</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 09:56:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Fredericksburg real estate listings...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>544</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren polos]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pooloos.com</wp:comment_author_url>
			<wp:comment_author_IP>184.22.77.134</wp:comment_author_IP>
			<wp:comment_date>2011-10-01 06:09:54</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 22:09:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>545</wp:comment_id>
			<wp:comment_author><![CDATA[Free Painless Houston tattoo removal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://free-tattoo-removal-centers.com/free-tattoo-removal-in-houston-tx/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 08:56:04</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 00:56:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Free Painless Houston tattoo removal...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>546</wp:comment_id>
			<wp:comment_author><![CDATA[free professional kids swimming lessons]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://free-swimming-lessons.com/privacy-policy/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 11:33:24</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 03:33:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>free professional kids swimming lessons...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>547</wp:comment_id>
			<wp:comment_author><![CDATA[Listing no credit check apartments in Houston]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://badcreditapartments.net/apartmentguide/rent-in-houston-with-bad-credit-broken-lease-or-misdemeanor/</wp:comment_author_url>
			<wp:comment_author_IP>69.151.192.203</wp:comment_author_IP>
			<wp:comment_date>2011-10-02 13:04:33</wp:comment_date>
			<wp:comment_date_gmt>2011-10-02 05:04:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Listing no credit check apartments in Houston...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>548</wp:comment_id>
			<wp:comment_author><![CDATA[toko cctv]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trimitratech.com/index.php?mod=trimitratech.product&amp;catID=187&amp;productID=515&amp;p=1&amp;title=KM-3152</wp:comment_author_url>
			<wp:comment_author_IP>184.22.57.103</wp:comment_author_IP>
			<wp:comment_date>2011-10-03 18:22:45</wp:comment_date>
			<wp:comment_date_gmt>2011-10-03 10:22:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>beli cctv...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[targeted traffic]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://linksgyan.com</wp:comment_author_url>
			<wp:comment_author_IP>92.6.152.71</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 08:51:48</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 00:51:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>seo company...</strong>

[...]delayed_job in rails[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TEXT fields in MySQL</title>
		<link>http://www.iceskysl.com/?p=734</link>
		<pubDate>Mon, 28 Jun 2010 04:56:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=734</guid>
		<description></description>
		<content:encoded><![CDATA[MySQL TEXT fields have a limit of 65,000 bytes. If you insert anything larger than that in to a normal TEXT field mySQL will silently truncate your data without telling you (meaning software checks are probably a good idea). MEDIUMTEXT will store 16 million characters and LONGTEXT can handle over 4 trillion, but this information does not appear to be readily available in the online mySQL manual (although it is hinted at in this table). Something to bare in mind when designing database applications.

MyISAM tables in MySQL have a maximum size of a row of 65,535 bytes, so all the data in a row must fit within that limit. However, the TEXT types are stored outside the table itself and only contribute 9 to 12 bytes towards that limit. (For more information about this refer to the MySQL Manual - Data Storage Requirements chapter).

ref::http://www.electrictoolbox.com/maximum-length-mysql-text-field-types/
TEXT data types are also able to store much more data than VARCHAR and CHAR text types so TEXT types are what you need to use when storing web page or similar content in a database.

The maximum amount of data that can be stored in each data type is as follows:

TINYTEXT	256 bytes
TEXT	65,535 bytes	~64kb
MEDIUMTEXT	 16,777,215 bytes	~16MB
BIGTEXT	4,294,967,295 bytes	~4GB
In most circumstances the TEXT type is probably sufficient, but if you are coding a content management system it's probably best to use the MEDIUMTEXT type for longer pages to ensure there are no issues with data size limits.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>734</wp:post_id>
		<wp:post_date>2010-06-28 04:56:02</wp:post_date>
		<wp:post_date_gmt>2010-06-28 04:56:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>text-fields-in-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
	</item>
	<item>
		<title>参加CSDN组织的TUP首期活动：移动开发实践</title>
		<link>http://www.iceskysl.com/?p=737</link>
		<pubDate>Mon, 28 Jun 2010 17:24:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=737</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://www.eoeandroid.com/attachments/month_1006/100628151169669bb4f7b7d8c5.jpg" alt="http://www.eoeandroid.com/attachments/month_1006/100628151169669bb4f7b7d8c5.jpg" />
2010年6约27日，周日下午，由CSDN和《程序员》杂志联合策划组织，旨在与业界人士分享IT产品背后的技术和用户体验故事的线下活动TUP（Technology, User Experience, Product）系列活动日前在北京丽亭华苑酒店成功举办，首期活动以<a href="http://www.eoeandroid.com/thread-23827-1-1.html">“移动开发实践”</a>为主题。
受CSDN&《程序员》总编刘江邀请，我去分享了自己对android方面的一些体会和心得，本来预期200人参加的活动，从wudi那边看到报名的有500多人，最终选了300多人参与了活动，场面还是比较火爆的，到处站的都是人，CSDN在国内技术圈还是有不错影响力的；
活动从下午1电30分正式开始，刘江主持，介绍了TUP的核心价值，然后我是第一个演讲的，我和大家分享的题目是<a href="http://www.eoeandroid.com/thread-23770-1-1.html">《Google Android盈利模式探析及其应用突围之道》</a>，和大家分享了android目前的市场；可行的一些盈利模式，我的观点是现阶段，广告和应用中收费（注意不是收费应用）是两个比较成熟的模式，除此之外还有做平台，做培训，咨询等等模式可以尝试；借着和大家分享了应用突围之道，举了两个例子，说明如何让你的应用在众多应用中脱颖而出（分析数据很重要），最后和大家分享了android的发展趋势，我个人觉得android终端多元化，终端网络化的趋势很明显，那么带来的就是应用的巨大需求（个性化，国际化，本地化的），从而使得android人才缺口非常大。
从大家的提问和会后的交流来看，很多人还是比较迷茫的，对现况的迷茫，对市场的迷茫，比如国内外大大小小的软件商店很多人就看不明白，原因很简单，看到的都是表表象，透过表象，把握住本质就很清晰了。
比较冏的是名片带少了，后来给不少人手工写了联系方式，本来后面还有个互动交流的环节，由于临时有些事情，没来得及参加就撤退了，有些遗憾。
今天各大媒体的报道都出来，看到基本商都是用的我topic里的一个观点“andoid应用突”》做为报道点，希望大家能顺利突围！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>737</wp:post_id>
		<wp:post_date>2010-06-28 17:24:48</wp:post_date>
		<wp:post_date_gmt>2010-06-28 17:24:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%82%e5%8a%a0csdn%e7%bb%84%e7%bb%87%e7%9a%84tup%e9%a6%96%e6%9c%9f%e6%b4%bb%e5%8a%a8%ef%bc%9a%e7%a7%bb%e5%8a%a8%e5%bc%80%e5%8f%91%e5%ae%9e%e8%b7%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="csdn"><![CDATA[csdn]]></category>
		<category domain="post_tag" nicename="tup"><![CDATA[tup]]></category>
		<wp:comment>
			<wp:comment_id>550</wp:comment_id>
			<wp:comment_author><![CDATA[安致]]></wp:comment_author>
			<wp:comment_author_email>milboy@msn.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.qqmybb.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.5.116.200</wp:comment_author_IP>
			<wp:comment_date>2010-07-09 07:25:50</wp:comment_date>
			<wp:comment_date_gmt>2010-07-09 07:25:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[android的市场普及是不可逆转的，很有前途的市场]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MO，MT，Linkid的关系</title>
		<link>http://www.iceskysl.com/?p=739</link>
		<pubDate>Wed, 14 Jul 2010 16:57:07 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=739</guid>
		<description></description>
		<content:encoded><![CDATA[做移动互联网的过程中，有这样一些词是必须知道的，如MO,MT,GSM,LINKID
上行（MO）上行的意思就是短信发送到服务器端  MO又称 Mobile Original
下行（MT）下行的意思就是短信从服务器端发回到手机上，MT又称Mobile Terminated
简单的说，从手机发起一个的过程叫上行(MO)，到手机结束的过程叫下行(MT)，比如，平时给你的朋友发送一条短信，对你来说就是上行(MO)，而对你的朋友来说，就是下行(MT)。在企业、行业应用中，从系统给手机发送信息的过程叫下行(MT)，而手机发送信息给系统的过程叫上行(MO)。

所有用户点播的业务，用户MO（上行）消息通过网关送到MISC鉴权批价后，MISC会自动生成一个随机数linkid随后通过网关传给SP，当SP收到MO（上行）消息后下发MT（下行）消息给用户时必须在Submit包的linkid字段填上MO（上行）消息包里面带的linkid信息（Reserve值：设定的回复内容）。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>739</wp:post_id>
		<wp:post_date>2010-07-14 16:57:07</wp:post_date>
		<wp:post_date_gmt>2010-07-14 16:57:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mo%ef%bc%8cmt%ef%bc%8clinkid%e7%9a%84%e5%85%b3%e7%b3%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkid"><![CDATA[Linkid]]></category>
		<category domain="post_tag" nicename="mo"><![CDATA[mo]]></category>
		<category domain="post_tag" nicename="mt"><![CDATA[mt]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
	</item>
	<item>
		<title>优亿市场（eoeMarket）推出“新版本兼容性大扫荡”活动！</title>
		<link>http://www.iceskysl.com/?p=741</link>
		<pubDate>Sun, 18 Jul 2010 04:57:30 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=741</guid>
		<description></description>
		<content:encoded><![CDATA[<img alt="" src="http://www.eoemarket.com/images/download_bac.jpg" title="pic" class="alignnone" width="400" height="250" />
＝＝活动简介＝＝
我们希望更多的中国的android用户能获得更多优秀的本土化android应用和游戏，得到更好的服务和更贴心的体验，期望 您能安装和体验一下易联致远的优亿市场（eoeMarket），并为我们提供更多的反馈信息。
为此，优亿市场（eoeMarket）运营团队特别 推出“新版本兼容性大扫荡”活动，旨在使得优亿市场（eoeMarket）能运行在更多android设备上，服务更多的android用户。
活动地址：http://www.eoemarket.com/activities/release_bate_version

＝＝ 参与前的准备＝＝
1. 您需要有一款运行android（ophone或乐phone等等）系统的设备（手机, MID或Pad等）；
2. 您的设备需要有联网功能（通过gprs,edeg,3g或wifi等）；
3. 您需要装上最新版本的优亿市场（eoeMarket），如果您尚未安装，请参考下面的《安装优亿市场》；

＝＝安装优亿市场 （eoeMarket）＝＝
在设备上打开浏览器，输入网址: eoemarket.com/a 即可下载最新版本的优亿市场（eoeMarket），下载完成后点击即可安装。

＝＝活动内容＝＝
1、参与对象：所有 Android用户（玩家，开发者，公司等）；
2、参与方式：参与的用户按照本报告内容测试反馈；
3、我们会在官方网站公布被测试的机型 及其结果；

＝＝更多资料＝＝
优亿市场（eoeMarket）是由北京易联致远（eoeMobile）和开发者紧密合作、给玩家提 供优秀Android应用的集软件发布、搜索、推荐、安装等于一体的软件商店平台。其为国内最早发布的Android软件商店（2009年7月发布第一 版），已经发布超过1500款优秀的本土应用（游戏）！现在公测的是其2010年7月18日最新发布的公测版！
官方网站：http://www.eoemarket.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2010-07-18 04:57:30</wp:post_date>
		<wp:post_date_gmt>2010-07-18 04:57:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bc%98%e4%ba%bf%e5%b8%82%e5%9c%ba%ef%bc%88eoemarket%ef%bc%89%e6%8e%a8%e5%87%ba%e2%80%9c%e6%96%b0%e7%89%88%e6%9c%ac%e5%85%bc%e5%ae%b9%e6%80%a7%e5%a4%a7%e6%89%ab%e8%8d%a1%e2%80%9d%e6%b4%bb%e5%8a%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="eoemarket"><![CDATA[eoemarket]]></category>
		<category domain="post_tag" nicename="%e4%bc%98%e4%ba%bf%e5%b8%82%e5%9c%ba"><![CDATA[优亿市场]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>参加“Orange开发者日“活动</title>
		<link>http://www.iceskysl.com/?p=745</link>
		<pubDate>Sun, 18 Jul 2010 05:04:05 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=745</guid>
		<description></description>
		<content:encoded><![CDATA[<img alt="" src="http://www.eoeandroid.com/attachments/month_1007/100706200706fd73f91020a5ea.jpg" title="heying" class="alignnone" width="400" height="244" />
参加了7月6日在法电参加“Orange开发者日“活动，此次活动的重点是寻找Android应用程序，分享Android应用开发的经验，参与活动的有Orange AppShop的总部和北京的成员、联通应用商城的负责人员、摩托罗拉应用商店的负责人员、和参加活动的应用开发者。我在会上有个主题，主要介绍了优亿市场（eoemarket）这个产品，于会的差不多有200多人，认识一些很熟悉但未见面的老朋友。参加了会后的商务一对一，orange的工作人员对我们的产品提了不少好的建议。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date>2010-07-18 05:04:05</wp:post_date>
		<wp:post_date_gmt>2010-07-18 05:04:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%82%e5%8a%a0%e2%80%9corange%e5%bc%80%e5%8f%91%e8%80%85%e6%97%a5%e2%80%9c%e6%b4%bb%e5%8a%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>第二本android书籍《It&#039;s Android TIME: 创赢路线》上市</title>
		<link>http://www.iceskysl.com/?p=749</link>
		<pubDate>Sun, 18 Jul 2010 08:25:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=749</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://iceskysl.1sters.com/wp-content/uploads/2009/09/book.jpg"><img class="alignnone size-full wp-image-1065" title="It's Android Time——Google Android创赢路线与产品开发实战" src="http://iceskysl.1sters.com/wp-content/uploads/2009/09/book.jpg" alt="It's Android Time——Google Android创赢路线与产品开发实战" width="500" height="500" /></a>
昨天出版社说《It's Android TIME: 创赢路线与产品开发实战》得书印刷出来了，给我们快递一些过来，早上到公司就收到走宅急送送来得一个箱子，打开果然是《It's Android TIME: 创赢路线于产品开始实战》，第二本android书籍终于要上市了。
这本书主要是我策划和组织的，召集了10多个人参与了编写，全书600来页，共16章，从去年10月份开始策划，到现在的7月份，时间还真不短。
本书立足点不再是单纯的技术，大家应该知道，我写的第一本书《Google Andori开发入门也实战》是国内最早的android书籍，09年6月上市，是09年计算机销量TOP50，刚接到出版社电话，说又重印了2000本，那本书主要是将如何入门android开发，讲的都比较基础，让大家入门android；而本书《It's Android TIME: 创赢路线与产品开发实战》主要阐述如何分析android的市场，如何找到市场，做出产品，以及和android技术相关的内容，诸如UI设计，赢利模式探讨，传统软件突围等等，不仅仅只是技术。当然，也还是以技术为主，讲了基础开发，底层开发，游戏开发，开发平台产品，源码编译和修改等等，其中我们分析了很多的数据，花了不少心思的。

推荐序1（Frost&amp;Sullivan中国区总裁 王煜全）：http://www.eoeandroid.com/thread-25461-1-1.html
推荐序2（我学网（开复学生网）负责人 王开源）：http://www.eoeandroid.com/thread-25462-1-1.html
推荐序3（Android技术专家 高焕堂）：http://www.eoeandroid.com/thread-25463-1-1.html

详细目录：
http://www.eoeandroid.com/thread-25465-1-1.html

预定购买：
China-pub互动出版购买地址（预定） ：http://www.china-pub.com/196898]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>749</wp:post_id>
		<wp:post_date>2010-07-18 08:25:20</wp:post_date>
		<wp:post_date_gmt>2010-07-18 08:25:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ac%ac%e4%ba%8c%e6%9c%acandroid%e4%b9%a6%e7%b1%8d%e3%80%8aits-android-time-%e5%88%9b%e8%b5%a2%e8%b7%af%e7%ba%bf%e3%80%8b%e4%b8%8a%e5%b8%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e5%88%9b%e8%b5%a2%e8%b7%af%e7%ba%bf"><![CDATA[创赢路线]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_496616121661bc92ace47b141c2ff165</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>551</wp:comment_id>
			<wp:comment_author><![CDATA[纪念我的第一本Android技术书籍销量过万]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/?p=751</wp:comment_author_url>
			<wp:comment_author_IP>74.207.242.64</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 08:48:56</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 08:48:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 对于我主导的第二本书《It’s Android TIME: 创赢路线与产品开发实战》，我还是这个预期，能销出1万本，何时能达到呢，期待中。 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>纪念我的第一本Android技术书籍销量过万</title>
		<link>http://www.iceskysl.com/?p=751</link>
		<pubDate>Sun, 18 Jul 2010 08:47:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=751</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignnone" title="book1" src="http://lh5.ggpht.com/_GiZR7A3zZ6s/Sia-Kho8JgI/AAAAAAAAEQc/UFMp_3V_etA/s400/google_android.jpg" alt="" width="363" height="400" />
<a href="http://iceskysl.1sters.com/?p=472"> 《Google Android开发入门与实战》</a>是我主导撰写的第一本技术书籍（之前的《Google API 大全》我是参与者），20096月上市后，我GF聊天时问我，对这本书有什么期待，我说：<strong>我的期待时做为技术书籍能销量超过1万本。</strong>
到2010年7月的时候，这个期待实现了，人民邮电的编辑张涛说“咱那本书又加印了2000册”，喜，终于过万，回忆下：
<ul>
	<li>2009年6月第一次印刷：5000册</li>
	<li>2009年10月第二次印刷：1500册</li>
	<li>2009年12月第三次印刷：1500册</li>
	<li>2010年3月第四次印刷：1500册</li>
	<li>2010年7月第五次印刷：2000册</li>
</ul>
这样总数<strong>11500</strong>册，加上翻译成繁体中文在台湾上市的数量，已经突破预期的1万册大关，做为一个计算类书籍，这个成绩我还是很满意的；至于其被读者提到的排版不精美，内容偏简单等问题，也是在预期之中的。

对于我主导的第二本书<a href="http://iceskysl.1sters.com/?p=749">《It’s Android TIME: 创赢路线与产品开发实战》</a>，我还是这个预期，能销出1万本，何时能达到呢，期待中。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>751</wp:post_id>
		<wp:post_date>2010-07-18 08:47:51</wp:post_date>
		<wp:post_date_gmt>2010-07-18 08:47:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ba%aa%e5%bf%b5%e6%88%91%e7%9a%84%e7%ac%ac%e4%b8%80%e6%9c%acandroid%e6%8a%80%e6%9c%af%e4%b9%a6%e7%b1%8d%e9%94%80%e9%87%8f%e8%bf%87%e4%b8%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>552</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email>cash.zhao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.237</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 09:27:58</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 09:27:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[祝贺]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>553</wp:comment_id>
			<wp:comment_author><![CDATA[Martin@HK]]></wp:comment_author>
			<wp:comment_author_email>dindin0701@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.247.37.206</wp:comment_author_IP>
			<wp:comment_date>2010-07-22 18:18:21</wp:comment_date>
			<wp:comment_date_gmt>2010-07-22 18:18:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恭喜~~~!!!!
如果在香港看見~我一定要買一本看看~~!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>554</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>122.200.95.194</wp:comment_author_IP>
			<wp:comment_date>2010-07-22 18:30:38</wp:comment_date>
			<wp:comment_date_gmt>2010-07-22 18:30:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Martin@HK
估计在香港没得买了～呵呵～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>555</wp:comment_id>
			<wp:comment_author><![CDATA[Martin@HK]]></wp:comment_author>
			<wp:comment_author_email>dindin0701@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.247.37.206</wp:comment_author_IP>
			<wp:comment_date>2010-07-22 18:37:47</wp:comment_date>
			<wp:comment_date_gmt>2010-07-22 18:37:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我就找給你看~~!!!! 我相熟很多書店呢!!!!!! .\"/.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7959</wp:comment_id>
			<wp:comment_author><![CDATA[《Google Android开发入门与实战》第10次加印，真要改版了？ - IceskYsl@1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.iceskysl.com/?p=1693</wp:comment_author_url>
			<wp:comment_author_IP>74.207.232.111</wp:comment_author_IP>
			<wp:comment_date>2012-04-13 02:13:05</wp:comment_date>
			<wp:comment_date_gmt>2012-04-13 02:13:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 早上收到出版社消息，我2009 年6月出版的《Google Android开发入门与实战》再次加印，已经印了10次了，总的销量差不多2万本了，还记得10年7月还写过一篇《纪念我的第一本Android技术书籍销量过万》～ [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334935316.2768";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Parse Rails 3 log file using Enumerable#slice_before</title>
		<link>http://www.iceskysl.com/?p=754</link>
		<pubDate>Tue, 27 Jul 2010 05:42:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=754</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>def parse_rails_log_file(file)
  # Remove all empty lines
  lines = file.each_line.map(&amp;:strip).reject(&amp;:empty?)

  # Use +Enumerable#slice_before+ to slice log file into sections for each request
  lines.slice_before(/Started (GET|POST|PUT|DELETE)/).each_with_object({}) do |request_log, totals|
    # Only include successfully finished actions in report
    if duration = request_log.last[/Completed 200 OK in (?&lt;duration&gt;\d+)ms/, :duration]
      action_name = request_log.first[/Started (GET|POST|PUT|DELETE) "(?&lt;action&gt;.+?)" for/, :action]
      totals[action_name] ||= 0
      totals[action_name] += duration.to_i
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  require "pp"
  puts "Parsing Rails 3 log file (extracting cumulative running time per request path):"
  puts "================="

  log_file = &lt;&lt;-LOG_FILE
  Started GET "/index" for 192.168.74.1 at 2010-03-09 11:37:40
    Processing by UpdatesController#index as HTML
    Update Load (0.5ms)  SELECT `updates`.* FROM `updates` ORDER BY created_at DESC
  Rendered updates/index.html.erb (16.7ms)
  Completed 200 OK in 71ms (Views: 44.3ms | ActiveRecord: 0.5ms)

  Started POST "/updates" for 192.168.74.1 at 2010-03-09 11:37:43
    Processing by UpdatesController#create as HTML
    Parameters: {"commit"=&gt;"Save changes"}
    Update Load (0.4ms)  SELECT `updates`.* FROM `updates` ORDER BY created_at DESC
  Rendered updates/index.html.erb (1.3ms)
  Completed 200 OK in 60ms (Views: 32.1ms | ActiveRecord: 0.4ms)

  Started GET "/updates" for 192.168.74.1 at 2010-03-09 11:45:51
    Processing by UpdatesController#index as HTML

  TypeError (exception class/object expected):
    app/controllers/updates_controller.rb:3:in `raise'
    app/controllers/updates_controller.rb:3:in `index'

  Rendered /usr/local/rvm/gems/ruby-1.9.2-head/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/actionpack/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.6ms)
  Rendered /usr/local/rvm/gems/ruby-1.9.2-head/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/actionpack/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (2.9ms)
  Rendered /usr/local/rvm/gems/ruby-1.9.2-head/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/actionpack/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within /usr/local/rvm/gems/ruby-1.9.2-head/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/actionpack/lib/action_dispatch/middleware/templates/rescues/layout.erb (23.9ms)

  Started GET "/updates" for 192.168.74.1 at 2010-03-09 11:45:58
    Processing by UpdatesController#index as HTML
    Update Load (0.3ms)  SELECT `updates`.* FROM `updates` ORDER BY created_at DESC
  Rendered updates/index.html.erb (1.1ms)
  Completed 200 OK in 100ms (Views: 29.3ms | ActiveRecord: 0.3ms)
  LOG_FILE

  pp parse_rails_log_file(log_file) # =&gt; {"/index"=&gt;71, "/updates"=&gt;160}
end</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>754</wp:post_id>
		<wp:post_date>2010-07-27 05:42:33</wp:post_date>
		<wp:post_date_gmt>2010-07-27 05:42:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parse-rails-3-log-file-using-enumerableslice_before</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="log"><![CDATA[log]]></category>
		<category domain="post_tag" nicename="rails3"><![CDATA[rails3]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="slice_before"><![CDATA[slice_before]]></category>
	</item>
	<item>
		<title>关于“偷窃数据的Android壁纸应用”的相关申明</title>
		<link>http://www.iceskysl.com/?p=757</link>
		<pubDate>Thu, 29 Jul 2010 16:41:39 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=757</guid>
		<description></description>
		<content:encoded><![CDATA[今天在GoogleTalk上朋友发来消息，说有人撰写文章指出我以前开发的一款更换手机壁纸的应用（嵌入了admob和google的广告）中存在偷窃用户隐私数据行为时，我简直不敢相信这是真的；当看到新闻的详细内容时，我更是被震惊了。以下是那段转载文章的原话：

<em>“拉斯维加斯黑帽大会上，Lookout 的安全人员指出，一个伪装成Android手机壁纸应用的偷窃个人信息程序已经被下载了百万次，它会收集您的个人资料，并将其发送到一个来自中国深圳的神秘网站imnet.us中。安全人员(Kevin MaHaffey)估计这款程序是由正常的壁纸应用修改而来，黑客将其上传到Android Market，希望装饰自己手机的用户因此而中招。泄漏的数据包括浏览历史记录，短信，手机的SIM卡号码，用户识别号，语音邮件，甚至是密码，他警告称每个人都应该警惕来自手机上的威胁。”</em>

在看完这条消息后，我立马检查了所有代码，防止这款应用在我不知情的情况下，被他人加入恶意代码，但我一无所获。
<h2><strong><span style="color: #ff0000;">现就相关事宜申明如下：</span></strong></h2>
<strong>一、我开发的所有程序都没有侵犯到用户的隐私。</strong>

在这个应用中，申请的全部权限为：
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.INTERNET" /&gt;</div>
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;</div>
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;</div>
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.SET_WALLPAPER" /&gt;</div>
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;</div>
<div id="_mcePaste">&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;</div>
懂点Android技术的都知道，这些权限都是为了让该软件的功能，能够正常工作所必须的权限（连接网络，获取网络状态，下载壁纸时读写SD卡，设置壁纸，读取手机状态）和Admob的广告精准推送所需要的权限（位置信息，读取手机状态）。
至于获取用户浏览历史记录、短信、语音邮件密码的这些明显侵犯用户隐私的行为，完全是子虚乌有。一方面并没要申请相关的权限；另一方面我还真不知道怎样获取这些敏感信息。另外，admob的精准广告服务中可能是会针对用户的地理位置等信息推送更准确的广告服务。
关于这款应用能获取的设备标识号是用来区分设备的唯一性，免去用户注册的麻烦，而能给用户提供收藏图片的功能；而诸如获取手机屏幕大小是为了能够智能适配合适的图片。在这些设备信息中，请问哪一条会侵犯到用户的隐私。
另外说我可以获取浏览历史信息，这简直就是个天大的笑话。如果懂一点程序的就会知道，要获取浏览器信息必须在程序里申请com.android.browser.permission.READ_HISTORY_BOOKMARKS权限。我的程序完全没有获取到权限，怎么能够获取到历史信息，真是笑话！！！

<strong>二、Android手机的权限管理，在任何没有刷过第三方rom的手机上是很严格的。
</strong> Android手机的权限管理，在任何没有刷过第三方rom的手机上是很严格的，在没有相关权限的情况下，要获取那些信息，是完全不可能的。就算是被刷过Rom的手机，也只有具有该ROM制作人的加密签名的程序，才能完成一些不安全的操作。
我所需要的权限在用户安装的时候会很明确的告诉用户，下面我就给大家展示一下我应用申请的权限和另外一个著名的壁纸的应用background和一款管理短信的应用申请的权限。

我的软件需要的权限：
<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/07/5.png"><img class="alignnone size-medium wp-image-763" title="5" src="http://iceskysl.1sters.com/wp-content/uploads/2010/07/5-200x300.png" alt="" width="200" height="300" /></a>

看看background（另外一款壁纸的应用）申请的权限：
<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/07/3.png"><img class="alignnone size-medium wp-image-764" title="3" src="http://iceskysl.1sters.com/wp-content/uploads/2010/07/3-200x300.png" alt="" width="200" height="300" /></a>

Handcent SMS申请的权限：

<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/07/1.png"><img class="alignnone size-medium wp-image-772" title="1" src="http://iceskysl.1sters.com/wp-content/uploads/2010/07/1-200x300.png" alt="" width="200" height="300" /></a>

短信有短信的权限，联系人有联系人的权限，我都没要申请，请问我如何获取相关的信息。

<strong>三、应用主要面向外国用户，但绝对没有获取那些高敏感度的隐私信息！</strong>

该应用主要面向外国用户（国内由于网络原因无法正常使用），连接服务器端能够获取到精确适配终端的图片，这是一款非常有用，也深受用户喜爱的应用。它确实拥有数量众多（几百万）的用户，但绝对没有获取那些高敏感度的隐私信息！我每天都收到很多用户的反馈邮件告诉我这个软件多么棒，给他们带来多少乐趣！

<strong>四、我本人始终与业界同仁一道，希望建立诚实守信、和谐共生的Android产业生态系统。</strong>

随着Android开放性操作平台手机的广泛使用，其应用软件开发市场正呈现蓬勃发展景象。对于提醒用户警惕来自手机上的威胁，我本人向来都是强烈支持的！本人一直始终与业界同仁一道，一直为共建诚实守信、和谐共生的Android产业生态系统而努力，将力量专注于用户需求和技术创新，创造更被用户喜欢的软解，并致力于推动手机应用软件产业持续健康发展。

<span class="s1">在此，本人郑重申明，该应用没有获取任何诸如</span><span class="s2">“</span><span class="s1">浏览历史记录，短信，语音邮件密码等</span><span class="s2">”</span><span class="s1">这种高敏感度的信息，并和国外的原作者取得联系，让其修正自己的言论并发布公开道歉，同时对于这种不负责任的言论和评价观点，对我及与我相关的应用进行不负责任的报道造成的影响给予补偿，我将保留追究其法律责任的权利。</span>

ps：

如果您有其他的疑问或者问题，欢迎你在我sina微博客（<a href="http://t.sina.com.cn/iceskysl" target="_self">http://t.sina.com.cn/iceskysl</a>）或者sohu微博（<a href="http://t.sohu.com/iceskysl" target="_self">http://t.sohu.com/iceskysl</a>）给我沟通！
<h2><span style="color: #0000ff;">update：</span></h2>
写完申明后，去看消息出处看到其竟然做了修改，我早料到其会做相关的行为，所有早些时候截了屏幕如下：

<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/07/Screen-shot-2010-07-29-at-pm07.34.24.png"><img class="alignnone size-medium wp-image-775" title="Screen shot 2010-07-29 at pm07.34.24" src="http://iceskysl.1sters.com/wp-content/uploads/2010/07/Screen-shot-2010-07-29-at-pm07.34.24-300x295.png" alt="" width="300" height="295" /></a>

而现在的文章被修改为：

<a href="http://iceskysl.1sters.com/wp-content/uploads/2010/07/Screen-shot-2010-07-30-at-am01.24.09.png"><img class="alignnone size-medium wp-image-776" title="Screen shot 2010-07-30 at am01.24.09" src="http://iceskysl.1sters.com/wp-content/uploads/2010/07/Screen-shot-2010-07-30-at-am01.24.09-300x159.png" alt="" width="300" height="159" /></a>

看我用鼠标标识的地方，对关键信息进行了修改，感兴趣的人可以去 <a href="http://mobile.venturebeat.com/2010/07/28/android-wallpaper-app-that-steals-your-data-was-downloaded-by-millions/" target="_self">http://mobile.venturebeat.com/2010/07/28/android-wallpaper-app-that-steals-your-data-was-downloaded-by-millions/</a> 查看原文，对于这种标题党用子虚乌有的事情炒作，等消息传播后再修改自己的内容算什么行为！而对国内部分媒体在传播时不但不对真实性进行验证，还添油加醋，歪曲意思的报道，我非常无奈（看到有人还说可以获取信用卡信息，还加密传输，我实在无语）。

<span style="color: #ff0000;">按照我个人的感觉，他们应该紧接着要开始拿这个事件来炒作自己的产品了，我个人懒得去关注，如果有人发现有人借此炒作自己的产品，请帮忙分析分析，看看到底是什么人用这样手法。</span>

<span style="color: #0000ff;">再次update！！！</span>

<span style="color: #ff0000;"><span style="color: #0000ff;">通过email和mylookout的人取得联系，说明我取得诸如设备号，手机屏幕大小是为了更智能的给设备适配图片，而获取部分的sim卡号是后来用户反馈说自己换了手机还想使用之前的收藏记录才使用的，这些信息只在该应用中使用，并没提供给任何第三方！</span></span>

<span style="color: #ff0000;"><span style="color: #0000ff;">同时让其确认</span></span><a href="http://mobile.venturebeat.com/2010/07/28/android-wallpaper-app-that-steals-your-data-was-downloaded-by-millions/" target="_self"><span style="color: #0000ff;">venturebeat</span></a><span style="color: #0000ff;">上文章中说到的获取浏览器历史，短信息，密码等高敏感性信息是否是他们说的还是写文章的人自己写的（</span><span style="line-height: normal; font-size: 11px; border-collapse: collapse;"><span style="color: #0000ff;">Lots of my users send me the email ask me why I collect their text message and voicemail passward, I just want to make sure whether you and your ceo said that  I collected browsing history,text message ,voicemail passward during the meeting.</span></span><span style="color: #0000ff;">）。</span>

<span style="color: #0000ff;">其cto给我回复说他们没有说过我的应用获取过诸如</span><span style="line-height: normal; font-size: 15px; border-collapse: collapse;"><span style="color: #0000ff;">text messages or browsing history这些信息（</span></span><span style="line-height: normal; font-size: 15px; border-collapse: collapse;"><span style="color: #0000ff;"> We never stated that the wallpaper applications gathered users text messages or browsing history.</span></span><span style="line-height: normal; font-size: 15px; border-collapse: collapse;"><span style="color: #0000ff;">），是媒体在撰写和传播的时候错误报道了（</span></span><span style="line-height: normal; font-size: 15px; border-collapse: collapse;"><span style="color: #0000ff;">A member of the press misreported our research and he has since corrected it. </span></span><span style="line-height: normal; font-size: 15px; border-collapse: collapse;"><span style="color: #0000ff;">）。</span></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: medium;">我非常无语～</span></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: medium;">2010年8月4日第二次次update！</span></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: small;">多谢这些天很多朋友的关心，我很好，谢谢！这些天和google android组，lookout公司和venturebeat的作者，以及国内外很多媒体，博客们，记者们都有很多的接触。</span></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: small;">1. google就前段时间将应用暂停和我一起分析了这个应用，今天发来调查的结果：</span></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: small;"><span style="color: #000000; font-size: 11px;"><em>Our investigation has concluded that there's no obvious malicious code in your apps, though the implementation accesses data that it doesn't need to.  We've restored your apps (and they'll be available on Market again once you publish them), and are looking forward to seeing them updated to use ANDROID_ID.  We are likely to make a statement about this issue this week--I'll let you know.</em></span></span></span>

我早就说过，我配合调查，我把代码提供给他们，google也做出了公正的评判，另外也给我提了一些建议（<span style="font-family: arial, sans-serif; line-height: normal; font-size: 11px; border-collapse: collapse;"><em>ANDROID_ID）。</em></span>

<span style="font-family: arial, sans-serif; color: #1f497d;"><span style="border-collapse: collapse; line-height: normal; font-size: small;"><span style="color: #000000; font-size: 11px;">2. 当时写这篇报道的</span></span></span><span style="font-family: arial, sans-serif; line-height: normal; font-size: small; border-collapse: collapse; color: #1f497d;">venturebeat记者</span><span style="font-family: arial, sans-serif; line-height: normal; font-size: 11px; border-collapse: collapse;">Dean Takahashi发来了mail，为自己犯的错误道歉，并道歉该事带来的恶劣影响，会再写一篇文章澄清这个事情以消除影响。</span>

<span style="font-family: arial, sans-serif; line-height: normal; font-size: 11px; border-collapse: collapse;">3. 那个安全公司lookout的人写邮件来要于我一起“</span><span style="font-family: arial, sans-serif; line-height: normal; font-size: 12px; border-collapse: collapse;"> We wanted to coordinate with you to prevent further misunderstandings. ”。</span>

<span style="font-family: arial, sans-serif; line-height: normal; font-size: 12px; border-collapse: collapse;">4.好几个不认识的国外记者很负责任，发邮件和gt和我交流询问事情的真相，并帮我喊冤，谢谢这些有职业精神的记者们。</span>

<span style="font-family: arial, sans-serif; line-height: normal; font-size: 12px; border-collapse: collapse;">这个事情到这差不多就结束了，其中看到很多假丑恶，也看到很多真善美！谢谢所有帮助过我的人（很多很多，就不一一列举）。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>757</wp:post_id>
		<wp:post_date>2010-07-29 16:41:39</wp:post_date>
		<wp:post_date_gmt>2010-07-29 16:41:39</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8e%e2%80%9c%e5%81%b7%e7%aa%83%e6%95%b0%e6%8d%ae%e7%9a%84android%e5%a3%81%e7%ba%b8%e5%ba%94%e7%94%a8%e2%80%9d%e7%9a%84%e7%9b%b8%e5%85%b3%e7%94%b3%e6%98%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<wp:comment>
			<wp:comment_id>556</wp:comment_id>
			<wp:comment_author><![CDATA[Yi&#8217;s blog - 美国“砖家”]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://tanyi.info/2010/07/black-hat-sucks/</wp:comment_author_url>
			<wp:comment_author_IP>208.101.26.91</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 18:02:53</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 18:02:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 我的朋友 Iceskysl 最近很郁闷，因为他上了著名的风投博客 Venturebeat首页。事情是因为他写了很多Andriod手机的软件，他写的软件很好用，很快下载量过百万。于是被不负责任的美国黑客盯上，最近的BLACK HAT大会上，某个公司借机推出一款叫做lookup的手机查马软件。据说这个软件在大多数手机上查出40%+的程序在偷窃用户数据（WOW!）。而Icekysl是一位来自中国的受欢迎的手机软件作者。于是手机后门+中国威胁立刻就成了这款基于求成的lookup的炒作主题。在BH上炒一炒后就被半懂不懂的VB小编搬上了MobileBeat的首页。MobileBeat作为Venturebeat的重头内容，在国内的互联网“先锋”中很有影响力，于是被国内的各种网站不伦不类地翻译过来再添油加醋地继续炒&#8230;读罢新闻之后，我惊叹原来Iceskysl是一个掌控着全球手机的恐怖大BOSS [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>557</wp:comment_id>
			<wp:comment_author><![CDATA[rubyu2]]></wp:comment_author>
			<wp:comment_author_email>zhangyaning1985@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://7av3</wp:comment_author_url>
			<wp:comment_author_IP>220.184.114.96</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 01:22:35</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 01:22:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我惊叹原来Iceskysl是一个掌控着全球手机的恐怖大BOSS]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>558</wp:comment_id>
			<wp:comment_author><![CDATA[rubyu2]]></wp:comment_author>
			<wp:comment_author_email>zhangyaning1985@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://7av3</wp:comment_author_url>
			<wp:comment_author_IP>220.184.114.96</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 01:24:56</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 01:24:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你的blog回复有点小bug啊！我在光标放到验证码输入框时，光标就会自动跳到uri这里，而且如果uri不写的话，下面的验证码输入的内容会情况，并且内容会写到uri里。
我用的firefox3.5.9]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>559</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email>cash.zhao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.113.134.179</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 01:28:20</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 01:28:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，支持你。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>560</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>122.200.95.194</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 01:32:35</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 01:32:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@rubyu2
看上去好像确实有点问题，不过你好像顺利发布上来了～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>561</wp:comment_id>
			<wp:comment_author><![CDATA[大牛]]></wp:comment_author>
			<wp:comment_author_email>jao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.245.138.101</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 03:22:47</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 03:22:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[狗日的国外媒体，污蔑中国开发者，等我有钱了我灭了他，支持你。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>562</wp:comment_id>
			<wp:comment_author><![CDATA[cowboy]]></wp:comment_author>
			<wp:comment_author_email>xxx@xxx.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.117.197.84</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 06:31:32</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 06:31:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[建议你在http://imnet.us/挂出申明，最好用多语言。希望主动出击，光在中文圈里发信是不够的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>563</wp:comment_id>
			<wp:comment_author><![CDATA[lwz7512]]></wp:comment_author>
			<wp:comment_author_email>lwz7512@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.86.84.36</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 07:11:26</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 07:11:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恭喜你被炒作了一把，呵呵，名声鹤起啊！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>564</wp:comment_id>
			<wp:comment_author><![CDATA[geolo]]></wp:comment_author>
			<wp:comment_author_email>geolo@vip.qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://geolo.co.cc</wp:comment_author_url>
			<wp:comment_author_IP>222.78.246.179</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 15:13:57</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 15:13:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[本来，支持你，也希望移动的那个ophone能够真正起来，以后就不要去依赖android了。 只要我们这些国内的开发者努力，有一天我们不会向国外交那些“规范费”了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>565</wp:comment_id>
			<wp:comment_author><![CDATA[lxe]]></wp:comment_author>
			<wp:comment_author_email>jaow@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.246.96.9</wp:comment_author_IP>
			<wp:comment_date>2010-07-30 19:17:55</wp:comment_date>
			<wp:comment_date_gmt>2010-07-30 19:17:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[发现国外的媒体开始反省自我了,应该向我国开发者道歉.
狗日的国外媒体,老是觉得中国人都是黑客]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>566</wp:comment_id>
			<wp:comment_author><![CDATA[数码小站 &raquo; 偷窃用户数据的壁纸？作者发布声明]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.wwssadad.com/web/archives/2923</wp:comment_author_url>
			<wp:comment_author_IP>98.130.2.113</wp:comment_author_IP>
			<wp:comment_date>2010-07-31 00:40:18</wp:comment_date>
			<wp:comment_date_gmt>2010-07-31 00:40:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 原文：http://iceskysl.1sters.com/?p=757 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>567</wp:comment_id>
			<wp:comment_author><![CDATA[zh.weir]]></wp:comment_author>
			<wp:comment_author_email>zh.weir@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogjava.net/zh-weir/</wp:comment_author_url>
			<wp:comment_author_IP>113.77.230.61</wp:comment_author_IP>
			<wp:comment_date>2010-07-31 01:13:57</wp:comment_date>
			<wp:comment_date_gmt>2010-07-31 01:13:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哥们儿，你全球闻名了~ 恭喜恭喜!哈哈！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>568</wp:comment_id>
			<wp:comment_author><![CDATA[godluo]]></wp:comment_author>
			<wp:comment_author_email>godluo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.132.64.202</wp:comment_author_IP>
			<wp:comment_date>2010-08-01 12:40:29</wp:comment_date>
			<wp:comment_date_gmt>2010-08-01 12:40:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great 挺你]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>569</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email>nobody@anymail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.254.83.144</wp:comment_author_IP>
			<wp:comment_date>2010-08-12 07:42:20</wp:comment_date>
			<wp:comment_date_gmt>2010-08-12 07:42:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还有这样的事啊。
另，风投博客的更新：
http://mobile.venturebeat.com/2010/08/04/google-android-wallpaper-apps-safe/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>570</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.118.112.239</wp:comment_author_IP>
			<wp:comment_date>2010-08-12 09:57:51</wp:comment_date>
			<wp:comment_date_gmt>2010-08-12 09:57:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那个文章的作者感觉还想继续炒作一把，被下面一个人的回复骂了一通，呵呵～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fix the passive netstat connections in Munin</title>
		<link>http://www.iceskysl.com/?p=788</link>
		<pubDate>Thu, 19 Aug 2010 04:04:28 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=788</guid>
		<description></description>
		<content:encoded><![CDATA[<strong> </strong>

<strong><img title="Munin Logo" src="http://www.silverark.co.uk/files/munin.png" alt="Munin Logo" width="100" height="26" />If your running Munin in WHM they you may have noticed the passive netstat connections have been rising steadily over the last couple of weeks. This isn't a problem with your server, its a Munin bug that can be easily fixed.</strong>

<strong> </strong>

<img title="Passive netstat connection - Munin" src="http://www.silverark.co.uk/files/netstat.png" alt="Passive netstat  connection - Munin" width="250" height="134" />

Apparently the problem stemms from Munin counting the passive connections rejected. You can fix this problem quite easily by following the instructions below

Edit the following file:
/usr/share/munin/plugins/netstat

and change the line
<div id="_mcePaste"><em>netstat -s | awk '/active connections/ { print "active.value " $1 } /passive connection/ { print "passive.value " $1 } /failed connection/ { print "failed.value " $1 } /connection resets/ { print "resets.value " $1 } /connections established/ { print "established.value " $1 }'</em></div>
<div>to</div>
<div id="_mcePaste"><em>netstat -s | awk '/active connections/ { print "active.value " $1 } /passive connection openings/ { print "passive.value " $1 } /failed connection/ { print "failed.value " $1 } /connection resets/ { print "resets.value " $1 } /connections established/ { print "established.value " $1 }'</em></div>
<strong> ref:</strong>
http://markmaunder.com/2008/how-to-fix-munins-netstat-passive-connections-increasing-constantly/
http://www.silverark.co.uk/knowledge/hosting/fix-the-passive-netstat-connections-in-munin]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>788</wp:post_id>
		<wp:post_date>2010-08-19 04:04:28</wp:post_date>
		<wp:post_date_gmt>2010-08-19 04:04:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fix-the-passive-netstat-connections-in-munin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="munin"><![CDATA[Munin]]></category>
		<category domain="post_tag" nicename="netstat"><![CDATA[netstat]]></category>
		<category domain="post_tag" nicename="passive"><![CDATA[passive]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_a4c5886d5a868ffc5f126b6f3c0602b2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_108a75b560b8e793c8b9597d1bb68bb0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ChartsOnRails</title>
		<link>http://www.iceskysl.com/?p=791</link>
		<pubDate>Sat, 21 Aug 2010 05:48:59 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=791</guid>
		<description></description>
		<content:encoded><![CDATA[这几天需要找到漂亮的Charts类库，找了几个，发现一个很不粗的，mark下待使用，介绍如下：

Highcharts is a charting library written in pure JavaScript, offering an easy way of adding interactive charts to your web site or web application. Highcharts currently supports line, spline, area, areaspline, column, bar, pie and scatter chart types.

有兴趣的可以参考如下连接去看看：

http://highcharts.com/

http://railscasts.com/episodes/223-charts

http://www.spritle.com/blogs/?p=859]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>791</wp:post_id>
		<wp:post_date>2010-08-21 05:48:59</wp:post_date>
		<wp:post_date_gmt>2010-08-21 05:48:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chartsonrails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="charts"><![CDATA[Charts]]></category>
		<category domain="post_tag" nicename="highcharts"><![CDATA[Highcharts]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_f21c1b807c76e2bb3d0299a1894b1598</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c8d957da76e9ce062904188a2f35e585</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5590fbc6559c13e3e723b08770cead6f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>571</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>221.221.148.215</wp:comment_author_IP>
			<wp:comment_date>2010-08-30 11:33:44</wp:comment_date>
			<wp:comment_date_gmt>2010-08-30 11:33:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用Highcharts画曲线图的时间轴问题
http://blog.yidijimao.net/?p=388]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>malformed format string on rails~</title>
		<link>http://www.iceskysl.com/?p=793</link>
		<pubDate>Sat, 04 Sep 2010 00:39:58 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=793</guid>
		<description></description>
		<content:encoded><![CDATA[在rails中使用find进行模糊查询时，出现了<strong>malformed</strong> <strong>format string</strong><strong>（</strong>输入为字符）或非法字符（输入为数字）的提示。
（1） @vendors  = Vendor.find(:all,:conditions=&gt;[@sql])
（2） @vendors = Vendor.find_by_sql("select * from vendor where "+@sql)
错误发生在按（1）方式查询过程中，采用（2）方式可以避免这个错误，这间接说明了find_by_sql确实相当不安全。
查阅了一下资料，对于这个问题的说法如下：Rails uses sprintf (%) on the inside. So, Escape your % with %，因此只要将模糊查询的地方一个百分号全部换成两个便可以解决问题。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date>2010-09-04 00:39:58</wp:post_date>
		<wp:post_date_gmt>2010-09-04 00:39:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>malformed-format-string-on-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby on Rails 3 的相关资料</title>
		<link>http://www.iceskysl.com/?p=796</link>
		<pubDate>Sat, 04 Sep 2010 02:12:11 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=796</guid>
		<description></description>
		<content:encoded><![CDATA[1.<a href="http://guides.rubyonrails.org/3_0_release_notes.html">Rails 3.0 Release Notes</a> - Rails导册对所有Ruby on Rails开发者来说都是很宝贵的资源，这个发布文档介绍了很多API的改进和新特性。

2.<a href="http://railsplugins.org/">RailsPlugins.org</a> – 提供了很多 Rails 3的插件.

3.<a href="http://adventuresincoding.com/2010/07/having-ruby-on-rails-3-my-way/">Having Ruby on Rails 3 My Way</a> - Rails 3与Mongoid, Haml, jQuery等的安装

4.<a href="http://litanyagainstfear.com/blog/2010/02/03/the-rails-module/">The Rails Module (in Rails 3)</a> -在Rails模块中一些有用的方法

5.<a href="http://blog.plataformatec.com.br/2010/02/rails-3-i18n-changes/">Rails 3 I18n changes</a> - I18n的改变.

6.<a href="http://rubyonrails.org/screencasts/rails3">Ruby on Rails 3 Screencast series</a>
<h2>ActionController / Rack</h2>
7.<a href="http://blog.plataformatec.com.br/2009/08/embracing-rest-with-mind-body-and-soul/">Embracing REST with mind, body and soul</a> - José Valim 介绍了 RESTful responders与Rails 3 controller的使用。

8.<a href="http://railscasts.com/episodes/224-controllers-in-rails-3">Railscasts #224 Controllers in Rails 3</a> – Rails 3 controllers的新特性.

9.<a href="http://www.engineyard.com/blog/2010/render-options-in-rails-3/">Render Options in Rails 3</a> -  Rails 3的渲染的变化.

10.<a href="http://pivotallabs.com/users/jdean/blog/articles/1370-adding-routes-for-tests-specs-with-rails-3">Adding Routes for tests / specs with Rails 3</a>

11.<a href="http://jasonseifer.com/2009/04/08/32-rack-resources-to-get-you-started">32 Rack Resources to Get You Started</a> -  rack相关资源的整合.
<h2>ActionMailer</h2>
12.<a href="http://lindsaar.net/2010/1/26/new-actionmailer-api-in-rails-3">New ActionMailer API in Rails 3.0</a> - 如何使用新的ActionMailer.

13.<a href="http://railsdispatch.com/posts/actionmailer">A Whole New ActionMailer</a> -  ActionMailer的特性.
<h2>ActiveRecord/ActiveModel</h2>
14.<a href="http://yehudakatz.com/2010/01/10/activemodel-make-any-ruby-object-feel-like-activerecord/">ActiveModel: Make Any Ruby Object Feel Like ActiveRecord</a> – ActiveModel的模块化.

15.<a href="http://railscasts.com/episodes/219-active-model">Railscasts #219 Active Model </a>- 如何正确的添加ActiveModel 模块到tableless模块.

16.<a href="http://railsdispatch.com/posts/activerelation">ActiveRelation: ActiveRecord Gets a Facelift </a>-新的ActiveRecord finder API.

17.<a href="http://m.onkey.org/2010/1/22/active-record-query-interface">Active Record Query Interface</a> - 自Rails 2以来，ActiveRecord query接口的变化.
<h2>Bundler</h2>
18.<a href="http://gembundler.com/">Gembundler.com</a> -官方的 Bundler文档，包含一些扩展的文档.

19.<a href="http://railsdispatch.com/posts/bundler">Library Management Gets an Update in Rails 3</a> 。

20.<a href="http://railscasts.com/episodes/201-bundler">Railscasts #201 Bundler </a>- 在Rails 3中，如何使用bundler.

21.<a href="http://adventuresincoding.com/2010/02/riding-ruby-on-rails-3-bundler/">AdventuresInCoding.com screencast on Bundler</a> 。
<h2>Railties</h2>
22.<a href="http://www.igvita.com/2010/08/04/rails-3-internals-railtie-creating-plugins/">Rails 3 Internals: Railtie &amp; Creating Plugins</a> -  Railties in Rails 3.

23.<a href="http://adventuresincoding.com/2010/07/jumpstart-your-ruby-on-rails-3-applications-with-rails-template/">rails-templater</a> - 如何生成一个 greenfield Rails 3 应用.

24.<a href="http://caffeinedd.com/guides/331-making-generators-for-rails-3-with-thor">Making generators for Rails 3 with Thor</a> – 如何使用新的generators ，以及在gem中如何去处理.
<h2>Routes</h2>
25.<a href="http://www.engineyard.com/blog/2010/the-lowdown-on-routes-in-rails-3/">The Lowdown on Routes in Rails 3</a> -在 Rails 3创建routes的几个不同的方法.

26.<a href="http://edgeguides.rubyonrails.org/routing.html">Rails Routing from the Outside In</a> - 新的 router介绍.
<h2>Plugins</h2>
27.<a href="http://weblog.rubyonrails.org/2010/2/9/plugin-authors-toward-a-better-future">Plugin Authors: Toward a Better Future</a> - Rails 3中创建插件的改变.

28.<a href="http://railsdispatch.com/posts/building-or-updating-a-rails-3-plugin">Customizing Rails Apps with Plugins </a>- 使用responders, form, devise以及mail form的插件.

29.<a href="http://blog.plataformatec.com.br/2010/08/devise-1-1-is-out-and-ready-to-rock-with-rails-3/">Devise 1.1 is out and ready to rock with Rails 3</a> - Devise 1.1的新特性。
<h2>Books</h2>
30.<a href="http://beginningrails.com/">Beginning Rails 3</a> – Cloves Carneiro Jr 和 Rida Al Barazi 撰写的 Rails 3 入门书籍，其中有很多实例.

31.<a href="http://my.safaribooksonline.com/9780132480345">The Rails 3 Way</a> .

32.<a href="http://www.manning.com/katz/">Rails 3 In Action </a>- BDD with Cucumber

33.<a href="http://www.railsupgradehandbook.com/">Rails 3 Upgrade Handbook</a> - Jeremy McAnally的书籍，教你如何从Rails 2 应用升级到Rails 3.

34.<a href="http://railstutorial.org/">Ruby on Rails Tutorial: Learn Rails by Example</a> – 一步一步的教学习 Rails.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>796</wp:post_id>
		<wp:post_date>2010-09-04 02:12:11</wp:post_date>
		<wp:post_date_gmt>2010-09-04 02:12:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-on-rails-3-%e7%9a%84%e7%9b%b8%e5%85%b3%e8%b5%84%e6%96%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails3"><![CDATA[rails3]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby文件操作大全</title>
		<link>http://www.iceskysl.com/?p=798</link>
		<pubDate>Sat, 04 Sep 2010 02:14:21 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=798</guid>
		<description></description>
		<content:encoded><![CDATA[参考：

http://pleac.sourceforge.net/pleac_ruby/filecontents.html

<a href="http://www.javaeye.com/topic/517410">ruby文件操作大全</a> http://www.javaeye.com/topic/517410

用ruby读写文本文件 http://www.albertsong.com/read-87.html

Ruby 读取目录（Diretories)，文件(files), 网页的几个方法小结

http://weixuhong.com/rubyruby-on-rails/2008/10/06/ruby-%E8%AF%BB%E5%8F%96%E7%9B%AE%E5%BD%95%EF%BC%88diretories%EF%BC%8C%E6%96%87%E4%BB%B6files-%E7%BD%91%E9%A1%B5%E7%9A%84%E5%87%A0%E4%B8%AA%E6%96%B9%E6%B3%95%E5%B0%8F%E7%BB%93/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>798</wp:post_id>
		<wp:post_date>2010-09-04 02:14:21</wp:post_date>
		<wp:post_date_gmt>2010-09-04 02:14:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c%e5%a4%a7%e5%85%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="file"><![CDATA[file]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_2d1983d09b20af338f7b07e3b6c1581e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a3f1e060cbe051cafa23c091b246a0a7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>spreadsheet, ruby生成Excel电子表格</title>
		<link>http://www.iceskysl.com/?p=800</link>
		<pubDate>Sat, 04 Sep 2010 02:16:56 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=800</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 13.2px;"><strong>安装gem：</strong></span>
<div>[root@iceskysl]# gem install spreadsheet --no-ri --no-rdoc</div>
<div id="_mcePaste">Successfully installed ruby-ole-1.2.10.1</div>
<div id="_mcePaste">Successfully installed spreadsheet-0.6.4.1</div>
<div id="_mcePaste">2 gems installed</div>
[root@iceskysl]# gem install spreadsheet --no-ri --no-rdocSuccessfully installed ruby-ole-1.2.10.1Successfully installed spreadsheet-0.6.4.12 gems installed

<strong>使用：</strong>

require 'rubygems'

require 'spreadsheet/excel'

SUM_SPREADSHEET = 'test.xls'

workbook = Spreadsheet::Excel.new(SUM_SPREADSHEET)

worksheet = workbook.add_worksheet('Random numbers and their sum.')

# sum = 0

# random_numbers = (0..9).collect { rand(100) }

#

# puts "random_numbers=#{random_numbers.size}"

# worksheet.write_column(0, 0, random_numbers)

# worksheet.write_column(0, 1, random_numbers)

worksheet.update_row 4, 'Hannes Wyss', 'Switzerland', 'Author'

row = worksheet.row(1)

row.push 'Creator of Ruby'

row.unshift 'Yukihiro Matsumoto'

# format = workbook.add_format(:bold =&gt; true)

# worksheet.write(10, 0, "Sum:", format)

# worksheet.write(10, 1, random_numbers.inject(0) { |sum, x| sum + x })

workbook.close

参考：

http://sg552.javaeye.com/blog/701428

http://sunfengcheng.javaeye.com/blog/240130]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>800</wp:post_id>
		<wp:post_date>2010-09-04 02:16:56</wp:post_date>
		<wp:post_date_gmt>2010-09-04 02:16:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spreadsheet-ruby%e7%94%9f%e6%88%90excel%e7%94%b5%e5%ad%90%e8%a1%a8%e6%a0%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="spreadsheet"><![CDATA[spreadsheet]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_681958c913e0151cda1c9f977dd89d18</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_276e6098bd2ab0d9d8ccfebabdc6245a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>google adsense合作伙伴日活动（上海站）</title>
		<link>http://www.iceskysl.com/?p=803</link>
		<pubDate>Wed, 08 Sep 2010 18:31:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=803</guid>
		<description></description>
		<content:encoded><![CDATA[受google邀请参加他们2010年得google adsense合作伙伴日活动，9月8日来到上海，第一站，上次来北京好像是7月得时候～活动控制规模，所以不是很多人，我有个topic，主要分享国内android开发者的现况和一些模式，见到很多老朋友，结识一些新朋友～活动之余，和同事拜访了好几个合作伙伴，去了龙旗，展讯，联想等公司，聊的都还挺好，还顺道去盛大创新院拜访了下～

昨天夜里去新天地见了一个朋友，今天晚上吃完饭去外滩转了一圈，白天在浦东浦西跑，这次把上海给搞的比较熟了～明天下午飞机回北京～周五是北京场，接下去是广州场～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>803</wp:post_id>
		<wp:post_date>2010-09-08 18:31:18</wp:post_date>
		<wp:post_date_gmt>2010-09-08 18:31:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-adsense%e5%90%88%e4%bd%9c%e4%bc%99%e4%bc%b4%e6%97%a5%e6%b4%bb%e5%8a%a8%ef%bc%88%e4%b8%8a%e6%b5%b7%e7%ab%99%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using the Rails logger outside of models and controllers</title>
		<link>http://www.iceskysl.com/?p=806</link>
		<pubDate>Fri, 17 Sep 2010 09:50:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=806</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px} -->You can use the Rails logger outside of Rails models in at least version 2.3.X and up of Rails. You might be used to doing the following in your models or controllers:

<em>logger.info "Some debugging info I want to see in my development log."</em>

If you make a regular model that doesn’t inherit from ActiveRecord, though, you may see the following error:

undefined local variable or method `logger' for #&lt;Class:0x42fd77c&gt;

The solution is to call <strong>Rails</strong>.logger.info (or debug, or warn) as follows:

<em>Rails.logger.info "Some debugging info I want to see in my development log."</em>

I hope that helps someone.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>806</wp:post_id>
		<wp:post_date>2010-09-17 09:50:49</wp:post_date>
		<wp:post_date_gmt>2010-09-17 09:50:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-the-rails-logger-outside-of-models-and-controllers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creating Small Unique Tokens In Ruby</title>
		<link>http://www.iceskysl.com/?p=809</link>
		<pubDate>Mon, 20 Sep 2010 06:36:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=809</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="_mcePaste">require "rubygems"</div>
<div id="_mcePaste">require 'active_support'</div>
<div id="_mcePaste">require 'digest'</div>
<div id="_mcePaste">#http://blog.logeek.fr/2009/7/2/creating-small-unique-tokens-in-ruby</div>
<div id="_mcePaste">puts "rand=&gt; " + rand(36**8).to_s(36)</div>
<div id="_mcePaste">puts "Digest::SHA1=&gt; "+Digest::SHA1.hexdigest("some-random-string")[8..16]</div>
<div id="_mcePaste">puts "ActiveSupport::SecureRandom=&gt;    "+ ActiveSupport::SecureRandom.base64(8).gsub("/","_").gsub(/=+$/,"")</div>
<div id="_mcePaste">puts ActiveSupport::SecureRandom::hex(8)</div>
<div id="_mcePaste">puts Array.new(4) { rand(256) }.pack('C*').unpack('H*').first</div>
require "rubygems"require 'active_support'require 'digest'
#http://blog.logeek.fr/2009/7/2/creating-small-unique-tokens-in-rubyputs "rand=&gt; " + rand(36**8).to_s(36)
puts "Digest::SHA1=&gt; "+Digest::SHA1.hexdigest("some-random-string")[8..16]puts "ActiveSupport::SecureRandom=&gt;    "+ ActiveSupport::SecureRandom.base64(8).gsub("/","_").gsub(/=+$/,"")
puts ActiveSupport::SecureRandom::hex(8)
puts Array.new(4) { rand(256) }.pack('C*').unpack('H*').first]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>809</wp:post_id>
		<wp:post_date>2010-09-20 06:36:01</wp:post_date>
		<wp:post_date_gmt>2010-09-20 06:36:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-small-unique-tokens-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>572</wp:comment_id>
			<wp:comment_author><![CDATA[greg]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://%/zzihahp8</wp:comment_author_url>
			<wp:comment_author_IP>31.134.226.247</wp:comment_author_IP>
			<wp:comment_date>2011-09-23 04:51:10</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 20:51:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong><b><a href="http://legalrock-pop.info?author=all Download@pop.Rock" rel="nofollow">...</a></b></blockquote>...</strong>

Search rock US Charts...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Configure SVN for your rails app.</title>
		<link>http://www.iceskysl.com/?p=812</link>
		<pubDate>Mon, 04 Oct 2010 14:24:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=812</guid>
		<description></description>
		<content:encoded><![CDATA[http://gist.github.com/609762

#!/bin/sh
svn remove log/*
svn commit -m"removing log files"
svn propset svn:ignore "*.log" log/
svn update log/
svn commit -m 'Ignoring all files in /log/ ending in .log'
svn move config/database.yml config/database.example
svn commit -m 'Moving database.yml to database.example to provide a template for anyone who checks out the code'
svn propset svn:ignore "database.yml" config/
svn update config/
svn commit -m 'Ignoring database.yml'
svn remove tmp/*
svn propset svn:ignore "*" tmp/
svn update tmp/
svn commit -m "ignore tmp/ content from now"
svn propset svn:ignore ".htaccess" config/
svn update config/
svn commit -m 'Ignoring .htaccess'
svn propset svn:ignore "dispatch.fcgi" config/
svn update config/
svn commit -m 'Ignoring dispatch.fcgi']]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>812</wp:post_id>
		<wp:post_date>2010-10-04 14:24:06</wp:post_date>
		<wp:post_date_gmt>2010-10-04 14:24:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configure-svn-for-your-rails-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_49a08a335ccaeb4f883894986e990471</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[gerard]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://%/zzsakhk3</wp:comment_author_url>
			<wp:comment_author_IP>31.134.239.44</wp:comment_author_IP>
			<wp:comment_date>2011-09-17 03:17:14</wp:comment_date>
			<wp:comment_date_gmt>2011-09-16 19:17:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong><b>...</a></b></blockquote>...</strong>

Search music now US Charts...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>delete &amp; not exists in Mysql</title>
		<link>http://www.iceskysl.com/?p=816</link>
		<pubDate>Mon, 04 Oct 2010 14:49:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=816</guid>
		<description></description>
		<content:encoded><![CDATA[This works

<em>select *  from tb_patient p where not exists (select col_patient_id from tb_payment   where  col_patient_id = p.col_unid);</em>

However, this does <span style="color: #ff0000;">NOT</span> work

<em>delete  from tb_patient p where not exists (select col_patient_id from tb_payment  where col_patient_id = p.col_unid);</em>

why? Because of the alias p!!! Table alias is not allowed in not exists subquery!! Instead, you have to use the full table name~~~~ faint!

<strong>Correct code</strong>
<em> delete  from tb_patient where not exists (select col_patient_id from tb_payment  where col_patient_id = tb_patient.col_unid);</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date>2010-10-04 14:49:42</wp:post_date>
		<wp:post_date_gmt>2010-10-04 14:49:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delete-not-exists-in-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>解决ssh_exchange_identification: Connection closed by remote host,</title>
		<link>http://www.iceskysl.com/?p=819</link>
		<pubDate>Tue, 19 Oct 2010 02:45:27 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=819</guid>
		<description></description>
		<content:encoded><![CDATA[用的好好的ssh突然链不上去了,查到说修改<span style="font-size: 15.6px;">/etc/hosts.deny 和 /etc/hosts.allow</span>

然后发现/etc/ssh下的文件不能设为777的权限，要将权限设为600。

于是偶chmod 600 /etc/ssh/*，然后再次重启了ssh。
<div id="_mcePaste">root@e:/home/iceskysl# /etc/init.d/ssh restart</div>
<div id="_mcePaste">/var/run/sshd must be owned by root and not group or world-writable.</div>
<div id="_mcePaste">root@e:/home/iceskysl#  chmod 600  /var/run/sshd</div>
root@e:/home/iceskysl# /etc/init.d/ssh restart/var/run/sshd must be owned by root and not group or world-writable.root@li84-64:/home/iceskysl#  chmod 600  /var/run/sshd]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>819</wp:post_id>
		<wp:post_date>2010-10-19 02:45:27</wp:post_date>
		<wp:post_date_gmt>2010-10-19 02:45:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3ssh_exchange_identification-connection-closed-by-remote-host</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>“Debug certificate expired” error in eclipse android plugins</title>
		<link>http://www.iceskysl.com/?p=823</link>
		<pubDate>Tue, 30 Nov 2010 17:10:04 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=823</guid>
		<description></description>
		<content:encoded><![CDATA[I am using eclipse android plugins to build a project, But i am getting this error in the console window:

[2010-02-03 10:31:14 - androidVNC]Error generating final archive:
Debug certificate expired on 1/30/10 2:35 PM!

IceskYsl@eoe ~/.android $ pwd
/Users/IceskYsl/.android
IceskYsl@eoe ~/.android $ ll
total 48
drwxr-xr-x   9 IceskYsl  staff   306 Nov 17  2009 .
drwxr-xr-x+ 62 IceskYsl  staff  2108 Nov 30 13:51 ..
-rw-r--r--   1 IceskYsl  staff   123 Sep 30 15:42 adb_usb.ini
-rw-r--r--   1 IceskYsl  staff   204 Dec  1 00:52 androidtool.cfg
drwxr-xr-x   6 IceskYsl  staff   204 Oct 16 16:17 avd
-rw-r--r--   1 IceskYsl  staff  1393 Dec  1 00:37 ddms.cfg
-rw-r--r--   1 IceskYsl  staff  1267 Nov 17  2009 debug.keystore
-rw-r--r--   1 IceskYsl  staff   759 Nov 17  2009 default.keyset
-rw-r--r--   1 IceskYsl  staff    78 Dec  1 00:52 repositories.cfg

Delete your debug certificate under ~/.android/debug.keystore (on Linux and Mac OS X); the directory is something like %USERHOME%/.androidon Windows.

The Eclipse plugin should then generate a new certificate when you next try to build a debug package.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date>2010-11-30 17:10:04</wp:post_date>
		<wp:post_date_gmt>2010-11-30 17:10:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e2%80%9cdebug-certificate-expired%e2%80%9d-error-in-eclipse-android-plugins</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<category domain="post_tag" nicename="certificate"><![CDATA[certificate]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2010年总结，2011年展望</title>
		<link>http://www.iceskysl.com/?p=827</link>
		<pubDate>Mon, 03 Jan 2011 07:46:24 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=827</guid>
		<description></description>
		<content:encoded><![CDATA[时间飞快，2010年悄然流逝,该坐下来总结下刚刚过去的2010年,也有必要想想2011年的目标和期待了~刚刚过去的2010年是改变最大的一年,不光是我,我身边的人也是,谢谢那些帮助过，支持过，关注过我们的人，谢谢你们；

<strong>1. 工作方面</strong>

今年一整年都贡献了了eoe，eoe从2008年10月开始撰写第一本android的书《google android开发入门和实战》开始,2009年7月份注册公司,2010年整整一年的发展,我们度过了几个关键的时间点,曾经的挣扎和迷茫都已经过去了,我清晰的记得2009年年尾的时候，和一起奋斗的几个哥们在吃火锅的时候定下的目标，如今想想还非常的清晰。

2010年，和大家伙们闷头奋斗的一年，我们的第一本书《google android开发入门和实战》重印了8次，销量突破15000册，出版了第二本android技术书籍《it's android time：Google android创赢路线和产品开发实战》发布并迅速加印；eoe从当初的6人发展到30+的团队，从全部技术人员到有产品，有运营，有市场和商务区域完善的团队；我们拿到了投资，有了自己的顾问，和国内大多数的投资商们建立了良好的关系；从当初的吃住，工作一起的小黑屋搬到了明亮的办公室，从之前的迷茫到找到我们的方向；我们拥有了众多且知名的合作伙伴，我们的产品一步一步的完善，从当初的拿不出手到现在由衷的自豪。

2010年，我参加了上海paypal的开发者日做了主题演讲；参加了北京csdn第一期TUP活动做了主题演讲；参加了成都天翼空间的“能力开发”活动做了主题演讲；给台湾的开发者做了一次主题topic；和google 一到在全国7个城市路演（上海，北京，广州，深圳，成都，重庆，杭州）；和联想合办了联想开发者大会；也举办了我们自己的eoe首届移动开发者峰会，与会400+多人，非常成功！

我们推出eoemarket的新版本优亿市场，得到市场和用户的认可；eoeadnroid转型为开发者门户，推出了开发者服务平台（eoeSDK）；还有一些正在开发中的产品！

个人在2010年是非常忙碌的一年：技术，商务，活动，演讲，战略，团队很多的事情，也有了长足的提升。认识了很多人，有些是新朋友，有些则是老朋友。

<strong>2. 生活方面</strong>

2010年是生活较为稳定的一年，太太tina辞了不错的工作，从深圳来到北京和我一起生活了，虽然每日工作在一起的时间比较有限，但确实也体会了家的温馨；买了一套90+平的房子算是一个圆了去年许下的一个目标，虽然何时才能住进去还是个未知数，但那确实有一个属于自己的空间；哥哥结婚了，了却了父母的一番心事，最近听说要生小孩了，真是速度的很，爸妈应该要高兴了，希望别来催我生小孩啦，呵呵。奶奶，姥姥姥爷，父母亲人都很健康，无病无灾！tina的奶奶去了天堂，在那边享受快乐的生活.

2010年过的很忙碌，也有一些尚未完成的心愿，也错过了一些事情，留下了些许遗憾，那些由于种种原因没能一路走下来的兄弟们，希望我们还有机会并肩作战！那些没能经常联系的朋友们，我时刻想念大家，希望大家都好！

希望2011年能完成，列举一二，权当自勉！

1. eoe能健康发展，成为这次移动互联网浪潮的android方面的赢家！

2. 能做一个有可能改变世界的产品；

3. tina能找到自己真正喜欢的工作，做自己喜欢的事情；

4. 在技术，英语，管理，交际方面有着长足的提高；

5. 能找到一个合适的定居的地方为安定下来做些准备；

6. 能和tina一起去一次远途旅行，欧洲？也许吧；

7.能拿到驾照，顺便也有个属于自己的交通工具；

8. 多些空闲，多看看书，多些思考，多些时间写写东西！

9. 亲戚，朋友包括我和tina都健康快乐！

10. 世界太平，和谐迎接2012！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>827</wp:post_id>
		<wp:post_date>2011-01-03 07:46:24</wp:post_date>
		<wp:post_date_gmt>2011-01-03 07:46:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2010%e5%b9%b4%e6%80%bb%e7%bb%93%ef%bc%8c2011%e5%b9%b4%e5%b1%95%e6%9c%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>574</wp:comment_id>
			<wp:comment_author><![CDATA[hi]]></wp:comment_author>
			<wp:comment_author_email>hello@ad.com</wp:comment_author_email>
			<wp:comment_author_url>http://jiwai.com</wp:comment_author_url>
			<wp:comment_author_IP>114.255.155.130</wp:comment_author_IP>
			<wp:comment_date>2011-01-06 09:25:49</wp:comment_date>
			<wp:comment_date_gmt>2011-01-06 09:25:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[听说你们 拿了 投资人的钱 去还 房贷了 ， 不会是真的吧!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>575</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.128.175.42</wp:comment_author_IP>
			<wp:comment_date>2011-01-14 08:00:11</wp:comment_date>
			<wp:comment_date_gmt>2011-01-14 08:00:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似还是第一次听说～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>574</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>576</wp:comment_id>
			<wp:comment_author><![CDATA[XDash]]></wp:comment_author>
			<wp:comment_author_email>xdash@139.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.syncoo.com</wp:comment_author_url>
			<wp:comment_author_IP>112.85.132.140</wp:comment_author_IP>
			<wp:comment_date>2011-01-15 16:05:33</wp:comment_date>
			<wp:comment_date_gmt>2011-01-15 16:05:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[充实的一年，祝贺！我是看你们的书顺藤摸瓜找到的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>577</wp:comment_id>
			<wp:comment_author><![CDATA[wwek]]></wp:comment_author>
			<wp:comment_author_email>licoolgo@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iamle.com</wp:comment_author_url>
			<wp:comment_author_IP>123.146.3.45</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 17:04:13</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 17:04:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1楼的说出了实情，哇咔咔。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3904</wp:comment_id>
			<wp:comment_author><![CDATA[up2u0609]]></wp:comment_author>
			<wp:comment_author_email>up2u0609@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.83.252.166</wp:comment_author_IP>
			<wp:comment_date>2011-11-14 14:32:00</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 14:32:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[无意间进来的，漂亮的征程！加油！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476357.2453";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325476319.3408";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475847.3257";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325475795.0775";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325472919.6994";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325474608.1626";s:7:"message";s:68:"Akismet 复查了此条评论，现在认为它不是垃圾邮件了";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7641</wp:comment_id>
			<wp:comment_author><![CDATA[2011计划年度总结回顾,2012年预期 - IceskYsl@1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.iceskysl.com/?p=1117</wp:comment_author_url>
			<wp:comment_author_IP>74.207.232.111</wp:comment_author_IP>
			<wp:comment_date>2012-01-25 03:48:16</wp:comment_date>
			<wp:comment_date_gmt>2012-01-25 03:48:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 2010年总结的时候曾写到：《2010年总结，2011年展望》 1. eoe能健康发展，成为这次移动互联网浪潮的android方面的赢家！ 回顾：2011年是eoe的发展年，我们从小到大，逐步成长，2011年初的时候我们还在西二旗的辉煌国际，20来个人，没什么品牌，没多少收入。2011年的eoe成长了不少，我们从20多人扩展到60多人，我们从商住两用的200平的办公室搬到了凯旋中心正规的400多平的办公室，我们自己的产品按照自己的规划和节奏逐步完善；我们有了自己的线下沙龙，扩展到上海，广州等地，初步形成我们自己的品牌和口碑。我们有了一些收入，我们有了发展壮大的资源，我们的团队更爱自己的工作，更爱eoe的氛围。现在说输赢都还为时尚早，我们正在前进的路上～ [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327545641.5119";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>mtr命令使用</title>
		<link>http://www.iceskysl.com/?p=833</link>
		<pubDate>Fri, 14 Jan 2011 08:04:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=833</guid>
		<description></description>
		<content:encoded><![CDATA[这里说的mtr是一个网络工具，结合了"traceroute"和"ping"功能于一身，非常好用的一个工具，别和我说"traceroute"和"ping"这两个命令不知道哟！~~

debian的apt中，只需要安装“mtr-tiny ”即可使用mtr命令。

linux下面的mtr输出大概如下面所列：

~$ mtr -r -n -c 100 <a href="http://www.163.com/" target="_blank">www.163.com</a>
HOST: hz**-** Loss% Snt Last Avg Best Wrst StDev
1. **.**.**.** 0.0% 100 1.9 3.6 1.8 23.0 3.3
2. 61.164.42.69 0.0% 100 0.6 0.8 0.5 7.1 0.6
3. 61.153.8.230 0.0% 100 0.6 0.6 0.4 2.2 0.2
4. 220.191.129.129 0.0% 100 0.5 0.5 0.4 4.3 0.5
5. 202.97.41.245 0.0% 100 7.8 16.7 7.7 182.6 30.0
6. 202.97.34.65 0.0% 100 33.7 43.3 33.7 228.4 34.7
7. 220.181.16.149 0.0% 100 31.6 32.2 31.4 44.1 2.4
8. 220.181.16.10 0.0% 100 46.5 42.9 32.7 55.6 5.8
9. 220.181.17.54 0.0% 100 42.4 41.5 36.1 49.7 3.0
10. 220.181.28.50 0.0% 100 30.4 30.3 30.2 30.5 0.1

输出各项的意思如下：

Loss% --很明显是丢包率，单位是"%";
Snt -- sent包的数量，如果是winmtr的话，还有一个"recv"表示收到回复包的数量，不过既然有"Loss"和"Snt"，其实"recv"也很容易算出来，个人感觉winmtr有点画蛇添足了;
Last -- 最后一个包的延时;
Avg -- 所有包的平均延时，同"ping"的"Avg";
Best -- 延时最小的包，同"ping"的"Min";
Wrst -- Worst,延时最大的包，同"ping"的"Max";
StDev -- Standard Deviation，标准差,winmtr无该项。
StDev的概念和计算方法参见这里（请自备爬墙工具）

个人认为，如果StDev很大，表示各个包的延时的差别很大，网络不太稳定。不过由于中间点是路由器，一般路由器可能会对icmp包做限制或者优先丢弃，所以中间节点的StDev可以忽略不看。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date>2011-01-14 08:04:42</wp:post_date>
		<wp:post_date_gmt>2011-01-14 08:04:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mtr%e5%91%bd%e4%bb%a4%e4%bd%bf%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[03. 技术归总 | Technic]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>578</wp:comment_id>
			<wp:comment_author><![CDATA[wwek]]></wp:comment_author>
			<wp:comment_author_email>licoolgo@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iamle.com</wp:comment_author_url>
			<wp:comment_author_IP>123.146.3.45</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 17:00:49</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 17:00:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mark 还不错的工具·]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>那些时间点们</title>
		<link>http://www.iceskysl.com/?p=835</link>
		<pubDate>Sat, 26 Mar 2011 05:29:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=835</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="blogDetailDiv">

2002.9 武汉，开始大学

2003.5  武汉，第二学位

2006.7 深圳，大学毕业开始工作

2008.10 北京，离开深圳，来到北京，参与别人创业

2009.5 北京，开始和朋友一起自主创业

2009.10 合肥，和tina步入婚姻殿堂

2010.4 北京，创业走过第一个阶段，有了真正的办公室

2010.7 北京，tina来到北京，终于不分居两地

2011.4 北京，创业走过第二个阶段

精彩还将继续...

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>835</wp:post_id>
		<wp:post_date>2011-03-26 05:29:19</wp:post_date>
		<wp:post_date_gmt>2011-03-26 05:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%82%a3%e4%ba%9b%e6%97%b6%e9%97%b4%e7%82%b9%e4%bb%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[castor]]></wp:comment_author>
			<wp:comment_author_email>castoryu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.castoryu.com</wp:comment_author_url>
			<wp:comment_author_IP>59.108.43.208</wp:comment_author_IP>
			<wp:comment_date>2011-03-26 06:06:37</wp:comment_date>
			<wp:comment_date_gmt>2011-03-26 06:06:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[年轻人呀，活力十足！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mac OS X（lion）软件推荐</title>
		<link>http://www.iceskysl.com/?p=841</link>
		<pubDate>Sat, 03 Sep 2011 04:31:57 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=841</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Mac OS X（lion）软件推荐</strong>

<a href="mailto:Iceskysl@gmail.com">Iceskysl@gmail.com</a> At 2011.09.03

<a href="http://iceskysl.1sters.com/?p=841">http://iceskysl.1sters.com/?p=841</a>

最近身边好多朋友都加入Mac阵营，对Mac OS X 的软件不是太熟悉，要我写个推荐软件清单，原本觉得网上类似的推荐应该很多，大致查了下，发现好多都比较陈旧了。

我08年开始使Mac，经过这三年多的使用，这里大致列出了一些自己使用过并且感觉比较不错的软件，供大家参考；需要说明的是每个人接触的软件有限，我的选择未必就是最好的，如果您有更好的软件推荐，还请告诉我；这个清单我会不定期更新，希望对大家有用。

这个清单被我分成上篇（大众用户篇）和下篇（技术人员篇），有的软件连接我就不加了，大家自己Google下应该不难找，实在找不到的可以给我留言，我找给你。

<strong> </strong>

<strong>上篇：大众用户篇</strong>

<strong> </strong>
<ul>
	<li><strong>网页浏览器 </strong>
<ul>
	<li>Chrome（推荐）：自从用了chrome，就没有其他浏览器再能吸引我了，强烈推荐这个（我更喜欢dev版的）</li>
	<li>Safari: 系统自带的浏览器，我会留着，但是使用的次数和时间都不长；</li>
	<li>Firefox：没有Chrome前的首选，但是有了Chrome，就越发觉得FF好臃肿，现基本不用；</li>
</ul>
</li>
	<li><strong>即时通讯</strong>
<ul>
	<li><strong> </strong><a href="http://adium.im/"><strong>Adium</strong></a> ：兼容多种聊天账户，我用来开MSN，Google Talk 和 Google App Talk；</li>
	<li><strong> </strong><a href="http://im.qq.com/qq/mac/"><strong>QQ for Mac</strong></a>：随着QQ的不断升级，现在的已经很棒了，算一款合格的mac软件了；</li>
	<li><strong>Skype</strong>：视屏聊天，需求不是很大，但是个不错的软件，需要skype的人肯定需要；</li>
</ul>
</li>
	<li>视频播放
<ul>
	<li><strong>MPlayerX</strong>:　之前用的比较多的是VLC，后来发现了Mplayerx就几本不使VLC了，非常强大的视屏播放器；</li>
	<li><strong>VLC</strong>：这个其实也不错，估计有人会喜欢</li>
</ul>
</li>
	<li>音频播放
<ul>
	<li><strong>iTunes</strong>：没啥好介绍的，功能强大，但是我不习惯听本地的歌，基本都是听在线的；</li>
</ul>
</li>
	<li>图片处理
<ul>
	<li><strong>Xee： 图片浏览用的，还不错的说；</strong></li>
	<li><strong>Picasa：google picasa用来整理照片；</strong></li>
	<li><strong>Pixelmator：是个画图工具</strong></li>
</ul>
</li>
	<li>压缩软件
<ul>
	<li><strong>7zX</strong>：非常强大的压缩软件，压缩出来的中文兼容windows</li>
	<li><strong>BetterZip</strong>：解压缩软件，支持zip、rar、7z等常见格式。</li>
</ul>
</li>
	<li>上传下载软件
<ul>
	<li><strong>FileZilla</strong>： FTP工具，在使windows的时候就使的FTP软件，尤其喜欢其支持sftp方式的连接和传输</li>
	<li><strong>uTorrent：BT</strong>工具，用的不多，但是一直装着了，还有个Xtorrent</li>
</ul>
</li>
	<li>办公软件
<ul>
	<li><strong>Adobe Reader 9</strong>：看PDF还是需要这个的，效果还不错</li>
	<li><strong> </strong><a href="http://www.evernote.com/"><strong>Evernote</strong></a><strong> </strong>：文字纪录，非常强大可以同步的记事本软件，比记事本强大好多倍，有了这个其他的文字纪录类的软件就不需要了（配合ios或者android客户端使用更棒）,这个文章就是在Evernote里写的；</li>
	<li><strong>dropbox</strong>：资料同步软件，也非常强大，把自己的文件同步一份，走到哪里都是主场，非常好用（国内部分区域被墙，自己想办法）；</li>
	<li>iWork '09: 文档处理工具</li>
</ul>
</li>
	<li>输入法
<ul>
	<li><strong>IMKQIM：比较老牌的输入法，很不错，FIT就用的比较少了；</strong></li>
	<li><strong>搜狗拼音：出了不久，还不怎么稳定，如果持续改进，应该是个很不错的输入法；</strong></li>
</ul>
</li>
	<li>系统软件
<ul>
	<li><strong>Quicksilver：非常棒的软件，快速启动，不用苦哈哈手工去找；</strong></li>
	<li><strong>CleanApp</strong>：清洁系统的，基本不用；</li>
	<li><strong>Mobile Partner</strong>：无线上网用的，连3g网卡的</li>
	<li><strong>VMware Fusion</strong>：虚拟机</li>
</ul>
</li>
</ul>
<strong> </strong>

<strong>下篇：技术人员篇</strong>

这列举了一些技术人员估计会感兴趣的工具，供参考！
<ul>
	<li>编程工具
<ul>
	<li>TextMate：号称是编程人员的神器，其实无论哪个工具用熟了都很好，TextMate确实很优秀，优秀到尽管其中文字体支持的不好，还是必须的装；</li>
	<li>MacVim：这个也是神器，把Vim用好到走到哪里都不怕；</li>
	<li>iTerm：必备软件，管理SSH链接</li>
	<li>MongoHub：管理MongoDB的工具</li>
	<li>Sequel Pro：mysql管理工具，很强大；</li>
	<li>MySQLWorkbench：mysql管理，用来做表结构设计的；</li>
</ul>
</li>
	<li>专业工具
<ul>
	<li>GitHub：用github的同学必备，很好用</li>
	<li>GitX：可视化的git工具，你没有理由不用他</li>
	<li>Balsamiq Mockups：原型图工具，非常棒</li>
	<li>OmniGraffle Professional： 专业画图工具，其他的都不需要了；</li>
	<li>OmniPlan：做计划的工具，也是Omni出的；</li>
	<li>Mindjet MindManager：脑图工具</li>
</ul>
</li>
	<li>其他
<ul>
	<li>RESTClient：REST测试工具</li>
	<li>JD-GUI：反编译工具</li>
	<li>KeyCastr：显示快捷键工具</li>
	<li>iShowU：录制视频用的</li>
	<li>keycue：显示软件的快捷键</li>
</ul>
</li>
</ul>
<strong> </strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date>2011-09-03 04:31:57</wp:post_date>
		<wp:post_date_gmt>2011-09-03 04:31:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-os-x%ef%bc%88lion%ef%bc%89%e8%bd%af%e4%bb%b6%e6%8e%a8%e8%8d%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>580</wp:comment_id>
			<wp:comment_author><![CDATA[IceskYsl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/</wp:comment_author_url>
			<wp:comment_author_IP>121.18.126.225</wp:comment_author_IP>
			<wp:comment_date>2011-09-13 22:40:44</wp:comment_date>
			<wp:comment_date_gmt>2011-09-13 14:40:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[visor]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nginx开启 stub_status 模块</title>
		<link>http://www.iceskysl.com/?p=850</link>
		<pubDate>Sat, 03 Sep 2011 08:05:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=850</guid>
		<description></description>
		<content:encoded><![CDATA[Nginx中的<strong>stub_status</strong>模块主要用于查看<strong>Nginx</strong>的一些状态信息.
本模块默认是不会编译进Nginx的,如果你要使用该模块,则要在编译安装Nginx时指定:
./configure –with-http_stub_status_module

<strong>一、查看已安装的 Nginx 是否包含 stub_status 模块</strong>
#/usr/local/nginx/sbin/nginx -V

<em> [root@ice ~]# /opt/nginx/sbin/nginx -V
nginx version: nginx/0.8.53
built by gcc 4.1.2 20080704 (Red Hat 4.1.2-48)
TLS SNI support disabled
configure arguments: --prefix=/opt/nginx --with-http_ssl_module --with-pcre=/tmp/root-passenger-1719/pcre-8.10 --add-module=/usr/local/ruby/lib/ruby/gems/1.8/gems/passenger-3.0.2/ext/nginx</em>

如果包含 <strong>stub_status</strong> 模块，那么就可以进行下面的步骤了：

<strong>二、修改 Nginx 配置文件</strong>
<pre>location /nginx_status {
  # copied from http://iceskysl.1sters.com
  stub_status on;
  access_log   off;
  allow SOME.IP.ADD.RESS;
  deny all;
}</pre>
<pre><strong>三、重启 Nginx</strong>
#/usr/local/nginx/sbin/nginx -s reload

<strong>四、相关数据说明</strong>
<strong>Active connections</strong>: 对后端发起的活动连接数.
<strong>Server accepts handled requests</strong>: Nginx总共处理了38810620个连接,成功创建38810620次握手(证明中间没有失败的),总共处理了298655730个请求.
<strong>Reading</strong>: Nginx 读取到客户端的Header信息数.
<strong>Writing</strong>: Nginx 返回给客户端的Header信息数.
<strong>Waiting</strong>: 开启keep-alive的情况下,这个值等于 active – (reading + writing),意思就是Nginx已经处理完成,正在等候下一次请求指令的驻留连接.
所以,在访问效率高,请求很快被处理完毕的情况下,Waiting数比较多是正常的.如果reading +writing数较多,则说明并发访问量非常大,正在处理过程中.</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date>2011-09-03 16:05:33</wp:post_date>
		<wp:post_date_gmt>2011-09-03 08:05:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx%e5%bc%80%e5%90%af-stub_status-%e6%a8%a1%e5%9d%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Installs Homebrew to /usr/local so you don&#039;t need sudo to `brew install`</title>
		<link>http://www.iceskysl.com/?p=853</link>
		<pubDate>Sat, 03 Sep 2011 08:29:42 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=853</guid>
		<description></description>
		<content:encoded><![CDATA[$ curl https://raw.github.com/gist/323731/install_homebrew.rb  -o /tmp/install_homebrew.rb
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  4569  100  4569    0     0   1605      0  0:00:02  0:00:02 --:--:--  2346

 $ ruby /tmp/install_homebrew.rb
==> This script will install:
/usr/local/bin/brew
/usr/local/Library/Formula/...
/usr/local/Library/Homebrew/...
==> The following directories will be made group writable:
/usr/local/.
/usr/local/bin
==> The following directories will have their group set to admin:
/usr/local/.
/usr/local/bin

Press enter to continue
==> /usr/bin/sudo /bin/chmod g+rwx /usr/local/. /usr/local/bin
==> /usr/bin/sudo /usr/bin/chgrp admin /usr/local/. /usr/local/bin
==> Downloading and Installing Homebrew...
Warning: The following *evil* dylibs exist in /usr/local/lib
They may break builds or worse. You should consider deleting them:
/usr/local/lib/libevent-1.4.2.1.3.dylib
/usr/local/lib/libevent_core-1.4.2.1.3.dylib
/usr/local/lib/libevent_extra-1.4.2.1.3.dylib
/usr/local/lib/libkyotocabinet.4.8.0.dylib
/usr/local/lib/libprotobuf-lite.6.dylib
/usr/local/lib/libprotobuf.6.dylib
/usr/local/lib/libprotoc.6.dylib
==> Installation successful!
Now type: brew help

参考：https://gist.github.com/323731]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>853</wp:post_id>
		<wp:post_date>2011-09-03 16:29:42</wp:post_date>
		<wp:post_date_gmt>2011-09-03 08:29:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installs-homebrew-to-usrlocal-so-you-dont-need-sudo-to-brew-install</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="brew"><![CDATA[brew]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>手机发的文章</title>
		<link>http://www.iceskysl.com/?p=856</link>
		<pubDate>Tue, 22 Nov 2011 14:02:19 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=856</guid>
		<description></description>
		<content:encoded><![CDATA[好久没写文章了，装了个客户端，没事的时候可以写点随笔，时间好快，不记录以后全部都会忘记的..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date>2011-11-22 14:02:19</wp:post_date>
		<wp:post_date_gmt>2011-11-22 14:02:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%89%8b%e6%9c%ba%e5%8f%91%e7%9a%84%e6%96%87%e7%ab%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>install perl module for XML-Twig in RHEL-Red Hat/Fedora Linux?</title>
		<link>http://www.iceskysl.com/?p=857</link>
		<pubDate>Sat, 10 Dec 2011 18:53:02 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=857</guid>
		<description></description>
		<content:encoded><![CDATA[This module provides a way to process XML documents. It is build on top of XML::Parser. XML::Twig offers a tree interface to the document, while allowing you to output the parts of it that have been completely processed. It allows minimal resource (CPU and memory) usage by building the tree only for the parts of the documents that need actual processing, through the use of the twig_roots and twig_print_outside_roots options.(as pointed by yum info)

Let’s first search for the package
$ yum search perl-XML-Twig
perl-XML-Twig.noarch : A perl module for processing huge XML documents in tree

Note that you must be the root/administrator to install the package. To install this package in Red Hat/Fedora Linux.
$ yum install perl-XML-Twig.noarch

You can check the details of this package perl-XML-Twig
$ yum info perl-XML-Twig.noarch

或者：
perl -MCPAN -e 'install XML::Twig']]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>857</wp:post_id>
		<wp:post_date>2011-12-10 18:53:02</wp:post_date>
		<wp:post_date_gmt>2011-12-10 18:53:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-perl-module-for-xml-twig-in-rhel-red-hatfedora-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[perl]]></category>
		<category domain="post_tag" nicename="twig"><![CDATA[Twig]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>防范垃圾利器Akismet使用体验和原理分析</title>
		<link>http://www.iceskysl.com/?p=860</link>
		<pubDate>Mon, 02 Jan 2012 02:32:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=860</guid>
		<description></description>
		<content:encoded><![CDATA[博客不经常更新的原因是垃圾太猛烈，每次来要删除一批垃圾评论，而且wp后台的那个未审核评论变成垃圾评论还真是麻烦，每次都直接跑去查数据库
<code>
select count(*),comment_approved from ice_comments group by comment_approved;
+----------+------------------+
| count(*) | comment_approved |
+----------+------------------+
|     5709 | 0                | 
|      579 | 1                | 
|       71 | spam             | 
+----------+------------------+
</code>

看到那个comment_approved是0 的就是还没审核的，一个一个审核实在是麻烦的不行～～
找到一个很多人不错的插件 Akismet(Automattic Kismet)是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的WordPress创始人Matt Mullenweg，Akismet也是WordPress默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言spam。
开启后回自动把comment_approved是0的检查一遍，看看我的
<code> 
mysql> select count(*),comment_approved from ice_comments group by comment_approved;
+----------+------------------+
| count(*) | comment_approved |
+----------+------------------+
|     5214 | 0                | 
|      579 | 1                | 
|      566 | spam             | 
+----------+------------------+
3 rows in set (0.00 sec)
</code>
慢慢自动检查去吧，希望这个能把垃圾评论都找出来～～～

说到这里，对Akismet的工作原理有了更多兴趣，顺手查了下：当一名用户把一条评论列为垃圾评论时，该数据会自动上传到Akismet的服务器上，以方便其他用户的Akismet自动拦截垃圾评论，因此Akismet可以说是广大Akismet用户共同维护的评论防火墙。
大概的流程估计是这样的：

<blockquote>1、所有评论首先都会传送一份到akismet服务器进行判断。
2、akismet收集到了名字，网址，邮箱，和内容,ip，5个数据，其中名字应该不可能用作判断依据。
3、akismet有一个信任名单，中立名单，黑名单几个级别。
4、每当博主对评论手动通过一次，该评论的网址，邮箱,ip就获得一次加权。当积累到一定量之后进入信任白名单，所发评论能自动通过。
5、当博主对评论进行一次垃圾标记，该评论的网址，邮箱，和内容，ip就获得一次负加权，当积累到一定量之后进入黑名单。</blockquote>


如上过程应该有个机器学习的过程～加上一些算法和挖掘的原理，应该是可以实现的，其压力应该在服务器负载上，想全球那么多的wp程序（还有些其他网站接入Akismet的），每次评论的时候一个请求，这个量不得了呀～ 所以我估计Akismet的处理逻辑应该也是分层级的，比如说一个ip已经进入黑名单了，那么他的处理应该很简单了，如果不是黑名单，估计还回根据内容等其他信息判断～～

于是乎，我想到eoeandroid的管理员和版主每天和spam抗争的惨烈情景，不晓得Discuz论坛是否有Akismet插件，如果没有，谁有兴趣可以开发一个，大体思路如下：
<blockquote>
1.使用Akismet提供的API对信息进行检测，地址 <a href="http://akismet.com/development/api/">http://akismet.com/development/api/</a>；
2.对信息的检测只针对特定的用户组，比如“新手上路”、分低于200或者发贴量少于50个帖子的用户，做此限制主要是为了不影响论坛的忠实支持者的操作；
3.用户提交的内容检测为Span时，阻止发贴、回复的操作，并提示用户，并记录用户提交垃圾信息的数次，当达到一定程序时将此用户禁言一定时间；
4.相关参数在后台实现设置接口。
5.在Discuz管理后台设置API Key，并检测API Key的有效性。
</blockquote>
查了下，好像没看到Discuz有这个插件，谁有兴趣开发一个～～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date>2012-01-02 02:32:52</wp:post_date>
		<wp:post_date_gmt>2012-01-02 02:32:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%98%b2%e8%8c%83%e5%9e%83%e5%9c%be%e5%88%a9%e5%99%a8akismet%e4%bd%bf%e7%94%a8%e4%bd%93%e9%aa%8c%e5%92%8c%e5%8e%9f%e7%90%86%e5%88%86%e6%9e%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7586</wp:comment_id>
			<wp:comment_author><![CDATA[在rails项目android-group中集成Akismet - IceskYsl@1sters!]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iceskysl.1sters.com/?p=865</wp:comment_author_url>
			<wp:comment_author_IP>74.207.232.111</wp:comment_author_IP>
			<wp:comment_date>2012-01-02 04:42:45</wp:comment_date>
			<wp:comment_date_gmt>2012-01-02 04:42:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 前面一篇文章《防范垃圾利器Akismet使用体验和原理分析》讲到Akismet的原理，其中说到看谁有兴趣给dz加个类似的功能，我是懒得写php的code，写写rails的还有点兴趣，于是在android-group这个项目里添加了下，android-group是直接fork的ruby-china，把大概过程说下： [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325484186.1326";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>在rails项目android-group中集成Akismet</title>
		<link>http://www.iceskysl.com/?p=865</link>
		<pubDate>Mon, 02 Jan 2012 04:42:41 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[前面一篇文章《<a href="http://iceskysl.1sters.com/?p=860" target="_blank">防范垃圾利器Akismet使用体验和原理分析</a>》讲到Akismet的原理，其中说到看谁有兴趣给dz加个类似的功能，我是懒得写php的code，写写rails的还有点兴趣，于是在<a href="https://github.com/IceskYsl/android-group" target="_blank">android-group</a>这个项目里添加了下，android-group是直接fork的<a href="https://github.com/huacnlee/ruby-china" target="_blank">ruby-china</a>，把大概过程说下：

<strong>1. 加插件ruby-akismet</strong>
已经有人写了akismet的ruby插件https://github.com/joshfrench/rakismet，有有人封装了一次https://github.com/ysbaddaden/ruby-akismet，就很好使用了。
<pre lang="ruby" line="1">
＃Add this gem to your Gemfile:
gem 'ruby-akismet', :require =&gt; 'akismet'
</pre>


＃Create an initializer file like config/initializers/akismet.rb with your configuration:
<pre lang="ruby" line="1">
Akismet.key = '123456789'
Akismet.blog = 'http://example.com'
Akismet.logger = Rails.logger
</pre>
<!--more-->
<strong>2. 修改代码</strong>
<strong>＃修改Reply.rb，添加</strong>
<pre lang="ruby" line="1">
field :spam, :type =&gt; Boolean, :default =&gt; false
</pre>
<strong>＃修改RepliesController</strong>
<pre lang="ruby" line="1">
# coding: utf-8
class RepliesController &lt; ApplicationController</code>

load_and_authorize_resource :reply

before_filter :find_topic
def create

@reply = @topic.replies.build(params[:reply])

@reply.user_id = current_user.id
@reply.spam = Akismet.spam?(akismet_attributes, request)
logger.info("akismet_attributes:#{akismet_attributes}")
logger.info("@reply.spam:#{@reply.spam}")
if @reply.save
current_user.read_topic(@topic)
@msg = t("topics.reply_success")
else
@msg = @reply.errors.full_messages.join("
")
end
end

def edit
@reply = current_user.replies.find(params[:id])
drop_breadcrumb(t("menu.topics"), topics_path)
drop_breadcrumb t("reply.edit_reply")
end

def update
@reply = current_user.replies.find(params[:id])

if @reply.update_attributes(params[:reply])
redirect_to(topic_path(@reply.topic_id), :notice =&gt; '回帖更新成功.')
else
render :action =&gt; "edit"
end
end

protected

def akismet_attributes
{
:comment_author =&gt; @reply.user.login,
:comment_author_url =&gt; user_url(@reply.user.login),
:comment_author_email =&gt; @reply.user.email,
:comment_content =&gt; @reply.body,
:permalink =&gt; topic_url(@reply.topic_id)
}
end

def find_topic
@topic = Topic.find(params[:topic_id])
end

end

</pre>

＃修改Cpanel::RepliesController，增加如下两个方法
<pre lang="ruby" line="1">
def spam
@reply = Reply.find(params[:id])
@reply.update_attribute(:spam, true)
Akismet.submit_spam(akismet_attributes)
redirect_to(cpanel_replies_path)
end

def ham
@reply = Reply.find(params[:id])
@reply.update_attribute(:spam, true)
Akismet.submit_ham(akismet_attributes)
redirect_to(cpanel_replies_path)
end
</pre>

＃修改routes文件
<pre lang="ruby" line="1">
resources :replies do
member do
post :spam
post :ham
end
end
</pre>

#再修改下view和locales文件就可以了，具体的就不贴了，可以在github上看到
https://github.com/IceskYsl/android-group/commit/79fabb06b12fd776b301fed2c7c10aee744c5974

也可以参考：
http://rubydoc.info/github/ysbaddaden/ruby-akismet/master/frames

项目地址：
https://github.com/huacnlee/ruby-china
https://github.com/IceskYsl/android-group]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date>2012-01-02 04:42:41</wp:post_date>
		<wp:post_date_gmt>2012-01-02 04:42:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e9%a1%b9%e7%9b%aeandroid-group%e4%b8%ad%e9%9b%86%e6%88%90akismet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_320b2f2e3009433ac9fa50b2bedecb12</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9070697fc06b0dcb780ce698fe1358b2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3935339154b4cfe1e77465786f187f08</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_68c73851315df2793864039639802c99</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nginx upstream的5种配置方式</title>
		<link>http://www.iceskysl.com/?p=867</link>
		<pubDate>Tue, 03 Jan 2012 12:00:53 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=867</guid>
		<description></description>
		<content:encoded><![CDATA[nginx的upstream目前支持5种方式的分配

<strong>1、轮询（默认）</strong>
每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。

<strong>2、weight</strong>
指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。
例如：
<code>upstream bakend {
server 192.168.0.14 weight=10;
server 192.168.0.15 weight=10;
}</code>

<strong>3、ip_hash </strong>
每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。
例如：
upstream bakend {
ip_hash;
server 192.168.0.14:88;
server 192.168.0.15:80;
}

<strong>4、fair（第三方）</strong>
按后端服务器的响应时间来分配请求，响应时间短的优先分配。
<code>upstream backend {
server server1;
server server2;
fair;
}</code>

<strong>5、url_hash（第三方）</strong>
按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。
例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法<!--more-->

<code>upstream backend {
server squid1:3128;
server squid2:3128;
hash $request_uri;
hash_method crc32;
}</code>

tips:
<code>upstream bakend{#定义负载均衡设备的Ip及设备状态
ip_hash;
server 127.0.0.1:9090 down;
server 127.0.0.1:8080 weight=2;
server 127.0.0.1:6060;
server 127.0.0.1:7070 backup;
}</code>
在需要使用负载均衡的server中增加
proxy_pass http://bakend/;

每个设备的状态设置为:
<blockquote>1.down 表示单前的server暂时不参与负载
2.weight 默认为1.weight越大，负载的权重就越大。
3.max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误
4.fail_timeout:max_fails次失败后，暂停的时间。
5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</blockquote>
nginx支持同时设置多组的负载均衡，用来给不用的server来使用。

client_body_in_file_only 设置为On 可以讲client post过来的数据记录到文件中用来做debug
client_body_temp_path 设置记录文件的目录 可以设置最多3层目录
location 对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡

参考：
http://wiki.nginx.org/HttpUpstreamModule
http://www.pagefault.info/?p=251]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>867</wp:post_id>
		<wp:post_date>2012-01-03 12:00:53</wp:post_date>
		<wp:post_date_gmt>2012-01-03 12:00:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx-upstream%e7%9a%845%e7%a7%8d%e9%85%8d%e7%bd%ae%e6%96%b9%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a41be9d6db0e3c342fc722da778b2c08</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_eae8e8bef35cd7bd853178a841fcb2b6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NGINX upstream statistics</title>
		<link>http://www.iceskysl.com/?p=869</link>
		<pubDate>Tue, 03 Jan 2012 13:59:10 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=869</guid>
		<description></description>
		<content:encoded><![CDATA[使用过nginx的应该都都晓得upstream，前面一篇文章说到《nginx upstream的5种配置方式》，例如如下是很常见的一段配置

#create by ice 2011.12.22
upstream unicon_v2_www {
# This is the socket we configured in unicorn.rb
server unix:/var/www/v2/tmp/sockets/unicorn.sock backup;
server 192.168.0.1:5000 weight=9 max_fails=2 fail_timeout=30s;
server 192.168.0.2:5000 weight=3 max_fails=2 fail_timeout=30s;
}
server {
listen 80;
server_name www.iceskysl.com;
error_log /opt/nginx/logs/error/error_v2_www.log;
access_log /opt/nginx/logs/access/access_v2_www.log main;

root /var/www/v2/public/;
index index.html index.htm;

location / {
proxy_redirect off;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header Host $host;
proxy_set_header Content-Length $content_length;
proxy_set_header X-Forwarded-For $remote_addr;
client_max_body_size 10m;
client_body_buffer_size 128k;
proxy_connect_timeout 90;
proxy_send_timeout 90;
proxy_read_timeout 90;
proxy_buffer_size 4k;
proxy_buffers 4 32k;
proxy_busy_buffers_size 64k;
proxy_temp_file_write_size 64k;
chunked_transfer_encoding off;
proxy_pass http://unicon_v2_www/;
}
}

其中upstream的这段配置：
upstream unicon_v2_www {
# This is the socket we configured in unicorn.rb
server unix:/var/www/v2/tmp/sockets/unicorn.sock backup;
server 192.168.0.1:5000 weight=9 max_fails=2 fail_timeout=30s;
server 192.168.0.2:5000 weight=3 max_fails=2 fail_timeout=30s;
}

我们了解到socket模式的这个是backup，其他两个机器分别weight=3和weight=9,于是我们想监控下upstream每个后端具体处理了多少请求，有没有问题等，这个好像就不好监控了，nginx自带的status模块只能监控总的请求数，无法区分每个upstream的具体情况。
找到一个ustats（http://code.google.com/p/ustats/），其介绍是：NGINX basic upstream statistics module，具体的如下：<!--more-->
<blockquote>USTATS module provides basic statistics for each backend in nginx upstreams:

Number of requests
Http 499/500/503 errors count
Tcp errors
Http read/write timeouts
Fail timeout
Max fails count
Last failed access time
Total fails count
Blacklisted backend highlighting
Down backends highlighting
The module allows you to sort values in some columns for each separate upstream. The data can be retrieved as JSON by appending "?json" to the end of location on which the module was set to work on (see configuration instructions below).</blockquote>
看上去正是我需要的，有时间试试看～（为啥nginx不学haproxy官方自带一个详细statistics的页面呢～haproxy那个statistics很详细很好用～）
详细使用指南：<a href="http://code.google.com/p/ustats/" target="_blank">http://code.google.com/p/ustats/</a>

<img src="http://ustats.googlecode.com/svn/wiki/shot1.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>869</wp:post_id>
		<wp:post_date>2012-01-03 13:59:10</wp:post_date>
		<wp:post_date_gmt>2012-01-03 13:59:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx-upstream-statistics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="statistics"><![CDATA[statistics]]></category>
		<category domain="post_tag" nicename="upstream"><![CDATA[upstream]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>博客记忆：2007年－2011年的博客汇总</title>
		<link>http://www.iceskysl.com/?p=1058</link>
		<pubDate>Tue, 03 Jan 2012 16:56:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://iceskysl.1sters.com/?p=1058</guid>
		<description></description>
		<content:encoded><![CDATA[晚上心血来潮整理起自己的博客，从2007年开始到现在，快900篇文章，慢慢的整理，记忆一点点的浮现（工作，深圳，北京，创业，成长），发现博客的记忆是片段的有思想的，微博则是零碎的不成体系的废话，为了记忆，以后还是多写点博客～

<strong>1.文章分类汇总</strong>

<a href="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png"><img title="文字分类" src="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.18-AM.png" alt="" width="247" height="297" /></a> <a href="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM.png"><img title="tag" src="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.39.25-AM-234x300.png" alt="" width="234" height="300" /></a>

从分类上看，过去几年更多的积累还是在技术上，ruby，mac，android和security还是比较多（杂七杂八的分类是中间迁移的时候分类信息丢了的缘故，里面也基本上技术的文字），产品分类是才加上的，现在技术做的比较少了，产品关注的多一些，以后会有更多关于产品相关的～<!--more-->

<strong>2. 按月归档</strong>

<a href="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM.png"><img class="alignnone size-medium wp-image-1059" title="按月归档" src="http://iceskysl.1sters.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-04-at-12.26.51-AM-40x300.png" alt="" width="40" height="300" /></a>

看看之前写的纪录，2007到2010年都还算蛮规律的，基本上每个月都会有数量不等的文章～而2011年开始看到写的急剧减少，一个是因为weibo的出现，平日的只言片语都丢weibo上了；二是懒了，写不出大段的文字～

<strong>
</strong>

今天晚上仔细把模板修葺了一下，以后会多三个方面的内容，一个是前面说到的<strong>产品</strong>，产品是现在看的比较多的；另外一个是和<strong>创业</strong>相关的文字，创业两年来，我想是有些东西可以分享的；第三个是<strong>旅行</strong>相关的，本来这个博客是定位技术的，生活会少一些的，后面会写一些和自己的旅行，成长相关的内容～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1058</wp:post_id>
		<wp:post_date>2012-01-03 16:56:18</wp:post_date>
		<wp:post_date_gmt>2012-01-03 16:56:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%9a%e5%ae%a2%e8%ae%b0%e5%bf%86%ef%bc%9a2007%e5%b9%b4%ef%bc%8d2011%e5%b9%b4%e7%9a%84%e5%8d%9a%e5%ae%a2%e6%b1%87%e6%80%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7589</wp:comment_id>
			<wp:comment_author><![CDATA[ice]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.18.126.250</wp:comment_author_IP>
			<wp:comment_date>2012-01-15 06:34:47</wp:comment_date>
			<wp:comment_date_gmt>2012-01-15 06:34:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[测试下评论～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326609287.2354";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1058";s:14:"comment_author";s:3:"ice";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:18:"测试下评论～";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"121.18.126.250";s:10:"user_agent";s:115:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.8 (KHTML, like Gecko) Chrome/17.0.932.0 Safari/535.8";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1058";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1058";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:3:"ice";s:10:"POST_email";s:18:"iceskysl@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:18:"测试下评论～";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1058";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:8:"li74-111";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"148";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"121.18.126.250";s:11:"REMOTE_PORT";s:5:"11107";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"148";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:115:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.8 (KHTML, like Gecko) Chrome/17.0.932.0 Safari/535.8";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1058";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1326609286";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1327690205.259";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>奶奶离开了我们，永远的</title>
		<link>http://www.iceskysl.com/?p=1104</link>
		<pubDate>Fri, 06 Jan 2012 23:06:33 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1104</guid>
		<description></description>
		<content:encoded><![CDATA[时间很快，转眼间走完了2011年，正在感谢2011年亲戚朋友都健康的时候，奶奶即将迎来90高寿。
然前天晚上家里电话说奶奶住院，有点不舒服，应该无大碍。夜里睡觉不能安心，几次惊醒，就觉得不对劲了。
果不其然，昨天早上家里来电，奶奶病危，出院回家了，让我们准备回来，准备归的时候又接电话说奶奶回到家了，状况好转。昨天是奶奶90岁生日，我们都觉得挺过这个坎应该就好了，默默祈祷，快到夜里12点的时候，我们都觉得应该过去了。
但是，最后10多分钟还是没能走完，奶奶离开了我们，在她90岁生日的时候，奶奶没有受苦，是安详的离去的，千里奔袭，一路走一路默默流泪，回去送奶奶最后一程。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1104</wp:post_id>
		<wp:post_date>2012-01-06 23:06:33</wp:post_date>
		<wp:post_date_gmt>2012-01-06 23:06:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a5%b6%e5%a5%b6%e7%a6%bb%e5%bc%80%e4%ba%86%e6%88%91%e4%bb%ac%ef%bc%8c%e6%b0%b8%e8%bf%9c%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
	</item>
	<item>
		<title>小心ruby中Array的include?方法</title>
		<link>http://www.iceskysl.com/?p=1106</link>
		<pubDate>Tue, 17 Jan 2012 15:18:18 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1106</guid>
		<description></description>
		<content:encoded><![CDATA[前几天遇到一个很诡异的情况，昨天终于找到根本原因并解决了，我觉得有必要把这个过程纪录下，应该会有人遇到类似的问题。

前几天在一个坛子里问“每天500w条log如何入mysql库比较靠谱”，需求是
<blockquote>我们有个产品，每天差不多500w的业务量，需要对500w做相关的分析，就需要入库～
目前用的是mysql 按月切表定期老化数据，但是导入数据情况比较糟糕～每天导入数据差不多需要20个小时，和MySQL 5000 records/second差距巨大～
尝试过三个方案：
1. 定期解析日志，直接入库；
2. 定期解析日志，生成sql，再直接sql入库；
3. 生成data文件，load到库里
但是效果都不理想～ 没什么大数据处理的经验，大家支招～～～</blockquote>
其中第一种方案基本上被抛弃了，采用第二种方案，但是还是很糟糕，500w的数据差不多需要10来个小时，还是无法接受，于是仔细剖析了下过程：<!--more-->
<blockquote>1. 准备sql文件
sqlFileName = RAILS_ROOT + "/log/insert.sql." + LOG_POSTFIX_FOR_YESTERDAY
sqlfile = File.open(sqlFileName, "w")
2. 打开日志文件
File.open("../log/apps.log.#{LOG_POSTFIX_FOR_YESTERDAY}").each do |line|
3.提取需要的数据
id, apk_id, ip, client_id, channel_id, uniquely_code ,track = line.split(" : ")[1].split(",")
4. 生成sql串
sqlInsert = "INSERT logs_downloads.....balalaalala
5. 写到sql文件里
sqlfile.puts( sqlInsert )
6. 调mysql直接导入sql
里面还有一些数据的清洗和排重工作～
每天的日志文件差不多500w行，解析生成sql的过程不理想（其中没用数据库操作）～ 难道是我磁盘性能很糟糕～～</blockquote>
过程看到基本上都没问题，无外乎解析文件，写文件的操作，不应该慢成这样的，最后把目光放在了数据的清洗和排重工作种，这个过程是想在入库的时候就把一些虚假的量排除掉，于是我们自己设计了一个算法来过滤，算法的逻辑很简单，根据一些参赛md5出一个key，然后把这个key丢在Array中，然后用include?来判断这个key是否已经存在，问题就出在这里！

ruby的Array中的include?是需要很小心的，我之前想当然的认为这个方法应该很快，也没仔细看就用了，结果发现问题就在这个方法上，直接上下源码看看：
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png"><img class="alignnone size-medium wp-image-1107" title="Screen Shot 2012-01-17 at 11.03.19 PM" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-17-at-11.03.19-PM.png" alt="" /></a>
当看到:
<code>
for (i=0; i #blalalal
}
</code>

这个的时候我就明白了，果然，这个方法直接遍历Array，然后你可以想想当我有个500w大小的Array的时候，再用include?是何等的情景啦～
修改方案很容易了，改用hash就好了，不多说～～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1106</wp:post_id>
		<wp:post_date>2012-01-17 15:18:18</wp:post_date>
		<wp:post_date_gmt>2012-01-17 15:18:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%8f%e5%bf%83ruby%e4%b8%adarray%e7%9a%84include%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7617</wp:comment_id>
			<wp:comment_author><![CDATA[Sparkle]]></wp:comment_author>
			<wp:comment_author_email>popeast@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weavesky.com</wp:comment_author_url>
			<wp:comment_author_IP>61.144.146.101</wp:comment_author_IP>
			<wp:comment_date>2012-01-19 03:50:27</wp:comment_date>
			<wp:comment_date_gmt>2012-01-19 03:50:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呃，这个需求不是很明显应该用Set不是List吗，List判定是否存在肯定是全遍历的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326945027.8133";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1106";s:14:"comment_author";s:7:"Sparkle";s:20:"comment_author_email";s:17:"popeast@gmail.com";s:18:"comment_author_url";s:19:"http://weavesky.com";s:15:"comment_content";s:104:"呃，这个需求不是很明显应该用Set不是List吗，List判定是否存在肯定是全遍历的";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"61.144.146.101";s:10:"user_agent";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1106";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1106";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:7:"Sparkle";s:10:"POST_email";s:17:"popeast@gmail.com";s:8:"POST_url";s:19:"http://weavesky.com";s:12:"POST_comment";s:104:"呃，这个需求不是很明显应该用Set不是List吗，List判定是否存在肯定是全遍历的";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1106";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"412";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"61.144.146.101";s:11:"REMOTE_PORT";s:5:"51832";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"412";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1106";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1326945027";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327112841.4437";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>不常用但很有用的linux命令</title>
		<link>http://www.iceskysl.com/?p=1115</link>
		<pubDate>Wed, 18 Jan 2012 08:18:12 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1115</guid>
		<description></description>
		<content:encoded><![CDATA[这里纪录一些不常用但很有用的linux命令

#通过端口号找到进程(13543这个就是进程号)
[root@ lab]# netstat -lnp | grep 9000
tcp        0      0 0.0.0.0:9000                0.0.0.0:*                   LISTEN      13543/unicorn.rb -D ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1115</wp:post_id>
		<wp:post_date>2012-01-18 08:18:12</wp:post_date>
		<wp:post_date_gmt>2012-01-18 08:18:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e5%b8%b8%e7%94%a8%e4%bd%86%e5%be%88%e6%9c%89%e7%94%a8%e7%9a%84linux%e5%91%bd%e4%bb%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2011计划年度总结回顾,2012年预期</title>
		<link>http://www.iceskysl.com/?p=1117</link>
		<pubDate>Wed, 25 Jan 2012 03:30:37 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1117</guid>
		<description></description>
		<content:encoded><![CDATA[时间飞快，清晰的记得2010年末写总结的情形，转眼间，一年的时间又过去，我需要坐下来回顾下2010年写给2011年的计划的完成情况，顺便给我的2012年列些预期了：

<strong>2010年总结的时候曾写到：《</strong><a href="http://www.iceskysl.com/?p=827" target="_blank">2010年总结，2011年展望</a>》
<strong><em>1. eoe能健康发展，成为这次移动互联网浪潮的android方面的赢家！</em></strong>
回顾：2011年是eoe的发展年，我们从小到大，逐步成长，2011年初的时候我们还在西二旗的辉煌国际，20来个人，没什么品牌，没多少收入。2011年的eoe成长了不少，我们从20多人扩展到60多人，我们从商住两用的200平的办公室搬到了凯旋中心正规的400多平的办公室，我们自己的产品按照自己的规划和节奏逐步完善；我们有了自己的线下沙龙，扩展到上海，广州等地，初步形成我们自己的品牌和口碑。我们有了一些收入，我们有了发展壮大的资源，我们的团队更爱自己的工作，更爱eoe的氛围。现在说输赢都还为时尚早，我们正在前进的路上～

<strong><em>2. 能做一个有可能改变世界的产品；</em></strong>
回顾：主导了一个产品，按照既定的计划和方向，这个产品还在完善中，何时能腾飞成为明星还不得而知，但是我们磨练了团队，摸索前进了大半年，我们对这个方向坚定不移，我们还在等待机会，我们需要一些时间，2012将是看到我们成果的时间～

<strong><em>3. tina能找到自己真正喜欢的工作，做自己喜欢的事情；</em></strong>
回顾：tina在2011年的上半年是折腾的，尝试了好几家公司和工作，在下半年找到适合自己的工作，也是个很不错的德国企业，这个算是达成了～

<strong><em>4. 在技术，英语，管理，交际方面有着长足的提高；</em></strong>
回顾：这个目标不符合swot规则，无法鉴定完成的怎么样了，大概说说感受。2011年的技术只在架构方面有所长进，英语还是不过关，管理学会了系统化看问题和分解问题，懂得了一点点的管理，交际好像改观不大，客串了几次活动主持人，现在上台完全不紧张了，算是进步不？

<strong><em><!--more-->5. 能找到一个合适的定居的地方为安定下来做些准备；</em></strong>
回顾：这个不及格，虽然有了一个自己的小窝，但是依然还在北京漂着，还是没有找到理想的定居地点，还是不喜欢北京的天气和氛围，还是希望能找一个南边的地方定居，我喜欢温暖的，开放的，年轻的城市，哪个才是我理想的定居城市，继续寻找中～

<em><strong>6. 能和tina一起去一次远途旅行，欧洲？也许吧；</strong></em>
回顾：2011年和tina出去转了两次，10.1日去了宁夏的银川和中卫，第一次去了祖国的大西北，看到了戈壁和沙漠，体验了大西北的风土人情。然后在2011年圣诞节前夕去了新加坡，没能去成欧洲，就选择去了新加坡，很喜欢新加坡这个城市，干净整齐，气候温暖清新～

<strong>7.能拿到驾照，顺便也有个属于自己的交通工具；</strong>
回顾：开始学驾照了，交规考了100分，但是还没来得及练车，也就没能拿到驾照，更没有自己的交通工具，看来还的抓紧了～

<strong><em>8. 多些空闲，多看看书，多些思考，多些时间写写东西！</em></strong>
回顾：2011年的下半年时间多了一些，不用天天救火和打杂了，看了一些感兴趣的书，比如《怪诞行为学》，《异类》，《暗时间》，《裂变》，《未来是湿的》，《jobs传》以及一堆技术，产品和交互设计的书籍，看的多，但是写的不多，在weibo上絮叨了3000多条，但是不系统，都是零碎散落的，2012年会多写读后感，多些文字纪录的；

<strong><em>9. 亲戚，朋友包括我和tina都健康快乐！</em></strong>
回顾：2011年是平安的，自己，家人，亲戚，朋友都健康无恙，谢谢上苍；2012年1月的适合，90岁的奶奶在她生日的那天安详的离去了，天堂更加美好，我们会想念您的。

<strong><em>10. 世界太平，和谐迎接2012！</em></strong>
回顾：2011年世界不太平静，地震，火山，核泄漏，战争，饥荒，瘟疫，空气污染还是遍布世界，这是个伤痕累累的地球，能否挺过2012,深表担忧！

<span style="color: #ff0000;">2011年已经成为过去时，过去的2011年波澜不惊，虽有过压力，也有过迷茫，但是始终没摇摆的是一颗勇敢的心，有家庭的支持和朋友的鼓励，我们顺利的上岸了，归总一句话：2011年没有浪费，是满负荷的，每天也都是新的，每天都有新收获～</span>

<span style="color: #ff0000;">2012年来的有点突然，有点匆忙，还有点蛮横，一不留神，2012已经来到面前，2012年最终会是怎样还不得而知，现在的我至少可以列举一些预期，权当自勉～</span>

<strong>2012年的预期如下：</strong>
<strong>工作</strong>
1. eoe再上一个大台阶，产品和品牌在业界都能排在第一梯队，公司和团队能健康发展；
2. 主导的x产品的推出和扩大影响力，达到预期水平，可以在一个领域成为领头羊；
3. 规划布局和管理能力可以有沉淀，有积累；
4. 外语能有长足的进步，可以听说流畅；
5. 理解产品和流量运营，新媒体等社会化营销的相关理论和操作方法；

<strong>兴趣爱好</strong>
1. 系统学习摄影，有一台单反；
2. 主导或者贡献一个开源产品或项目；
3. 在一个计算机技能的新领域有所突破；
4. 策划并出版至少一本新书；
5. 多看好书和电影，多些分享和总结，多写blog；

<strong>生活</strong>
1. 拿到驾照，有自己的交通工具；
2. 感情甜蜜，并开始实施定居和下一代计划；
3. 和tina一起去至少两个地方旅行，草原和欧洲；
4. 常回家看看，多些时间陪陪他们
5. 自己，tina，家人，朋友都健康快乐度过2012；

希望2012不是世界末日，希望我还有机会写2012年的年度回顾和2013年预期～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1117</wp:post_id>
		<wp:post_date>2012-01-25 03:30:37</wp:post_date>
		<wp:post_date_gmt>2012-01-25 03:30:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2011%e8%ae%a1%e5%88%92%e5%b9%b4%e5%ba%a6%e6%80%bb%e7%bb%93%e5%9b%9e%e9%a1%be2012%e5%b9%b4%e9%a2%84%e6%9c%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="2011"><![CDATA[2011]]></category>
		<category domain="post_tag" nicename="2012"><![CDATA[2012]]></category>
		<category domain="post_tag" nicename="%e8%ae%a1%e5%88%92"><![CDATA[计划]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7645</wp:comment_id>
			<wp:comment_author><![CDATA[Gang Chen]]></wp:comment_author>
			<wp:comment_author_email>chengangcs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gossipcoder.com</wp:comment_author_url>
			<wp:comment_author_IP>222.244.204.126</wp:comment_author_IP>
			<wp:comment_date>2012-01-27 03:51:23</wp:comment_date>
			<wp:comment_date_gmt>2012-01-27 03:51:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看来有好玩的新东西要发布啊~~准备折腾一本什么方面的书？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327636283.5225";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1117";s:14:"comment_author";s:9:"Gang Chen";s:20:"comment_author_email";s:20:"chengangcs@gmail.com";s:18:"comment_author_url";s:22:"http://gossipcoder.com";s:15:"comment_content";s:80:"看来有好玩的新东西要发布啊~~准备折腾一本什么方面的书？";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"222.244.204.126";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1117";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1117";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:9:"Gang Chen";s:10:"POST_email";s:20:"chengangcs@gmail.com";s:8:"POST_url";s:22:"http://gossipcoder.com";s:12:"POST_comment";s:80:"看来有好玩的新东西要发布啊~~准备折腾一本什么方面的书？";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1117";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"370";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:15:"222.244.204.126";s:11:"REMOTE_PORT";s:5:"34027";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1117";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:19:"HTTP_CONTENT_LENGTH";s:3:"370";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1327636282";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327690184.9127";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7940</wp:comment_id>
			<wp:comment_author><![CDATA[第一台单反 Nikon D90 - IceskYsl@1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.iceskysl.com/?p=1684</wp:comment_author_url>
			<wp:comment_author_IP>74.207.232.111</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 16:38:25</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 16:38:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 2012刚开始的时候写过《2011计划年度总结回顾,2012年预期》中曾经写到“1. 系统学习摄影，有一台单反；”，时间走到4月份，终于入手了一台单反：Nikon D90。 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1333751007.0594";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7729</wp:comment_id>
			<wp:comment_author><![CDATA[Li Yin]]></wp:comment_author>
			<wp:comment_author_email>liyin@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.255.1.132</wp:comment_author_IP>
			<wp:comment_date>2012-02-06 14:37:48</wp:comment_date>
			<wp:comment_date_gmt>2012-02-06 14:37:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[来这边定居吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328585690.5656";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:68:{s:15:"comment_post_ID";s:4:"1117";s:14:"comment_author";s:6:"Li Yin";s:20:"comment_author_email";s:14:"liyin@live.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:18:"来这边定居吧";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"220.255.1.132";s:10:"user_agent";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1117";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1117";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:6:"Li Yin";s:10:"POST_email";s:14:"liyin@live.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:18:"来这边定居吧";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1117";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"147";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"220.255.1.132";s:11:"REMOTE_PORT";s:5:"17792";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"147";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1117";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:20:"HTTP_X_FORWARDED_FOR";s:13:"121.6.174.100";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1328539068";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328539068.5338";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7734</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>1.202.254.38</wp:comment_author_IP>
			<wp:comment_date>2012-02-07 03:41:18</wp:comment_date>
			<wp:comment_date_gmt>2012-02-07 03:41:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵～貌似不大现实～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7729</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:76:{s:15:"comment_post_ID";s:4:"1117";s:14:"comment_author";s:8:"iceskysl";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:30:"呵呵～貌似不大现实～";s:14:"comment_parent";s:4:"7729";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:12:"1.202.254.38";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:8:"referrer";s:33:"http://www.iceskysl.com/wp-admin/";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1117";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"7729";s:20:"POST_comment_post_ID";s:4:"1117";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"0";s:9:"POST_mode";s:9:"dashboard";s:32:"POST__ajax_nonce-replyto-comment";s:10:"4a9cbd9181";s:32:"POST__wp_unfiltered_html_comment";s:10:"bd4b1cecb6";s:12:"POST_content";s:30:"呵呵～貌似不大现实～";s:7:"POST_id";s:4:"1117";s:21:"POST_comments_listing";s:0:"";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:51:"/datas/www/iceskysl/current/wp-admin/admin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"385";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:12:"DOCUMENT_URI";s:24:"/wp-admin/admin-ajax.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"1.202.254.38";s:11:"REMOTE_PORT";s:5:"18380";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"385";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"HTTP_REFERER";s:33:"http://www.iceskysl.com/wp-admin/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1328586078";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1328586078.818";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7742</wp:comment_id>
			<wp:comment_author><![CDATA[Mumu]]></wp:comment_author>
			<wp:comment_author_email>xmagicj@vip.qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://weibo.com/xmagicj</wp:comment_author_url>
			<wp:comment_author_IP>119.97.224.250</wp:comment_author_IP>
			<wp:comment_date>2012-02-10 01:33:24</wp:comment_date>
			<wp:comment_date_gmt>2012-02-10 01:33:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[祝你的愿望都实现.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328837604.6105";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1117";s:14:"comment_author";s:4:"Mumu";s:20:"comment_author_email";s:18:"xmagicj@vip.qq.com";s:18:"comment_author_url";s:24:"http://weibo.com/xmagicj";s:15:"comment_content";s:25:"祝你的愿望都实现.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"119.97.224.250";s:10:"user_agent";s:116:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.3 (KHTML, like Gecko) Maxthon/3.3.3.1000 Chrome/16.0.883.0 Safari/535.3";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1117";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1117";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Mumu";s:10:"POST_email";s:18:"xmagicj@vip.qq.com";s:8:"POST_url";s:24:"http://weibo.com/xmagicj";s:12:"POST_comment";s:25:"祝你的愿望都实现.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1117";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"200";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"119.97.224.250";s:11:"REMOTE_PORT";s:4:"6622";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"200";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:116:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.3 (KHTML, like Gecko) Maxthon/3.3.3.1000 Chrome/16.0.883.0 Safari/535.3";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1117";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:13:"UTF-8,*;q=0.5";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1328837602";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1329096500.4901";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>博客功能修葺完毕，多写文字</title>
		<link>http://www.iceskysl.com/?p=1196</link>
		<pubDate>Sat, 28 Jan 2012 06:47:29 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1196</guid>
		<description></description>
		<content:encoded><![CDATA[年后回到北京，趁着还有一天稍微宽裕的时间，把博客又修葺了下，现在的结构是我很满意的，大致罗列下～

1.导航区
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png"><img class="alignnone  wp-image-1197" title="导航区" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.26-PM.png" alt="" width="518" height="258" /></a>

导航上是我的主要分类，目前有博客文章，旅行，书，音乐，电影，工具箱，团队以及我个人的信息，以后还会添加的有“我的订阅”，“我的项目”，“我的应用”等～<!--more-->

2. 旅行
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png"><img class="alignnone  wp-image-1198" title="我的旅行" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.32.08-PM.png" alt="" width="423" height="365" /></a>
我爱旅行，喜欢背着包到处跑，这个页面纪录我曾到过的地方，以后会把照片整理放上来的～

3. 书
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png"><img class="alignnone  wp-image-1199" title="我的书" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.30.59-PM.png" alt="" width="469" height="570" /></a>
“要么旅行要么读书，身体或者是心灵，总有一个需要在路上.”

4. 音乐
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png"><img class="alignnone  wp-image-1200" title="我的音乐" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.20-PM.png" alt="" width="473" height="532" /></a>

5. 电影
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png"><img class="alignnone  wp-image-1201" title="我的电影" src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-2.31.50-PM.png" alt="" width="467" height="659" /></a>

另外，把n年前注册的个人域名启用了，大家以后可以通过：<a title=" http://www.iceskysl.com/" href=" http://www.iceskysl.com/"> http://www.iceskysl.com/</a> 访问到这个网站～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1196</wp:post_id>
		<wp:post_date>2012-01-28 06:47:29</wp:post_date>
		<wp:post_date_gmt>2012-01-28 06:47:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%9a%e5%ae%a2%e5%8a%9f%e8%83%bd%e4%bf%ae%e8%91%ba%e5%ae%8c%e6%af%95%ef%bc%8c%e5%a4%9a%e5%86%99%e6%96%87%e5%ad%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7830</wp:comment_id>
			<wp:comment_author><![CDATA[Yong StillHere]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.176.52</wp:comment_author_IP>
			<wp:comment_date>2012-02-24 12:31:25</wp:comment_date>
			<wp:comment_date_gmt>2012-02-24 12:31:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错的架构、学习学习、呵呵]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330222421.5747";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330086685.9514";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1196";s:14:"comment_author";s:14:"Yong StillHere";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:39:"不错的架构、学习学习、呵呵";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.176.52";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1196";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1196";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:14:"Yong StillHere";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:39:"不错的架构、学习学习、呵呵";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1196";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"257";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.176.52";s:11:"REMOTE_PORT";s:4:"6579";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1196";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"257";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1330086685";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>排斥WYSIWYG编辑器</title>
		<link>http://www.iceskysl.com/?p=1626</link>
		<pubDate>Sat, 28 Jan 2012 08:45:52 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1626</guid>
		<description></description>
		<content:encoded><![CDATA[这个blog从2007年开始写，到现在差不多有4－5年了，最开始是用的php的<a href="http://www.sablog.net/" title="sablog" target="_blank">Sablog-X</a>，后来用了自己写的一套rails的<a href="https://github.com/IceskYsl/1stlog" title="1stlog" target="_blank">1stlog</a>，后来用转到wordpress上一直至今～

做为大众博客引擎，wordpress是合适的，但是做为技术人员，wordpress太傻瓜了，最不习惯的就是是文章的格式，一堆html代码，技术的人好像都有洁癖，我现在写的都是在html模式下至今写的，非常排斥WYSIWYG编辑器～一堆没用的格式代码～很不干净～

别哪天手痒，又写一套blog引擎吧～ balala～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1626</wp:post_id>
		<wp:post_date>2012-01-28 08:45:52</wp:post_date>
		<wp:post_date_gmt>2012-01-28 08:45:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%92%e6%96%a5wysiwyg%e7%bc%96%e8%be%91%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7941</wp:comment_id>
			<wp:comment_author><![CDATA[关于Markdown和Mou - IceskYsl@1sters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.iceskysl.com/?p=1690</wp:comment_author_url>
			<wp:comment_author_IP>74.207.232.111</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 23:26:52</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 23:26:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 开年的时候写过一篇文章《排斥WYSIWYG编辑器》，其中说到： 最不习惯的就是是文章的格式，一堆html代码，技术的人好像都有洁癖，我现在写的都是在html模式下至今写的，非常排斥WYSIWYG编辑器～一堆没用的格式代码～很不干净～ [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1334935320.304";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7651</wp:comment_id>
			<wp:comment_author><![CDATA[Gang Chen]]></wp:comment_author>
			<wp:comment_author_email>chengangcs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gossipcoder.com</wp:comment_author_url>
			<wp:comment_author_IP>222.244.204.126</wp:comment_author_IP>
			<wp:comment_date>2012-01-28 08:54:01</wp:comment_date>
			<wp:comment_date_gmt>2012-01-28 08:54:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[都是直接用源代码模式写~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327740841.7351";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:65:{s:15:"comment_post_ID";s:4:"1626";s:14:"comment_author";s:9:"Gang Chen";s:20:"comment_author_email";s:20:"chengangcs@gmail.com";s:18:"comment_author_url";s:22:"http://gossipcoder.com";s:15:"comment_content";s:35:"都是直接用源代码模式写~~";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"222.244.204.126";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1626";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1626";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:9:"Gang Chen";s:10:"POST_email";s:20:"chengangcs@gmail.com";s:8:"POST_url";s:22:"http://gossipcoder.com";s:12:"POST_comment";s:35:"都是直接用源代码模式写~~";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1626";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"235";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:15:"222.244.204.126";s:11:"REMOTE_PORT";s:5:"10042";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:9.0.1) Gecko/20100101 Firefox/9.0.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1626";s:11:"HTTP_COOKIE";s:0:"";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:19:"HTTP_CONTENT_LENGTH";s:3:"235";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1327740841";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7653</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.18.236.253</wp:comment_author_IP>
			<wp:comment_date>2012-01-28 09:21:04</wp:comment_date>
			<wp:comment_date_gmt>2012-01-28 09:21:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恩～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1327742464.3478";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1626";s:14:"comment_author";s:8:"iceskysl";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:6:"恩～";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:14:"121.18.236.253";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1626";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1626";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"failed";s:12:"POST_comment";s:6:"恩～";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1626";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:2:"69";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"121.18.236.253";s:11:"REMOTE_PORT";s:4:"9441";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:2:"69";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1626";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1327742463";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7728</wp:comment_id>
			<wp:comment_author><![CDATA[Li Yin]]></wp:comment_author>
			<wp:comment_author_email>liyin@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.255.1.116</wp:comment_author_IP>
			<wp:comment_date>2012-02-06 14:37:07</wp:comment_date>
			<wp:comment_date_gmt>2012-02-06 14:37:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用wiki format吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328585689.3207";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1626";s:14:"comment_author";s:6:"Li Yin";s:20:"comment_author_email";s:14:"liyin@live.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:17:"用wiki format吧";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"220.255.1.116";s:10:"user_agent";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1626";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1626";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:6:"Li Yin";s:10:"POST_email";s:14:"liyin@live.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:17:"用wiki format吧";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1626";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"122";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"220.255.1.116";s:11:"REMOTE_PORT";s:5:"44407";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"122";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1626";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_X_FORWARDED_FOR";s:13:"121.6.174.100";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1328539025";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328539027.1655";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>.NFClass red links chrome问题排查和解决</title>
		<link>http://www.iceskysl.com/?p=1630</link>
		<pubDate>Sat, 28 Jan 2012 09:48:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1630</guid>
		<description></description>
		<content:encoded><![CDATA[不知道从什么时间开始，我在chrome中看网页的时候经常能看到红色背景的链接文字，开始以为是网站的样式除了问题，后来觉得应该是chrome浏览器出了什么问题～ 

<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png"><img src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.34.42-PM.png" alt="" title="Screen Shot 2012-01-28 at 5.34.42 PM" width="305" height="324" class="alignnone size-full wp-image-1631" /></a>

仔细检查，发现如下的css
<a href="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png"><img src="http://www.iceskysl.com/wp-content/uploads/2012/01/Screen-Shot-2012-01-28-at-5.41.40-PM.png" alt="" title="Screen Shot 2012-01-28 at 5.41.40 PM" width="322" height="71" class="alignnone size-full wp-image-1632" /></a>



经过检查（Library/Application Support/Google/Chrome/Default/User StyleSheets/Custom.css），发现不是本地的css配置，最后找到是一个叫“SEO Site Tools”导致的，具体原因是：
<blockquote>
The reason is simple. I installed an extension called SEO Site Tools which installs an icon on the right of the address bar. When you click the button, on the window displayed there is the option “Show no follo” which is an option for displaying links that have the value nofollow for the attribute rel of an HTML element.

This attribute instructs some search engines that a  hyperlink should not influence the link target’s ranking in the search engine’s index. (Source: wikipedia.org)
</blockquote>

修复的方法很简单，去掉“Show no follo”的勾选就好了～
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1630</wp:post_id>
		<wp:post_date>2012-01-28 09:48:36</wp:post_date>
		<wp:post_date_gmt>2012-01-28 09:48:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nfclass-red-links-chrome%e9%97%ae%e9%a2%98%e6%8e%92%e6%9f%a5%e5%92%8c%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="category" nicename="htmlcssjs"><![CDATA[Html/css/js]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CoffeeScript解决JavaScript不美,Node.js潜力巨大</title>
		<link>http://www.iceskysl.com/?p=1635</link>
		<pubDate>Sat, 28 Jan 2012 22:57:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1635</guid>
		<description></description>
		<content:encoded><![CDATA[如果你对JavaScript感兴趣，但是不喜欢写一大堆一大堆的JavaScript代码，那真的不是你的错，因为很多人都说JavaScript不美，究其原因，可以归纳为：<strong><em>JavaScript的诞生是个悲剧. 它是函数式+动态语言的优秀内核, 却硬被绑上了C/Java的语法。</em></strong>

如果你真的喜欢JavaScript，那么你可以尝试了解更多～比如CoffeeScript，再比如Node.js，再比如Connect,再比如Express，再再比如jade，再再再比如npm等等，于是我们从安装npm（a package manager for node）开始～

<strong>#装npm</strong>
ice@mac:~ > curl http://npmjs.org/install.sh | sh
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  7881  100  7881    0     0   3664      0  0:00:02  0:00:02 --:--:--  8584
tar=/usr/bin/tar
version:
bsdtar 2.8.3 - libarchive 2.8.3
install npm@1.1
fetching: http://registry.npmjs.org/npm/-/npm-1.1.0-3.tgz
0.6.2
1.1.0-3
cleanup prefix=/usr/local

All clean!
/usr/local/bin/npm -> /usr/local/lib/node_modules/npm/bin/npm-cli.js
npm@1.1.0-3 /usr/local/lib/node_modules/npm
It worked
<!--more-->
#看看怎么用
ice@mac:~ > npm help

Usage: npm <command>

where <command> is one of:
    adduser, apihelp, author, bin, bugs, c, cache, completion,
    config, deprecate, docs, edit, explore, faq, find, get,
    help, help-search, home, i, info, init, install, la, link,
    list, ll, ln, login, ls, outdated, owner, pack, prefix,
    prune, publish, r, rb, rebuild, remove, restart, rm, root,
    run-script, s, se, search, set, show, star, start, stop,
    submodule, tag, test, un, uninstall, unlink, unpublish,
    unstar, up, update, version, view, whoami

npm <cmd> -h     quick help on <cmd>
npm -l           display full usage info
npm faq          commonly asked questions
npm help <term>  search for help on <term>
npm help npm     involved overview

Specify configs in the ini-formatted file:
    /Users/ice/.npmrc
or on the command line via: npm <command> --key value
Config info can be viewed via: npm help config

npm@1.1.0-3 /usr/local/lib/node_modules/npm

<strong>#用npm装connect</strong>
ice@mac:~ > npm install connect
npm http GET https://registry.npmjs.org/connect
npm http 200 https://registry.npmjs.org/connect
npm http GET https://registry.npmjs.org/connect/-/connect-1.8.5.tgz
npm http 200 https://registry.npmjs.org/connect/-/connect-1.8.5.tgz
npm http GET https://registry.npmjs.org/qs
npm http GET https://registry.npmjs.org/mime
npm http GET https://registry.npmjs.org/formidable
npm http 200 https://registry.npmjs.org/formidable
npm http 200 https://registry.npmjs.org/mime
npm http 200 https://registry.npmjs.org/qs
npm http GET https://registry.npmjs.org/formidable/-/formidable-1.0.8.tgz
npm http GET https://registry.npmjs.org/mime/-/mime-1.2.4.tgz
npm http GET https://registry.npmjs.org/qs/-/qs-0.4.1.tgz
npm http 200 https://registry.npmjs.org/mime/-/mime-1.2.4.tgz
npm http 200 https://registry.npmjs.org/formidable/-/formidable-1.0.8.tgz
npm http 200 https://registry.npmjs.org/qs/-/qs-0.4.1.tgz
connect@1.8.5 ./node_modules/connect 
├── mime@1.2.4
├── qs@0.4.1
└── formidable@1.0.8

<strong>#用npm装express</strong>
ice@mac:~ >  npm install express
npm http GET https://registry.npmjs.org/express
npm http 200 https://registry.npmjs.org/express
npm http GET https://registry.npmjs.org/express/-/express-2.5.6.tgz
npm http 200 https://registry.npmjs.org/express/-/express-2.5.6.tgz
npm http GET https://registry.npmjs.org/mime
npm http GET https://registry.npmjs.org/qs
npm http GET https://registry.npmjs.org/mkdirp/0.0.7
npm http 304 https://registry.npmjs.org/qs
npm http 304 https://registry.npmjs.org/mime
npm http 200 https://registry.npmjs.org/mkdirp/0.0.7
npm http GET https://registry.npmjs.org/mkdirp/-/mkdirp-0.0.7.tgz
npm http 200 https://registry.npmjs.org/mkdirp/-/mkdirp-0.0.7.tgz
express@2.5.6 ./node_modules/express 
├── mkdirp@0.0.7
├── mime@1.2.4
└── qs@0.4.1

<strong>#用npm装jade</strong>
ice@mac:~ > npm install jade
npm http GET https://registry.npmjs.org/jade
npm http 200 https://registry.npmjs.org/jade
npm http GET https://registry.npmjs.org/jade/-/jade-0.20.0.tgz
npm http 200 https://registry.npmjs.org/jade/-/jade-0.20.0.tgz
npm http GET https://registry.npmjs.org/commander
npm http GET https://registry.npmjs.org/mkdirp
npm http 200 https://registry.npmjs.org/mkdirp
npm http GET https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz
npm http 200 https://registry.npmjs.org/commander
npm http GET https://registry.npmjs.org/commander/-/commander-0.2.1.tgz
npm http 200 https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz
npm http 200 https://registry.npmjs.org/commander/-/commander-0.2.1.tgz
jade@0.20.0 ./node_modules/jade 
├── commander@0.2.1
└── mkdirp@0.3.0

好了，你入门了，更多资料，请自行查看如下链接的资料吧～

<strong>相关资料</strong>

CoffeeScript: CoffeeScript is a little language that compiles into JavaScript
http://coffeescript.org/

为什么CoffeeScript这么美?
http://cnodejs.org/blog/?p=1584

CoffeeScript: The beautiful way to write JavaScript
http://amix.dk/blog/post/19612

10个让朋友对你刮目相看的CoffeeScript单行代码绝技
http://heikezhi.com/2011/06/08/10-coffeescript-one-liners-to-impress-your-friends/

npm: a package manager for node
https://github.com/isaacs/npm

Express：http://expressjs.com/
High performance, high class web development for Node.js

Connect: Connect is a middleware layer for Node.js
http://www.senchalabs.org/connect/

jade: http://jade-lang.com/
Node Template Engine

coffee-box: Blog engine for fashionable developers. Built upon Node.js, Express, MongoDB and CoffeeScript.
https://github.com/qiao/coffee-box]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1635</wp:post_id>
		<wp:post_date>2012-01-28 22:57:06</wp:post_date>
		<wp:post_date_gmt>2012-01-28 22:57:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coffeescript%e8%a7%a3%e5%86%b3javascript%e4%b8%8d%e7%be%8enode-js%e6%bd%9c%e5%8a%9b%e5%b7%a8%e5%a4%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="connect"><![CDATA[Connect]]></category>
		<category domain="post_tag" nicename="express"><![CDATA[Express]]></category>
		<category domain="category" nicename="htmlcssjs"><![CDATA[Html/css/js]]></category>
		<category domain="post_tag" nicename="jade"><![CDATA[jade]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="npm"><![CDATA[npm]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_186bbd1faa6ff2a9b786ba43c48a0f43</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_36178784db6ca39db95bbf0e586e3d81</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_938432c639d189b0d4eeccd5324d3607</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f0880b27ad84a8364aee61c732f45f48</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_251cd3e78ea0f7b17cc8e4d8661e4e8c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f105a88f8c5d3df8c03d2a01a453c533</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3421cc979cde6fb31789ea7174516e97</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rails-erd: 生成rails项目的实体关系图</title>
		<link>http://www.iceskysl.com/?p=1641</link>
		<pubDate>Sun, 29 Jan 2012 02:47:49 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1641</guid>
		<description></description>
		<content:encoded><![CDATA[写rails的好像很多人都没正儿八经的数据库设计文档（尽管这是不对的，但是还是很多人这么干了），随着项目越来越大，有时候我们需要搞明白实体间关系的时候就傻眼了，如何能形象的展示实体间的关系(Entity-Relationship Diagrams)，rails-erd 这个gem 可以帮我们实现：

1. 首先安装Graphviz
% brew install cairo pango graphviz # Homebrew on Mac OS X
% sudo port install graphviz # Macports on Mac OS X
% sudo aptitude install graphviz # Debian and Ubuntu 

2. 然后在开发环境中使用，在Gemfile添加
<pre lang="ruby">
group :development do
  gem "rails-erd", :git => 'git://github.com/voormedia/rails-erd.git'
end
</pre>

3. 安装gem
% bundle install 

4. 生成PDF
% rake erd
在项目根目录下就会生成ERD.pdf，效果类似：
<img src="http://rails-erd.rubyforge.org/images/entity-relationship-diagram-for-rails.png" alt="" />

更多信息参考：http://rails-erd.rubyforge.org/
<!--more-->
附：常见错误处理：
Could not find gem 'choice (~> 0.1.4) ruby', which is required by gem 'rails-erd (>= 0) ruby', in any of the sources.

原因是rails-erd依赖choice这个gem，装下
ice@mac:/www/trunk > sudo gem install choice
Password:
Successfully installed choice-0.1.4
1 gem installed
Installing ri documentation for choice-0.1.4...
Installing RDoc documentation for choice-0.1.4...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1641</wp:post_id>
		<wp:post_date>2012-01-29 02:47:49</wp:post_date>
		<wp:post_date_gmt>2012-01-29 02:47:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-erd-%e7%94%9f%e6%88%90rails%e9%a1%b9%e7%9b%ae%e7%9a%84%e5%ae%9e%e4%bd%93%e5%85%b3%e7%b3%bb%e5%9b%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="db-technic"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="graphviz"><![CDATA[Graphviz]]></category>
		<category domain="post_tag" nicename="rails-erd"><![CDATA[rails-erd]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Google Task使用心得, 最合适的GTD工具</title>
		<link>http://www.iceskysl.com/?p=1651</link>
		<pubDate>Sat, 04 Feb 2012 06:01:06 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1651</guid>
		<description></description>
		<content:encoded><![CDATA[希望没有标题党，我属于半调子的GTD (Get Thing Done)，我不会严格准收GTD的规则，只是寻找最合适的方法和工具来提高我的效率～
尝试过很多GTD的工具，例如大名鼎鼎的things，37signals的Ta-Da List,doit.im,Remember the Milk(RTM)等等等～线上的，线下的，收费的，免费的，林林总总，好多好多～但是没一款是我用着非常顺手的～

其实我的需求蛮简单的，大概如下：
1. 需要支持快捷键（最好是手不离开键盘能完成全部操作，或者是纪录，整理list的主要工作）
2. 需要支持子任务（最好是不限制级的，目前能用到3级别）
3. 界面简洁，再简洁
4. 支持多端访问，至少在电脑和手机（android&iphone)可以使用
5. 可以打印或者email给朋友

最终还是回到了Google Task，经过一段时间的使用，我现在已经非常喜欢Google Task，也给我的效率带来很大帮助，我可以把我的方式分享下。
1. 每天开电脑的第一件事情就是开gmail，处理完邮件开始工作，顺手把gmail里把Google Task打开，并pop up出一个单独的窗口，拖拉到合适的大小；（我工作的时候是两个显示器，就把这个窗口一直放在外接显示器的边上，抬眼可见）
2. 每周一个list，名字是时间范围，比如2012.02.06－2012.02.12；
3. 周一的时候会尽量把本周要做的事情列进去（按照事情的类型或者项目，比如公司事务，eoemarket相关），再把要做的事情一个一个输入进去，Google Task的输入很方便，用好tab键和shift tab键来调整层级；用好Ctrl + Up和Ctrl + Down来调整顺序，用Shift + Enter进入到具体的事情中撰写详细，写完再Shift + Enter回到列表；
4. 每次做事情的时候，可以用Tab再细分，一个一个执行掉；完成后回到Google Task，用Option + Enter 标识这个完成（Option + Enter这个快捷键在官方帮助文档和tips里都没，我自己找出来的，mac电脑）；另外勾选上级条目可以把下级条目都标记完成～
5. 每次遇到新的事情直接添加进去，经常review，如此反复就好了～
6. 有的时候还通过打印和发送邮件通知其他人我都做了什么；

此外，Google Task提供如下方式的使用，我个人觉得足够了
1. gmail中集成/igoogle集成
2. iphone客户端，android客户端（第三方开发的）
3. chrome插件
4. 桌面客户端（没找到，也不怎么用）
5. api接口（或者自己写）

如果硬说还可以有些期待的话，我的是这样的：
1. 谁写个更好用的iphone客户端（现在app store上的质量一般，而且收费，哪天我心血来潮我来写一个去～）
2. 可以把一个list里没完成的复制到另外一个list中
3. 真木了

我的个人建议是：必须用好快捷键！

希望我的这篇介绍能让你喜欢Google Task，并对自己有所帮助
如果你有兴趣，可以看看它的官方帮助页面
http://support.google.com/mail/bin/answer.py?hl=en&ctx=mail&answer=106237
如果你针对Google Task有疑问，欢迎和我交流～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1651</wp:post_id>
		<wp:post_date>2012-02-04 06:01:06</wp:post_date>
		<wp:post_date_gmt>2012-02-04 06:01:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-task%e4%bd%bf%e7%94%a8%e5%bf%83%e5%be%97-%e6%9c%80%e5%90%88%e9%80%82%e7%9a%84gtd%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="google-task"><![CDATA[Google Task]]></category>
		<category domain="post_tag" nicename="gtd"><![CDATA[GTD]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="category" nicename="tips-%e6%8a%80%e6%9c%af%e5%bd%92%e6%80%bb-technic"><![CDATA[Tips]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_57cacd56735b6772adeabfe878270fd5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7699</wp:comment_id>
			<wp:comment_author><![CDATA[Igotit]]></wp:comment_author>
			<wp:comment_author_email>aochin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://by-igotit.com</wp:comment_author_url>
			<wp:comment_author_IP>117.79.233.249</wp:comment_author_IP>
			<wp:comment_date>2012-02-04 07:16:40</wp:comment_date>
			<wp:comment_date_gmt>2012-02-04 07:16:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用pop-out的不妨用这个单独的桌面版：https://mail.google.com/tasks/desktop?pli=1]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328345286.5365";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328339800.1647";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1651";s:14:"comment_author";s:6:"Igotit";s:20:"comment_author_email";s:16:"aochin@gmail.com";s:18:"comment_author_url";s:20:"http://by-igotit.com";s:15:"comment_content";s:92:"用pop-out的不妨用这个单独的桌面版：https://mail.google.com/tasks/desktop?pli=1";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"117.79.233.249";s:10:"user_agent";s:116:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1651";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1651";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:6:"Igotit";s:10:"POST_email";s:16:"aochin@gmail.com";s:8:"POST_url";s:20:"http://by-igotit.com";s:12:"POST_comment";s:92:"用pop-out的不妨用这个单独的桌面版：https://mail.google.com/tasks/desktop?pli=1";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1651";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"311";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"117.79.233.249";s:11:"REMOTE_PORT";s:5:"52745";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"311";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:116:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.77 Safari/535.7";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1651";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1328339799";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7700</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.244.255.87</wp:comment_author_IP>
			<wp:comment_date>2012-02-04 08:50:16</wp:comment_date>
			<wp:comment_date_gmt>2012-02-04 08:50:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢～我试试看～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7699</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328345416.1752";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:76:{s:15:"comment_post_ID";s:4:"1651";s:14:"comment_author";s:8:"iceskysl";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:24:"谢谢～我试试看～";s:14:"comment_parent";s:4:"7699";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:14:"118.244.255.87";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:8:"referrer";s:33:"http://www.iceskysl.com/wp-admin/";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1651";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"7699";s:20:"POST_comment_post_ID";s:4:"1651";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"0";s:9:"POST_mode";s:9:"dashboard";s:32:"POST__ajax_nonce-replyto-comment";s:10:"a86a0f5a5c";s:32:"POST__wp_unfiltered_html_comment";s:10:"a37fe38c71";s:12:"POST_content";s:24:"谢谢～我试试看～";s:7:"POST_id";s:4:"1651";s:21:"POST_comments_listing";s:0:"";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:51:"/datas/www/iceskysl/current/wp-admin/admin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"367";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:12:"DOCUMENT_URI";s:24:"/wp-admin/admin-ajax.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"118.244.255.87";s:11:"REMOTE_PORT";s:4:"7405";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"367";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1017.2 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"HTTP_REFERER";s:33:"http://www.iceskysl.com/wp-admin/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1328345415";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7738</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.57.28.75</wp:comment_author_IP>
			<wp:comment_date>2012-02-08 12:24:08</wp:comment_date>
			<wp:comment_date_gmt>2012-02-08 12:24:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好像基本都在线～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7735</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328703848.8889";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:76:{s:15:"comment_post_ID";s:4:"1651";s:14:"comment_author";s:8:"iceskysl";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:24:"好像基本都在线～";s:14:"comment_parent";s:4:"7735";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:12:"119.57.28.75";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.3 Safari/535.19";s:8:"referrer";s:33:"http://www.iceskysl.com/wp-admin/";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1651";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"7735";s:20:"POST_comment_post_ID";s:4:"1651";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"0";s:9:"POST_mode";s:9:"dashboard";s:32:"POST__ajax_nonce-replyto-comment";s:10:"7f919d75ef";s:32:"POST__wp_unfiltered_html_comment";s:10:"7356e329d6";s:12:"POST_content";s:24:"好像基本都在线～";s:7:"POST_id";s:4:"1651";s:21:"POST_comments_listing";s:0:"";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:51:"/datas/www/iceskysl/current/wp-admin/admin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"367";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:12:"DOCUMENT_URI";s:24:"/wp-admin/admin-ajax.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"119.57.28.75";s:11:"REMOTE_PORT";s:5:"18578";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"367";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.3 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"HTTP_REFERER";s:33:"http://www.iceskysl.com/wp-admin/";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1328703848";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7735</wp:comment_id>
			<wp:comment_author><![CDATA[matthewlgm]]></wp:comment_author>
			<wp:comment_author_email>matthewlgm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.39.117.39</wp:comment_author_IP>
			<wp:comment_date>2012-02-07 09:09:29</wp:comment_date>
			<wp:comment_date_gmt>2012-02-07 09:09:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我对Task Manager有个硬性需求，就是离线管理。但在你的需求描述里没有看到这一项，不需要么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328605769.9065";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1651";s:14:"comment_author";s:10:"matthewlgm";s:20:"comment_author_email";s:20:"matthewlgm@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:126:"我对Task Manager有个硬性需求，就是离线管理。但在你的需求描述里没有看到这一项，不需要么？";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"125.39.117.39";s:10:"user_agent";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.53.11 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1651";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1651";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:10:"matthewlgm";s:10:"POST_email";s:20:"matthewlgm@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:126:"我对Task Manager有个硬性需求，就是离线管理。但在你的需求描述里没有看到这一项，不需要么？";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1651";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"457";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"125.39.117.39";s:11:"REMOTE_PORT";s:4:"2847";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.53.11 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10";s:19:"HTTP_CONTENT_LENGTH";s:3:"457";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1651";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"en-us";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1328605769";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328703831.9017";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>入手kindle 4初体验</title>
		<link>http://www.iceskysl.com/?p=1653</link>
		<pubDate>Mon, 13 Feb 2012 14:03:36 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1653</guid>
		<description></description>
		<content:encoded><![CDATA[kindle刚出那会就想着能买一台读书，不知道什么原因没买成，年前又想起，在weibo上问过一次，大家反馈都还不错，过完年回来的一个周末突然想起，就跑到网上查，慢慢才搞明白kindle 4，kindle 3，还有kindle touch，kindle fire都啥区别，于是选了kindle 4，因为只用来读书，应该足够,于是就买了～
<img src="http://g-ecx.images-amazon.com/images/G/01/kindle/tequila/dp/KT-slate-02-lg._V166940136_.jpg" alt="" />

在taobao上买的，发的顺风，第二天下午就送到，还是蛮速度的，拆箱子，开机，开始体验传说中的kindle 4～倒腾了一晚上，终于可以写点初体验，就不上图了，说几点我的体验。

1. 价格真便宜，价格才79刀，taobao上也就600多块钱，应该不算贵吧，相比ipad之类的便宜的不是一点半点；
2. 待机时间超长，重量很轻，加上一个皮套也很轻，轻的你可以躺在床上看也不觉得受累；
3. 书籍蛮多，对中文支持不错，我的买回来的好像给我刷了多看系统，没搞明白啥玩意，直接被我恢复到原版了，对中文支持也很好，可以插上usb直接往里面拷书，也可以通过给username@free.kindle.com发邮件来推送；
4. 推送到kindle的功能相当好用，虽然有所延迟，但是体验还是很好的，方便快捷；
5. 显示效果真好，很柔和很自然（当然有的pdf排版不好的看着还是比较痛苦的）
6. 打字很不方便，需要做读书笔记的要注意了，我连调出键盘输入wifi密码都觉得痛苦～

如上是几点感受，我用了也还不久，如果你想了解更多，可以给我留言；如果你有更多好书，也可以分享给我，我不看小说，不要分享给我咯～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1653</wp:post_id>
		<wp:post_date>2012-02-13 14:03:36</wp:post_date>
		<wp:post_date_gmt>2012-02-13 14:03:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%a5%e6%89%8bkindle-4%e5%88%9d%e4%bd%93%e9%aa%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7892</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>122.234.232.181</wp:comment_author_IP>
			<wp:comment_date>2012-03-15 05:32:26</wp:comment_date>
			<wp:comment_date_gmt>2012-03-15 05:32:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[KindleTouch和Kindle4哪个好点？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1331789546.8144";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1653";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:36:"KindleTouch和Kindle4哪个好点？";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"122.234.232.181";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1653";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1653";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:36:"KindleTouch和Kindle4哪个好点？";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1653";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"202";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:15:"122.234.232.181";s:11:"REMOTE_PORT";s:4:"1192";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1653";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"202";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1331789546";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1331902410.5773";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7829</wp:comment_id>
			<wp:comment_author><![CDATA[Yong StillHere]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.176.52</wp:comment_author_IP>
			<wp:comment_date>2012-02-24 12:30:06</wp:comment_date>
			<wp:comment_date_gmt>2012-02-24 12:30:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[kindle 4都有了、我还停留在kindle 3、、、]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330222418.3718";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330086606.5691";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1653";s:14:"comment_author";s:14:"Yong StillHere";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:52:"kindle 4都有了、我还停留在kindle 3、、、";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.176.52";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1653";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1653";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:14:"Yong StillHere";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:52:"kindle 4都有了、我还停留在kindle 3、、、";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1653";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"264";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.176.52";s:11:"REMOTE_PORT";s:4:"6567";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1653";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"264";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1330086605";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7949</wp:comment_id>
			<wp:comment_author><![CDATA[Smith]]></wp:comment_author>
			<wp:comment_author_email>zjc03806@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.81.229.186</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 13:39:56</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 13:39:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看pdf流畅吗，打开快吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334935321.6732";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1333892396.4852";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1653";s:14:"comment_author";s:5:"Smith";s:20:"comment_author_email";s:16:"zjc03806@163.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:33:"看pdf流畅吗，打开快吗？";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"125.81.229.186";s:10:"user_agent";s:174:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; QQDownload 701; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1653";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1653";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:5:"Smith";s:10:"POST_email";s:16:"zjc03806@163.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:33:"看pdf流畅吗，打开快吗？";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1653";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"185";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"125.81.229.186";s:11:"REMOTE_PORT";s:5:"16705";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:191:"application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1653";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-CN";s:15:"HTTP_USER_AGENT";s:174:"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; QQDownload 701; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"185";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1333892395";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>源于内心，回归更纯粹的技术 －记eoeAndroid社区新版上线</title>
		<link>http://www.iceskysl.com/?p=1658</link>
		<pubDate>Wed, 15 Feb 2012 18:08:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1658</guid>
		<description></description>
		<content:encoded><![CDATA[eoeAndroid社区是我于[b]2009年4月7日[/b]创办的，转眼间已经来到2012年的2月中旬，不知不觉过去快三个年头，三年来eoeAndroid一直在不停的探索前进，目的是力求让更多人在这能安家落户，学有所成。

记忆中我们的eoeAndroid已经经过了这么几个阶段

<strong>第一阶段：这是个大家庭（2009年）</strong>
社区创建之初，android在国内还很不活跃，社区人数不多，仅有几个好朋友开始活跃，开始摸索android是个什么，可以做什么，社区人不多，但是大家都蛮熟悉，社区象一个大家庭，大家经常熬夜研究文档，代码，试验。

<strong>第二阶段：曲折的发展之路（2010年）</strong>
到了2010年前后，有了第二批做android的人，社区得到大家的认可和口碑相传，很快服务器就开始吃紧，开始不稳定，那会服务器还托管在上海一个机房，而后就遭受其他网站的牵连，机房被封，服务器被拔线，几经折腾，后来索性搬迁到国外，虽然一些地方速度慢一些，但是终于稳定了；这段时间很曲折，在国内换从上海换到成都，又换到北京，险些万劫不复，幸好那会备份转移做的比较勤，只丢了一点点数据，万幸！

<strong>第三阶段：蓬勃发展，开拓思路（2011年）</strong>
迁往国外后的一段日子，android终于爆发了，开发者数量也开始爆发了，越来越多的人加入android技术阵营，社区一次一次的加带宽，加内存，加磁盘，一次一次的升级，优化，最后我们再次迁回国内，有了自己的机房和专属服务器；社区也做过一次大的升级成开发者门户，想给大家提供更多的内容。

<strong>第四阶段：新起点，新目标</strong>
2011底，我们酝酿新的改版，我们一直在思考如何把eoeAndroid社区做好，让更多的人得到帮助，让更多的人踏入android行业的大门；我们设计和讨论过n多方案，最终我们选择的方向是“[color=Red]源于内心，回归更纯粹的技术[/color]”，或许是因为技术出身，对技术有着特殊的感情，我们觉得eoeAndroid一直都有这么一些精神：<strong><span style="color: #ff0000;">专业 专注 自由 开放 分享</span></strong> 。我们大家都专注android技术领域，都是专业的人才，我们会积累沉淀好的资源和文章，用心运营；我们也崇尚自由的氛围，开放的态度，乐于分享我们的经验和知识。
新的2012年，我们重新启航，新版今天正式上线，详细的公告在这里 http://www.eoeandroid.com/thread-156623-1-1.html，如果您觉得改的不错，请告诉你的朋友回来瞅瞅，如果你觉得还有可以完善的地方，非常感谢您来这给我捉虫子 http://www.eoeandroid.com/thread-156622-1-1.html

新的2012年里，我们将秉承：专业 专注 自由 开放 分享。寻觅更多的合作伙伴，为广大开发者解决实际问题，力求把eoeAndroid做成大家都喜欢的eoeAndroid。您如果有任何建议和意见，都非常欢迎得到您的反馈～

-by iceskysl at 2012.02.16凌晨2点 北京]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1658</wp:post_id>
		<wp:post_date>2012-02-15 18:08:16</wp:post_date>
		<wp:post_date_gmt>2012-02-15 18:08:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%ba%90%e4%ba%8e%e5%86%85%e5%bf%83%ef%bc%8c%e5%9b%9e%e5%bd%92%e6%9b%b4%e7%ba%af%e7%b2%b9%e7%9a%84%e6%8a%80%e6%9c%af-%ef%bc%8d%e8%ae%b0eoeandroid%e7%a4%be%e5%8c%ba%e6%96%b0%e7%89%88%e4%b8%8a%e7%ba%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>解决用ruby生成大xml文件的性能问题</title>
		<link>http://www.iceskysl.com/?p=1662</link>
		<pubDate>Fri, 24 Feb 2012 11:28:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1662</guid>
		<description></description>
		<content:encoded><![CDATA[近日遇到一个需求是定期生成一个很大的xml文件，可能会10多w个item，过程中需要查询数据库，需要一些运算，遇到了性能问题，开始使用nokogiri，但是很慢很慢，大概的代码如下：
<code>
require 'rubygems'
require 'nokogiri'
a = Time.now
builder = Nokogiri::XML::Builder.new do |xml|
  xml.root {
    (1..500000).each do |k|
    xml.products {
      xml.widget {
        xml.id_ k
        xml.name "Awesome iceskysl widget"
      }
    }
    end
  }
end
o = File.new("test_noko.xml", "w")
o.write(builder.to_xml)
o.close
puts (Time.now-a).to_s
</code>

这个代码有2个主要的问题：
1. 慢
2. 耗内存

于是我们有两个解决方案，分别是：
<!--more-->

<strong>1.用libxml-ruby替代nokogiri，因为nokogiri优势是读取的快，写的花一般，用libxml-ruby可以这样</strong>
<code>
require 'rubygems'
require 'xml'
doc = XML::Document.new()
doc.root = XML::Node.new('root_node')
root = doc.root

500000.times do |k|
  root << elem1 = XML::Node.new('products')
  elem1 << elem2 = XML::Node.new('widget')
  elem2['id'] = k.to_s
  elem2['name'] = 'Awesome widget'
end

doc.save('foo.xml', :indent => false, :encoding => XML::Encoding::UTF_8)
</code>
执行的结构类似
ice@mac:/source/labs/xml > time ruby test_xml2.rb 
real	0m50.065s
user	0m4.594s
sys	0m0.509s

<strong>2. 直接写，示范代码如下</strong>
f = File.open("foo.xml", "w")
f.puts("<?xml version=\"1.0\" encoding=\"gbk\"?>")
f.puts('<doc>')
500000.times do |k|
  f.puts "<product><widget id=\"#{k} name=\"Awesome widget\" /></product>"
end
f.puts('</doc>')
f.close

运行结构类似这样的：
ice@mac:/source/labs/xml > time ruby test_xml.rb 
real	0m0.974s
user	0m0.813s
sys	0m0.063s

从上面可以看到，效率差别还是蛮大的，回到我自己的case里来，原来需要6个小时的job现在不要30分钟就搞定了（自然还有一些其他的优化，就不细说了）～～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1662</wp:post_id>
		<wp:post_date>2012-02-24 11:28:51</wp:post_date>
		<wp:post_date_gmt>2012-02-24 11:28:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%a3%e5%86%b3%e7%94%a8ruby%e7%94%9f%e6%88%90%e5%a4%a7xml%e6%96%87%e4%bb%b6%e7%9a%84%e6%80%a7%e8%83%bd%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在rails中mysql读写分离的方案</title>
		<link>http://www.iceskysl.com/?p=1669</link>
		<pubDate>Sun, 26 Feb 2012 08:22:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1669</guid>
		<description></description>
		<content:encoded><![CDATA[手上几个项目访问的压力越来越大，用合用的mysql转移到单独的msql服务器了，但还是压力还是很大，偶尔还会遇到lock问题，是想着需要做一下mysql的读写分离的方案，找了一些资料，汇总如下：

之前晓得有两个方案可以使用
1. 用类似<strong>use_db</strong>这样的插件，实现针对model的读写分离（其实这个不是真正意义上的读写分离，但是可以凑合用）
2. 用类似<strong>master_slave_adapter</strong>和<strong>masochism</strong>插件实现真正意思上的读写分离，配置稍微麻烦点，有的可能还需要一些hard code～

也在ruby_china发了帖子和大家讨论了下（<a href="http://ruby-china.org/topics/1397">http://ruby-china.org/topics/1397</a>），在大家的回复了，看到 @kevinxu 提到了<strong>db-charmer</strong> (<a href="https://github.com/kovyrin/db-charmer">https://github.com/kovyrin/db-charmer</a>)，也看到 @ShiningRay 提到了<strong>data_fabric</strong>，还有 @bony 提到了可以自己来拦截“拦截一下activerecord的方法，在读操作和写操作时重新设置connection”。

于是就去多查下资料，看到有如下ruby-toolbox上有个Active_Record_Sharding的页面（<a href="https://www.ruby-toolbox.com/categories/Active_Record_Sharding">https://www.ruby-toolbox.com/categories/Active_Record_Sharding</a> ），里面还提到了了<strong>Octopus</strong>这个gem（<a href="https://github.com/tchandy/octopus">https://github.com/tchandy/octopus</a>），于是仔细看了一下Db-charmer这个还是比较完善的，按照其描述是这样的：DbCharmer is a Rails plugin (and gem) that could be used to manage AR model connections, implement master/slave query schemes, sharding and other magic features many high-scale applications need. 然后找到几篇不错的介绍文章
<strong>DB Charmer – ActiveRecord Connection Magic Plugin</strong>
<a href="http://kovyrin.net/2009/11/03/db-charmer-activerecord-connection-magic-plugin/"> http://kovyrin.net/2009/11/03/db-charmer-activerecord-connection-magic-plugin/</a>

<strong>DbCharmer 1.7.0 Release: Rails 3.0 Support and Forced Slave Reads</strong>
<a href="http://kovyrin.net/2011/09/01/dbcharmer-1-7-0/"> http://kovyrin.net/2011/09/01/dbcharmer-1-7-0/</a>

<strong>db-charmer github</strong>
<a href="https://github.com/kovyrin/db-charmer"> https://github.com/kovyrin/db-charmer</a>

<strong>db-charmer homepage</strong>
<a href="http://kovyrin.github.com/db-charmer/index.html"> http://kovyrin.github.com/db-charmer/index.html</a>

看到几经完善，现在也已经支持rails3了，没仔细测试，也还没来得及看源码，有空的可以看后分析下，我主要考虑稳定性和扩展性～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1669</wp:post_id>
		<wp:post_date>2012-02-26 08:22:43</wp:post_date>
		<wp:post_date_gmt>2012-02-26 08:22:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8rails%e4%b8%admysql%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb%e7%9a%84%e6%96%b9%e6%a1%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="db-charmer"><![CDATA[db-charmer]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="post_tag" nicename="octopus"><![CDATA[Octopus]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby-rails"><![CDATA[Ruby &amp; Rails]]></category>
		<category domain="post_tag" nicename="sharding"><![CDATA[Sharding]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7850</wp:comment_id>
			<wp:comment_author><![CDATA[Yong StillHere]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.176.52</wp:comment_author_IP>
			<wp:comment_date>2012-02-27 01:53:41</wp:comment_date>
			<wp:comment_date_gmt>2012-02-27 01:53:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个、高级了、、、]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330307622.4968";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1669";s:14:"comment_author";s:14:"Yong StillHere";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:27:"这个、高级了、、、";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.176.52";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1669";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1669";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:14:"Yong StillHere";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:27:"这个、高级了、、、";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1669";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"221";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.176.52";s:11:"REMOTE_PORT";s:4:"1237";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1669";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"221";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1330307620";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>升级mac到10.7.3，体验mac Messages</title>
		<link>http://www.iceskysl.com/?p=1674</link>
		<pubDate>Fri, 02 Mar 2012 14:10:51 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1674</guid>
		<description></description>
		<content:encoded><![CDATA[很早前就注意到mac官网放出了mac版得messages beta（<a href="http://www.apple.com/macosx/mountain-lion/messages-beta/">http://www.apple.com/macosx/mountain-lion/messages-beta/</a>），当时下载后安装得时候提示需要10.7.3，由于本机还是10.7.2版无法体验～

今天下班得时候发现提示10.7.3下载完成可以安装了（mac好像把更新版本放在后台进行，下载完直接提示用户安装了），迫不及待更新，看到如下

<a href="http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM.png"><img class="alignnone size-medium wp-image-1675" title="Screen Shot 2012-03-02 at 9.05.06 PM" src="http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-9.05.06-PM-250x300.png" alt="" width="250" height="300" /></a>

装完后就开始装上次下载得messages beta，下载完安装（需要重启，好像第一次遇到mac安装完软件需要重启），而后就可以用自己得apple id来登陆了，登陆完就可以给其他联系人发message信息啦～

<a href="http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM.png"><img class="alignnone size-medium wp-image-1676" title="Screen Shot 2012-03-02 at 10.08.21 PM" src="http://www.iceskysl.com/wp-content/uploads/2012/03/Screen-Shot-2012-03-02-at-10.08.21-PM-300x199.png" alt="" width="300" height="199" /></a>

但是也发现一个问题，手机端收到得信息是按字分割得，还不晓得是什么原因，是中文得原因？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1674</wp:post_id>
		<wp:post_date>2012-03-02 14:10:51</wp:post_date>
		<wp:post_date_gmt>2012-03-02 14:10:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%87%e7%ba%a7mac%e5%88%b010-7-3%ef%bc%8c%e4%bd%93%e9%aa%8cmac-messages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<category domain="post_tag" nicename="messages"><![CDATA[Messages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7877</wp:comment_id>
			<wp:comment_author><![CDATA[xiaotangtang]]></wp:comment_author>
			<wp:comment_author_email>benbenegg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.61.59.54</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 14:40:04</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 14:40:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是中文的原因吧，其实在手机端只是预览信息的话是一整条哦，不知道为什么点进去了只有一个字一个字的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1331301930.1654";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330958404.6516";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1674";s:14:"comment_author";s:12:"xiaotangtang";s:20:"comment_author_email";s:19:"benbenegg@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:141:"是中文的原因吧，其实在手机端只是预览信息的话是一整条哦，不知道为什么点进去了只有一个字一个字的";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"121.61.59.54";s:10:"user_agent";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.53.11 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1674";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1674";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:12:"xiaotangtang";s:10:"POST_email";s:19:"benbenegg@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:143:"是中文的原因吧，其实在手机端只是预览信息的话是一整条哦，不知道为什么点进去了只有一个字一个字的
";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1674";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"533";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"121.61.59.54";s:11:"REMOTE_PORT";s:5:"54912";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.53.11 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10";s:19:"HTTP_CONTENT_LENGTH";s:3:"533";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1674";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-cn";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1330958403";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>说说我招聘android技术人员的思路</title>
		<link>http://www.iceskysl.com/?p=1679</link>
		<pubDate>Fri, 16 Mar 2012 13:42:16 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1679</guid>
		<description></description>
		<content:encoded><![CDATA[事情源于在eoe android社区看到一个同学写了《<a href="http://www.eoeandroid.com/thread-160381-1-1.html" target="_blank">android面试全跟踪——看到天涯失业7个月，有感而发写下此文</a>》，文章中详细纪录了自己寻找android工作的过程，其中个中辛酸，我想只有体验过这个过程的人才有体会；我把那个帖子转到weibo上，很多人也反馈说看着心酸，我觉得我可以写点东西分享下企业怎么看android技术人员的招聘。

有些人可能对我多少有些了解，应该算国内第一批开始搞android相关的人，09年创办的<a href="http://www.eoeandroid.com/forum.php" target="_blank">android开发社区</a>（eoeandroid.com）现在也是国内android开发人员最活跃的社区，我写过一些代码，也写过一些技术的文章，也做过android应用，也见过很多android的技术，也给公司（eoe）招了不少android技术人员，也给不少朋友奇特推荐过<a href="http://www.eoeandroid.com/forum.php" target="_blank">android</a>技术的人，我下面会分享我对android技术人员招聘的一些看法。

<strong>1. 首先看为人：品性很重要</strong>

或许是因为我们是创业公司，会严格选择每一个进来的人，特别是技术的人。技术很重要，但是在我这边不是第一位的，人品和性格是第一的，创业公司唯一不变的就是变化，如果人品不过关的人肯定待不住，如果性格合不来的人肯定待不久。有人说这个很虚，见一面怎么可能看出品性，其实不难，一举一动，言语措辞都很简单就可以看出一个人的内在（因为技术的人为人真的很简单），所以，如果你去面熟，表现真实的自己，对公司，对个人都是有好处的，合得来就是合得来，合不来强求也没用，这本是个双向选择的事情，不存在谁强势谁弱势。积极，主动，自信，阳光是比较好的品格～

<strong>2. 接着看技术：基本功需要有体系，够扎实，思维要跳跃</strong>

如果来eoe面试过的人应该知道，我们面android有一套笔试题，但是java的，很多人不理解可能会问我来面android的为啥让我做java的题？其实很简单，java是基础，我们的笔试题会涉及到基础的，算法的，开放性的试题，我们需要全面的了解一个人。每个题目都很重要，所以，如果去面试，如果对方是精心设计的题，请认真一点回答，记住认真不是死板，答题看的是基础和思维，细节无所谓，因为有真正干活的时候有google，有api～

<strong>3. 然后看经验：经验很重要，你必须对你做过的项目了如指掌</strong>

做完题目，我们一般就正式面试了，会问问笔试题目上你的感觉和具体一个问题的思路，然后才开始问之前的经验，我们的要求是必须真正做过项目，如果没项目，应用也行，其实需要的就是一个关键点：你真正操作过一个应用，对你做过的模块必须了如指掌，我们不会问太多项目，让你一个最熟悉的或者最喜欢的项目，问的很细节，细节到你证明这个项目自己之前是用心做的，或者证明你在这个项目就是个打酱油的。

然后会问点和android相关的东西，一般容易的，中等的和比较刁钻的问题都会问一些，刁钻的比如会问你现场保护的机制，方式，为什么要现场保护等等问题，如果你是个做技术爱思考的人，这些问题应该不难，如果你虽然做过1－2年android，但是每个方面都很泛泛，那你肯定会被问的傻傻的。

最后会问一些开放性的问题，都是很随机的题目，比如桌子上的一个杯子等等都可能会被问～～这个地方主要看整体的思维和分析问题的能力。

<strong>4. 做决定：合适还是不合适，或者留题目，做个小测试</strong>

如此过程，我们基本上就能判断一个人是否符合我们要求，如果不满足，我们基本会很直接告诉原因是什么，哪个地方我们觉得不合适，你以后应该注意什么？如果我们觉得满足预期，可能就收了；如果我们拿不准，但是觉得你潜力很好，可能会留个题目，做个小东西，不会很难，做的时候请注意自己的编码风格，整体项目结构等等，这些是关键因素～

如上过程，就是我在招android技术人员的一些思路和过程，我们是创业公司，相对看的更全面的能力，但是我个人觉得企业的思维或许都差不多，如果你要找android相关的工作，请参考～

另外，<a href="http://www.eoeandroid.com/forum.php" target="_blank">android开发社区</a> 里有很多企业招聘android技术人员，大家可以多关注，希望大家能找到自己满意android工作～记得经常来<a href="http://www.eoeandroid.com/forum.php" target="_blank">android开发社区</a>活动～

再顺便提一下，我们（eoe）长期招合适的android技术，如果你有兴趣，可以联系我～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1679</wp:post_id>
		<wp:post_date>2012-03-16 13:42:16</wp:post_date>
		<wp:post_date_gmt>2012-03-16 13:42:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%af%b4%e8%af%b4%e6%88%91%e6%8b%9b%e8%81%98android%e6%8a%80%e6%9c%af%e4%ba%ba%e5%91%98%e7%9a%84%e6%80%9d%e8%b7%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="android"><![CDATA[Android &amp; Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7895</wp:comment_id>
			<wp:comment_author><![CDATA[cashplk]]></wp:comment_author>
			<wp:comment_author_email>cash.zhao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>199.47.199.27</wp:comment_author_IP>
			<wp:comment_date>2012-03-16 14:41:38</wp:comment_date>
			<wp:comment_date_gmt>2012-03-16 14:41:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[靠谱，关注]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1331908898.253";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1679";s:14:"comment_author";s:7:"cashplk";s:20:"comment_author_email";s:19:"cash.zhao@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:15:"靠谱，关注";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"199.47.199.27";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.79 Safari/535.11";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1679";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1679";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:7:"cashplk";s:10:"POST_email";s:19:"cash.zhao@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:17:"靠谱，关注
";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1679";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"150";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"199.47.199.27";s:11:"REMOTE_PORT";s:5:"59133";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"150";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.79 Safari/535.11";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1679";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1331908896";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7986</wp:comment_id>
			<wp:comment_author><![CDATA[jason]]></wp:comment_author>
			<wp:comment_author_email>jason_jason146@hotmial.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.244.229.14</wp:comment_author_IP>
			<wp:comment_date>2012-05-04 03:16:47</wp:comment_date>
			<wp:comment_date_gmt>2012-05-04 03:16:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我从事手机软件开发5年了，希望有机会能进 谷歌，但是没有看到谷歌的招聘手机开发的信息。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336101407.9165";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:65:{s:15:"comment_post_ID";s:4:"1679";s:14:"comment_author";s:5:"jason";s:20:"comment_author_email";s:26:"jason_jason146@hotmial.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:125:"我从事手机软件开发5年了，希望有机会能进 谷歌，但是没有看到谷歌的招聘手机开发的信息。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"113.244.229.14";s:10:"user_agent";s:151:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30618; Maxthon 2.0)";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1679";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1679";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:5:"jason";s:10:"POST_email";s:26:"jason_jason146@hotmial.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:125:"我从事手机软件开发5年了，希望有机会能进 谷歌，但是没有看到谷歌的招聘手机开发的信息。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1679";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"473";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"113.244.229.14";s:11:"REMOTE_PORT";s:5:"15166";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:316:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-ms-application, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-ms-xbap, application/x-silverlight, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/QVOD, */*";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1679";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-cn";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_UA_CPU";s:3:"x86";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_USER_AGENT";s:151:"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30618; Maxthon 2.0)";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"473";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1336101407";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336236049.9259";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7900</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.195.183.16</wp:comment_author_IP>
			<wp:comment_date>2012-03-20 07:10:01</wp:comment_date>
			<wp:comment_date_gmt>2012-03-20 07:10:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[颇有感触，特别是第一条，我不是品性不好，只是觉得跟同事们搭不上话，虽想融入他们的圈子，但是我一个外地人，加上各种差异化，让我老觉得我不属于这里、、、
可能是在这里待的时间不够长吧，我才毕业不到一年、、、希望会慢慢好起来、]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1332227401.4294";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1679";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:329:"颇有感触，特别是第一条，我不是品性不好，只是觉得跟同事们搭不上话，虽想融入他们的圈子，但是我一个外地人，加上各种差异化，让我老觉得我不属于这里、、、
可能是在这里待的时间不够长吧，我才毕业不到一年、、、希望会慢慢好起来、";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.195.183.16";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1679";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1679";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:329:"颇有感触，特别是第一条，我不是品性不好，只是觉得跟同事们搭不上话，虽想融入他们的圈子，但是我一个外地人，加上各种差异化，让我老觉得我不属于这里、、、
可能是在这里待的时间不够长吧，我才毕业不到一年、、、希望会慢慢好起来、";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1679";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:4:"1117";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.195.183.16";s:11:"REMOTE_PORT";s:4:"9210";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.61";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1679";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:4:"1117";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1332227400";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>第一台单反 Nikon D90</title>
		<link>http://www.iceskysl.com/?p=1684</link>
		<pubDate>Fri, 06 Apr 2012 16:38:20 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1684</guid>
		<description></description>
		<content:encoded><![CDATA[2012刚开始的时候写过《<a href="http://www.iceskysl.com/?p=1117" target="_blank">2011计划年度总结回顾,2012年预期</a>》中曾经写到“1. 系统学习摄影，有一台单反；”，时间走到4月份，终于入手了一台单反：Nikon D90。

因为是第一台，所以一点经验没有，之前连傻瓜相机用的都少，只偶尔用iphone拍点图像，所以对快门，光圈，曝光，景深，白平衡记本上是没概念的，之前查过一次资料，在Nikon D90，Canon 600D，Nikon D7000等几个之间有过选择，之前在微博上问过达人们，C家和N家都有一大群的粉丝，每个人都能说出一大堆的理由～

搁置了一段时间后，眼看着春天来了，外面光秃秃的树杈也渐渐的有了一点活力，想着也需要给自己找个借口出去走走了，于是再次选了单反，几经比较后，还是选择了Nikon D90。理由不多说，中间也考虑过Canon 600D，后来应该还是看中Nikon的专业性，D90的高性价比吧～

机器手感不错，做工精良，虽然是08年的机器，但还是很气派的，晚上抱着D90说明书，又把前面买的《跟我学摄影》翻出来看了看，还真学了不少之前觉得很复杂的知识，再次体会到，如果你想学什么，就投入进去，尝试着喜欢上，然后你就应该能更有兴趣的学习了。

第一台单反，完成《<a href="http://www.iceskysl.com/?p=1117" target="_blank">2011计划年度总结回顾,2012年预期</a>》中的一个目标，此文仅为纪录。接下去会花下时间多多练习，争取能拍出一些不错的作品～]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1684</wp:post_id>
		<wp:post_date>2012-04-06 16:38:20</wp:post_date>
		<wp:post_date_gmt>2012-04-06 16:38:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ac%ac%e4%b8%80%e5%8f%b0%e5%8d%95%e5%8f%8d-nikon-d90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="d90"><![CDATA[D90]]></category>
		<category domain="post_tag" nicename="nikon"><![CDATA[Nikon]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7965</wp:comment_id>
			<wp:comment_author><![CDATA[f]]></wp:comment_author>
			<wp:comment_author_email>meteorafhd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.246.139.35</wp:comment_author_IP>
			<wp:comment_date>2012-04-18 05:06:56</wp:comment_date>
			<wp:comment_date_gmt>2012-04-18 05:06:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[理科男学入门摄影很简单的，加油~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334932446.7129";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1334725616.999";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:67:{s:15:"comment_post_ID";s:4:"1684";s:14:"comment_author";s:1:"f";s:20:"comment_author_email";s:20:"meteorafhd@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:46:"理科男学入门摄影很简单的，加油~";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"58.246.139.35";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1684";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1684";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:1:"f";s:10:"POST_email";s:20:"meteorafhd@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:46:"理科男学入门摄影很简单的，加油~";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1684";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"232";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"58.246.139.35";s:11:"REMOTE_PORT";s:5:"15671";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"232";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1684";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-US,en;q=0.8,zh-CN;q=0.6";s:19:"HTTP_ACCEPT_CHARSET";s:13:"UTF-8,*;q=0.5";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1334725616";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7948</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.158.58.212</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 10:53:38</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 10:53:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[3月份杭州太子湾公园的郁金香开的那叫一个漂亮啊，不如下次去那里拍、嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1333882418.3909";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1684";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:103:"3月份杭州太子湾公园的郁金香开的那叫一个漂亮啊，不如下次去那里拍、嘿嘿";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"123.158.58.212";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1684";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1684";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:103:"3月份杭州太子湾公园的郁金香开的那叫一个漂亮啊，不如下次去那里拍、嘿嘿";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1684";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"437";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.158.58.212";s:11:"REMOTE_PORT";s:5:"54596";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1684";s:19:"HTTP_CONTENT_LENGTH";s:3:"437";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.112 Safari/534.30";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"zh-CN,zh;q=0.8,en;q=0.6,en-US;q=0.4";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1333882417";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Git 命令行自动补全</title>
		<link>http://www.iceskysl.com/?p=1688</link>
		<pubDate>Fri, 06 Apr 2012 22:57:40 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1688</guid>
		<description></description>
		<content:encoded><![CDATA[在<a href="http://progit.org/book/ch2-7.html" target="_blank">Pro Git</a>上看到的技巧，git的源代码包里的contrib/completion目录下有个<a href="http://repo.or.cz/w/git.git/blob_plain/HEAD:/contrib/completion/git-completion.bash" target="_blank">git-completion.bash</a>，把这个文件保存到~/.git-completion.bash，然后在.bashrc或.bash_profile中加入一行
<blockquote>source ~/.git-completion.bash</blockquote>
这样就能在bash下用tab自动补全git命令、branch等内容了。也可以为系统上所有用户都设置默认使用此脚本。Mac 上将此脚本复制到<code>/opt/local/etc/bash_completion.d</code> 目录中，Linux 上则复制到 <code>/etc/bash_completion.d/</code> 目录中。这两处目录中的脚本，都会在 Bash 启动时自动加载。

在输入 Git 命令的时候可以敲两次跳格键（Tab），就会看到列出所有匹配的可用命令建议：
<pre><code>$ git co&lt;tab&gt;&lt;tab&gt; commit config</code></pre>
此例中，键入 git co 然后连按两次 Tab 键，会看到两个相关的建议（命令） commit 和 config。继而输入 <code>m&lt;tab&gt;</code> 会自动完成 <code>git commit</code> 命令的输入。

命令的选项也可以用这种方式自动完成，其实这种情况更实用些。比如运行 <code>git log</code> 的时候忘了相关选项的名字，可以输入开头的几个字母，然后敲 Tab 键看看有哪些匹配的：
<pre><code>$ git log --s&lt;tab&gt; --shortstat --since= --src-prefix= --stat --summary</code></pre>
这个技巧不错吧，可以节省很多输入和查阅文档的时间。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1688</wp:post_id>
		<wp:post_date>2012-04-06 22:57:40</wp:post_date>
		<wp:post_date_gmt>2012-04-06 22:57:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-%e5%91%bd%e4%bb%a4%e8%a1%8c%e8%87%aa%e5%8a%a8%e8%a1%a5%e5%85%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="completion"><![CDATA[completion]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于Markdown和Mou</title>
		<link>http://www.iceskysl.com/?p=1690</link>
		<pubDate>Fri, 06 Apr 2012 23:26:48 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1690</guid>
		<description></description>
		<content:encoded><![CDATA[开年的时候写过一篇文章《<a href="http://www.iceskysl.com/?p=1626" target="_blank">排斥WYSIWYG编辑器</a>》，其中说到：
<blockquote>最不习惯的就是是文章的格式，一堆html代码，技术的人好像都有洁癖，我现在写的都是在html模式下至今写的，非常排斥WYSIWYG编辑器～一堆没用的格式代码～很不干净～</blockquote>
其实比较成熟的<strong>标记语言</strong>还是有不少的，比如wiki format，又比如今天要讲的Markdown，甚至还有国内bbs喜欢用的bbcode都还是不错的<strong>标记语言</strong>，这里主要讲的是Markdown和Mou。

http://apple4.us/上有篇文章写的不错《<a href="http://apple4.us/2012/02/why-writers-should-use-markdown.html" target="_blank">为什么作家应该用 Markdown 保存自己的文稿</a>》，其中说了为什么作家需要用Markdown保存自己的文稿，其实对技术人员也一样有用，大家可以仔细看看～同时被介绍的还有<a href="http://mouapp.com/" target="_blank">Mou</a>（Mou The missing Markdown editor for web developers）。

<a href="http://mouapp.com/" target="_blank">Mou</a>真是个不错的东西，让不会编程的人也很快接收其用法，当你已经熟练掌握其语法后，其实也可以不用<a href="http://mouapp.com/" target="_blank">Mou</a>，比如技术人员一般直接在textmate里写或者直接写都还蛮不错的。

大概汇总下用 Markdown 有如下好处：
<ol>
	<li>干净，只写你需要的文字和标记，没一堆乱七八糟的html</li>
	<li>简单，真简单，就那么些标记，不需要10分钟你就学会了；</li>
	<li>纯文本，占的空间小，打开块，记得空doc还有11k；</li>
	<li>兼容性好，就是文本，文本编辑器都可以打开编辑，最不喜欢的就是.doc或者.gage，那个兼容性呀，简直是噩梦；</li>
	<li>显示可控，无论是转html，还是又mou这样的工具，还是直接处理，都非常简便；</li>
	<li>其他</li>
</ol>
技术人员如果能坚持写技术blog都能用Markdown保存下来，其实是一个不错的宣传，wordpress会不会又被我废弃，直接写个轻量级的日志引擎，难说～

&nbsp;

参考：

http://kramdown.rubyforge.org/documentation.html

https://github.com/tanoku/redcarpet

http://zh.wikipedia.org/wiki/Markdown]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1690</wp:post_id>
		<wp:post_date>2012-04-06 23:26:48</wp:post_date>
		<wp:post_date_gmt>2012-04-06 23:26:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8emarkdown%e5%92%8cmou</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="category" nicename="unix-mac"><![CDATA[Mac &amp; *UNIX]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_6fe36881da8f2e0fa71559d0ceb74e18</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ad25acd84ac04353d0ccd3ce501c05ca</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f41e857a0c708013bd379061511dbb01</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7942</wp:comment_id>
			<wp:comment_author><![CDATA[Gang Chen]]></wp:comment_author>
			<wp:comment_author_email>chengangcs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.240.119.196</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 23:42:37</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 23:42:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在很多人就在把博客往github上迁。git+markdown，非常geek]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1333755757.1128";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1690";s:14:"comment_author";s:9:"Gang Chen";s:20:"comment_author_email";s:20:"chengangcs@gmail.com";s:18:"comment_author_url";s:22:"Http://gossipcoder.com";s:15:"comment_content";s:73:"现在很多人就在把博客往github上迁。git+markdown，非常geek";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"113.240.119.196";s:10:"user_agent";s:96:"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B176";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1690";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1690";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:9:"Gang Chen";s:10:"POST_email";s:20:"chengangcs@gmail.com";s:8:"POST_url";s:22:"Http://gossipcoder.com";s:12:"POST_comment";s:73:"现在很多人就在把博客往github上迁。git+markdown，非常geek";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1690";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"307";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:15:"113.240.119.196";s:11:"REMOTE_PORT";s:5:"14882";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:96:"Mozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B176";s:19:"HTTP_CONTENT_LENGTH";s:3:"307";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1690";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-cn";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1333755756";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7951</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>115.197.43.181</wp:comment_author_IP>
			<wp:comment_date>2012-04-10 09:00:18</wp:comment_date>
			<wp:comment_date_gmt>2012-04-10 09:00:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有听到新技术名词了，研究研究去...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1334048418.846";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:4:"1690";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:48:"有听到新技术名词了，研究研究去...";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"115.197.43.181";s:10:"user_agent";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.62";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1690";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1690";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:48:"有听到新技术名词了，研究研究去...";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1690";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"268";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"115.197.43.181";s:11:"REMOTE_PORT";s:4:"4857";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:15:"HTTP_USER_AGENT";s:81:"Opera/9.80 (Windows NT 5.1; U; Edition IBIS; zh-cn) Presto/2.10.229 Version/11.62";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"zh-CN,zh;q=0.9,en;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1690";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"268";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1334048415";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>《Google Android开发入门与实战》第10次加印，真要改版了？</title>
		<link>http://www.iceskysl.com/?p=1693</link>
		<pubDate>Fri, 13 Apr 2012 02:13:01 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1693</guid>
		<description></description>
		<content:encoded><![CDATA[早上收到出版社消息，我2009 年6月出版的《<strong>Google Android开发入门与实战</strong>》再次加印，已经印了10次了，总的销量差不多2万本了，还记得10年7月还写过一篇《<a href="http://www.iceskysl.com/?p=751" target="_blank">纪念我的第一本Android技术书籍销量过万</a>》～

问了下出版社的编辑，说是人邮里出版的android书里销量最好的，颇感意外，看到很多人加入android阵营，也有点欣慰～

这本书当时写的还是比较匆忙的，主要是针对android入门开发者的，很多地方也写的不仔细，比如代码有点多，代码没有很好的格式化，内容偏简单，系统化不够等等～ 书中的例子也有点比较老了，例如yobo的api已经不能使用了，豆瓣的api也有了更新等等～每次读者在社区问书上一些问题的时候，我都觉得蛮愧疚的，毕竟内容比较老，会误导一些读者～

这本书是国内第一本android的技术的书，当时的android sdk还是1.5版，上市快3年了，内容相对偏老的，出版社一再催我能更新到最新的sdk版本，再把之前用户反馈比较多的问题完善下～是不是真的需要抽点时间来出第二版了呢？

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1693</wp:post_id>
		<wp:post_date>2012-04-13 02:13:01</wp:post_date>
		<wp:post_date_gmt>2012-04-13 02:13:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%8agoogle-android%e5%bc%80%e5%8f%91%e5%85%a5%e9%97%a8%e4%b8%8e%e5%ae%9e%e6%88%98%e3%80%8b%e7%ac%ac10%e6%ac%a1%e5%8a%a0%e5%8d%b0%ef%bc%8c%e7%9c%9f%e8%a6%81%e6%94%b9%e7%89%88%e4%ba%86%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="android-technic-2"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="%e5%bc%80%e5%8f%91%e5%85%a5%e9%97%a8%e4%b8%8e%e5%ae%9e%e6%88%98"><![CDATA[开发入门与实战]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7960</wp:comment_id>
			<wp:comment_author><![CDATA[tony]]></wp:comment_author>
			<wp:comment_author_email>tonyzzp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>183.62.196.12</wp:comment_author_IP>
			<wp:comment_date>2012-04-13 02:28:22</wp:comment_date>
			<wp:comment_date_gmt>2012-04-13 02:28:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[需要一本讲游戏的。类似beginning android games的那样。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334932452.3314";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334284102.2955";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1693";s:14:"comment_author";s:4:"tony";s:20:"comment_author_email";s:17:"tonyzzp@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:68:"需要一本讲游戏的。类似beginning android games的那样。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"183.62.196.12";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.152 Safari/535.19";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1693";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1693";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"tony";s:10:"POST_email";s:17:"tonyzzp@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:68:"需要一本讲游戏的。类似beginning android games的那样。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1693";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"252";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:13:"183.62.196.12";s:11:"REMOTE_PORT";s:4:"1483";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"252";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.152 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1693";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1334284101";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7979</wp:comment_id>
			<wp:comment_author><![CDATA[Yong]]></wp:comment_author>
			<wp:comment_author_email>stillhere163@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonglives.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.158.49.117</wp:comment_author_IP>
			<wp:comment_date>2012-04-29 11:45:01</wp:comment_date>
			<wp:comment_date_gmt>2012-04-29 11:45:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以出第二版的，很好的入门书籍]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335699901.8806";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1693";s:14:"comment_author";s:4:"Yong";s:20:"comment_author_email";s:20:"stillhere163@163.com";s:18:"comment_author_url";s:25:"http://www.yonglives.com/";s:15:"comment_content";s:45:"可以出第二版的，很好的入门书籍";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"123.158.49.117";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1693";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1693";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Yong";s:10:"POST_email";s:20:"stillhere163@163.com";s:8:"POST_url";s:25:"http://www.yonglives.com/";s:12:"POST_comment";s:45:"可以出第二版的，很好的入门书籍";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1693";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"265";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.158.49.117";s:11:"REMOTE_PORT";s:5:"52203";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"265";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1693";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"zh-CN,zh;q=0.8,en;q=0.6,en-US;q=0.4";s:19:"HTTP_ACCEPT_CHARSET";s:13:"UTF-8,*;q=0.5";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1335699900";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>StackOverflow初探，模式和遴选机制最出色</title>
		<link>http://www.iceskysl.com/?p=1696</link>
		<pubDate>Fri, 20 Apr 2012 14:58:43 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1696</guid>
		<description></description>
		<content:encoded><![CDATA[其实很早前就晓得StackOverflow和Experts-Exchange，当然还有Quora，做技术的应该都晓得StackOverflow，很多人应该是经常搜问题的时候会被带到StackOverflow，很多问题的满意答案应该都是在StackOverflow找到的。

Fenng曾写过一篇《<a href="http://www.dbanotes.net/startup/stack_overflow_success.html" target="_blank">为什么 Stack Overflow 会如此成功？</a>》，对，很多人都会问为什么StackOverflow如此成功，而且还仅仅只是开始，以后会成长成啥样的还不不晓得，但是从大家全部的赞叹中还是说明StackOverflow是非常成功的。

StackOverflow给我最大印象的有两个：

<strong>1. 模式</strong>

系统自身是wiki＋digg/reddit＋blog＋forum的结合（下图），通过威望值(Reputation Point) 与徽章(Badge) 建立起信任评价体系，并且做到对参与者的有效激励。

&nbsp;

<img class="alignnone" src="http://sstatic.net/stackoverflow/img/venn-diagram.png" alt="" width="440" height="431" />

<strong>2. 遴选机制</strong>

stackoverflow的评价机制非常有意思，和百度贴吧这样的问答系统正好相反，他的最佳答案是由网友dig出来了，而且如果有人的回答不好，还会被修改掉或者直接删掉

&nbsp;

有人感叹说：
<blockquote>在国内是做不出这种网站的， 国人素质问题， 我使用stackoverflow深感其用， 关键是开放， 不并单单指奖励机制，我有好几次发的帖和答案（在stackoverflow上）不太好， 都被别人删掉了， 真刺激我的神经， 但忍了， 因为他的高质量就这样来的，但在国内出现这样的情况， 那个网站肯定被人骂得狗血淋头了，例如我经常看到有人骂javaeye的论坛不让发帖等等之类。</blockquote>
很有意思，值得研究一下～

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1696</wp:post_id>
		<wp:post_date>2012-04-20 14:58:43</wp:post_date>
		<wp:post_date_gmt>2012-04-20 14:58:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stackoverflow%e5%88%9d%e6%8e%a2%ef%bc%8c%e6%a8%a1%e5%bc%8f%e5%92%8c%e9%81%b4%e9%80%89%e6%9c%ba%e5%88%b6%e6%9c%80%e5%87%ba%e8%89%b2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="experts-exchange"><![CDATA[Experts-Exchange]]></category>
		<category domain="post_tag" nicename="quora"><![CDATA[Quora]]></category>
		<category domain="post_tag" nicename="stackoverflow"><![CDATA[StackOverflow]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7969</wp:comment_id>
			<wp:comment_author><![CDATA[Echo]]></wp:comment_author>
			<wp:comment_author_email>echo_chen1988@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.93.238.163</wp:comment_author_IP>
			<wp:comment_date>2012-04-20 15:06:25</wp:comment_date>
			<wp:comment_date_gmt>2012-04-20 15:06:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[同意,深感stackoverflow的强大,可是限于英文水平不够,时常不理解回答者想表达的意思...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334935299.3406";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1334934385.369";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1696";s:14:"comment_author";s:4:"Echo";s:20:"comment_author_email";s:25:"echo_chen1988@hotmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:112:"同意,深感stackoverflow的强大,可是限于英文水平不够,时常不理解回答者想表达的意思...";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"114.93.238.163";s:10:"user_agent";s:109:"Mozilla/5.0 (Windows NT 6.0; WOW64) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1696";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1696";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:4:"Echo";s:10:"POST_email";s:25:"echo_chen1988@hotmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:112:"同意,深感stackoverflow的强大,可是限于英文水平不够,时常不理解回答者想表达的意思...";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1696";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"406";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"114.93.238.163";s:11:"REMOTE_PORT";s:5:"63566";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"406";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:109:"Mozilla/5.0 (Windows NT 6.0; WOW64) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.162 Safari/535.19";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1696";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1334934384";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Google Drive试用初体验</title>
		<link>http://www.iceskysl.com/?p=1699</link>
		<pubDate>Thu, 26 Apr 2012 00:32:13 +0000</pubDate>
		<dc:creator>iceskysl</dc:creator>
		<guid isPermaLink="false">http://www.iceskysl.com/?p=1699</guid>
		<description></description>
		<content:encoded><![CDATA[已经不记得第一次听说google要出自己的云端存储，也不记得已经听说了几次这样的传闻了，这几天终于剪刀庐山真面目，也就是Google Drive，中文翻译为“google云端硬盘”。

毫不掩抑的说我的google重度使用者，几乎尝试过所有的google服务，其中gmail和gdoc应该最重度的用户了。另外，同步之前尝试过n多种，最终选择的是dropbox，而且是重度用户，虽然用着还不错，但是总希望google能出一个类似的服务，或者收购dropbox；所以当Google Drive发布后第一天就翻山越岭的过去瞧瞧，提交申请等待，今天早上收到激活通知，迫不及待的体验了一把，过程网上一大堆，不多说。

最纠结的自然还是被墙，虽然早就麻木，但每次都修改hosts，proxy还是让人心生厌烦，心想着何时我们才能真正的网络自由。

整个体验过程还算顺利，和dropbox真的差不多（skyDrive好像也差不多），逻辑基本一致，本地创建一个文件夹和云端保持一致，还可以同步到android等移动设备；但是Google Drive不同的是和google doc做了整合，会把线上的google doc全部同步下来，这个真心很好（其实我觉得他应该创建一个docs目录放文档～），我差不多好几千份文档，很快就同步完了（后来查了下，是因为他只同步了文档索引，每个文件才153 bytes，例如{"url": "https://docs.google.com/Doc?docid=0AQSsdoBxI0TDZGhmODZrcjlfMzUsswaHZtaGI", "resource_id": "document:0AQSsdoBxI0TDZGhmODZrcjlfMzUsswaHZtaGI"}）；。更有价值的是装个google离线可以离线编辑，于是在想有没有可能谁出一个离线撰写google doc的软件，真心喜欢google doc的快捷键，真心不喜欢ms word和mac下的pages，希望有人能写一个google doc格式的文档撰写软件。

最后说一说Google Drive对dropbox的影响，个人觉得会有部分影响，尤其是国外网络自由的情况下，google的这个服务真心不错，而且加上gmail的帐号系统，在线编辑，共享和协作都很方便；但是影响不会致命，dropbox毕竟把这个服务做到了极致，一般做到极致的服务都是有前途的，或许哪一天就被哪个大佬诏安了，或者和我另外一个重度使用的服务evernote合并吧，哇卡～

如果您对Google Drive感兴趣，推荐快捷键：

http://support.google.com/docs/bin/answer.py?hl=en&amp;answer=1295935&amp;p=docslist_shortcuts]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1699</wp:post_id>
		<wp:post_date>2012-04-26 00:32:13</wp:post_date>
		<wp:post_date_gmt>2012-04-26 00:32:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-drive%e8%af%95%e7%94%a8%e5%88%9d%e4%bd%93%e9%aa%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%a7%86%e8%a7%89%e8%a7%82%e5%af%9f-observe"><![CDATA[01. 视觉观察 | Observe]]></category>
		<category domain="category" nicename="%e6%97%a0%e5%bf%83%e5%91%a2%e5%96%83"><![CDATA[04. 无心呢喃 | Buzz]]></category>
		<category domain="post_tag" nicename="drive"><![CDATA[Drive]]></category>
		<category domain="post_tag" nicename="dropbox"><![CDATA[dropbox]]></category>
		<category domain="post_tag" nicename="evernote"><![CDATA[evernote]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_fbc58dee8d9a2e4b0ae86b054108d3f2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7990</wp:comment_id>
			<wp:comment_author><![CDATA[iceskysl]]></wp:comment_author>
			<wp:comment_author_email>iceskysl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.39.66.45</wp:comment_author_IP>
			<wp:comment_date>2012-05-05 16:41:47</wp:comment_date>
			<wp:comment_date_gmt>2012-05-05 16:41:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@CFC 当然记得～ 最近忙什么呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1336236107.314";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:4:"1699";s:14:"comment_author";s:8:"iceskysl";s:20:"comment_author_email";s:18:"iceskysl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:42:"@CFC 当然记得～ 最近忙什么呢？";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:12:"125.39.66.45";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.10 (KHTML, like Gecko) Chrome/20.0.1123.4 Safari/536.10";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1699";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1699";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"failed";s:12:"POST_comment";s:42:"@CFC 当然记得～ 最近忙什么呢？";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1699";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"167";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"125.39.66.45";s:11:"REMOTE_PORT";s:5:"46312";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"167";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.10 (KHTML, like Gecko) Chrome/20.0.1123.4 Safari/536.10";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1699";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1336236106";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7984</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email>hechien@Me.com</wp:comment_author_email>
			<wp:comment_author_url>http://hechien.github.com/octopress</wp:comment_author_url>
			<wp:comment_author_IP>123.204.44.156</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 08:03:44</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 08:03:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Google Drive實在是太恐怖了，使用條款內對使用者很不利

好久不見啊 ... Iceskyl
還記得我不？
:P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336032225.0822";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1699";s:14:"comment_author";s:3:"CFC";s:20:"comment_author_email";s:14:"hechien@Me.com";s:18:"comment_author_url";s:35:"http://hechien.github.com/octopress";s:15:"comment_content";s:127:"Google Drive實在是太恐怖了，使用條款內對使用者很不利

好久不見啊 ... Iceskyl
還記得我不？
:P";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"123.204.44.156";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1699";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1699";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:3:"CFC";s:10:"POST_email";s:14:"hechien@Me.com";s:8:"POST_url";s:35:"http://hechien.github.com/octopress";s:12:"POST_comment";s:127:"Google Drive實在是太恐怖了，使用條款內對使用者很不利

好久不見啊 ... Iceskyl
還記得我不？
:P";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1699";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"464";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.204.44.156";s:11:"REMOTE_PORT";s:5:"37926";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"464";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1699";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4";s:19:"HTTP_ACCEPT_CHARSET";s:24:"Big5,utf-8;q=0.7,*;q=0.3";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1336032223";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336236044.5735";s:7:"message";s:39:"iceskysl 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"iceskysl";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7976</wp:comment_id>
			<wp:comment_author><![CDATA[Vincent 4J]]></wp:comment_author>
			<wp:comment_author_email>vincent4j@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://vc4j.com</wp:comment_author_url>
			<wp:comment_author_IP>210.22.109.134</wp:comment_author_IP>
			<wp:comment_date>2012-04-27 01:37:40</wp:comment_date>
			<wp:comment_date_gmt>2012-04-27 01:37:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[文档我还是喜欢Evernote]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335490660.8284";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:66:{s:15:"comment_post_ID";s:4:"1699";s:14:"comment_author";s:10:"Vincent 4J";s:20:"comment_author_email";s:19:"vincent4j@gmail.com";s:18:"comment_author_url";s:8:"vc4j.com";s:15:"comment_content";s:29:"文档我还是喜欢Evernote";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"210.22.109.134";s:10:"user_agent";s:100:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.46 Safari/535.11";s:8:"referrer";s:31:"http://www.iceskysl.com/?p=1699";s:4:"blog";s:23:"http://www.iceskysl.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:31:"http://www.iceskysl.com/?p=1699";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:10:"Vincent 4J";s:10:"POST_email";s:19:"vincent4j@gmail.com";s:8:"POST_url";s:8:"vc4j.com";s:12:"POST_comment";s:29:"文档我还是喜欢Evernote";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1699";s:15:"SERVER_SOFTWARE";s:12:"nginx/0.8.53";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:8:"HOSTNAME";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"TMP";s:4:"/tmp";s:6:"TMPDIR";s:4:"/tmp";s:4:"TEMP";s:4:"/tmp";s:6:"OSTYPE";s:0:"";s:8:"MACHTYPE";s:0:"";s:13:"MALLOC_CHECK_";s:1:"2";s:4:"USER";s:6:"nobody";s:4:"HOME";s:1:"/";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"SCRIPT_FILENAME";s:48:"/datas/www/iceskysl/current/wp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"181";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:27:"/datas/www/iceskysl/current";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"210.22.109.134";s:11:"REMOTE_PORT";s:5:"31436";s:11:"SERVER_ADDR";s:14:"74.207.232.111";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:19:"iceskysl.1sters.com";s:15:"REDIRECT_STATUS";s:3:"200";s:8:"HTTP_VIA";s:16:"1.1 PIONEERPROXY";s:12:"HTTP_REFERER";s:31:"http://www.iceskysl.com/?p=1699";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:100:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.46 Safari/535.11";s:9:"HTTP_HOST";s:16:"www.iceskysl.com";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ORIGIN";s:23:"http://www.iceskysl.com";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:23:"GBK,utf-8;q=0.7,*;q=0.3";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"181";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1335490659";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>

---
layout: post
title: ruby操作时间对象
date: '2007-5-20'
comments: true
categories: Ruby&Rails
link: true
---
在开发过程中,难免需要对时间对象进行一系列操作,比如统计新发的文章,统计在线会员等,如下是对时间对象的操作方法:distance_of_time_in_words(from_time, to_time = 0, include_seconds = false)Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set include_seconds to true if you want more detailed approximations when distance &lt; 1 min, 29 secs Distances are reported base on the following table:0 &lt;-&gt; 29 secs # =&gt; less than a minute 30 secs &lt;-&gt; 1 min, 29 secs # =&gt; 1 minute 1 min, 30 secs &lt;-&gt; 44 mins, 29 secs # =&gt; [2..44] minutes 44 mins, 30 secs &lt;-&gt; 89 mins, 29 secs # =&gt; about 1 hour 89 mins, 29 secs &lt;-&gt; 23 hrs, 59 mins, 29 secs # =&gt; about [2..24] hours 23 hrs, 59 mins, 29 secs &lt;-&gt; 47 hrs, 59 mins, 29 secs # =&gt; 1 day 47 hrs, 59 mins, 29 secs &lt;-&gt; 29 days, 23 hrs, 59 mins, 29 secs # =&gt; [2..29] days 29 days, 23 hrs, 59 mins, 30 secs &lt;-&gt; 59 days, 23 hrs, 59 mins, 29 secs # =&gt; about 1 month 59 days, 23 hrs, 59 mins, 30 secs &lt;-&gt; 1 yr minus 31 secs # =&gt; [2..12] months 1 yr minus 30 secs &lt;-&gt; 2 yrs minus 31 secs # =&gt; about 1 year 2 yrs minus 30 secs &lt;-&gt; max time or date # =&gt; over [2..X] yearsWith include_seconds = true and the difference &lt; 1 minute 29 seconds 0-4 secs # =&gt; less than 5 seconds 5-9 secs # =&gt; less than 10 seconds 10-19 secs # =&gt; less than 20 seconds 20-39 secs # =&gt; half a minute 40-59 secs # =&gt; less than a minute 60-89 secs # =&gt; 1 minuteExamples:  from_time = Time.now  distance_of_time_in_words(from_time, from_time + 50.minutes) # =&gt; about 1 hour  distance_of_time_in_words(from_time, from_time + 15.seconds) # =&gt; less than a minute  distance_of_time_in_words(from_time, from_time + 15.seconds, true) # =&gt; less than 20 secondsNote: Rails calculates one year as 365.25 days.[ show source ]    # File vendor/rails/actionpack/lib/action_view/helpers/date_helper.rb, line 4848:       def distance_of_time_in_words(from_time, to_time = 0, include_seconds = false)49:         from_time = from_time.to_time if from_time.respond_to?(:to_time)50:         to_time = to_time.to_time if to_time.respond_to?(:to_time)51:         distance_in_minutes = (((to_time - from_time).abs)/60).round52:         distance_in_seconds = ((to_time - from_time).abs).round53: 54:         case distance_in_minutes55:           when 0..156:             return (distance_in_minutes == 0) ? 'less than a minute' : '1 minute' unless include_seconds57:             case distance_in_seconds58:               when 0..4   then 'less than 5 seconds'59:               when 5..9   then 'less than 10 seconds'60:               when 10..19 then 'less than 20 seconds'61:               when 20..39 then 'half a minute'62:               when 40..59 then 'less than a minute'63:               else             '1 minute'64:             end65: 66:           when 2..44           then &quot;#{distance_in_minutes} minutes&quot;67:           when 45..89          then 'about 1 hour'68:           when 90..1439        then &quot;about #{(distance_in_minutes.to_f / 60.0).round} hours&quot;69:           when 1440..2879      then '1 day'70:           when 2880..43199     then &quot;#{(distance_in_minutes / 1440).round} days&quot;71:           when 43200..86399    then 'about 1 month'72:           when 86400..525959   then &quot;#{(distance_in_minutes / 43200).round} months&quot;73:           when 525960..1051919 then 'about 1 year'74:           else                      &quot;over #{(distance_in_minutes / 525960).round} years&quot;75:         end76:       enddistance_of_time_in_words_to_now(from_time, include_seconds = false)Alias for time_ago_in_words

---
layout: post
title: Rails2.1之前的Injection漏洞续篇,union查询显威力
date: '2008-9-9'
comments: true
categories: Ruby&Rails Security
link: true
---
6月份的时候写过一篇文章《<a href="http://iceskysl.1sters.com/?action=show&amp;id=325">Rails2.1之前的Injection漏洞:limit,offset过滤不严</a>》，文章中说到“<em>我们直接从Http的params中取得limit或者offset参数，直接放在SQL的find中，如果在offset中构造邪恶代码的话，肯定会造成大问题。幸好，Mysql默认的是不许一次API调用执行多条SQL</em>”，当时说这个漏洞在MYSQL中无法利用，其实是错误的。

虽然在mysql中部允许一次执行多条语句，但是我们是可以变相利用这个漏洞的，采取的方法就是构造<strong>union查询</strong>，爆出敏感信息。下面看例子：

比如你的程序中写了这么一条语句：<em>User.find(:all, :limit =&gt; params[:limit])</em>，那么我们就可以构造这个params[:limit]为： "<em>1 UNION (select 1,2,password,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0 from users)</em>"，这句话什么意思？放到前面那个find后，就形成这样的语句：
<div class="codeText">
<div class="codeHead">SQL代码</div>
<ol class="dp-sql" start="1">
	<li class="alt"><span><span class="keyword">select</span><span> * </span><span class="keyword">from</span><span> users limit 1 </span><span class="keyword">UNION</span><span> (</span><span class="keyword">select</span><span> 1,username,</span><span class="keyword">password</span><span>,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,0 </span><span class="keyword">from</span><span> users)  </span></span></li>
</ol>
</div>
怎样？很邪恶吧，了解点安全的朋友都能看明白，不了解的我说半天还不如你去google下什么是<span style="text-decoration: underline;">union注射</span>，呵呵。

没升级到2.1.1的赶快升级或者按照如下方式修复吧，否则就有危险了。
<ul>
	<li>Review your application whether you allow the user to control :limit or :offset</li>
	<li>If you are on Rails 2.1.0, please apply <a href="http://rails.lighthouseapp.com/projects/8994/tickets/288">this patch</a> or get Rails 2.1.1</li>
	<li>If you are on the Rails 2.0 or 1.2 branch, apply this<a href="http://rails.lighthouseapp.com/projects/8994/tickets/964-fix-for-sql-injection-on-limit-and-offset-should-be-backported"> backport patch</a></li>
</ul>
参考文档：<a href="http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/">http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/</a>

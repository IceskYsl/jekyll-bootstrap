---
layout: post
title: ruby中的方法调用
date: '2007-6-26'
comments: true
categories: Ruby&Rails
link: true
---
引言:张雪同学blog上的这个文章很是不错，从一个侧面展示了Ruby的一些和别的不一样的特性，显出了其灵活和强大，很值得仔细看看～会使得你对ruby中的方法调用更加理解～&lt;br/&gt;&lt;br /&gt;*来源:*for each_day in life: ruby中的方法调用&lt;br /&gt;*地址:*http://blog.snowonrails.com/articles/2007/05/15/ruby%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8&lt;br /&gt;*标题:*ruby中的方法调用&lt;br /&gt;*内容摘要:*&lt;br /&gt;和我一样许多习惯了java的程序员在刚刚开始接触ruby的时候对ruby当中的方法声名以及调用的方式会感到非常的奇怪和别扭。比如我们在ruby当中经常可以看到类似的方法声名 method(arg1, *args), 又如这样的方法 method2(arg2, &amp;block), 等等。相比于java那明确简单的方法声名方式，ruby中的方法声名要灵活许多，下面就ruby当中常见的几种方法声名的形式，以及方法调用的方式做一个简要的总结：1. 首先，不同于java的方法声名，ruby中的方法可以接收的参数是可变的，而不是像java那样必须和方法声名中的参数类型相等，个数相等。当你希望ruby方法接收一个或者多个参数的时候，可在普通的参数名前放置一个星号(*),比如：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;  “&lt;span class=&quot;constant&quot;&gt;Received&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#{arg1} and #{rest.join(', ')}”&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and &amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and two&amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;varargs&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;three&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Received one and two, three&amp;quot;&lt;/span&gt;以上代码出自《&lt;span class=&quot;ident&quot;&gt;programming&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;ruby&lt;/span&gt; 中文版》&lt;span class=&quot;ident&quot;&gt;p80&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;在这里，varargs方法的第二个形参前有一个星号，表示将方法中第二个以后的所有参数都装到一个数组当中，然后赋值给rest. 所以当方法声名的参数前边又一个*的时候，代表：将方法调用时传入的所有&lt;b&gt;除之前已匹配完毕的参数外的剩余参数&lt;/b&gt;放入一个Array并将其赋值给*后边的形参。2. 我们也经常会见到在方法声名的参数当中有“&amp;args”的形式，比如&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;keyword&quot;&gt;class &lt;/span&gt;&lt;span class=&quot;class&quot;&gt;TaxCalculator&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&amp;amp;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;attribute&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;@block&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;block&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;punct&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;expr&quot;&gt;#{@name}&lt;/span&gt; on &lt;span class=&quot;expr&quot;&gt;#{amount}&lt;/span&gt; = &lt;span class=&quot;expr&quot;&gt;#{@block.call(amount)}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;TaxCalculator&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;Sales tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;&amp;quot;){|&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;amt&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;amt&lt;/span&gt; &lt;span class=&quot;punct&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.075&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Sales tax on 100 = 7.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;tc&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;get_tax&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#=&amp;gt;&amp;quot;Sales tax on 250 = 18.75&amp;quot;&lt;/span&gt;以上代码出自《&lt;span class=&quot;ident&quot;&gt;programming&lt;/span&gt; &lt;span class=&quot;ident&quot;&gt;ruby&lt;/span&gt; 中文版》&lt;span class=&quot;ident&quot;&gt;p81&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;当方法的&lt;b&gt;最后一个参数&lt;/b&gt;前缀为&amp;,那么改方法调用的后边可以跟一个block，同时方法会将block转换为一个Proc对象，然后赋值给该参数。3. 我们经常可以在rails的文档中看到这种方法声名：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;
no
textile&gt;&lt;span class=&quot;keyword&quot;&gt;def &lt;/span&gt;&lt;span class=&quot;method&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;={})&lt;/span&gt;  &lt;span class=&quot;punct&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;然后我们调用的时候可以以任意的顺序传入key=&gt;value hash pair 如：&lt;div class=&quot;typocode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;typocode_ruby &quot;&gt;&lt;notextile&gt;&lt;span class=&quot;ident&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;key2&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ident&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;punct&quot;&gt;,...)&lt;/span&gt;&lt;/notextile&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;在参数列表中，&lt;b&gt;当hash参数在正常参数之后,并且位于任何数组或block参数之前&lt;/b&gt;，我们就可以直接用key=&gt;value对，而不用加{}。所有的这些key=&gt;value对会被集合到一个hash，然后赋值给形参，传入方法。
